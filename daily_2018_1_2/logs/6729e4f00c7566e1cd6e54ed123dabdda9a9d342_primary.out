cset: moving following pidspec: 13457
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.198293461 seconds)
loading group "string"... done (took 0.521563278 seconds)
loading group "linalg"... done (took 9.842383951 seconds)
loading group "parallel"... done (took 0.169356349 seconds)
loading group "find"... done (took 2.51718391 seconds)
loading group "tuple"... done (took 2.290097803 seconds)
loading group "dates"... done (took 1.438981603 seconds)
loading group "micro"... done (took 0.487719939 seconds)
loading group "io"... done (took 0.570690051 seconds)
loading group "scalar"... done (took 55.688670597 seconds)
loading group "sparse"... done (took 14.623464748 seconds)
loading group "broadcast"... done (took 1.27479082 seconds)
loading group "union"... done (took 2.665918352 seconds)
loading group "simd"... done (took 3.812288596 seconds)
loading group "random"... done (took 14.273075248 seconds)
loading group "problem"... done (took 2.267598942 seconds)
loading group "array"... done (took 23.865883558 seconds)
loading group "misc"... done (took 1.084824849 seconds)
loading group "sort"... done (took 3.758648364 seconds)
loading group "collection"... done (took 21.9978202 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.789793646 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.163678906 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.252998467 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.259480336 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.305004219 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.210196819 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.189101406 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.218122102 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.660817888 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.241183881 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.180316414 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.432670394 seconds)
done (took 6.737778833 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.35460718 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.143045801 seconds)
    (2/2) benchmarking "String"...
    done (took 0.212319202 seconds)
  done (took 1.010048436 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.14507227 seconds)
    (2/2) benchmarking "String"...
    done (took 0.156321438 seconds)
  done (took 0.956530412 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.134323401 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.161834126 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.148065356 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.132415973 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.149098547 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.132034596 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.148353801 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.147995707 seconds)
  done (took 1.676721587 seconds)
done (took 4.799981158 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.49847676 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.920940939 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.553476203 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.206637198 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.363559231 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.345154592 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.345894699 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.264486519 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.155183957 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.104573795 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.227093135 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.459331641 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.425024094 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.959670288 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.101215116 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.154556255 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.192964272 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.796315579 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.121949387 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.158420574 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.541059776 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.238209647 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.158823109 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.139347571 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.248361665 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.241222581 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.178423404 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.151756763 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.718768431 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.180383735 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.247040725 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.128728623 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.17606973 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.216108875 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.287852616 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.155743998 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.717122626 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.24978938 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.132160203 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.145219522 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.729794791 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.161345881 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.244248299 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.148556086 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.120085231 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.186808286 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.147802309 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.122950752 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.163341395 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.15242691 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.22301777 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.515507826 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.149750919 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.238298862 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.153339399 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.748093969 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.146936312 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.34037008 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.183132171 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.154630615 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.121290843 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.151530153 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.211558464 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.146720603 seconds)
  done (took 22.948505989 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.207721698 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.227373077 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.141564799 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.188921405 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.189964771 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.140892759 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.135034988 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.141286623 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.160365903 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.244860899 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.185798164 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.240939018 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.121924287 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.154577432 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.203100474 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.281466657 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.17174114 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.154669844 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.153557154 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.140098947 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.195416206 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.158970277 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.141933291 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.156702376 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.21884751 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.254065215 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.15087546 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.169311344 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.151583446 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.142923611 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.189469448 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.21037858 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.120971452 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.150596525 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.219030192 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.166738899 seconds)
  done (took 7.065154966 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.263827621 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.147080996 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.275454795 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.231742128 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.191763864 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.221805778 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.225242186 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.317903458 seconds)
    (9/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 0.246416432 seconds)
    (10/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.554705769 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.211383107 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.18002506 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.140567375 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.142673065 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.12718702 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.12477643 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.923210086 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.21638711 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.20447962 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.224223723 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.161065747 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.147054146 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.756162146 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.147575214 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.147903388 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.142760584 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.099854711 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.272936678 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.137865896 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.53113818 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.144251124 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.142313434 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.177442419 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.267209854 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.166366422 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.181851398 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.13647581 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.149186986 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.260049197 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.238550917 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.162363774 seconds)
    (42/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.01888969 seconds)
    (43/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.147459847 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.123138095 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.146942389 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.178146496 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.165275457 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.15618328 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.170652061 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.182323161 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.1342897 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.173883319 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.94882705 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.242092621 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.180879874 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.148355435 seconds)
    (57/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.128941213 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.328558258 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.171794305 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.163963078 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.137887156 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.28729835 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.170993617 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.146907716 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.125377317 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.159066295 seconds)
    (67/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.146835451 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.12864199 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.168969393 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.854755811 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.129064398 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.15915704 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.164852192 seconds)
    (74/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 0.758569943 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.134907565 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.148474919 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.156280709 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.149733988 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.127328653 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.149035 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.128127215 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.153218514 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.126430204 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.151057741 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.126831608 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.211384411 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.144405128 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.169849852 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.172966547 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.136552863 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.150156786 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.17419731 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.125562469 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.146484133 seconds)
    (95/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.203649578 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.160319 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.143823398 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.158713358 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.17810823 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.149811537 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.299103245 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.127017493 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.172172786 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.149262591 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.162436686 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.161783621 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.126608895 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.150271892 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.12629921 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.146611294 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.195228389 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.148583299 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.127599517 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.151979836 seconds)
  done (took 29.194479418 seconds)
done (took 59.863430686 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.417253955 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.117695172 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.116540384 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.138265235 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.117471627 seconds)
  done (took 1.64136361 seconds)
done (took 2.36075463 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.16832971 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 0.162799703 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 0.144147847 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 0.173867316 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.147762342 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.175168571 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.170564232 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.147486428 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.167650325 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 0.142480683 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 0.151912616 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 0.146751317 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 0.161518213 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 0.178724359 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 0.141388279 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 0.164650136 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 0.151856667 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.169472921 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 0.162069431 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.150039942 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.165865722 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.150839984 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.167042621 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.137828772 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.169921183 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.152259618 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.168310756 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.152459523 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.164004661 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.13735268 seconds)
  done (took 2.436315762 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 0.167557855 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.150056126 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.16831193 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.142856104 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.169584441 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.13750058 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.168130705 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.150986378 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.170182034 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.151067469 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.165408111 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.137799743 seconds)
  done (took 2.433214869 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 0.151229693 seconds)
done (took 8.965131004 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.726590476 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 13.032282893 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.221088171 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.325905657 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.615756564 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.314419699 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.678115877 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.24489078 seconds)
  done (took 17.992871507 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.219294078 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.161485168 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.138196915 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.158403572 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.142966576 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.15961754 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.138115429 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.157523417 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.143112043 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.156663529 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.14289084 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.159524929 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.140509402 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.155974187 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.14240723 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.157392697 seconds)
  done (took 3.251380879 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.166572614 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.186573747 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.144421303 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.165397228 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.141358435 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.161946283 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.145380984 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.160796984 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.140443937 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.159943704 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.148067071 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.164170991 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.145551014 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.156170979 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.142546539 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.16263639 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.13740199 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.160234409 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.15838578 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.143687283 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.160345815 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.142282894 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.161528372 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.146551196 seconds)
  done (took 4.507738686 seconds)
done (took 26.477839445 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.199129183 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.151084528 seconds)
  done (took 1.082219855 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.206305457 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.221706417 seconds)
  done (took 1.178211686 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.165066329 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.156420464 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.171547518 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.168985147 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.140878082 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.158185299 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.164843321 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.158836637 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.140425889 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.158315177 seconds)
  done (took 2.332038884 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.150301065 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.16090464 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.156048597 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.210269751 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.149905731 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.161805563 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.144243931 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.161929569 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.145366547 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.157626955 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.146048984 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.174659267 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.162525935 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.161375174 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.161092317 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.146618832 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.167237971 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.143988405 seconds)
  done (took 3.615775668 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.138488915 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.140850129 seconds)
  done (took 1.032575474 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.142202954 seconds)
    (2/7) benchmarking "second"...
    done (took 0.139665082 seconds)
    (3/7) benchmarking "month"...
    done (took 0.159147615 seconds)
    (4/7) benchmarking "year"...
    done (took 0.158679597 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.139705116 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.139915774 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.157303717 seconds)
  done (took 1.7925198 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.637312093 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.273334313 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.422382201 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.123818145 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.141985393 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.369836693 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.157118158 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.110736868 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.130910297 seconds)
  done (took 3.152224429 seconds)
done (took 14.934792922 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.140158727 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.233129305 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.657101065 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.158954684 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.156969671 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.199510807 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.344413439 seconds)
done (took 2.645586414 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.369918027 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.188885275 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.122687576 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.141248445 seconds)
  done (took 1.571568962 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.131282675 seconds)
    (2/2) benchmarking "read"...
    done (took 0.147718714 seconds)
  done (took 1.036242648 seconds)
done (took 3.36706425 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.155719997 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.15912654 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.144759886 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.159751825 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.142814193 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.161295629 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.143379617 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.157395815 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.143249593 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.159185449 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.14314432 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.159775599 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.14058132 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.160263377 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.141145219 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.161197097 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.143482765 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.159853592 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.141430644 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.161141997 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.143421114 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.158551481 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.144365458 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.160791753 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.144913897 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.161176904 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.142080991 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.158696292 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.144479314 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.162046899 seconds)
  done (took 5.305661195 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.169963032 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.136242947 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.158398017 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.148031689 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.155788149 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.141773833 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.155287446 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.137939538 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.159086948 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.139144132 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.16012018 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.139952258 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.154948338 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.141117858 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.279944882 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.165510808 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.169128548 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.137866016 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.155568567 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.142534767 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.161107242 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.139195244 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.158148615 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.141190057 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.140464137 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.156768784 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.141501315 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.158166032 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.140754877 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.15817084 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.143153343 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.160662441 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.140389931 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.168350285 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.145215903 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.159031998 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.147457522 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.155977891 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.141788148 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.156036672 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.137931208 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.159414399 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.139177745 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.164327107 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.142196746 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.142124944 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.15609442 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.142233046 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.158722255 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.143247902 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.157117835 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.140057095 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.161428794 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.142026344 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.160809034 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.138682752 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.160026137 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.138263664 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.161034912 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.142026658 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.155085408 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.139567537 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.162990023 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.143560195 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.174430466 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.148555803 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.156203764 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.143342935 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.14184797 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.165951805 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.143810603 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.171079049 seconds)
  done (took 11.766462378 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.141237731 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.14166439 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.158677971 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.141821549 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.160483983 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.142749444 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.160063683 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.141505618 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.159027558 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.141687199 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.159626981 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.141940929 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.159598776 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.143050096 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.160144255 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.142471823 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.142206919 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.160983061 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.141504047 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.160751683 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.142576282 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.160939955 seconds)
  done (took 4.088321836 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.285130671 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.146488519 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.209500963 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.154856354 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.17927838 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.172034151 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.147182863 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.168712362 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.146461471 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.170103437 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.152848318 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.166169239 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.158592491 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.170225598 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.169872467 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.154250644 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.164883399 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.153520755 seconds)
  done (took 3.856579976 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.138622226 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.141735135 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.16020186 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.142049058 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.161733128 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.142084264 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.160469853 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.143669027 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.161700315 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.142377421 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.160879837 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.14311538 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.160698322 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.14378315 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.142092739 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.161975017 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.142466366 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.162638528 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.142408684 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.161666253 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.141907266 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.161534346 seconds)
  done (took 4.10150653 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.151686685 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.16108192 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.163208117 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.166149137 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.143837404 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.162999534 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.149477809 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.163177713 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.149958415 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.16277407 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.146028215 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.162671759 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.159598059 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.162199439 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.150770431 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.163790139 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.144377 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.162993268 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.147142959 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.16270771 seconds)
  done (took 3.920028078 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.232301794 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.175281634 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.172646242 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.163788953 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.175428537 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.158380386 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.181989654 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.15700687 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.171511084 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.165227082 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.172180242 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.171813503 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.163425377 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.178760567 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.154084289 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.182207187 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.163588056 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.180801109 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.172965264 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.155075879 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.18519663 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.156418092 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.18237592 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.159080597 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.181891312 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.179963715 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.16088779 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.181648257 seconds)
  done (took 5.617546138 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.151046304 seconds)
    (2/2) benchmarking "in"...
    done (took 0.167727502 seconds)
  done (took 1.103592513 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.142341863 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.142601208 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.162282662 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.143230673 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.158254884 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.142940932 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.164014465 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.145628906 seconds)
  done (took 1.985596351 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.204368273 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.228893429 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.165681261 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.155382926 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.227594589 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.219767826 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.228161367 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.150703472 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.164638288 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.135820012 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.228484634 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.136696385 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.166193732 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.140447872 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.161711008 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.146496606 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.158816073 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.14923934 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.166135145 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.142135843 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.166356674 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.146433739 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.162125306 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.147765105 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.156799825 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.143678615 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.162734111 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.170085958 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.140121316 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.165493242 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.139754236 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.161323998 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.144659797 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.163011588 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.141148881 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.230072803 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.148726376 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.158171469 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.144616644 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.16476142 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.174953825 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.166521275 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.146992057 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.159049519 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.143993044 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.164602523 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.146004001 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.161147569 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.133473452 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.15605663 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.140850713 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.156846445 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.14308492 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.163123552 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.143311402 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.17029482 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.146536332 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.157444265 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.139235298 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.157897386 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.14218838 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.158267075 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.144829549 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.165438377 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.142931565 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.164191056 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.160266885 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.144710121 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.143163397 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.164093175 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.143822469 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.205411238 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.165233095 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.148443972 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.167382593 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.145665807 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.17416612 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.15043672 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.164050256 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.147005112 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.169707305 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.174254975 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.167353504 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.13737085 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.156946556 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.147651036 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.160737831 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.146136583 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.153302455 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.151870029 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.161597038 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.143266517 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.15462718 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.14125915 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.156257237 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.14522737 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.155524412 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.142252096 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.139338498 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.166504671 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.145154617 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.16061688 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.164389365 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.149852546 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.166063167 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.141893539 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.207316838 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.140467365 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.157494449 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.143868096 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.167941388 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.135777826 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.161033888 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.14351494 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.162711166 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.139174317 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.16428966 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.144855793 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.161291755 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.149732886 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.165829532 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.145771625 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.163130638 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.145117009 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.158875577 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.145824667 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.167132344 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.14672533 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.163183715 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.144950207 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.163928566 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.143398204 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.164517499 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.140755711 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.166036915 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.142236694 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.161951912 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.145099212 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.167566385 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.144811694 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.156936714 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.146476683 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.168685991 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.146021417 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.166847334 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.146204865 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.157170713 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.138804136 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.168158708 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.141712801 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.163056387 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.154964133 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.158456348 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.146104403 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.159047129 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.150428771 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.159874256 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.150337361 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.165639331 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.149555697 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.166566442 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.138713253 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.16270561 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.14833391 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.166989273 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.141402858 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.161449733 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.147031201 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.171062644 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.138150342 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.147491477 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.156496099 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.141639399 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.168936677 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.14846997 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.169018256 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.142610698 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.201815042 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.164648635 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.168954138 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.16332271 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.145830325 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.146088053 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.16296615 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.145513673 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.168075022 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.149190019 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.162257213 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.144744453 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.168520323 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.142675862 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.166624452 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.144692462 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.16759237 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.138649255 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.169360613 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.141588391 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.173389237 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.15214959 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.168655785 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.14986149 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.169236577 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.14575849 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.176179136 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.146280455 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.170648404 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.14055119 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.171384215 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.155109418 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.17275327 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.150596539 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.168007757 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.143152092 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.16845185 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.15912984 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.173757196 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.151011865 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.165829723 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.140993456 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.164851524 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.158139945 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.168696762 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.145793833 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.170894782 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.153052576 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.172199107 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.142757922 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.158213911 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.151145591 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.169286457 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.141489821 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.171236683 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.149955658 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.174563379 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.159749646 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.165156075 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.149995459 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.173336082 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.154035649 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.169884284 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.155013784 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.175645668 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.159301797 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.178651687 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.153485137 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.169136304 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.158544374 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.170174671 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.151132059 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.172026813 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.156706089 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.168399707 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.15492966 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.175269591 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.147972573 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.167442496 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.154542361 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.179837215 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.159662869 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.165487956 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.149569149 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.169613838 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.149804455 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.16407949 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.150928623 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.165332255 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.141052834 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.167252193 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.142859132 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.173704633 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.147289677 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.170813773 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.144428733 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.168640862 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.149221033 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.167029199 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.142461857 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.169672541 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.158373641 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.162657294 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.141634362 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.165135455 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.145183863 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.161751343 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.141790119 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.167847272 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.146048563 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.169411861 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.146942364 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.162927416 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.146338254 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.173568444 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.143243739 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.174648479 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.155775546 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.173576409 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.142986212 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.170119497 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.145185135 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.175889388 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.144966181 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.173206945 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.14870515 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.172301459 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.146046894 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.169782226 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.146430002 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.165325207 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.151983463 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.180939122 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.153963161 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.179737652 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.156446025 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.173729775 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.146757015 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.165638798 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.156993738 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.173188295 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.162035379 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.176353862 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.147413956 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.170054899 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.160446845 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.177220649 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.159661135 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.170745054 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.157881268 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.182233208 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.158487733 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.176601376 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.163464563 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.184876943 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.160604218 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.179957037 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.1486287 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.17489821 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.16041701 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.175129025 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.157633961 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.177666786 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.149983892 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.178659307 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.16109744 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.178955027 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.153991449 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.169447233 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.157250108 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.160481996 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.178922817 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.153121347 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.178486315 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.154593747 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.166906975 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.158798649 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.183387563 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.15236829 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.178744748 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.156654458 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.17848379 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.151424986 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.181686407 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.156664574 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.171508149 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.148756319 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.176036149 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.161586311 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.168539287 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.154872791 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.178520498 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.152960426 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.175946978 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.159554637 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.17527069 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.158884992 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.182726135 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.153433787 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.186341128 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.157494918 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.175826368 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.160660752 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.17439785 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.141222585 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.167887576 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.150397827 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.1747269 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.147848762 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.175070772 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.148252793 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.174457481 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.152519694 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.181655403 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.159170106 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.183057261 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.150081845 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.184905412 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.153566155 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.171011762 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.145746858 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.167017684 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.143169535 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.169254924 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.154490927 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.165000149 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.155622607 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.174108103 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.146278147 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.170354782 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.155776832 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.168055926 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.155899674 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.166721494 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.150523466 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.16369594 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.150166533 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.170716715 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.159137995 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.168052506 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.146155877 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.179377561 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.156682587 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.175597207 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.151908173 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.177763816 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.149923062 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.172475237 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.159571138 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.17555668 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.166147172 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.180198691 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.155281297 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.174973342 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.160095753 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.17909218 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.163850964 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.151234968 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.174328057 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.175544501 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.152659714 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.171256975 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.15064723 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.160616396 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.173185265 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.175119036 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.156146775 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.173453939 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.159092571 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.185941327 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.151735361 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.1711918 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.156355291 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.159916457 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.17464855 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.146412271 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.167861954 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.176586242 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.152610831 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.179766526 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.152813373 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.172395273 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.147212896 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.173679778 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.157774348 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.170267564 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.15151567 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.16663803 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.158803257 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.177567822 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.144672624 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.175696147 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.165876578 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.179540439 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.15792139 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.178091727 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.154759139 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.176837175 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.157641012 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.153985088 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.169161515 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.151928637 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.179746102 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.153015722 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.182422513 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.159502552 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.177789015 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.148717962 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.180701071 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.153882232 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.175981666 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.155271192 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.169892321 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.1654393 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.177444328 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.162906406 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.172310553 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.151419598 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.183976984 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.164513089 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.177956458 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.154700808 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.176631091 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.155636761 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.167692025 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.151764608 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.177791297 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.156282317 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.177458348 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.148938491 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.168517458 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.154858531 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.186422933 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.158389927 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.174901956 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.157705218 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.178665544 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.153103774 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.175547076 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.154291196 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.181176517 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.15796764 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.187794827 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.155751973 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.178740328 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.160884063 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.179246573 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.159696867 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.169893516 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.143359962 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.17626328 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.148935128 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.168036844 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.158569973 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.180743627 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.158161611 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.178512215 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.149276557 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.181424394 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.159499466 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.17483152 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.150990079 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.17307862 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.157311041 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.172319429 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.157427447 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.175894089 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.16228494 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.181120241 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.158906664 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.187079402 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.149241147 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.1820763 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.16019044 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.182290209 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.156260124 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.175648083 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.152099846 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.178007968 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.161627459 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.180096153 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.158198205 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.180707115 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.156571081 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.170500498 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.152426386 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.17103027 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.157461813 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.174980998 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.153825457 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.174637906 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.153634167 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.177303828 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.157124908 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.158890015 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.186762363 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.152886303 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.183724568 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.158458576 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.178133543 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.149073802 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.177043086 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.156969757 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.181450263 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.156392837 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.173122145 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.149925616 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.182806945 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.16171357 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.172049273 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.158870869 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.184281714 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.153906258 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.17923981 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.163280097 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.181371295 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.161861568 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.17951018 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.155894503 seconds)
  done (took 97.214897584 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.199657387 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.185664173 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.164347155 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.177823792 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.171401795 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.179571416 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.155888577 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.175207095 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.159899677 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.19079997 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.158607775 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.181708289 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.168818805 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.198072821 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.192090382 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.163355239 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.175569795 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.159719158 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.183952737 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.159668959 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.192272594 seconds)
  done (took 4.580257572 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.15658668 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.154997163 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.176288797 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.15304246 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.174726898 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.155541468 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.17636549 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.158132784 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.175915965 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.155415206 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.176397133 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.156703174 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.17742428 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.154179159 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.153904033 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.179241487 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.154974475 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.176054041 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.154836387 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.181239235 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.158345669 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.176384455 seconds)
  done (took 4.522311152 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.183015147 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.155942564 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.175269328 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.157108845 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.18295294 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.153733935 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.184645194 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.15721545 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.184626287 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.152009036 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.172030841 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.150307127 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.178959657 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.160080871 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.175638696 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.157274702 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.18620627 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.160637933 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.181590047 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.160456353 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.168970221 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.159006138 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.159063016 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.174310905 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.16295269 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.186126747 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.166817592 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.192087427 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.149238707 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.183871159 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.15517124 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.1731733 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.150172292 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.169519276 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.149541213 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.185334028 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.165219048 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.185932572 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.16278738 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.176157959 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.164626112 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.165435482 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.178862748 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.164015508 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.190934679 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.158427691 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.188498773 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.164286485 seconds)
  done (took 9.010098523 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.186524293 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.220752606 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.166849614 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.221998571 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.202838213 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.171737833 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.184136582 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.191093647 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.190192236 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.165117369 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.201418412 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.173511818 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.190457207 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.168502436 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.193665815 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.166222764 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.193102551 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.167445705 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.194662092 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.186088546 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.169820656 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.18724679 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.172092859 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.193323278 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.16687718 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.183043158 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.16458108 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.19022516 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.16859889 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.185081437 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.160075363 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.187077688 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.195342673 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.162001874 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.180452545 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.161020231 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.197504538 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.167289179 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.184269298 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.158895027 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.185703047 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.167516026 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.187003845 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.174912129 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.194354912 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.16919805 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.189101314 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.163422127 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.196253958 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.163897943 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.19443242 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.195133632 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.167558528 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.186880682 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.16877287 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.194896471 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.165374723 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.182196886 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.164360195 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.196175698 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.160237465 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.18511269 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.170953936 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.187349595 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.166049815 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.191448576 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.183503396 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.16414464 seconds)
  done (took 13.277432971 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.191274014 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.190266097 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.175558601 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.197921609 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.167466145 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.190885447 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.168578827 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.189700305 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.16489232 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.189692721 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.184989031 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.294709848 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.169990569 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.188734547 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.164374858 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.185800843 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.163751247 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.428228889 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.165899742 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.184460909 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.163457749 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.19200533 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.163729273 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.193435722 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.19711465 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.165558493 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.187286912 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.164733307 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.192948017 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.164556772 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.196767015 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.162014154 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.185990067 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.19287512 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.174832687 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.187764229 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.159578429 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.185102915 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.162810957 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.186285784 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.163252828 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.192607626 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.163942163 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.182946719 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.162807977 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.187184361 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.193487793 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.174348019 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.188869256 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.168589517 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.187942122 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.171597265 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.187030277 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.16473472 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.193536507 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.200204402 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.17157243 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.195859305 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.16594652 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.1952037 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.19388695 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.179554351 seconds)
  done (took 12.430747393 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.15988745 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.158153582 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.180269477 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.159534234 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.181146325 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.160428876 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.183036863 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.159552781 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.180771375 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.160505687 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.181108893 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.1596111 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.181266846 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.160260293 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.18140184 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.161023609 seconds)
  done (took 3.624992805 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.176806461 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.197685689 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.264127838 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.161187222 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.181600889 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.167743691 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.181707273 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.161622242 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.155772344 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.187163359 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.161082272 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.185519285 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.197766809 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.160994548 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.181377714 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.163017297 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.180854178 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.164595879 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.180080616 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.240007431 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.187096778 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.160894854 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.183651931 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.162476529 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.183981886 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.163007665 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.187968828 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.158667918 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.184618009 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.162206384 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.183771221 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.165084585 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.183493767 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.164066596 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.184807472 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.160768871 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.182136947 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.159983104 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.184757193 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.160104326 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.183921843 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.160665673 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.183732373 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.161402547 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.180944392 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.161251417 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.183096294 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.1664206 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.185381893 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.162215643 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.183384701 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.16703089 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.187964937 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.168383642 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.190635932 seconds)
  done (took 10.661979568 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.171916443 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.186473272 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.172562381 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.182914018 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.161868098 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.186833418 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.163323104 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.185453018 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.160741533 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.180881592 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.162536101 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.18387178 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.161495089 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.183905809 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.164811927 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.183647765 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.158656457 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.161082276 seconds)
  done (took 4.038517068 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.159920023 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.156976457 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.182167283 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.159385743 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.182431944 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.159582954 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.180775019 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.158419388 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.180939967 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.160168578 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.181132994 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.159977495 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.181773443 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.158552455 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.157015127 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.182805063 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.157162959 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.182576012 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.159184796 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.182618013 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.159005723 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.184061977 seconds)
  done (took 4.657955883 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.170862534 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.260667227 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.188726433 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.247194115 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.181237178 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.154955621 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.190024086 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.18113791 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.172469127 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.177912735 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.155604857 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.178056314 seconds)
  done (took 3.19036237 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.186370962 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.21813701 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.162063735 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.182591279 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.167700933 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.188695937 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.165610205 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1885445 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.171893172 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.199248148 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.188580474 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.171379831 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.195861258 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.171182252 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.192374806 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.168532216 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.189522243 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.164871968 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.185006058 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.201747532 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.165808707 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.194595672 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.166257543 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.188366819 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.165718533 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.195923829 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.174009789 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.199681762 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.189325911 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.17369556 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.192203557 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.166612146 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.196169076 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.175525811 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.18614189 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.194630669 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.169056372 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.20380045 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.169669289 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.198337391 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.162102862 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.19155832 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.172467483 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.193554042 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.194462253 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.167152216 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.194601717 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.166101954 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.189260165 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.184310307 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.193603232 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.197265631 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.169531708 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.195780571 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.172153782 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.211653629 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.200016846 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.174600644 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.194223765 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.176466021 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.197907979 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.191910579 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.174910901 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.200129034 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.17025401 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.197796005 seconds)
  done (took 13.093903656 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.201155045 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.187914802 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.16796894 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.20069121 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.173044108 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.191913943 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.16627508 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.191537497 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.189747907 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.165709192 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.231669758 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.167424027 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.19738973 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.174034726 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.191574754 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.167384507 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.191744188 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.196128097 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.164749951 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.210399815 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.167350497 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.19870317 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.173949486 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.198213319 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.200548488 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.170188638 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.189858426 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.166903805 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.192233964 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.166404352 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.196994072 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.165250806 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.197300122 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.186298524 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.17564406 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.189127113 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.167399209 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.195363302 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.167520065 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.195008473 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.17363397 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.204154177 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.190359592 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.168879227 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.202029018 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.167977451 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.191244488 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.165332337 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.190200781 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.163823278 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.201562939 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.176791418 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.201879965 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.19776859 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.167906308 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.18995343 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.168957314 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.191629889 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.168153053 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1982387 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.175963054 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.191270961 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.211406132 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.167810312 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.190609088 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.175809571 seconds)
  done (took 13.129914481 seconds)
done (took 235.940129021 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.240508711 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.288298495 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.36124351 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.217188495 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.25330971 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.21847854 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.186431863 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.183076733 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.15676041 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.179518087 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.240716229 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.156781865 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.255866004 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.178584044 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.379809714 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.159298377 seconds)
  done (took 4.600215438 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.256358592 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.392571812 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.197248016 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.158974779 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.186735848 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.15984251 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.184602028 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.158412312 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.182801128 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.188178265 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.160755738 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.154141183 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.189292949 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.17797271 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.160369757 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.181798318 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.167333453 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.182227555 seconds)
  done (took 4.406779944 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.177554786 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.226143159 seconds)
  done (took 1.363563018 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.190317906 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.281038063 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.385751369 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.232407013 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.180454314 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.200575022 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.233420446 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.17123248 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.272839795 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.171666764 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.195131147 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.180326199 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.184961794 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.186854226 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.174725456 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.180511892 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.186063443 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.198905171 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.172652245 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.184903161 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.185040303 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.188999619 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.163443698 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.197249177 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.263065827 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.170557914 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.188792458 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.164696167 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.187217912 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.173485544 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.190958164 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.19917569 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.172075161 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.244783835 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.18622516 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.24017039 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.169741899 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.184317503 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.173968339 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.184094899 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.163200746 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.186201715 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.17310371 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.182797549 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.164306332 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.192785609 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.165329165 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.188302506 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.190542222 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.169106868 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.191705279 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.166653781 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.237602352 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.19192715 seconds)
  done (took 11.513757472 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 1.006205945 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.218486645 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.204822202 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.059449085 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.205724164 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.167775971 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.991674915 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.187931516 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.280020558 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.02536113 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.198863401 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.172644473 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.229563636 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.276248216 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.251918566 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.302898452 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.875547571 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.199119635 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.195444231 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.209153067 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.172751081 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.210945644 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.197267065 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.477167163 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.186413784 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.168645162 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.186578035 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.161409148 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.24155211 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.200941546 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.165888989 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.22090753 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.286250941 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.199609044 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.161696494 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.187259116 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.158980706 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.203146134 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.247179135 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.207583704 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.202164465 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.182529786 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.158443306 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.189016608 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.199781281 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.159528058 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.196045563 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.183956545 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.211509072 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.173501538 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.193684144 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.161978745 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.187617561 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.174769845 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.187265889 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.300007329 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.331073999 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.176416675 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.193096599 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.173320513 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.252243413 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.169902049 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.20383792 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.182504126 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.302574024 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.189713355 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.798826814 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.17616283 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.191672552 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.163940477 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.183212205 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.158477639 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.193256433 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.219268364 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.482865678 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.163062111 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.187856589 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.171967324 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.250446788 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.1621404 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.190881698 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.191000196 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.187740211 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.169982377 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.190631364 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.168961812 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.213261533 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.265510604 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.187097936 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.163237354 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.204375972 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.17088236 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.188781522 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.295948204 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.174480605 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.195569085 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.223646116 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.188700978 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.201963577 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.197379899 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.192173808 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.184476211 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.192678254 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.169898729 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.185356822 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.168475884 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.20025976 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.181786322 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.193361033 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.162090249 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.204061099 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.170531934 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.185111526 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.17861931 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.498904518 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.191424801 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.184600712 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.175679763 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.186442551 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.246658197 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.164754343 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.32480646 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.186687007 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.183369597 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.206100515 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.159283358 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.193640657 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.1741298 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.195987349 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.166357738 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.187421118 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.162716414 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.298472412 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.194177094 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.203663029 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.210417632 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.238652282 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.165547001 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.213318365 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.185264654 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.187620994 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.206769664 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.169663387 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.187769288 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.766923207 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.194751644 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.167222123 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.184790442 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.221050656 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.190267973 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.183861982 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.194948459 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.160593071 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.865123409 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.195352703 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.168041967 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.191483895 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.162974912 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.19005259 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.176981212 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.19213302 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.176646346 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.215351021 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.167558265 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.186655202 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.165238541 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.249370686 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.189558702 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.180926444 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.195818259 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.162981237 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.19053392 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.165532782 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.211589914 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.183473651 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.1970568 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.191842528 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.580785312 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.162260863 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.19364949 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.190870458 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.187547987 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.27032384 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.191126197 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.196210861 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.212444978 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.162231471 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.333318379 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.208598018 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.220359522 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.192678095 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.189507244 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.184912392 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.177506098 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.203510304 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.164253385 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.191045429 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.171451149 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.191354881 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.163886413 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.231619686 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.179998852 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.275044202 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.159442114 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.204677999 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.163617566 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.193489381 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.277472502 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.1893988 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.168546279 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.202751283 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.176279588 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.198859078 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.943484083 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.19548303 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.167897392 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.189048675 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.175347858 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.208566359 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.177322659 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.197922082 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.165146465 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.207738942 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.252773311 seconds)
  done (took 56.887539181 seconds)
done (took 79.728992508 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.323647278 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.229530757 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.426191258 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.237256644 seconds)
  done (took 2.276919095 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.345562368 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.205785701 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.304582518 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.184721844 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.285788794 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.188144362 seconds)
  done (took 2.528402445 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.233252559 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.229681925 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.229368445 seconds)
  done (took 1.710591758 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.271259484 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.27380578 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.415627179 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.326653018 seconds)
  done (took 2.368109505 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.344955997 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.182065555 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.221292512 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.291342547 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.30776833 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.274452938 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.187759046 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.239682076 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.219670569 seconds)
  done (took 3.321438362 seconds)
done (took 13.21183709 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 0.205715444 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 0.222090226 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.186588337 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 0.203426667 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 0.199763567 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 0.225723723 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 0.191816666 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 0.222672358 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 0.19029265 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 0.203326448 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 0.189412157 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.200023236 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 0.282782078 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 0.196166189 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 0.200342943 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 0.189730162 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.201572118 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.200586548 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 0.222523536 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 0.17315144 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 0.223950277 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 0.172284147 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.199625151 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.183526298 seconds)
  done (took 5.89469501 seconds)
done (took 6.911015724 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.270314922 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.183810458 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.170525743 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.198796862 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.278917903 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.180261412 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.215745679 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.173927681 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.209024489 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.172491475 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.186691914 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.185536542 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.197168644 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.245380561 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.203849273 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.189219099 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.163736604 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.209155055 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.188288534 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.214429991 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.253108634 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.194476363 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.181623979 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.190023295 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.280480049 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.16663651 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.197590214 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.17306179 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.212593354 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.17427894 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.198413891 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.16274084 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.21512539 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.188383951 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.189637989 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.173824687 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.190056987 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.139230909 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.174216132 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.201663093 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.184885807 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.199795892 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.196091432 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.166689201 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.199908261 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.174939283 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.163744818 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.203720575 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.163806339 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.200231583 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.165847707 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.216229371 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.171586002 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.190597677 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.161383215 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.19093807 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.182304642 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.193234298 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.186768983 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.192447454 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.163205786 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.191830737 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.174712012 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.192527942 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.171930851 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.191308119 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.173264594 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.201873363 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.171999649 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.194604112 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.167155793 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.199842831 seconds)
done (took 14.823399449 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.169419994 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.236254247 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.248307242 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.282199091 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.222324509 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.204084446 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.179450145 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.212752071 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.177816621 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.20588773 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.198722748 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.221888686 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.284457571 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.18162682 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.206406492 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.176185436 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.223211358 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.170310532 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.283338303 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.214815209 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.186890048 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.207749324 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.188577375 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.210642068 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.170520721 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.226203052 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.173205475 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.204197437 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.168368735 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.202580837 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.215890488 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.17085378 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.198649718 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.188203152 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.212007618 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.179564169 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.204922881 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.177553726 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.193268021 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.167790618 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.20233391 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.183550867 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.194507146 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.177798633 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.206403325 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.186111189 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.204079981 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.184711301 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.197267729 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.177755794 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.198825466 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.191095007 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.211560965 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.184734201 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.207642519 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.180725654 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.209282098 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.184225825 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.200885345 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.181753025 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.201207807 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.170528814 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.197116078 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.214735586 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.174963072 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.207323727 seconds)
  done (took 14.207395365 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.187562577 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.227341021 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.179740285 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.207529683 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.172464946 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.19156172 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.162483215 seconds)
  done (took 2.376439233 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.164186126 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.291461563 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.287961588 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.287337876 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.283766338 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.268552555 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.217471935 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.190148492 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.203282854 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.202221049 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.291872548 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.320873974 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.178029979 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.205325711 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.263750401 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.194112478 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.292627496 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.272461294 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.179692959 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.290761255 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.211328397 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.19908312 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.206272534 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.166545823 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.284903847 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.193274951 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.340654481 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.183494606 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.203874382 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.179689118 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.207453584 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.268897636 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.256813834 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.207884952 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.172884903 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.284735175 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.284422559 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.209210775 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.298919471 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.171485618 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.285730708 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.178996061 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.209851554 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.20654394 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.184640886 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.276247613 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.184055545 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.211648981 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.178802425 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.295579337 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.206319684 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.288633541 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.180547198 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.207412246 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.176352387 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.208934927 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.189742105 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.208487019 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.296972868 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.184527899 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.286662179 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.291488282 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.288677698 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.290590415 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.190466842 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.289289881 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.278022762 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.178533698 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.28603453 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.212129766 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.293104203 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.179098004 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.208178467 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.281317495 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.18302903 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.291642 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.293225068 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.205454463 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.181062926 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.1947827 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.181243735 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.192797155 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.264119518 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.209991539 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.178656665 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.214107675 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.177423192 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.209944538 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.284947722 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.215094191 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.183021416 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.20496493 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.187626327 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.208774756 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.182418227 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.293572093 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.206251485 seconds)
  done (took 23.334317334 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.169312125 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.167611473 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.201020667 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.168426712 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.196980408 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.167495461 seconds)
  done (took 2.157466889 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.206438834 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.207695021 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.191007725 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.20912365 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.230601429 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.295469847 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.30273537 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.207343281 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.199089691 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.219473717 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.297973127 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.299765336 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.272410118 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.216655381 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.304282565 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.184761213 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.305087168 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.211841949 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.190676937 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.209689831 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.181252008 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.216611937 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.179086953 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.288356651 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.213511021 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.185467966 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.204237214 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.190124723 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.21974073 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.175572629 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.212709739 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.207630321 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.176305156 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.203443664 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.304192286 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.175816809 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.204892188 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.185838252 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.212346732 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.184480533 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.303047092 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.208162837 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.190583209 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.213210633 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.179873934 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.203321744 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.185188006 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.202010232 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.305627007 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.185365523 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.212880817 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.183565148 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.211730533 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.184970584 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.203580776 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.178046442 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.213247175 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.306813571 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.185597654 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.204923254 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.182784112 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.213336375 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.177032315 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.21467548 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.18366776 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.214011933 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.175228369 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.213459808 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.205731436 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.184824165 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.213710876 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.185422779 seconds)
  done (took 16.603193714 seconds)
done (took 59.718475397 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.817099028 seconds)
  done (took 2.908080027 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.031218794 seconds)
  done (took 2.123252852 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.700413994 seconds)
  done (took 18.825224977 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.485945357 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.418898076 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.106919886 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.238839185 seconds)
  done (took 3.342183073 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.152184333 seconds)
  done (took 2.251793581 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.48633401 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.3510636 seconds)
  done (took 1.933518174 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.816367766 seconds)
  done (took 1.924405969 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.814427883 seconds)
  done (took 2.911629826 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.339341567 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.313324073 seconds)
  done (took 1.762666579 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.71187716 seconds)
  done (took 1.827420259 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 13.357372384 seconds)
  done (took 14.47500247 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.32421858 seconds)
  done (took 1.440626469 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.356143954 seconds)
  done (took 1.476545281 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.659172046 seconds)
  done (took 4.778500124 seconds)
done (took 63.087412401 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.185482021 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.211359904 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.18757486 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.210707508 seconds)
  done (took 1.899076621 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.18855421 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.209013325 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.1884567 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.208908833 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.190420163 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.210189035 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.184690509 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.213973007 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.184424525 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.210776963 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.185460094 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.181681246 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.21375052 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.180446231 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.212641165 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.183804372 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.215428152 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.181835525 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.212902329 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.182922141 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.212304981 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.183267997 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.215472783 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.2138731 seconds)
  done (took 5.880974857 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.18036539 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.173061155 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.2040348 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.171072372 seconds)
  done (took 1.843897897 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.195525458 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.224990124 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.19851981 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.220971989 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.200954609 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.225331902 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.184375274 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.209680571 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.183719256 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.222390516 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.19997357 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.229302283 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.196887927 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.218117172 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.194938865 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.207655728 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.186761862 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.22542117 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.192677624 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.224609817 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.186460217 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.222595475 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.181829018 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.223513977 seconds)
  done (took 6.081994217 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.262188305 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.22657136 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.214297375 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 0.24423724 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.18148127 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.242927016 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 0.257978763 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 0.191560461 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.217934281 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 0.188499402 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 0.213443062 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 0.184113219 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.260849643 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.189404202 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.214516205 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.183778984 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.222605959 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.214839597 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.228349461 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.215509224 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.197190317 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.22455447 seconds)
  done (took 5.903591325 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.2747235 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.206755569 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.172991997 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.202962162 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.186021311 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.207920565 seconds)
  done (took 2.381086501 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.175483013 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.168441995 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.198376164 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.16930555 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.203132831 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.169409922 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.19718675 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.170042081 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.197908404 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.170259497 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.197857291 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.17059346 seconds)
  done (took 3.320827135 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.3062408 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.2178875 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.352705986 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.462660103 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.260054782 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.257777341 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.34977818 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.256113061 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.27767134 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.231687226 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.252036855 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258178063 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.250246043 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.280117176 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.239268152 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.247450172 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238558548 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.331450928 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237656359 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.333821652 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.253218288 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.246159684 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.28841584 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.247043909 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.207570101 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.262237381 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.213049314 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195661278 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263416916 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.259714996 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.267691819 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220810109 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.238822576 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283963404 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.310538396 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240484211 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.384351234 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199386328 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.262330621 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.292879721 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.330608272 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.236747478 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.257415352 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249446901 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.224820878 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.310777477 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217216253 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.284401434 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.22872547 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.213913708 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.27762367 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.277232392 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.266898247 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204941865 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.40570889 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231939189 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.209673506 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.278139189 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.286464694 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.301608218 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.277035947 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.190322251 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.268170452 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.29039394 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.315422159 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.235520765 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.233499283 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.221361943 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.261625553 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.276347094 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.280308819 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.258766326 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.280231595 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1986309 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269798777 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.265327056 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248948363 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273176401 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.27024816 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.214736618 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216342118 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231251556 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191387978 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.287601998 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.216438843 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.316041149 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199652549 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.274899267 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273488497 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.221096867 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.259484161 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.256475938 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233404466 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.247521141 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.158484001 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24094058 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.254439775 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223315352 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225999775 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.218872713 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237449157 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.220444726 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218945226 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.219481005 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23741619 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.22441478 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.254852433 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239355015 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.233113797 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.278802071 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.215903958 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.261633347 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266257911 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.29219567 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198772601 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.231605405 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.31971776 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237394913 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.232464839 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.269185015 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.29780291 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.210999775 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233153507 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230462271 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.291810426 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.242211796 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.302127621 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204805797 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.232594066 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.226081318 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242700326 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.257867934 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.255993344 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193793055 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.264683239 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.28832323 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.192687067 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.236318828 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.281774981 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.198699006 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221260566 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202834958 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234184274 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.238716959 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.221076419 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.236458132 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22043542 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265334763 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.265998648 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.250870471 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20331046 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270468763 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225736486 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.240942494 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.247713015 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.185518613 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.273230839 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.297763704 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.225535604 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249194509 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.258308021 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277126185 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274372156 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196168028 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.281389558 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.222890488 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.189146143 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259691109 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.268205598 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.232554698 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.288652552 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274562108 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.262661372 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.263326856 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215670224 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26669381 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.285587239 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257023667 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.209333804 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.274859936 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.264387177 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.190082065 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.222024414 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.196059553 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23530789 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197181278 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.236880216 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.277257417 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231181046 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.275347424 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.267053168 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237063727 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.292804056 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.195273964 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.260208805 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.277235009 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208001123 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.290977011 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.291612547 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.277619672 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.210226017 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262370579 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.188899138 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.224915797 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.200544886 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.2592553 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.236164293 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.204228492 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241476853 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.294399298 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.26666111 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217192486 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.289217991 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.263652096 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.305581263 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.188271796 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.261794949 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.263336089 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236312659 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.286856037 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204373302 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.257828058 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.295047893 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238959732 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262884593 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269158751 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.280650874 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.294351763 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.262805333 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.200572694 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.243743459 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2311034 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238812736 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.259262034 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.212581054 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231836288 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216758848 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.236841967 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.239370911 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.28525563 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212966667 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.274963661 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.252748434 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237455991 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.227031397 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240486217 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.245426346 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245451935 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.163933701 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265871039 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.290776161 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216344566 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.252713257 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270747601 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198703847 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.453646745 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.282370327 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.273314203 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.203629429 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23871192 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.274134679 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.226123811 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.257206944 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.286610053 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209967668 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.310011426 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.273000186 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.238266138 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200298201 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.248822627 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.218796902 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.231485064 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.252709164 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.233582997 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.244252599 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286768797 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203336447 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.273521433 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.280226006 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.243743559 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.217578268 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237200386 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.331982722 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238080775 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272753536 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.269101953 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.262181389 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253326179 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.22444059 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194631118 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.232998963 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.288058181 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197735976 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.279843529 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.261198825 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279092874 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.277782492 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231977376 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.240468832 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.196204974 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.271663729 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248907735 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.280380892 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204398404 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.236756091 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285983047 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.188263881 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.231577349 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.23023706 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.389922736 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.249089583 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266872307 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.167470555 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.382107024 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198496915 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.233216179 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.256673113 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240149455 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.233970656 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.257794263 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274921073 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243197261 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.22893453 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236095926 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.27677922 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.280648365 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235358651 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274979568 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.247133554 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.261296803 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223766645 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272076156 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246458888 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.216722377 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259788795 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.296514392 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.244589639 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.232648035 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274147774 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239344841 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.27426797 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.27265028 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208971182 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.286702546 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229140013 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232506785 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239591965 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.224845308 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228645643 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.265631145 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231342514 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270549409 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.243581319 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233942692 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.19619522 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247659706 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266197198 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208622196 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.232136328 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285915213 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.199750294 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.284795551 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.314661059 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198068651 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.269851136 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.241670843 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.200723979 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.240011482 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212126952 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23394423 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.24587572 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.275385042 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.232181348 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241826474 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265711326 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.264886402 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253232914 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.212741521 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.372362298 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.197113569 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.294258391 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.253695198 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.320872039 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.219579374 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.283152254 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.274309263 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217892115 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266378367 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248290251 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.290146283 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268008215 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.271894117 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.200358171 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244160336 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.240741085 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.204178511 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.256182985 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242012358 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242904085 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.238436443 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.239494517 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248481051 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.245484955 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.213005363 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.305246368 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.252509551 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.256104051 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.290305954 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.241766209 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279423966 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241197132 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232284704 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.26487451 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240884946 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.246680739 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254606649 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.203084817 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.239665913 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.318127308 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.197231919 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.261955589 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.24584306 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.274557419 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.277509772 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.202558983 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.281949619 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244588977 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279372745 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.19768544 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.252533691 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.241345202 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.236809079 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.226627404 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.244038108 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.260250472 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.26933646 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.214388826 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.279806694 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300692957 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.195685111 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234083767 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.358996798 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.258762465 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.299722401 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.194633042 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.240694533 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245657637 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230019058 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.269581827 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274294083 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.202118052 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231374117 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.215798051 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.255569585 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.201222546 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.27342207 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.290597331 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.258555698 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.257136249 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.239081697 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.3570129 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.212696935 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.276982867 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.177862471 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.233975601 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211989913 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237832702 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211339846 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.282832912 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.320469578 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.269659803 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.24967371 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.205978552 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.228739211 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202068453 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.264746424 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253340365 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242459203 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250167514 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.164989324 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.243415911 seconds)
  done (took 121.690484562 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.409919605 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.255333462 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.293480696 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.32068014 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.298398965 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.416888426 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.328154946 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.361462274 seconds)
  done (took 3.940681226 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.193674943 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.262186303 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.246299957 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.188756929 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.216683489 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.549731521 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.243020066 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.191726416 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.270646195 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.227633335 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.185612382 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.660044787 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.228833019 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.22380991 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.222999929 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.183410898 seconds)
  done (took 5.549993824 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.162195356 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.631558181 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.105374235 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.371891886 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.342915979 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.292041967 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.897569843 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.274676058 seconds)
  done (took 13.335715065 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.249492242 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.283238096 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.4629202 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.386417662 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.293500869 seconds)
  done (took 2.944896242 seconds)
done (took 175.879637185 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.198560055 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.228482446 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.201523818 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.230014008 seconds)
  done (took 2.106704408 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.252444922 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.162973473 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.200588025 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.157717961 seconds)
  done (took 2.031276912 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.483234697 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.155950482 seconds)
  done (took 1.92791218 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.219483639 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.239635475 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.210334127 seconds)
  done (took 1.948331523 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.213036223 seconds)
  done (took 1.485682975 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.193407571 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.194649232 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.320246991 seconds)
  done (took 1.983071715 seconds)
done (took 12.754048532 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.21901525 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.052870353 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.664165534 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.214050053 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.832758476 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.475864905 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.531841069 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.257390496 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.284066874 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.222402118 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.25319529 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.76573657 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.514904037 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.953411352 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.500705434 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.95510392 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.798689316 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.185035863 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.221462337 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.186025221 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.513842607 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.186013019 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.218154295 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.186463487 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.795525262 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.494337846 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.219638231 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.965398713 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.217122453 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.195774523 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.510614967 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.187134377 seconds)
  done (took 24.035653258 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.189443751 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.27397961 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.237541359 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.224002197 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.195647126 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.22493729 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.198881087 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.235541172 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.321449959 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.188750706 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.239949464 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.186880101 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.223363307 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.18579498 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.243025061 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.186774777 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.219139206 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.188713129 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.22591239 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.1908826 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.24331137 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.187944238 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.22062957 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.188142544 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.217949645 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.205906352 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.221857342 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.199157988 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.222515546 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.197787036 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.227954433 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.188079097 seconds)
  done (took 8.181806526 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.230127007 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.286590982 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.242528948 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.263987168 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.278193154 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.187659692 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.309798067 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.261694099 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.299693145 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.223877618 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.210371776 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.223389262 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.228597185 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.225832188 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.213969939 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.219928347 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.187973991 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.219361879 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.222928929 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.189586469 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.239596216 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.186288103 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.217622908 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.186287967 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.216450829 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.20851507 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.219814447 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.198412048 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.219004669 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.197535709 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.227057161 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.188617906 seconds)
  done (took 8.518368422 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.200561295 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.232597126 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.212063498 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.245188518 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.20062124 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.200125935 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.233282108 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.195595193 seconds)
  done (took 3.011291736 seconds)
done (took 45.026046375 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.211004378 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.23707782 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.20847152 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.204357849 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.31693893 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.232175665 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.208085404 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.786463521 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.204680925 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.241884758 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.185639933 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.226683794 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.206541033 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.22903144 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.282102285 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.240202815 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.32222222 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.317898598 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.195887323 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.23695715 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.193042084 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.32027689 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.233269086 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.196322755 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.296221402 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.190122391 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.305288045 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.19557072 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.231274528 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.186653576 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.315786421 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.230123958 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.195465412 seconds)
  done (took 9.657379754 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.296869695 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.231458184 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.194020017 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.229420521 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.198141625 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.226622882 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.351600366 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.194315679 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.227256235 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.193425287 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.227205621 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.283235932 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.237261294 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.188803898 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.231445693 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.175569594 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.337769285 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.227635666 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.189588794 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.159195589 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.225066449 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.19521848 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.347526241 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.223184261 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.196546514 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.194107803 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.230548832 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.197814293 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.229364797 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.195844888 seconds)
  done (took 8.13726834 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.200458499 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.208404704 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.247978749 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.296725717 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.226444763 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.240612646 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.208523572 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.241395481 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.215499334 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.224015372 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.204175387 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.258823356 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.203862229 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.235016063 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.18770891 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.240184895 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.202346622 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.222714247 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.19520812 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.23962126 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.205587402 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.237048603 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.210175423 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.231382471 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.187512105 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.234182978 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.19830884 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.233127049 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.196526702 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.238741582 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.188604314 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.225383203 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.18948359 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.257071063 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.192917619 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.236759025 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.2087844 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.237947259 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.201603344 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.256210564 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.190062677 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.225496676 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.213625263 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.278717189 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.224504116 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.199160365 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.190398201 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.238142858 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.186740362 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.244339648 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.263513705 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.189408871 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.242487905 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.188489038 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.218390962 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.199514815 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.221532325 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.193311386 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.204337554 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.224774638 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.207580683 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.230240615 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.200659487 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.225073019 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.202744217 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.222541142 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.18840622 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.22867898 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.216717354 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.232338272 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.228435312 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.22664758 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.203467032 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.239872987 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.202458797 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.23686695 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.188848701 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.236781044 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.201943717 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.229663632 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.202820721 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.230243092 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.192843937 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.240698898 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.209492273 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.239506276 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.202245522 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.23772962 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.193078665 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.227913716 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.206701002 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.225636868 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.191563441 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.240341533 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.189602714 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.227266861 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.200217103 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.232838083 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.187187224 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.250921545 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.192557408 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.223225626 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.216279775 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.227413288 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.194850999 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.231690818 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.231434377 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.225525431 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.198219874 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.233882972 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.189815131 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.231637965 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.191037455 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.222057447 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.205189462 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.239208705 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.197657383 seconds)
  done (took 26.844832302 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.416756297 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.415693649 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.29459777 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.46834362 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.239395685 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.3279832 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.407650606 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.413208604 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.189353683 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.259747802 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.280583514 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.37101554 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.191429563 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.25747658 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.412633972 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.502605398 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.220152042 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.264049878 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.261238427 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.203576009 seconds)
  done (took 7.728859148 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.199733351 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.254178974 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.212034222 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.240938594 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.201529361 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.234677206 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.192314162 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.245109047 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.201569087 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.229758581 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.195232736 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.197594532 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.238503607 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.204458164 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.237917383 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.246457773 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.199911314 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.226640631 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.213792707 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.224485143 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.209871036 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.251042281 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.199415509 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.245697499 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.208717153 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.235901672 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.190593736 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.225489074 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.197132966 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.231657981 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.191882705 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.232465573 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.198786363 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.171284047 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.241618115 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.205719205 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.234461508 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.196494857 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.232969369 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.196532805 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.239141868 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.202665806 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.23204051 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.204621673 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.215263796 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.215712392 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.207064279 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.235822365 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.17384223 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.215513436 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.241565807 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.201587641 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.233689707 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.209664915 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.234378569 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.206755169 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.233506567 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.202010495 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.227108408 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.189796411 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.226747153 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.194390612 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.233326088 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.202105056 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.237844446 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.199652992 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.233085586 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.191481802 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.226011503 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.194343201 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.227513676 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.205086056 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.245900446 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.201130487 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.230729613 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.20240666 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.233760798 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.163299991 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.198755779 seconds)
  done (took 18.409866308 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.21862146 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.235562045 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.211190199 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.257565162 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.204436067 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.230693251 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.203105236 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.242390629 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.20631104 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.208842534 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.240399189 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.204356047 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.250781796 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.236266569 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.20373086 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.241222172 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.204359016 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.264837458 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.206885962 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.252096131 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.207017679 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.229651507 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.206517242 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.241294172 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.217414055 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.239289891 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.219296983 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.243354794 seconds)
  done (took 7.682039994 seconds)
done (took 79.752384774 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.504065095 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.693164296 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.443380505 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.453195719 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.448782643 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.455516409 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.440678976 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.442363111 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 4.076077492 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.416408697 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.442744318 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.440255254 seconds)
done (took 31.652179499 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.794797535 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 1.60002807 seconds)
    (2/2) benchmarking "String"...
    done (took 1.676996514 seconds)
  done (took 4.622634721 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 1.599954756 seconds)
    (2/2) benchmarking "String"...
    done (took 1.642687544 seconds)
  done (took 4.574320131 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.43195819 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.433403959 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.823278801 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.435242912 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.433595281 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.43371563 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.433001084 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.437313121 seconds)
  done (took 17.76065482 seconds)
done (took 33.520491033 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.493827185 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.75278729 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.689988336 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.428493398 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.437166847 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.434669801 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.438717024 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.509226782 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.435485069 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.431564116 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.874946746 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.707410208 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.448317067 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.83391359 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.435997582 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.45354011 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.45069543 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.815419712 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.442544292 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.419688806 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.432172328 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.42088198 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.446116326 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.451435938 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.44648542 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.437302745 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.441669153 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.442273114 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.743648426 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.464891684 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.482315651 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.439743454 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.441339913 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.44430314 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.466469127 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.443357591 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.743871486 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.453662245 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.432414342 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.448924083 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.743009629 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.459537231 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.443374457 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.443978502 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.433127228 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.472643947 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.425138889 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.560649906 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.474916198 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.445027257 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.539436716 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.880090341 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.442697665 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.445162087 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.451356529 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.78670928 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.469492694 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.543940984 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.467247058 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.469218008 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.437593405 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.443332201 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.475408156 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.453646933 seconds)
  done (took 159.997739738 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.438953385 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.438396066 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.438877535 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.445317929 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.439579784 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.437806115 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.438816615 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.438539031 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.438758817 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.466085794 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.439240552 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.439283371 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.447086504 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.383228802 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.44512478 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.462837379 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.445938092 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.458684407 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.445549689 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.440701364 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.463205299 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.440165047 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.44181337 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.442311191 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.449847329 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.537812334 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.452205061 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.464624229 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.453359622 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.441772697 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.449982964 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.447883018 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.12323446 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.30507267 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.451940812 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.480132884 seconds)
  done (took 89.010276111 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.441107022 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.441658644 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.441723455 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.477702958 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.441165145 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.077052759 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.082918447 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.515673058 seconds)
    (9/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 1.843732103 seconds)
    (10/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.659456811 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.92913631 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.772249637 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.449437786 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.537731177 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.455543972 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.443159814 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.5404993 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.469136541 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.443113221 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.445207106 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.081354459 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.461115117 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.476707007 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.629827291 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.443381805 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.478808376 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.841606373 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.443786081 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.477940543 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.790673256 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.478948851 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.444136629 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.846007361 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.42163925 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.559588984 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.445504253 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.47884778 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.444466304 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.731142997 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.444155119 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.445138073 seconds)
    (42/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.88151858 seconds)
    (43/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.450934191 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.445364723 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.447710619 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.140149963 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.45145555 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.079020867 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.450972896 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.447356794 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.445254175 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.444707243 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.85306697 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.237132171 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.452548683 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.446974517 seconds)
    (57/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.445879955 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.447822289 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.446247227 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.446936435 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.481578506 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.844980425 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.368944503 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.446781832 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.449106321 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.481298298 seconds)
    (67/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.446504274 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.445901434 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.445608072 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.591027239 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.508260642 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.085634447 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.453786736 seconds)
    (74/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 21.54928252 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.550261342 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.567355948 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.446025576 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.446056193 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.446475794 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.446151357 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.560732684 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.446664646 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.889498053 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.632949923 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.44940011 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 8.006897772 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.553639373 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.447255204 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.872290707 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.453852253 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.447713562 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.196684294 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.545588994 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.448641506 seconds)
    (95/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.447129295 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.447972039 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.892072765 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.072720171 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.784656394 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.45407923 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.998852315 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.458523941 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.90461532 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 2.060576747 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.183479281 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.457030791 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.562970904 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.635060783 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.449873174 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.449699919 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 8.059986655 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.456469593 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.510371546 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.449877074 seconds)
  done (took 400.765718091 seconds)
done (took 651.111619933 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.433502483 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.434609885 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.433731224 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.43393187 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.434671526 seconds)
  done (took 13.515187553 seconds)
done (took 14.863984876 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.716147946 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 1.717011206 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 1.717125566 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 1.515317448 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.715829659 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.718236604 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.599032651 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.672890332 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.719855519 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 1.719659229 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 1.48419594 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 1.739344342 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 1.671507231 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 1.528680247 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 1.474311917 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 1.604433889 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 1.493201643 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.634049602 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 1.603726338 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.750866449 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.59724289 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.499632504 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.740002596 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.486235259 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.763595497 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.784041014 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.61193554 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.622764429 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.472282112 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.46754212 seconds)
  done (took 19.141753648 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 1.491606757 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.759999501 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.584598415 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.503353913 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.744086475 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.487604019 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.776198548 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.808945078 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.62037147 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.615344285 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.472091576 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.468801556 seconds)
  done (took 19.188728597 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 1.469397989 seconds)
done (took 73.687822311 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.490022887 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.560700699 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.488505041 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.4678646 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.465783934 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.465916311 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.468310422 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.466021378 seconds)
  done (took 13.221706889 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.466452545 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.466114833 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.467022643 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.465780435 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.467153149 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.466117868 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.464663121 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.466691553 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.465586171 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.466268164 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.467108805 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.468842156 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.466368444 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.46759588 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.4690244 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.467534313 seconds)
  done (took 24.816614794 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.470675944 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.469076543 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.466700495 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.469587002 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.467410219 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.466818567 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.468858037 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.465928631 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.46679645 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.466837736 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.467250924 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.46694865 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.466902083 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.466776878 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.467919549 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.468850006 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.466817052 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.469370291 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.47049672 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.467342195 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.467475136 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.468021218 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.467477839 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.468501421 seconds)
  done (took 36.579362682 seconds)
done (took 75.969712363 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.456260578 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.456532373 seconds)
  done (took 6.26342509 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.526837889 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.526674835 seconds)
  done (took 4.404939749 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.468532176 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.468197546 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.469038041 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.468153644 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.46882113 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.469043129 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.469153593 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.468302587 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.469153949 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.46799532 seconds)
  done (took 16.037122807 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.470552497 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.46867911 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.469993774 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.470425811 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.469258714 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.468061901 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.469840136 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.469574898 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.469450149 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.469624745 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.469492086 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.468923249 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.469474556 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.469845117 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.47030539 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.469373931 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.469806051 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.470360215 seconds)
  done (took 27.804668568 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.482609983 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.48855607 seconds)
  done (took 4.323006841 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.598884186 seconds)
    (2/7) benchmarking "second"...
    done (took 1.512339444 seconds)
    (3/7) benchmarking "month"...
    done (took 1.574360663 seconds)
    (4/7) benchmarking "year"...
    done (took 1.567028932 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.512088753 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.491371441 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.512100965 seconds)
  done (took 12.120740167 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.468984986 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.775053527 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.976540472 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.638700504 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.458098451 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.482584974 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.443289111 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.483488688 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.485397724 seconds)
  done (took 16.564584129 seconds)
done (took 88.873053569 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.45852663 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.487193699 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.480500455 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.474562732 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.776759477 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.512965657 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.467344654 seconds)
done (took 18.016592738 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.458753951 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.453083577 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.46034328 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.470210704 seconds)
  done (took 11.196354617 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.462617885 seconds)
    (2/2) benchmarking "read"...
    done (took 1.809587871 seconds)
  done (took 5.627858472 seconds)
done (took 18.182986806 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.472483041 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.474823518 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.474392917 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.472197159 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.473306499 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.473958739 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.472781045 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.47277839 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.474483371 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.474011214 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.473580894 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.471903568 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.47165571 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.473313495 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.473370744 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.472427998 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.474209345 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.473255276 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.477711817 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.474459808 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.474882967 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.473293848 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.473984857 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.474787874 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.474035439 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.475264266 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.475556096 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.474584991 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.476131937 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.4743333 seconds)
  done (took 45.574189086 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.482244963 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.482132321 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.475122856 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.475385905 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.475337228 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.475814285 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.476261073 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.475668405 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.476057444 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.475619918 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.475702209 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.475642429 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.476248568 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.475398154 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.477890747 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.476406187 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.47550574 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.476962752 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.475039981 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.476408331 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.47612496 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.476989081 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.476197936 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.476549377 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.476144454 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.476511608 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.478045505 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.477819709 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.476139994 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.476716841 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.477385123 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.477435992 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.477581982 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.477857138 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.477893133 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.478502019 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.482843963 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.484415496 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.478533232 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.4773064 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.478340321 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.477720871 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.478922713 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.47847416 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.478562326 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.477698189 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.478035065 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.479098751 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.478199187 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.477774128 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.480552512 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.478343175 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.479402235 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.479634215 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.478862683 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.479995185 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.478587411 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.480358836 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.479158477 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.479431202 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.480247144 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.479770146 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.479493704 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.480902474 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.479380456 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.480565754 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.480203782 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.478910564 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.479836823 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.481016118 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.48049025 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.480017279 seconds)
  done (took 107.785285267 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.482012189 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.479612436 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.480463077 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.479523314 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.481226313 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.479857643 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.480133998 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.480489928 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.480247447 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.480519914 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.47954859 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.480683205 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.480959748 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.482686443 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.480171046 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.480110067 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.482006965 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.480565492 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.4809617 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.481673042 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.482527739 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.482661823 seconds)
  done (took 33.939991302 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.482502851 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.483659048 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.482997549 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.482676847 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.485312437 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.483191617 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.482217236 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.48465643 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.481613393 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.481975276 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.482928283 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.48221059 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.484457168 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.484181722 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.483163652 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.486429204 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.484802732 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.485662998 seconds)
  done (took 28.067324922 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.483739031 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.483413401 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.484076697 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.484657208 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.484651671 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.484689161 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.484173227 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.483426466 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.484287128 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.484334552 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.483942045 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.484806267 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.483234596 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.485205523 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.483914618 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.484254648 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.484056955 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.484754128 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.48527611 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.484862961 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.485369427 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.484020619 seconds)
  done (took 34.01916317 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.483987761 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.484969553 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.484063939 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.486133445 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.484823071 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.483886959 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.484458966 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.486424161 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.486823948 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.485700814 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.485077614 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.485200778 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.48982895 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.484189507 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.486868854 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.485608794 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.485637004 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.486419343 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.485872413 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.486942364 seconds)
  done (took 31.07771472 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.487565809 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.48669507 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.488202352 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.487604117 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.487654932 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.486527758 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.488286066 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.486060615 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.485970786 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.487483008 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.487034089 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.486497145 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.488305516 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.487437764 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.486586393 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.487554425 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.488365438 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.48736836 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.48778543 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.48699906 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.488432002 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.486919262 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.488725254 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.488357819 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.487767421 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.488083975 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.488854192 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.488830513 seconds)
  done (took 43.019304015 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.507170433 seconds)
    (2/2) benchmarking "in"...
    done (took 1.507291262 seconds)
  done (took 4.382313294 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.489445525 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.487837595 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.488289705 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.489245177 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.48863712 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.489076121 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.489703493 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.489482286 seconds)
  done (took 13.280456163 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.488095775 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.490161826 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.490479959 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.490691079 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.490513549 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.486405149 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.494412136 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.493642479 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.488553515 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.489163753 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.492185955 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.493796266 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.490712122 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.490641377 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.488305558 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.49404476 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.492557061 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.491247869 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.491078705 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.491534215 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.491490361 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.490366947 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.49254472 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.495232115 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.489501125 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.501118483 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.496184042 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.495711864 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.489436707 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.494436213 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.492294994 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.495307384 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.492935743 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.492956956 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.493241593 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.492232997 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.500128733 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.496423088 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.498187752 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.498121348 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.497813668 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.494599902 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.49351551 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.494843499 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.495737274 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.496674285 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.494644927 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.494806379 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.490566328 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.495101034 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.501085843 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.491548497 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.495998947 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.497332891 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.496567558 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.502935482 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.501850333 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.493987678 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.499709917 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.50392251 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.511658905 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.507540274 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.501461969 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.498610436 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.497768486 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.504569232 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.503485716 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.501993306 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.497037231 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.495672228 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.501822964 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.515170498 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.511745538 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.499454989 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.496956577 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.495732616 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.49472714 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.500327912 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.502520821 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.5049921 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.50048392 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.496656343 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.498978447 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.504575503 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.495842892 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.500884243 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.495576018 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.495952811 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.493418883 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.50846173 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.505044257 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.498222928 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.494724228 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.497726572 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.49965425 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.500774014 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.49547042 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.501411417 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.500792909 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.498410192 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.498325984 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.498587591 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.506633455 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.502702163 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.500700327 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.506404417 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.50590595 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.496984653 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.508421963 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.506089776 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.499650329 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.497593966 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.504236636 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.503180158 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.498671714 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.506832957 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.505136921 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.499881032 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.503155841 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.49956442 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.504306038 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.512688726 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.505854988 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.500433771 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.499947189 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.506828704 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.500210102 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.501861342 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.505940915 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.500376077 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.500334147 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.502255236 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.505366392 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.499920676 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.505331674 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.500405479 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.504481897 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.501463265 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.500733577 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.500995784 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.505067793 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.504896552 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.504845379 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.507826477 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.506125839 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.502733719 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.512377038 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.507064497 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.505078245 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.50733287 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.507583193 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.503318816 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.502380826 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.505650207 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.49977301 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.503981203 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.500392021 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.506213363 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.502748876 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.503103332 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.503210252 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.500634274 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.504536803 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.507792905 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.507789301 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.507813035 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.507157309 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.503421616 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.504131407 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.500273971 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.504786198 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.499045345 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.504100127 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.511098317 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.504050545 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.503779029 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.506031168 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.509276309 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.502872455 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.503419968 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.504152336 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.510188748 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.510070529 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.511972671 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.513195177 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.506086448 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.503504286 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.506640415 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.506850732 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.508288534 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.504530098 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.513224891 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.520104058 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.522683172 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.50548624 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.509340324 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.502392851 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.509155852 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.509741789 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.511648129 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.506747006 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.505831552 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.504325159 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.509436668 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.505485489 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.510343825 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.502169589 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.508947198 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.509525923 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.505349337 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.508189939 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.506091782 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.511339559 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.510766934 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.507453189 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.506469333 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.506102316 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.510057641 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.503950367 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.507294197 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.512091657 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.507204466 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.515111645 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.514148614 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.5101044 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.516557261 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.511676278 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.508604436 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.51024596 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.509897685 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.511727904 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.518643884 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.515743933 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.50966653 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.519667621 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.514988922 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.507231153 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.514282585 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.516638542 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.508781234 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.507255301 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.515062449 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.510479144 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.509261169 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.507217798 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.507456437 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.513711273 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.517028651 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.517468891 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.507481419 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.514769846 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.509828065 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.513678427 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.511760653 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.516479154 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.514325743 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.51787772 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.517915909 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.511084563 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.511232475 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.513366902 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.509893391 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.509861453 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.509551432 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.51757336 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.515924718 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.51697 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.513684961 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.512259622 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.514523134 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.509143051 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.511547482 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.511799531 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.530042675 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.52883076 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.520729116 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.519249171 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.517491608 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.517534434 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.51742516 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.512741151 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.513311762 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.515452132 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.513330185 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.512485118 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.515731512 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.512237438 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.51818283 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.516253049 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.517034334 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.516540338 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.512521485 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.510879987 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.516383298 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.512170754 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.51277085 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.509200134 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.516921862 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.515248541 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.519719826 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.516986802 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.514867213 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.525349363 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.521535413 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.517178058 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.517942258 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.514709988 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.512252853 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.517610422 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.520951085 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.514150941 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.520498858 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.514362095 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.520736496 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.515520478 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.52375216 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.522546589 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.514931855 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.52115019 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.514969371 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.510098372 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.513866428 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.516958548 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.523631978 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.524332934 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.513935315 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.518742617 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.514484382 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.515246277 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.517316313 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.515077123 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.516653712 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.516073977 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.525868084 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.523516747 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.518000942 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.523831733 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.524083662 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.516847818 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.51678138 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.511945669 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.525899631 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.524499249 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.517073129 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.52229506 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.51863876 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.519586103 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.516978813 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.517990799 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.517101198 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.518363239 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.525758446 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.526613375 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.520964591 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.517199692 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.526522712 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.525499381 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.525809982 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.527928698 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.518332023 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.524765051 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.518724341 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.518106855 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.519444457 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.520130387 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.522072266 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.515048221 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.524974871 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.51777667 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.519686131 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.524450775 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.526650089 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.5156097 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.524070647 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.530177883 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.516535798 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.522780769 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.520046134 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.516560819 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.523374936 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.519611727 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.516680262 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.520647451 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.524089027 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.528053219 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.517721074 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.523030688 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.519400625 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.52359524 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.51995257 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.521178724 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.518942117 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.520956043 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.517184568 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.522163745 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.527216652 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.52875298 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.520171416 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.526202888 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.52111209 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.531692683 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.52899317 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.520903454 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.526565806 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.522549302 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.521874904 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.524816725 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.526509218 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.521324461 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.525948363 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.520346119 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.523829013 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.524728799 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.528216185 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.528745708 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.526539495 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.519803979 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.521909868 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.525604077 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.523815746 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.524125117 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.5248937 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.529731048 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.521633849 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.520448496 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.525376016 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.522995523 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.529564585 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.522740907 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.526700948 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.527278401 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.527071417 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.524605497 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.524423941 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.521749602 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.523914049 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.53529439 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.532628166 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.528393717 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.526078637 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.527210842 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.523681329 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.52689151 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.529801648 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.526185577 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.526670883 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.529397773 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.525618085 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.52490572 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.527600503 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.527323243 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.534514408 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.531432454 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.524725452 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.537159797 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.536438641 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.53288824 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.523243374 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.527907181 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.528018068 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.527569158 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.526110074 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.523802809 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.53634736 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.535987016 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.529685877 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.52949468 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.530721267 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.522784955 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.529572639 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.527687855 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.527600798 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.535992086 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.527698565 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.53423369 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.527485065 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.527897326 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.523173374 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.526690901 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.528649294 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.529832857 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.529993132 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.530954233 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.533691715 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.53085242 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.532938295 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.52829546 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.528029803 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.530004784 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.525232195 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.530544972 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.526175207 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.533901716 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.533284634 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.527471919 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.531548596 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.53004292 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.528800438 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.534040715 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.536344136 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.529105141 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.526975443 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.533256037 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.537865859 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.537364394 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.528243909 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.528498943 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.533351944 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.533451111 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.529372309 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.528632092 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.527913753 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.547321057 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.541733774 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.529140231 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.532801373 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.539584784 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.53805106 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.530316942 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.532210118 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.532674193 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.53492521 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.536488182 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.529874154 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.539482555 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.538794008 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.531271581 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.53481282 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.529742653 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.535260071 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.537125274 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.539052926 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.531302003 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.531627407 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.546136176 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.54023634 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.534311468 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.550517263 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.541491548 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.537777213 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.535911019 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.528278128 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.533642607 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.532204936 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.537758244 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.532778539 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.533132556 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.531436899 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.529464131 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.540532947 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.543329616 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.544230033 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.533467249 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.531150642 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.532071147 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.535007138 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.53205686 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.535864046 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.534128533 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.533246676 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.533324303 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.533549139 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.554109004 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.554285006 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.54055446 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.534570127 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.535623459 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.537330481 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.542405189 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.539465518 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.541352102 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.534010355 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.533610246 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.537981756 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.543294211 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.537375921 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.534655789 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.536562009 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.534324412 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.541322177 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.55004889 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.554239006 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.540992761 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.54245324 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.535291985 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.535280897 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.535465868 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.537997701 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.535894064 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.5365041 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.537001401 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.540461995 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.53814326 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.535483202 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.534700057 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.542878958 seconds)
  done (took 905.09594051 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.535096568 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.53647266 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.536027751 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.537721709 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.536250167 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.536900725 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.535928695 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.536646945 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.535731175 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.537800456 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.538903529 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.53793569 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.536183941 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.536680601 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.537461996 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.53813734 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.535982268 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.537461934 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.537539902 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.537559309 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.538338591 seconds)
  done (took 33.68499508 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.538130596 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.537761513 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.538339926 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.538571286 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.538293593 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.538707403 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.538572806 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.538403371 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.539420898 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.536507203 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.539680562 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.538700977 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.540037155 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.539632351 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.541840864 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.540550401 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.540552429 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.539216405 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.539862271 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.540372756 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.540381826 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.541183327 seconds)
  done (took 35.275460927 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.539206192 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.539476594 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.537340487 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.544337446 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.540520581 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.541459138 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.540175079 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.54176076 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.541703066 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.53790631 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.538603754 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.537908704 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.54262608 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.546757523 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.541916317 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.547478283 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.539175657 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.53967217 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.541308588 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.540848355 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.548629576 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.550495331 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.542046977 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.53888707 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.543864638 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.542834427 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.540756206 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.54137398 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.539816966 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.54543319 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.542606616 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.539940249 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.549285355 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.54644656 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.540818196 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.546421942 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.541968652 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.541649566 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.542064186 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.546109621 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.554738278 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.542955448 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.554126383 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.553316944 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.54402604 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.542298455 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.549392772 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.544175227 seconds)
  done (took 75.489876188 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.544400167 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.544303005 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.543901213 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.544418487 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.543701119 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.544248329 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.544178398 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.54328645 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.544797917 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.544051485 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.543721299 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.545426058 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.544984392 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.54504167 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.544487421 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.544064519 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.545671479 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.546011331 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.545244113 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.545153893 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.545339108 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.544947472 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.545287369 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.54530467 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.544913796 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.544576699 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.545805696 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.544698606 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.544968423 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.54462109 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.545050173 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.544525241 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.547149047 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.545801236 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.547007838 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.545710807 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.546210301 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.546454243 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.546911291 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.546500173 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.548218394 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.547020094 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.547059371 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.547340435 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.547624164 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.546640305 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.54683689 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.547739784 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.547455991 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.547563764 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.54812597 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.548935635 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.547638902 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.547775576 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.547273697 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.547102413 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.547944033 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.548654677 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.547037633 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.547783639 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.549632653 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.548180926 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.549070893 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.548186129 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.548620508 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.548625462 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.549124482 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.548642149 seconds)
  done (took 106.563392751 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.549260123 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.550104579 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.549748276 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.54847924 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.549343428 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.550043023 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.549674889 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.549659388 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.550012714 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.550708208 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.549203367 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.550313721 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.54853918 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.551102242 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.550305888 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.550955107 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.550826116 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.55128482 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.550406378 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.551543251 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.55046188 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.551143818 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.550451739 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.551618813 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.550486004 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.550519846 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.550639003 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.55066141 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.551355014 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.551120167 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.550802287 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.551266698 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.55115737 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.551187606 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.551306733 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.551261949 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.551333925 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.550444795 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.553105232 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.552659831 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.551019488 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.552199224 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.551324484 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.551406247 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.551913707 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.553011183 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.551833739 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.553016804 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.553330342 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.553855749 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.552394433 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.554074461 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.552450681 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.551948829 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.552639186 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.554774753 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.553403012 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.554155948 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.553397551 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.553865099 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.553902491 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.553847591 seconds)
  done (took 97.610452813 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.553217635 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.555001057 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.554271622 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.555577051 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.554014295 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.554283637 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.553625834 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.553250604 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.553694584 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.55475558 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.555230121 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.554614811 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.55342721 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.555834326 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.555384004 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.55419577 seconds)
  done (took 26.293400913 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.554496296 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.555755379 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.555794 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.555841436 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.555641539 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.555642377 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.554046484 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.554033879 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.553837917 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.554120243 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.554954138 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.556067599 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.555157915 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.555329266 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.555360564 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.556952225 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.556940394 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.55496166 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.556262069 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.556350126 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.557487031 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.555690613 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.556794117 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.555558405 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.555763231 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.55693022 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.55523286 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.556463481 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.558733844 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.557115073 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.556669893 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.557491414 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.55715488 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.557522423 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.557461554 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.557559309 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.557544015 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.557147206 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.557460959 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.557282114 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.558136138 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.557589332 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.557654989 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.556378188 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.558756437 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.557900027 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.558646815 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.558886422 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.557930062 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.559528615 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.559284109 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.559686059 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.558637599 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.560541658 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.558783195 seconds)
  done (took 87.051485321 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.559013471 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.558774274 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.561074932 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.559693658 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.560026581 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.560309668 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.55826397 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.562101461 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.559354907 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.559318388 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.55947707 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.561115655 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.56022884 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.560573179 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.560813351 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.559351466 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.560694969 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.559571041 seconds)
  done (took 29.508197403 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.559981016 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.560693276 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.560048746 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.560783863 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.561728011 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.562722508 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.560153117 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.560337231 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.561612121 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.560842692 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.560898868 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.560672386 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.56159264 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.561596329 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.561868127 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.561066169 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.562383515 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.561987191 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.561254947 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.562186995 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.562279796 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.560754609 seconds)
  done (took 35.777148102 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.556011417 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.555613632 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.555610982 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.571028349 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.56866604 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.557945409 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.556139129 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.557367143 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.574138663 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.580662628 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.579533783 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.566333601 seconds)
  done (took 20.208885933 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.563064974 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.562244658 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.562059908 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.562462533 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.562965104 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.563172173 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.563026669 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.562560482 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.563178935 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.564713163 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.563008462 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.566177306 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.563879343 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.5632799 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.565018346 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.56371922 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.564097708 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.564996872 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.56290123 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.564634732 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.563872265 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.565125054 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.56593675 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.565055988 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.564607548 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.565010434 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.56531485 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.564938386 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.564940757 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.565112226 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.565036077 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.565328373 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.564900083 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.565333979 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.563707407 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.564894159 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.565985201 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.56520346 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.564389585 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.565703716 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.565990602 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.56560911 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.565935529 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.56511604 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.565545732 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.564782398 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.566381802 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.56609059 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.566964385 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.566449559 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.565977642 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.566856077 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.56694769 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.56707762 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.56558661 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.566463811 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.566161142 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.567290782 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.567302073 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.567588363 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.567392831 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.566928391 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.568031414 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.567219694 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.567179614 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.567834112 seconds)
  done (took 104.736346258 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.567592823 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.567089026 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.568605485 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.567889982 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.567961203 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.568552301 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.568642065 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.568536482 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.56752009 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.569692193 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.568014289 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.567995927 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.569357043 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.570220485 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.570282981 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.568412037 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.568961484 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.569591504 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.570045675 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.568825584 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.569047228 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.569518 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.568889292 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.570080279 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.56962992 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.569845725 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.56932998 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.569005774 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.568565957 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.568666273 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.569236897 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.571507233 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.570745997 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.570058757 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.569682392 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.571647574 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.569384771 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.570654612 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.571024304 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.570892009 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.57055179 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.570964151 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.570285615 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.571644256 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.571594683 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.572324663 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.571780576 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.571392363 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.570975564 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.572292822 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.57097299 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.57200038 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.572512864 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.571361582 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.571917241 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.571368844 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.572091473 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.571317869 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.572204066 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.570842871 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.572536937 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.573119847 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.575163872 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.573057863 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.572769902 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.573348456 seconds)
  done (took 105.079414107 seconds)
done (took 2004.88058248 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.732797279 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.700689591 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 2.65478764 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.584865069 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 2.613321286 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.585910292 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.578816243 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 2.207629033 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 2.251441472 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 2.018490626 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 2.596628411 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.781087928 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.651699649 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 2.502158472 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 2.655299328 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.675444808 seconds)
  done (took 38.231416767 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.600217026 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.577149901 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.709504082 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.572062903 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.602493693 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.791843029 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.647672534 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.574813584 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.776339702 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.584261099 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.570410321 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.599806723 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.575369101 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.566261957 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.59403218 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.794640191 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.890731946 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.578872598 seconds)
  done (took 34.047168937 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.104184461 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.580556642 seconds)
  done (took 6.124732201 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.595430065 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.574351515 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.576108085 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.574789436 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.565845491 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.565362004 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.573290922 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.572024461 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.566122333 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.72469686 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.576616875 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.589949369 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.575157997 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.575052602 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.57682789 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.624987474 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.709321174 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.579567074 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.576475479 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.581349138 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.5748036 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.678673848 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.622442763 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.579799634 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.724867288 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.587119285 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.587589068 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.584056928 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.704001817 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.580820146 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.574996002 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.576336353 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.578097401 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.568515867 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.167218896 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.582596277 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.604361642 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.583971814 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.581073451 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.739216685 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.578040597 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.582682311 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.567207284 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.134128723 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.687397517 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.71128519 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.583423781 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.587368549 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.577904985 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.651589379 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.578517275 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.578882764 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.643937993 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.440075182 seconds)
  done (took 98.98812507 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.584777232 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.568438088 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.495293802 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.580913639 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.574433985 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.579986307 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.573074206 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.916337101 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.586713618 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.569383744 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.917917412 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.589157672 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.570039648 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.621079074 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.690135877 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.622475813 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.57112478 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.570458402 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.570528227 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.574804223 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.570995402 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.582373453 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.577758974 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.774670327 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.616354325 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.57096127 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.58081058 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.570981783 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.57163994 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.570876459 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.58795765 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.577322709 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.658738097 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.570906302 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.885087515 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.602850005 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.571224804 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.578450797 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.617500159 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.574015552 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.582373654 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.183891678 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.581742135 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.571621985 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.573559242 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.178685956 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.573728278 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.586404331 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.577687944 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.556465755 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.584261323 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.58585228 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.586991287 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.572483213 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.57336062 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.639447633 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.623439533 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.572817938 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.572662704 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.57165758 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.593789239 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.572988505 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.577970446 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.577171145 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.577260732 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.590785454 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.862112095 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.586569377 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.581203843 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.586085049 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.572989266 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.59159493 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.573482234 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.575906686 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.777055589 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.585701887 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.592975993 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.574186068 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.578853852 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.575295449 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.575589797 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.576007059 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.913308226 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.594590626 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.583817244 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.594748011 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.586766203 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.646560618 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.575411305 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.598500117 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.574889637 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.579606754 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.917599259 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.615892501 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.576783626 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.576790216 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.620502446 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.57575669 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.57727422 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.579818768 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.575441443 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.593572975 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.576430978 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.579747867 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.576300923 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.576549604 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.579392919 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.579084976 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.576385164 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.607202817 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.578951619 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.577141884 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.592195855 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.579370015 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.782551993 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.585085754 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.942589054 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.59121564 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.589654426 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.5853043 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.577738035 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.589826122 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.57856092 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.582825158 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.578478077 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.936755087 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.598141395 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.578725807 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.581649338 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.579099029 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.5801755 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.579453432 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.620660942 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.58217511 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.579177665 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.612010935 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.604162926 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.579466643 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.580865558 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.579445635 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.589314562 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.5799765 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.580781889 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.904902585 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.829145947 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.584703403 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.580528608 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.579555037 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.625686614 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.494815307 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.591456211 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.579625142 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.890898783 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.794385679 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.581309472 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.580883177 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.582465253 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.580693818 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.592421972 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.580853539 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.581921718 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.580782128 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.590235975 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.580784855 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.582472892 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.589229579 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.582483173 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.911681183 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.601709012 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.582511224 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.594069277 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.584218142 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.582817633 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.606512984 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.596945511 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.58195874 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.581104588 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.788563928 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.522512547 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.582783282 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.591776714 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.581889836 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.596326564 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.583135794 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.588270795 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.584672832 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.593678041 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.622857554 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.587735665 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.614561004 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.582126122 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.591596887 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.254599976 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.582350218 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.584159377 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.523286641 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.594505444 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.594344564 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.583345941 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.584966605 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.622128049 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.58436864 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.606711804 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.966177406 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.588817087 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.629151377 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.584484574 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.621904461 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.586055194 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.590880065 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.584322442 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.584587165 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.584507951 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.385273237 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.597676244 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.587039985 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.584991787 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.607349555 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.589100022 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.585951541 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.585850873 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.603209584 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.596533801 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.633850884 seconds)
  done (took 573.512198402 seconds)
done (took 752.348015991 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.585184675 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.599254873 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.598609314 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.597275122 seconds)
  done (took 11.840217108 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.599190448 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.59315698 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.597602372 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.592102512 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.599400183 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.592848348 seconds)
  done (took 11.036275697 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.586280912 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.597461948 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.596944978 seconds)
  done (took 9.242495873 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.832255891 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.600770445 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.012415096 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.588403678 seconds)
  done (took 10.49641904 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.598716977 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.597739983 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.598361919 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.599663103 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.601177361 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.600474661 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.600551549 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.599796812 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.600437487 seconds)
  done (took 15.857742421 seconds)
done (took 59.937879512 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 1.66894713 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 1.665288943 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 2.598580636 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 1.625745616 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 1.721059607 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 1.672769426 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 1.678361987 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 1.678190811 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 1.672852278 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 1.625063098 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 1.668959388 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 1.618646264 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 1.667016795 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 1.791140139 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 1.628184515 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 1.670605491 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 1.615108619 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.766141414 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 1.673716223 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 1.626212861 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 1.698044225 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 1.623574861 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.626478883 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 2.59242733 seconds)
  done (took 43.338071795 seconds)
done (took 44.805474769 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.626255834 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.689932614 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.597146563 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.597771806 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.6003176 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.589508107 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.621082687 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.600199079 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.614936833 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.613774047 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.590541401 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.610798805 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.614264627 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.610535447 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.633139968 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.599333841 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.600197566 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.609083961 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.615992959 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.618836235 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.601460067 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.603434508 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.627511292 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.599557999 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.608820996 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.608950564 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.605759169 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.592948261 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.609535659 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.616656956 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.600401558 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.60577746 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.617044102 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.612247546 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.603256147 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.611509471 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.602289869 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.692627445 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.622327524 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.61346031 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.609738787 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.618946445 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.607454606 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.605928919 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.614315388 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.630443628 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.609642654 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.616400872 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.600785581 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.605958866 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.622830786 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.613255042 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.610355747 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.608035961 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.598146136 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.61703266 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.613179343 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.623434006 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.609543664 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.60490479 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.636791044 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.623641152 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.61652312 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.611196038 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.610146797 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.618624055 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.612589042 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.621648577 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.611085591 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.604792719 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.605998964 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.611935156 seconds)
done (took 125.617206329 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.728698654 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.601380088 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.757262879 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.607193166 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.772290705 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.728108811 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.60685322 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.609443904 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.608843843 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.413419653 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.608300784 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.609861861 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.603056903 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.607935774 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.725093701 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.609720508 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.609873823 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.310680963 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.609949246 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.741195748 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.603759937 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.608985773 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.609453623 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.408163149 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.604023982 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.598648898 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.741914085 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.610572143 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.306909695 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.599021245 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.600973268 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.307817385 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.741033404 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.628973395 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.619404446 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.618816932 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.775197884 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.614711767 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.730281597 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.729817627 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.761017 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.648926234 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.599148804 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.604625878 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.614060909 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.611709786 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.610135239 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.639739384 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.604906439 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.610104113 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.315228738 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.620816975 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.621670778 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.612201052 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.611857916 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.630570614 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.611965779 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.612221183 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.743325495 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.611979849 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.732407022 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.411822534 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.416372629 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.612103255 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.604472306 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.613140117 seconds)
  done (took 126.685936053 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.677775479 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.6851004 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.730154701 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.61130135 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.658262522 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.731724309 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.609512069 seconds)
  done (took 13.178342134 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.616041583 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.612619956 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.658090231 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.657126233 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.612720702 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.782305655 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.612698287 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.619967015 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.613330355 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.661937053 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.612968137 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.614387953 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.623266765 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.610106573 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.656712503 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.620528302 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.728843277 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.610852048 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.615122927 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.763202589 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.614198457 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.624068193 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.659880017 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.621628302 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.614288574 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.61668004 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.369081851 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.614270889 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.615539642 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.6147866 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.613463507 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.674404734 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.616421445 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.609567862 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.613995383 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.725904344 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.615128026 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.614568219 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.615768984 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.611474924 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.616434782 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.616594521 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.616854207 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.615211102 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.615023463 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.636155313 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.616857323 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.617020903 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.616778391 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.616693712 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.662115104 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.616902672 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.61615716 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.6171935 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.666448857 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.626201511 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.617025786 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.61702016 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.61805775 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.617629897 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.76461717 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.659010603 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.617965388 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.65951439 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.617558688 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.617988534 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.618005041 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.618691001 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.703266062 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.618916983 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.661412228 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.61689301 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.794404328 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.638653314 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.619684583 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.616756579 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.616622851 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.61824492 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.610282405 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.620664038 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.618077449 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.615844877 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.620815674 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.618920062 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.619065648 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.773838194 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.723492392 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.618436044 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.63112373 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.62242258 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.619644908 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.665991847 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.619626392 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.620263369 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.666170721 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.734108016 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.667833561 seconds)
  done (took 165.079014536 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.628293743 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.629452123 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.621138117 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.643509006 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.618286707 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.617062955 seconds)
  done (took 11.239022342 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.618116028 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.624747603 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.621659199 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.621838301 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.621703123 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.622464974 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.621870783 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.619055973 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.624774105 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.623674965 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.620213987 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.62349398 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.622314672 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.622611853 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.623057304 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.623814566 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.621784463 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.621214636 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.623527095 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.623471636 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.614212201 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.623281251 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.622007414 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.621003223 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.627472471 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.623166807 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.643739323 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.622765523 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.62299255 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.626152499 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.628800126 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.623892568 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.621684227 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.624135547 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.624888966 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.621245426 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.627770592 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.623909684 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.624126006 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.622523839 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.62486066 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.62420297 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.622398725 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.624435591 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.620952246 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.625991815 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.628719403 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.645229914 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.624895284 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.626016899 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.625761783 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.624788329 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.624984741 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.625817459 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.623568469 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.625376134 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.629207482 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.625440836 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.62467995 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.622248054 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.63032402 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.62678678 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.62351138 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.630338 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.626263733 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.626544386 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.622748508 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.62990213 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.626814782 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.626836826 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.626904237 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.626567234 seconds)
  done (took 119.461455685 seconds)
done (took 437.117481548 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.95323872 seconds)
  done (took 4.439795905 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.80672978 seconds)
  done (took 4.293812742 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.512476964 seconds)
  done (took 26.316158081 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.64532879 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.620167272 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.649121565 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.621294136 seconds)
  done (took 12.021312133 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.176025315 seconds)
  done (took 4.662444382 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.620312608 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.635038183 seconds)
  done (took 6.742794216 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 3.007076114 seconds)
  done (took 4.492766926 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.361044985 seconds)
  done (took 4.858001668 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.641069687 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.628749714 seconds)
  done (took 6.762163403 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.602160719 seconds)
  done (took 4.088698559 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.017301526 seconds)
  done (took 16.503538463 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.633378185 seconds)
  done (took 4.122037773 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.661996987 seconds)
  done (took 4.148817674 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.726809123 seconds)
  done (took 7.213824189 seconds)
done (took 112.15686149 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.616061583 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.629986335 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.62823547 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.625775593 seconds)
  done (took 11.987516992 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.691805314 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.692782131 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.702444334 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.686951758 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.684854214 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.695523411 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.654377001 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.654944273 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.685370654 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.681149374 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.698499762 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.686139799 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.695834993 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.657303305 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.679680053 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.698807402 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.685048482 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.701721593 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.663290722 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.687207069 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.630250886 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.688736632 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.682223099 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.631952693 seconds)
  done (took 41.806449502 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.146583102 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.698230907 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.778513482 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.676802796 seconds)
  done (took 8.789534786 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.73386466 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.735537173 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.757032922 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.793328122 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.836723519 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.751004941 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.658616157 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.652222126 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.638822323 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.737139756 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.810211212 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.735041663 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.95290861 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.631508068 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.951298632 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.631121069 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.631437204 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.735814876 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.785958033 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.815958679 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.63227343 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.7356784 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.740210282 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.736102923 seconds)
  done (took 43.309414051 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.640048211 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.647608563 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.634130924 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 1.633658245 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.633990767 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.634492557 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 1.648863622 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 1.636025893 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.641236945 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 1.632643721 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 1.634006428 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 1.634940945 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.648236889 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.634497578 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.634149135 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.640259097 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.635733167 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.641442753 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.64459114 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.634763854 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.634587427 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.64146979 seconds)
  done (took 37.532913211 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.622549718 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.622452448 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.975335878 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.878745041 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.623179879 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.624193302 seconds)
  done (took 15.837146535 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.713247089 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.864258988 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.630728914 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.056807536 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.140868205 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.631229732 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.631968499 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.910569891 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.302647937 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.312335879 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.694451995 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.712802853 seconds)
  done (took 24.095844339 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.71277831 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.630375844 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.649573603 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.67692212 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.629863282 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.631048321 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.691330832 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.155745321 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.637796706 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.905272593 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.642308314 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.723826457 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.879565788 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.635591729 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.640866888 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.610097396 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.869751415 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.201043428 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.632638935 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.636419995 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.67484687 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.648475516 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.639688972 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.8963413 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.631875099 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.630668087 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.892482454 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.630508683 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969559734 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.949505669 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949712164 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.641654535 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.908039642 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.133668726 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.752359675 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868621073 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.647812241 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.633035514 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.633912861 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.655133693 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.65418075 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.648703799 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941737018 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.637965149 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.63361298 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.650590376 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.177786224 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.641631151 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.634339181 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.634103244 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.945133195 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.727305704 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.64006236 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.633841646 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.632264351 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.635167113 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.639510026 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.756458638 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.272313013 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.634745257 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.654354736 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.643696475 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.656215285 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.634876923 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.367238681 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.641158876 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.64047659 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.639607111 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.633761982 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.652177968 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.666030529 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.634660016 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.654420802 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.63425968 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.538083057 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.653472112 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.645221889 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.259327295 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.647717326 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.643161052 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.863537373 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.635239599 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.635649935 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.636290277 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.634287862 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.551203592 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.653059832 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.614551636 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.679289078 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.163987475 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.876940413 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.658787518 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.666746996 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.860007628 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.615385987 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.638183514 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.637372683 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.672410407 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.659178854 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.169440084 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.637489635 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.643327018 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.887114212 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.850714682 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.636777756 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.628476319 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.197188944 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.661853486 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.664455875 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.638233419 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.887321327 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.35447563 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.971299109 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.649703502 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.699717414 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.638527958 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.61451132 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.65294168 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.64430424 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.63873644 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.983751597 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.622564675 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.648822196 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.713088993 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.640721642 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.638931446 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.652767364 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.651290793 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.640088627 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.869227536 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.646933884 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.953785253 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.650946911 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.640664321 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.640764207 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.664866278 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.64287566 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.864696428 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.640336783 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.915646354 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.640641844 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.640353176 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.640601673 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.860333664 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.651431616 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.648352058 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.983913241 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.646940178 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.64695131 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.953665421 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.677089883 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.753842887 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.675371601 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.647058301 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.892734289 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.647055616 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.648432341 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.642160268 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.64367888 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.646004148 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.650442099 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.666076255 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346528218 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.635180982 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.645838268 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.64248941 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.658618251 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.71589978 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.650983354 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.885798342 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.644246486 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.645708905 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.652373185 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.651451406 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.868020649 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.95655182 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.645173475 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.840928588 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.177053937 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.345981787 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.661210723 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.642616271 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.643598524 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.643870957 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.644982152 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.642676023 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.644260027 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884382959 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.96685853 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.669213883 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.351884089 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.647904563 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.64506987 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.65288834 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.959121428 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.655428672 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.644531307 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.661509229 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.645019495 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.654269925 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.968197835 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.867014509 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.662247434 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.643691143 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.163989234 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.653116152 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.645060466 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.645785247 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.672185815 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.644546979 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.262239227 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.988919983 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.667058284 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.96349082 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.647966277 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.6667377 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.645744831 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.658001487 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.656005845 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.662914982 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.656409753 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.894076955 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.649241569 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.649650647 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.286762566 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.581374816 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.292679452 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.653857064 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.648968511 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.655465737 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.183277424 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.648032718 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.648124465 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.930564876 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.181867385 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.64970672 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.182233156 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.659845873 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.54547965 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.966853836 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.880381185 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.651601049 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.658249996 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.968395067 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.865836616 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.67718319 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.648106041 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.679262527 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.627826642 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.266166699 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.651729121 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.830750276 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.187295581 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.658060898 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.651330942 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.71029532 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.67279485 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.138105211 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.65470358 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.649303891 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.649137097 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.687024389 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.271248078 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.656129918 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.650644852 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.390632039 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.653379326 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.199069282 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.651169226 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.896994187 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.96983361 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.954600689 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.66185987 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.65004493 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.897126776 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.970812262 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.653172994 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.651306592 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.321117729 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.517942017 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.660161156 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.652931577 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.635695278 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.653272495 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999012368 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.653495633 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.659708023 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.674782051 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.653024196 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.653061594 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.653432591 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.659064874 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.640322713 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.234249857 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.661534001 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.678836981 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.661553743 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.662853882 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.904478098 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.671132887 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.361504257 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.8845781 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.652251453 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.688826363 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.658764104 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.663224075 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.63513831 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.654739293 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.653212404 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.729356242 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.877358955 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.673410261 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.63498729 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.70099312 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.866948331 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.655913194 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.663892693 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909724084 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.654999114 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.666527167 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.596920763 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.687269114 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.667652019 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.657140751 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.654512261 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.692382746 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.729615849 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.901683653 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.973631784 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.974594465 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.140901748 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.674898487 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.659382777 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.670454019 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.737971441 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.672033195 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.658197697 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.655220673 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36458025 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.602860366 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.373816876 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.980973597 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.659356951 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.666057996 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.656087361 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.898881194 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.658903134 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.93273593 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.657265556 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.678370606 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.67962631 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.672783459 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.674894694 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.872772568 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.931566997 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.656707782 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.660260764 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.664762556 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.657130652 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.982700712 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.872759153 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.241694487 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.306913389 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.660336135 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.672536614 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.201144637 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.934289852 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.658417141 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.659947202 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.658576784 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.677503784 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.6816854 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.67242117 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.674721948 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.884684583 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.977907073 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.156892795 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.977130039 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.686374876 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.533929032 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.672427724 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.909169342 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.490138766 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.907688943 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.3753567 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.483085199 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.91741541 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.736584208 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.910496902 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.662813341 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.899680924 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.671151349 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.661275959 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.659613831 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.659569416 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.659905309 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.977697932 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373780123 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.920372569 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.666014393 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.67225006 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.689741499 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.90830252 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.887433692 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.584913089 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.89391851 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.98502724 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.678922331 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.662478586 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.35194552 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.990351166 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.672706341 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.668203228 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.916832804 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.664555065 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.698772795 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.53822132 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.661987016 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.316210766 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.887064271 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.683613829 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.672125665 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.485426706 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348412275 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.672486506 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.251630885 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.673180919 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.678959815 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.939752442 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.672966821 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.678439959 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.951015256 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.668685181 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.680636257 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.915261294 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.374388073 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.57280938 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.68938444 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.669685858 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.673760332 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.66569609 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.742441021 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.664718655 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.667680771 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.147341883 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.671089704 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.663565073 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.677433288 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.678278845 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.675456641 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.664526463 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.666703645 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.674486307 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.644397914 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.664412006 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.689136698 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.788278838 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.287046571 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.667177681 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.284410732 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.003452671 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.916846253 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.674216907 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.64423602 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.671994244 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.666641111 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.666497468 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.665105502 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.663696992 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.312309178 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.682808741 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.998222049 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676442536 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.879349719 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.880706485 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.676776999 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.928307414 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.674336032 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.697873369 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.646612597 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.668380017 seconds)
  done (took 1120.016722882 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.703398835 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.733663407 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.67996617 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.769780513 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.728198025 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.740027992 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.684496448 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.735839458 seconds)
  done (took 23.302407736 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.673226606 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.68119886 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.675759519 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.674059191 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.667265166 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.218890249 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.674516618 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.683779425 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.68768108 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.680583105 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.678976503 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.391486436 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.674777179 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.673033008 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.682243676 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.683206889 seconds)
  done (took 37.639156615 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.815358451 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.871842468 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.235972273 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.757763667 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.70315678 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.66851696 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.068336937 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.688498203 seconds)
  done (took 30.33801778 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.6804532 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.68098785 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.681578104 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.681701129 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.682034892 seconds)
  done (took 9.934392046 seconds)
done (took 1406.08157301 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.677484376 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.677922445 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.676716647 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.677664455 seconds)
  done (took 8.23793225 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.648309533 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.64923544 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.65008551 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.672650637 seconds)
  done (took 11.150436241 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.113148544 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.343632454 seconds)
  done (took 5.985927175 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.673038885 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.4364818 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.421249001 seconds)
  done (took 9.06099449 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.989865489 seconds)
  done (took 3.518524936 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.073058079 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.148510405 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.670298034 seconds)
  done (took 8.423011894 seconds)
done (took 47.910087499 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.666668007 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.435985708 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.84098042 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.668447278 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.866547794 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.840699474 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.922644497 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.674462064 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.681676584 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.667950535 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.666929342 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.849193725 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.90924278 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.438387247 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.910174861 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.436592198 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.850220408 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.667806344 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.66880115 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.678485679 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.905116444 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.681467427 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.686013125 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.667818851 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.848699686 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.831334919 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.666992994 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.438163626 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.668409444 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.673635953 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.83353168 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.668372994 seconds)
  done (took 92.442956964 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.682009851 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.685559136 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.670513833 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.668237559 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.670960252 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.669094946 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.67040618 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.66958749 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.674798303 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.668473272 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.670362775 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.668948072 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.670015033 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.671342738 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.670820287 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.670770825 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.670286748 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.670238141 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.670078273 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.690007379 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.675077504 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.686158709 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.689151265 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.677335329 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.682918554 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.670950774 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.675515541 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.670199418 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.671976066 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.671153649 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.676857894 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.671736817 seconds)
  done (took 87.103831916 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.671549008 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.67206746 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.6735114 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.677858457 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.671127026 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.67428823 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.674999364 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.672316727 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.671749224 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.671780969 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.680257402 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.670764737 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.675090551 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.672708429 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.673210468 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.672942645 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.672830377 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.69393305 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.690953409 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.673039585 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.675199207 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.6878948 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.673069146 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.671697609 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.685934005 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.673331838 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.674296714 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.681246866 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.674249215 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.673821133 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.675730316 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.673771227 seconds)
  done (took 87.162506174 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.909445996 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.684990483 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.68799587 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.679264164 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.688161928 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.685080278 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.67992041 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.918235128 seconds)
  done (took 17.469319078 seconds)
done (took 285.71490644 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.678919791 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.680916545 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.709289234 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.680564544 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.704159723 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.708339594 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.912303782 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.709754344 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.903591659 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.691034119 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.701763893 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.697512656 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.638370279 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.82778749 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.692119119 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.682232782 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.698789335 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.676841477 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.6826762 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.935299567 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.710903511 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.691407829 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.699624967 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.688582876 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.6627263 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.760614564 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.762364513 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.850723151 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.811301616 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.761121185 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.680846389 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.683735156 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.704896059 seconds)
  done (took 76.619417704 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.685884611 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.690537538 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.689127542 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.689872651 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.691899849 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.690393645 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.692648439 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.689624372 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.690728015 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.691136608 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.689128954 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.692085476 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.690881265 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.690502144 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.690646348 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.673705889 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.685925212 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.690750395 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.68575295 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.674007473 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.690157499 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.6914534 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.690580506 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.689836112 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.690490935 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.691198479 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.691054161 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.692785297 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.691042448 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.690916291 seconds)
  done (took 52.216206776 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.692378271 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.681219384 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.703035826 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.695357435 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.688368892 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.693318491 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.041171252 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.694438205 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.692477681 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.693109878 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.698105501 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.695669374 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.745135481 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.683396355 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.691028997 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.693854452 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.692936137 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.690444377 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.681746285 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.70577301 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.050123454 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.695204816 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.042736251 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.706325802 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.694693733 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.69235814 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.695212373 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.683166941 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.69217063 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.700249477 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.662338323 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.042365314 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.682791637 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.682958092 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.667477404 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.700911309 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.695451607 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.683800448 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.694329228 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.692734292 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.041101412 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.692389559 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.683668365 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.682721646 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.694361463 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.694225368 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.683754672 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.706168978 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.988322782 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.698736573 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.685178564 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.696185832 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.699350371 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.694927715 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.990799894 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.697032282 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.69359878 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.690065633 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.700728893 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.044144803 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.698585747 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.694915676 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.687388091 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.693764688 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.687530987 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.697435642 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.708912423 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.696402282 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.690985366 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.696645754 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.686798772 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.695632996 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.699445359 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.703220923 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.687412388 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.706657785 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.696401091 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.687458222 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.696305872 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.041825617 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.700832662 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.687202132 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.077448391 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.699437739 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.703145853 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.701844657 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.698384318 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.765212909 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.04237609 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.659509421 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.708997621 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.688031801 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.047701649 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.704491954 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.698121902 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.694812801 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.700682096 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.698421778 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.688000393 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.689105593 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.697796471 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.71062212 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.688939292 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.700963053 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.049539578 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.70288784 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.689201288 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.698149939 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.767672533 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.70110228 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.710435209 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.702820933 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.058619083 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.702293029 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.701179283 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.689230675 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.692011975 seconds)
  done (took 242.785167239 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.700506046 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.697803314 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.710076598 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.695406472 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.689019376 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.699388926 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.69118413 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.692595587 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.697602761 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.690828893 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.696677261 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.702276483 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.700389912 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.691888415 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.697088169 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.692533837 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.690542209 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.697173609 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.695025667 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.693184743 seconds)
  done (took 51.4720608 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.701967726 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.376083923 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.350308707 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.704354541 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.70313413 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.700546316 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.767419691 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.705871216 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.702401204 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.061488763 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.914464812 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.70634988 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.702899732 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.702999934 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.350228023 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.704350887 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.063951603 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.375566534 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.704684259 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.375317521 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.70573336 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.704667371 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.698544071 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.377504598 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.0697089 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.052197521 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.770209906 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.380703845 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.705652183 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.705756565 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.37806284 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.706568992 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.702682533 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.36950879 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.706771309 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.719105091 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.705759324 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.772459563 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.773543157 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.06855926 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.386796737 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.057195022 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.717684308 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.891259017 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.708326436 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.686674951 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.387888962 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.707062291 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.689445194 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.709093645 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.712387256 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.364241335 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.704996649 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.361891073 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.707535445 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.707934284 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.382789344 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.362029981 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.360002245 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.917463907 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.707887664 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.054950182 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.707189006 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.389072668 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.709228096 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.707493619 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.70812283 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.916094514 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.384256239 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.057352857 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.070752801 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.0698044 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.708401758 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.780176032 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.710517656 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.071124087 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.778236713 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.14394557 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.071476669 seconds)
  done (took 154.270606251 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 2.031652451 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.814532946 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.149673123 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.332069115 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.276503293 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.853444532 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.832535927 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.981623487 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.724800513 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.804435071 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.472118339 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.809863195 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.536312987 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.782784158 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.823764914 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.836418681 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.169823186 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.699949187 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.450682747 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.45075641 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.705408914 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.825581143 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.526108879 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.122401619 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.702204123 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.495444589 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.702289219 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.28922142 seconds)
  done (took 63.760541635 seconds)
done (took 642.664958108 seconds)
SAVING RESULT...
DONE!
