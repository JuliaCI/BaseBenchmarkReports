cset: moving following pidspec: 29699
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.232790352 seconds)
loading group "string"... done (took 0.534505505 seconds)
loading group "linalg"... done (took 7.371158094 seconds)
loading group "parallel"... done (took 0.158271145 seconds)
loading group "find"... done (took 1.114338628 seconds)
loading group "tuple"... done (took 1.778914573 seconds)
loading group "dates"... done (took 1.199720996 seconds)
loading group "micro"... done (took 0.299968009 seconds)
loading group "io"... done (took 0.906547513 seconds)
loading group "scalar"... done (took 36.870556695 seconds)
loading group "sparse"... done (took 11.044570377 seconds)
loading group "broadcast"... done (took 0.912938001 seconds)
loading group "union"... done (took 11.863204012 seconds)
loading group "simd"... done (took 4.136385781 seconds)
loading group "random"... done (took 8.471174267 seconds)
loading group "problem"... done (took 1.859208486 seconds)
loading group "array"... done (took 19.771143546 seconds)
loading group "misc"... done (took 1.668212626 seconds)
loading group "sort"... done (took 3.073317525 seconds)
loading group "collection"... done (took 16.536820336 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.482532029 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.12252848 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.113202608 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.117831294 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.139946246 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.115763442 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122940394 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.08402806 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.796807757 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.142918087 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118713537 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.410859123 seconds)
done (took 4.958217101 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.176221925 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.084086559 seconds)
    (2/2) benchmarking "String"...
    done (took 0.082951903 seconds)
  done (took 1.318263419 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066226074 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.122968155 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.06758636 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067694917 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068041566 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.067099298 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067131668 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067648268 seconds)
  done (took 1.680042059 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074558798 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070456593 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069675678 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069001456 seconds)
  done (took 1.438527594 seconds)
done (took 5.843885265 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.764602606 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.204902481 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.182448762 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.39376995 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.130436532 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.155740952 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.636032813 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.341140006 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.181824569 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080088071 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.102713839 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.316052748 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106447961 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.622823191 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.079268202 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089268243 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.136561922 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.445244777 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066647006 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08130698 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088175709 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127506288 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.087207433 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.076472324 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.144620972 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067572271 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.12903311 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080574903 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065890719 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.205320299 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.171706683 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.667869545 seconds)
  done (took 10.221053252 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095755331 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096813197 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068828485 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136005163 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.094862806 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068688642 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070107136 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066563808 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.08601543 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.126767369 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.087387051 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.100394678 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065174368 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.06836009 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085120694 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.206740394 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081474924 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082309721 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.07146477 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075688802 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.116693631 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077685059 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.07688543 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076787311 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127979623 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179231114 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097995144 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096738341 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066063028 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079505454 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114894521 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.124659489 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065049674 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065602575 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.12271527 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.09345632 seconds)
  done (took 4.602876877 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.938378473 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.141931075 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091309591 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.173441452 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.068501883 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.108484947 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066274915 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085710154 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.202283656 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.376673729 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.575184413 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110447523 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.09984165 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06698137 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067790385 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066239609 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.331531012 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.118437206 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111231359 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.082074564 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072433639 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.067526197 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.340306995 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067157485 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065909167 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066989035 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057256945 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.11170373 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067288912 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.908303293 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.122431179 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06545168 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098757739 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.160449412 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088370652 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.272991313 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06548275 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.06534517 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.148014502 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.073733694 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.064836897 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.082862396 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102503505 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.110898598 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.068270513 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.065707153 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.159515051 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06567297 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.083622209 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.981531009 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.151113034 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.096317017 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.06754103 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.245265255 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.084721999 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066155065 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064200277 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.184949764 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.130954937 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.066970447 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066101911 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.065106762 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068079483 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.349850251 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066259887 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.905878737 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069308312 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076602063 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068101627 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.065782259 seconds)
    (70/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071597277 seconds)
    (71/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071159351 seconds)
    (72/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.084305195 seconds)
    (73/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065277157 seconds)
    (74/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.073886387 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.064926919 seconds)
    (76/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.064743016 seconds)
    (77/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066962932 seconds)
    (78/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083106941 seconds)
    (79/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.356006532 seconds)
    (80/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.065610094 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067397494 seconds)
    (82/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.063669982 seconds)
    (83/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.088986967 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.084713123 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095548472 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.067926101 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.06422628 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.09911952 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071615157 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066137524 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.207569964 seconds)
    (92/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067144864 seconds)
    (93/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.06588627 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064351657 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084904622 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068876487 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112701994 seconds)
    (98/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064259741 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.065146241 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.093706147 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064529814 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.095524724 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.068484614 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097766183 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.078777472 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067248996 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.39770378 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064700455 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064378363 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067334337 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067897217 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.066652954 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067515421 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.07776768 seconds)
  done (took 21.085247411 seconds)
done (took 37.999827754 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.278697735 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.077882585 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.078120793 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077861297 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.077247962 seconds)
  done (took 1.828573248 seconds)
done (took 3.051221322 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.118592012 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098453396 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063732239 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.093799588 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063623954 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.09825461 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.097838051 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.079685586 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.097839569 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063639262 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09496049 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063251215 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063387472 seconds)
  done (took 2.339895114 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082982608 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082525068 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071125284 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08205334 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06269841 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080876577 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079629917 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088241748 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081452153 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073020441 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06483706 seconds)
  done (took 2.068415738 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082769775 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084802528 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07053107 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082840242 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064515517 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081878492 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081650602 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.086812898 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082776101 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074311096 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064579297 seconds)
  done (took 2.071336209 seconds)
done (took 7.692645257 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077889044 seconds)
  done (took 1.281663351 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.582689919 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.021968182 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080596366 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.110618807 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.182055608 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.117127768 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.273038163 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.085192685 seconds)
  done (took 8.837560082 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.090970675 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069146585 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.08257379 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070148974 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071700565 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069623684 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072924318 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072564139 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.072062455 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072750316 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069106472 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071849518 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070429185 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070361566 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072729781 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069970412 seconds)
  done (took 2.444786308 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092741699 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091877125 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074623996 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075839765 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072850862 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072818454 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.075493346 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074517212 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071703058 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073024801 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074225635 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073240644 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.070918795 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065983531 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074833883 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076569627 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.07164444 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075155522 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075849081 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075902821 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075493048 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065424232 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.072354217 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075081774 seconds)
  done (took 3.115316393 seconds)
done (took 16.893058575 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.113449621 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072149884 seconds)
  done (took 1.394817321 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082755422 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083267822 seconds)
  done (took 1.385929523 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083298345 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.066689665 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091097808 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.079114417 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.067889296 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.067020342 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.088441296 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067963985 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.067263959 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.067762405 seconds)
  done (took 1.96630637 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069993814 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.079453455 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071543027 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081615673 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074825048 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.065241326 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073949237 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.069214056 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.07917722 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.064085427 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071608411 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082852052 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072233605 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084560783 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.074009924 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.069045476 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071055664 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067693223 seconds)
  done (took 2.545382459 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.068347156 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067904474 seconds)
  done (took 1.363859649 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068063367 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064581261 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067426999 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067354996 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.064238073 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063464508 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.06456959 seconds)
  done (took 1.681640261 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.392328227 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109197551 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.299005875 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.07149229 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.082956345 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.247276817 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066181734 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.07146448 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.071490429 seconds)
  done (took 2.678854297 seconds)
done (took 14.244264118 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078849008 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.08589526 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.09551677 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.346006673 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092789206 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066663305 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115278307 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.19043305 seconds)
done (took 2.310699098 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.209153707 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.604916325 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.381384116 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.197087595 seconds)
  done (took 2.414270057 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.322102854 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.088093404 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059732074 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068404232 seconds)
  done (took 1.77583606 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067224935 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069932274 seconds)
  done (took 1.369651398 seconds)
done (took 7.00210223 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067651317 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.085065498 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066982608 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.067155089 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.064134828 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066973782 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.064582966 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064519746 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064201673 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066685902 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.069464556 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.067000707 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.066742721 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06631462 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064365661 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064003632 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066525616 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.067970447 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064364087 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066358076 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064055087 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066353724 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064423685 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063960986 seconds)
  done (took 2.86438153 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085010964 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067477423 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072305903 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071793135 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070916471 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.072092738 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.072574504 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067554628 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.072245646 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069564973 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07046833 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.07078751 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068870111 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071442984 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069605954 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071118747 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071965599 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068668017 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069493521 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070841238 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071937035 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067258601 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070552856 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071735501 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070522815 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070305213 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069283651 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066852711 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071847959 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.070053006 seconds)
  done (took 3.368790986 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070358024 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064521087 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064684016 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071539421 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064165124 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.065576849 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064050615 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.064774726 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.065170024 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064038119 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.066144876 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063822731 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064407749 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.065055613 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.06502579 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.068175561 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079403512 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063006049 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063988627 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064889433 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068124051 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.064492867 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064587757 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.064193268 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064178717 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064159387 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064853797 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063960578 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064905188 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063996301 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067035507 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067742394 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063969498 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070798721 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067877552 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064056753 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068035951 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.064339732 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064640572 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063860253 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063904208 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064329187 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.064306257 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072000446 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.064787664 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.065823185 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064705706 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.065540282 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.179226115 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066885867 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.063779157 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064253478 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065580406 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.065098847 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067580655 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063479078 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064530656 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063410406 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.065795356 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.06392128 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063613683 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.063506801 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066473063 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064489863 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078502438 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.07064282 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.064525142 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065603517 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.065640237 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.066897047 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065903149 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077428292 seconds)
  done (took 6.110754344 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090586265 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086151477 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064564331 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064151753 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061085603 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063404732 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066459556 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063039635 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064317102 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.068446083 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062872338 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06433462 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064074367 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075473132 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063258206 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064290109 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.068383308 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061189753 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063142989 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066284796 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063537153 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.06651616 seconds)
  done (took 2.732709266 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.15302485 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068786628 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.103787424 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071520345 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066356822 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072110714 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068732159 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069344636 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068705866 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067113467 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067021441 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06882658 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066888066 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066703854 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067653088 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068495394 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070521407 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069533561 seconds)
  done (took 2.605324151 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.07772174 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065040627 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086327861 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065489354 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.064858531 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067100349 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069460382 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072870666 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067180174 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.064957493 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.072962231 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067149477 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067960906 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065126119 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067441214 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.064725336 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067473021 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064933705 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073170127 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069721184 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070185765 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073344294 seconds)
  done (took 2.776111197 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079007405 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068001545 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.083214975 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06809171 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061601715 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063333248 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069135634 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065959719 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.0700416 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067817166 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065491139 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063251958 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068696379 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065250084 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.06828299 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065081946 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06646384 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065158004 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066626031 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062831951 seconds)
  done (took 2.605647301 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085893996 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068780941 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068749374 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075018304 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066525404 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066726759 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074079795 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066399161 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066238926 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085709839 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065943804 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066141928 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073759485 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071359797 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066845107 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075541664 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076019152 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075609236 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067854226 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06803074 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088063373 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068432364 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075661754 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068297273 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068186952 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.06786533 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067949549 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072987739 seconds)
  done (took 3.26263811 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066359823 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065332004 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062769571 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062225354 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062293923 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063085691 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.06247888 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062787079 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065254569 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062920956 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.064816502 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.064744965 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065071413 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065191025 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065212499 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.06493387 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064835828 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062664288 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062824767 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062387859 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065216165 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064836327 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066659901 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064467016 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064456294 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066390452 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064174274 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064418314 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066735077 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064208984 seconds)
  done (took 3.187191582 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075513196 seconds)
    (2/2) benchmarking "in"...
    done (took 0.07354639 seconds)
  done (took 1.408026872 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063747172 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081116651 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.064605972 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070723977 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071070589 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067593925 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073928094 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070577577 seconds)
  done (took 1.817272682 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081368629 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.07843029 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.068686905 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080583668 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075921964 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083300738 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.133574071 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.068005779 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073922308 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.06497137 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081253547 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066383257 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.073517924 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067364649 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072994704 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073435328 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064872291 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.073118224 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069599464 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.066350254 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068317477 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076121952 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069441631 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062513592 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.068499072 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.089113114 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.07826678 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.066310922 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069099711 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.074161905 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071865984 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059828373 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065186065 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066134594 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06357685 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075957884 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08163224 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068342013 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074078672 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066405204 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075798885 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060548688 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070255819 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072052748 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075176255 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065710712 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066000467 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060421457 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063789687 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.06764897 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060852992 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066047053 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060348887 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074637139 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069348434 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076337917 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064371826 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067293835 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068485487 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069329768 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.071853369 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067137224 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06803848 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065254477 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072118766 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070071092 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074410853 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060875315 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059865877 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063647564 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.074873973 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08724653 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071590802 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.065864273 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065817647 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063501987 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068193598 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067133776 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070789065 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.071377861 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066199456 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071242476 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073365138 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067029223 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069752242 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.075784842 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065306346 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.07004009 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064878187 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083656165 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.066145837 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.06483754 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065191888 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.07766215 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.070587552 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066558574 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.06521635 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074114041 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061535428 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.067835675 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068455739 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067856873 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.077689324 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071580969 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070887224 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.075015382 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.07353646 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066546286 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069423196 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.063562643 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066775025 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.06520818 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.07349868 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060321923 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069013641 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066855096 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.06650013 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.200270518 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064807565 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.06649145 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075503856 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.07375078 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.066598945 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.064272747 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070352788 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.067782415 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070428819 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076476759 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067003436 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063207244 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062676045 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071025772 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067773377 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071202022 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071293835 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069116009 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060566211 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064285743 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073386789 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.077153592 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068391998 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068885678 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074430022 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069362527 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066913309 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073748567 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071058963 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067088418 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074312408 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068843708 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062904642 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071044561 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070928221 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066564387 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072147266 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071727185 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070442782 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.068673368 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066571516 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.07585797 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069122176 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067490376 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067647339 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065979407 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078606234 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070040233 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062904849 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064506348 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.077246817 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065740701 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066913455 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066916657 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069977995 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067988894 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065733803 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067548305 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070036619 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078237872 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071687339 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068654866 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073237129 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079341794 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.067686385 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.07004295 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067474468 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068566838 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067506685 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.076612839 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072992389 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072109601 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069696676 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063527715 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072543867 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074676553 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066708926 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064924214 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066360705 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.071574171 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073284922 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.071625857 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068012713 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065721048 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067932998 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070711059 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.069713887 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066569337 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065988566 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.07379429 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.065160952 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073971885 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067801286 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.077227284 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07051796 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062512255 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070303774 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065513382 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072873543 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062367948 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064938477 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065987123 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.068165303 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065944018 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069466055 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.061667125 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073919979 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074186051 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066759051 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.06534081 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065793615 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072788627 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.06777796 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069887338 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069623554 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.072138501 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07641156 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.065498099 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.0693635 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.076699014 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.066356513 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.190490835 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.071608585 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065456117 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.064880385 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.066303541 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.065757888 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071534936 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.077490562 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.07563297 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.06193589 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070661861 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066345486 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067157338 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063952033 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072097127 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071224428 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069111859 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073962929 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068317113 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.06836809 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07283321 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067120316 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068598266 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068788819 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071596925 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.069608783 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070521995 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066027193 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068814767 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065276954 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064657366 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068552042 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066046066 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068024056 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073905961 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065827867 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066604132 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068492601 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.068502688 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068415051 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068260326 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067804406 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070260629 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068232151 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066322231 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068712731 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061119048 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073432833 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065556773 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073295002 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067125039 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062380432 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073360981 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068098641 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071162078 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066921018 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066790996 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067402152 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065201167 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.068886215 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072511766 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063480763 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076864011 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074217761 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067106211 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.068547739 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066116287 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068054942 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065698546 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067075045 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.065928333 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066277678 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065578891 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071492307 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070120689 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067910357 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068862749 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067734421 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.067480484 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.068384128 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061402148 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066289669 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066397212 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066643856 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075650481 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.06570925 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.064925693 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065431406 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068457092 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.066549518 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064426665 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.07568256 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07682773 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.06837332 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074634046 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066677999 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069233188 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078409421 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061798886 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065497499 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.065098194 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065482263 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074254484 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.067997408 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.076789231 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.0674882 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066682825 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.064125839 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.067708365 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.06588877 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061194845 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.064369978 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070333517 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065575469 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064895092 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066182324 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068320218 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067211599 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075502149 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065322038 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066869933 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.066111671 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063185908 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.065156811 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065253434 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.202331944 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067327117 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063663465 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063218193 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065864505 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067007398 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067324664 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.065504023 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068362523 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077098672 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067161652 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071103912 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071440532 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063159354 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071705547 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.068152818 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.067850071 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066805814 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071306443 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071803913 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069240448 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076779622 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067611866 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069568234 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068352454 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.06649916 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.067780602 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067825509 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067837333 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066099137 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.06972103 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07622087 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.06560233 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070374585 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068088742 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.068357025 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075160496 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069143601 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071122275 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074484884 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067841823 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069638855 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076051498 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071914997 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071335612 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068929133 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069565399 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074028308 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066855411 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074840675 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.06831165 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.068784605 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069249356 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065833026 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067508235 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067208582 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06715752 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073822442 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.06795561 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066945703 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066751767 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.065922832 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068982875 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071288855 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075161786 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069791941 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070829846 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062252953 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063351757 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067143532 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064600793 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.06704998 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068185854 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071283824 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.067497184 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.065728257 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064850906 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074471814 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071539817 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071479011 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064451335 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069763455 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066300738 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067902988 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066226401 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.065364004 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066488944 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069067201 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.066839727 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066576785 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074109479 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069893678 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067764708 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068868316 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.068221141 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067766637 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062598156 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.068302999 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069454777 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072636774 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069938694 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067669105 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078030591 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065094996 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068115849 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.0705905 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066854585 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071784437 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062477039 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068490782 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06797436 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067834028 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062075981 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065943918 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064661586 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068567915 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065883413 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061629876 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076545148 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075130278 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067973974 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064148469 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063281068 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.059936931 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.059984089 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.195481525 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067623513 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068122786 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.075343984 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.0650891 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065348493 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061286655 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065843654 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068963353 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069196278 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.062964781 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061580632 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065663022 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.06963501 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072552246 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06593478 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.067396196 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071404634 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070368371 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065679279 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070962659 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064452803 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071189435 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081100179 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068656176 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068643826 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07504447 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.0756093 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069078928 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062921383 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.068120466 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070939322 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067156063 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067525452 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.06751483 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080873695 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.06916656 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065831422 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.06580956 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069382193 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067220033 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075969837 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068733755 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068686592 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.07227612 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069812583 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076571577 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069573359 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073409355 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069558151 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069213504 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.064846102 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066047821 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.063713445 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065307561 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.06687325 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066884619 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071261872 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.073495791 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065504148 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077785018 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075213531 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067496598 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063658917 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066150296 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066263464 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061219888 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.06688034 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.06435881 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064239256 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064273639 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.06459608 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066814117 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070545308 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066155649 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.0664107 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065106591 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060308024 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.067468029 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068423906 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067847863 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064135003 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.067249839 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067306524 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069659705 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068859075 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.062932558 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.066906555 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.066925769 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065990594 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.060886183 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072434118 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064913328 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067250166 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065289253 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065328974 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066304048 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069280244 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070142603 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067715146 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069796126 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.071194901 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069340641 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.065154574 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064919794 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.072478502 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065306557 seconds)
  done (took 42.853019819 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101256769 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063645609 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063125291 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063430258 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074731436 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063929477 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062809632 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063686929 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064147464 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065261719 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061402907 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061201449 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069485699 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076652242 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072831316 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065498617 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061286529 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062129313 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.0610075 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062159087 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069769967 seconds)
  done (took 2.763766034 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074616552 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.070693721 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.07214324 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075139665 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066239752 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069730492 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071623616 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069399265 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.074964037 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066212917 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.074596737 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069916599 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066140849 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.066097858 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074466932 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06960941 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.074601651 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066401618 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069425682 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071184203 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070247227 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071917535 seconds)
  done (took 2.886570562 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067793023 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065018817 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.06664875 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060792479 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.064691879 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.060704811 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068019036 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063263447 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068214919 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064408993 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064418227 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064203342 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.06760671 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060284518 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.064823206 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.062820782 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.106690276 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068211397 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065122897 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.065610474 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060497599 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.066971579 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060513413 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062565752 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065791647 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070511468 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.067423416 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064857993 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066877689 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.06538503 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066151159 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064710047 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068439075 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067757821 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.06568207 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06658299 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066443188 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.066204373 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060751782 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063277444 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067350483 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062757507 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066837881 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068095573 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064221913 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063012871 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066151575 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.06414118 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060367628 seconds)
  done (took 4.563234725 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.0804774 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.10671822 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066238281 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087092389 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.078716252 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.074162504 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068430295 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088001393 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064003078 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065134071 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081992866 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079482668 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064598142 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069157395 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.068017931 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064560352 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065857362 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063621383 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068537927 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064305008 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.06844055 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.07094061 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.078678286 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077237304 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068258837 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064290946 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063992883 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069144467 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078696864 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071015619 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070650332 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072308683 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.081148719 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071611494 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065781315 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068677681 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081915517 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066558037 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068419348 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064208506 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067911365 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069916058 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.07141429 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.08011356 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064889272 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.06944536 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064448569 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.061698562 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.076584077 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067929413 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073362325 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078956985 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068481926 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.064800998 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068417509 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.078606705 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064493348 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.062926137 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067610816 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076153421 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.06226069 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067780071 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077459412 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066546645 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071153443 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.077878812 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.06946236 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068354952 seconds)
  done (took 6.319427145 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076015927 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.073096375 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08132966 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079775351 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070986631 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.071713458 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070963413 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.071251655 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.070793349 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07551152 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071324859 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.091760382 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.066780807 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073754541 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.0713899 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071367214 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071320386 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071514821 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07129388 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071118389 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071306879 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079798069 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.073921258 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.081183602 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.09974751 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.068027333 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071733003 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.07207664 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079357373 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071373607 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078689805 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071194526 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072959585 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080845544 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.080367832 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.073197267 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065836045 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072804006 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073348474 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072094978 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066449793 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078533207 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070760701 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066462833 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070590103 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070725718 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.078544571 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.077501382 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073232856 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075577251 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071009297 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.078794797 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070505858 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071008478 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.078259973 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.102931679 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078761261 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078470015 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070737836 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.078213175 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078502082 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.084085658 seconds)
  done (took 6.008649603 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082708707 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073631032 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076457444 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.06185075 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06445941 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069406894 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063727877 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064822157 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074486318 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073254716 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075426823 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068194207 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071320613 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075948786 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068802223 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071941549 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068761285 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068456879 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073368357 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068581359 seconds)
  done (took 2.77214429 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075466723 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082808207 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066474478 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071070512 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.067740742 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070592372 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067388371 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068370934 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067428999 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068545334 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076596628 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07735488 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068247354 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072551549 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.07584017 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071861341 seconds)
  done (took 2.497693792 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.075542635 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072760305 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080420131 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.067807431 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064976461 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.06383673 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066473242 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062587039 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.063204847 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.079254913 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065852156 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.067995425 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065527645 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06441765 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063876298 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068356269 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062076016 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062531468 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.064859433 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.0774469 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.075498966 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063631309 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067140204 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.066891817 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067207839 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071972957 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06590021 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063790286 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.06401235 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066715411 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.0675331 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070055221 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064077758 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064949023 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065299557 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.064208345 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066207395 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.067021683 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069228238 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.066578618 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.064707701 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066184393 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.066244177 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067403086 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.063159812 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066769809 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062987123 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.068562755 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064763009 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.066673145 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066525596 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.069234056 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.06697266 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.073094778 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.069181954 seconds)
  done (took 5.050077772 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080387075 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070570484 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062966233 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065005685 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069682675 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068699121 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070026886 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068515685 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068606655 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065019636 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069003519 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069278872 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068504182 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070154121 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068583432 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07008816 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063236767 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068656227 seconds)
  done (took 2.599712266 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072125069 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066880394 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073617172 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066832693 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.067029362 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069510509 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062762376 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.065650088 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066009623 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066621071 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066739496 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069184096 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065946035 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069023652 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066752058 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066891019 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068906864 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065259638 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066117469 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062365253 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068306901 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06387098 seconds)
  done (took 2.830594729 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.073744928 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.092774939 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.139788955 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.085534071 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.081024389 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.077564862 seconds)
  done (took 1.906390138 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090293185 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078408745 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065798707 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087294011 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072365512 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066553588 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066298152 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06679827 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075150447 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074906916 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066560253 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074940648 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074744988 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074518351 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072195932 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071655643 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066212575 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06660056 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065833586 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082963924 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066679373 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074378003 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06698424 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067749523 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068067645 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076310903 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075576887 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075096035 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066484833 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074814499 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071781612 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066243949 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074576569 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074479215 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068209526 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07456061 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066353891 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082740605 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071951055 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074015442 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067684163 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072649091 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074841682 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071271322 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075175216 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06664746 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071000209 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066540696 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066645962 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084480724 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071961014 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073636079 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072371464 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07499383 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074693105 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084257357 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074914701 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073976004 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072175133 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077355346 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074169408 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071902466 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073731437 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074778106 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072285252 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074301341 seconds)
  done (took 6.162251263 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081650393 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085167676 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067876299 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077135698 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077278071 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068849537 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069028377 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068725193 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068796063 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068148554 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108675983 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069306661 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07690765 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075280768 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066773033 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067480575 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066756205 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075473962 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068370637 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087171103 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068816787 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076203578 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076619045 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076245629 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076960942 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073803402 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067756206 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067299448 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066732836 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066932962 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071409443 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06657275 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075832761 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067993335 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076527805 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068612498 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068250689 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073430958 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068685937 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074029412 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07633251 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08377304 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068863099 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068572367 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077316027 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068674642 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068654218 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068649085 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068791584 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068608151 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07716731 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077001372 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077107645 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076296622 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06849352 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068764011 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068659451 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068280217 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068478593 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074035225 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076918664 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06754719 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086152677 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067691582 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067112513 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074979028 seconds)
  done (took 6.179591891 seconds)
done (took 129.361500958 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.185759152 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.16903438 seconds)
  done (took 1.70209154 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.06926864 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.0965163 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077362142 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129084682 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066415424 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099585323 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.09826728 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077175821 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065557198 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065639998 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065606565 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.067928548 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130438028 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065501581 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.06519442 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.067890574 seconds)
  done (took 2.670156332 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.098148301 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.156176024 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.098391257 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064103118 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.095789188 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072092339 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064111467 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074373326 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.069821134 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064865235 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072065494 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.069658827 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064771031 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.069907934 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070347513 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.071874409 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064683343 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.071654737 seconds)
  done (took 2.778750955 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.1018808 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.089997858 seconds)
  done (took 1.562561563 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.161349579 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.104741175 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.148256201 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.341856179 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.164745368 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.227510551 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.125849722 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.129144365 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116023983 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.122197805 seconds)
  done (took 3.008014989 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099879651 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.151394733 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.254301046 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.113726265 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071695892 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.093647316 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.114606731 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077377527 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.079886242 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079572171 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079630411 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075668749 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098189896 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072832846 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072848238 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075228784 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.101500163 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071489263 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074119606 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075953317 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.097719436 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065150316 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072865869 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071195252 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076567772 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076517 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.064983983 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065032522 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075886405 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.072968061 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076087431 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092725029 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076361508 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.10575324 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069393619 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106484442 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075294839 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073231642 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.072966592 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.07356795 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077824759 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078003816 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071678567 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.07558146 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065068023 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075822914 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.06472227 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.064569073 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077092625 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.06587183 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.076801461 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075791151 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105373119 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.065942076 seconds)
  done (took 5.930520886 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102027504 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105054817 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070489314 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.108136547 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096349118 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071742344 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.100253198 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.090757087 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.101427812 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.091644734 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.0880728 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.0698708 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080820151 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082738966 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.109236593 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.101709751 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.094312468 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069763104 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.100725906 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.101216902 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067978084 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093816084 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090021503 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.100937232 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067014728 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069727806 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067348765 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069731277 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07589849 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077457239 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069079879 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.1012143 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083754206 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077035766 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066815398 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067046213 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067399883 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.077857912 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.096805819 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077888489 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076802087 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067218256 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.0680772 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068992908 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.090249292 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067139168 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078178626 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.079544436 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077862299 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068809298 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069689358 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067302608 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068716872 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079141505 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076994594 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079930005 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079314377 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067855638 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068088605 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071287896 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080281709 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078715102 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078494554 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.092319586 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078820905 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068118691 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079833783 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084241808 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067901476 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069374839 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069107431 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071109156 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071505735 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079503228 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.080325849 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070208443 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070141919 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067885752 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079360333 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077425458 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06774721 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07631052 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066445842 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068639115 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070369829 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071108777 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078879161 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080904255 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070695826 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067596919 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068629644 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068325023 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066165239 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075253688 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.07785642 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.076767684 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076790344 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067920038 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077149257 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076386147 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068316173 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.07687784 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.196668285 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07038565 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070359104 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079279556 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078270312 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080254383 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069964607 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068044384 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078447604 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080153092 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069151563 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079132143 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080784475 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.07898221 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068224863 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081033249 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068424516 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079411164 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070256756 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079413294 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069093367 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079706659 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069210517 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068247889 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069012519 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079313725 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070147465 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06858678 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070156255 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069278649 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079303285 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082412632 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069965178 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080493464 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079039553 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07067087 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078896115 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068838862 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079241931 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069678561 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069281254 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067487619 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081555101 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068742077 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068991978 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06966716 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080175208 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068708003 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079364271 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078258593 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068266375 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081220217 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080003179 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077357861 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079400075 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069937821 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068133156 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068024048 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069825409 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077808345 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079121118 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070760754 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069311325 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.080050802 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080535742 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.066843126 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078103632 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077729022 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077912888 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068661515 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069474026 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080076156 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080206619 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077639667 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077475836 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077874617 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067897062 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078936713 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079030765 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067965531 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085262023 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069635252 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082415687 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078539155 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076001485 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.0779472 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080040076 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079742127 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079254909 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081623368 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067646736 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067338902 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078200938 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067310135 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068464832 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076392574 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.06806327 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068969163 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.080850485 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067013124 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.076865488 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.065850482 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.07615932 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065364136 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068193107 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.212776831 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069065706 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070479245 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079680931 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070115773 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.077551244 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081063991 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.078193818 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067784286 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070910378 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.079847451 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078450711 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068396338 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06883513 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070056664 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078382992 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077121206 seconds)
  done (took 18.70242247 seconds)
done (took 37.728051772 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.21040174 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.150496697 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.201778179 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.116643903 seconds)
  done (took 2.147136304 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.124199206 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.103490369 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094183765 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064371725 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.10045157 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064407047 seconds)
  done (took 1.960022939 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.311579221 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.208888069 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.180692505 seconds)
  done (took 2.108812313 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.198807668 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.191104237 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.399369043 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.25374638 seconds)
  done (took 2.562226091 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.14328146 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.091702489 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068732881 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.08335468 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.13245042 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.158392643 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.099864686 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.123853969 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.076924503 seconds)
  done (took 2.442512123 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.14325562 seconds)
done (took 12.769590137 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.244756216 seconds)
    (2/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.223680792 seconds)
    (3/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.206996539 seconds)
    (4/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.189221334 seconds)
    (5/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.174534952 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.152029508 seconds)
    (7/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.092378909 seconds)
    (8/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.194444943 seconds)
    (9/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.216816833 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.083511343 seconds)
    (11/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.073107412 seconds)
    (12/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.216743111 seconds)
    (13/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.075186378 seconds)
    (14/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.146169776 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.094293277 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.076507761 seconds)
    (17/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.098964266 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072048062 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.107663327 seconds)
    (20/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072352706 seconds)
    (21/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.097529289 seconds)
    (22/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.074852919 seconds)
    (23/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.064581979 seconds)
    (24/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.051291657 seconds)
    (25/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071540734 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.137123841 seconds)
    (27/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.087782208 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.064426636 seconds)
    (29/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.174987303 seconds)
    (30/309) benchmarking ("sort", Float32, false)...
    done (took 0.125902595 seconds)
    (31/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.11517929 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.06519187 seconds)
    (33/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.197666134 seconds)
    (34/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.076557394 seconds)
    (35/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.155251695 seconds)
    (36/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.178891949 seconds)
    (37/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.101083761 seconds)
    (38/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.100741837 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.108776828 seconds)
    (40/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.079324968 seconds)
    (41/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071326056 seconds)
    (42/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.080792722 seconds)
    (43/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070910033 seconds)
    (44/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.108165452 seconds)
    (45/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.195338024 seconds)
    (46/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.157410324 seconds)
    (47/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.091412598 seconds)
    (48/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.069353405 seconds)
    (49/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.133591137 seconds)
    (50/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.194064597 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.110345822 seconds)
    (52/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.132169704 seconds)
    (53/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.070786213 seconds)
    (54/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.17484261 seconds)
    (55/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.1969298 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071848799 seconds)
    (57/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.154208112 seconds)
    (58/309) benchmarking ("sort", Int8, false)...
    done (took 0.137949335 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.089664893 seconds)
    (60/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.180556039 seconds)
    (61/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.074301525 seconds)
    (62/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.085253869 seconds)
    (63/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.076728148 seconds)
    (64/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.050848509 seconds)
    (65/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.072006087 seconds)
    (66/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066936693 seconds)
    (67/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.184533081 seconds)
    (68/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.050472142 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.108445599 seconds)
    (70/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066089864 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.093870426 seconds)
    (72/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.071114361 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.08680051 seconds)
    (74/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.050275925 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.098563113 seconds)
    (76/309) benchmarking ("sort", BigInt, false)...
    done (took 0.183995273 seconds)
    (77/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.074842623 seconds)
    (78/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.06147174 seconds)
    (79/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.077675618 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.095287571 seconds)
    (81/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.219561819 seconds)
    (82/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.14905175 seconds)
    (83/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.139875541 seconds)
    (84/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.140182466 seconds)
    (85/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.072918604 seconds)
    (86/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.156098093 seconds)
    (87/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.097893014 seconds)
    (88/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068701663 seconds)
    (89/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.150566206 seconds)
    (90/309) benchmarking ("sort", Int64, false)...
    done (took 0.066194428 seconds)
    (91/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.169288188 seconds)
    (92/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.071291305 seconds)
    (93/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.069468256 seconds)
    (94/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.053375121 seconds)
    (95/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.061922489 seconds)
    (96/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.070839424 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088107272 seconds)
    (98/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051413136 seconds)
    (99/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.207872138 seconds)
    (100/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.150247283 seconds)
    (101/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.070915163 seconds)
    (102/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.073997959 seconds)
    (103/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.149077854 seconds)
    (104/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.051270794 seconds)
    (105/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081594583 seconds)
    (106/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.105968024 seconds)
    (107/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.071048635 seconds)
    (108/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.133562136 seconds)
    (109/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.072679296 seconds)
    (110/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.06779788 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.325239753 seconds)
    (112/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.064488049 seconds)
    (113/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.195994165 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.095335369 seconds)
    (115/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.098033329 seconds)
    (116/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.071933225 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.071780183 seconds)
    (118/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.071272786 seconds)
    (119/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.065106029 seconds)
    (120/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.078811382 seconds)
    (121/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.202629843 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.135001178 seconds)
    (123/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.184912111 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.141111038 seconds)
    (125/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.066421976 seconds)
    (126/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.074365294 seconds)
    (127/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069106981 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.100651733 seconds)
    (129/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.086469685 seconds)
    (130/309) benchmarking ("sort", Bool, false)...
    done (took 0.131708084 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072781023 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088358667 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.096169281 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071008813 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.088436047 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.064757425 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.069811037 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.070720534 seconds)
    (139/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.06241426 seconds)
    (140/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.065256379 seconds)
    (141/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.073671478 seconds)
    (142/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.165723478 seconds)
    (143/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.050453559 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.08838593 seconds)
    (145/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.050870575 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071178364 seconds)
    (147/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.051446404 seconds)
    (148/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.170425173 seconds)
    (149/309) benchmarking ("sort", Float64, false)...
    done (took 0.124801269 seconds)
    (150/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.070683911 seconds)
    (151/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.15763312 seconds)
    (152/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.108120172 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.06456567 seconds)
    (154/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072066272 seconds)
    (155/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.073399395 seconds)
    (156/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.098483045 seconds)
    (157/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.059737345 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.074292246 seconds)
    (159/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.050555073 seconds)
    (160/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.066387334 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.07238487 seconds)
    (162/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.052747051 seconds)
    (163/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.074494601 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.085498778 seconds)
    (165/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.074339746 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.084425561 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.108234409 seconds)
    (168/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.065525367 seconds)
    (169/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068026506 seconds)
    (170/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.064121071 seconds)
    (171/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066269389 seconds)
    (172/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.051814175 seconds)
    (173/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.071626884 seconds)
    (174/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069549726 seconds)
    (175/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.050589085 seconds)
    (176/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074974804 seconds)
    (177/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.059914085 seconds)
    (178/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.065811917 seconds)
    (179/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.077612195 seconds)
    (180/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.051239609 seconds)
    (181/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.109142566 seconds)
    (182/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.05048928 seconds)
    (183/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.051285741 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.123882702 seconds)
    (185/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.070281046 seconds)
    (186/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.112106806 seconds)
    (187/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.063522388 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.10949841 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.234744333 seconds)
    (190/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.06601359 seconds)
    (191/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.067539753 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073870734 seconds)
    (193/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.173838043 seconds)
    (194/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.163734698 seconds)
    (195/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.065751737 seconds)
    (196/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051512143 seconds)
    (197/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.061594596 seconds)
    (198/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081536953 seconds)
    (199/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.170158154 seconds)
    (200/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071558459 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.089235493 seconds)
    (202/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053242736 seconds)
    (203/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.053252791 seconds)
    (204/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.065537903 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.063400998 seconds)
    (206/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.050848412 seconds)
    (207/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.175105614 seconds)
    (208/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.052511945 seconds)
    (209/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.117942728 seconds)
    (210/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.053775577 seconds)
    (211/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065816567 seconds)
    (212/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052352054 seconds)
    (213/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.06768857 seconds)
    (214/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.050665057 seconds)
    (215/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.052464244 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065160443 seconds)
    (217/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052239036 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074325518 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072757087 seconds)
    (220/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.086787366 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065918823 seconds)
    (222/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072057296 seconds)
    (223/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.150337511 seconds)
    (224/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.072547531 seconds)
    (225/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065287282 seconds)
    (226/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.067145407 seconds)
    (227/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.050761317 seconds)
    (228/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.06666419 seconds)
    (229/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.097835019 seconds)
    (230/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052154543 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.089852974 seconds)
    (232/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.051278937 seconds)
    (233/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.066133053 seconds)
    (234/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.051869114 seconds)
    (235/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070644846 seconds)
    (236/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052422561 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.092120208 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.063116281 seconds)
    (239/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.051732074 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.064245794 seconds)
    (241/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.175171793 seconds)
    (242/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.05208286 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.131319324 seconds)
    (244/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.107676129 seconds)
    (245/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.074934408 seconds)
    (246/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.106343272 seconds)
    (247/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.061277778 seconds)
    (248/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.095555788 seconds)
    (249/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.064493395 seconds)
    (250/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.064877846 seconds)
    (251/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.050614083 seconds)
    (252/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051421431 seconds)
    (253/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.050401913 seconds)
    (254/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.069896052 seconds)
    (255/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.150210753 seconds)
    (256/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052083094 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.092392216 seconds)
    (258/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.064872773 seconds)
    (259/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.059907036 seconds)
    (260/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.063794676 seconds)
    (261/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.071766177 seconds)
    (262/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.050368677 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.098668227 seconds)
    (264/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.077435801 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.064284479 seconds)
    (266/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.060099005 seconds)
    (267/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066008425 seconds)
    (268/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.050725434 seconds)
    (269/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.070589427 seconds)
    (270/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.050344084 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.064184824 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.064410803 seconds)
    (273/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.086678014 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.107341267 seconds)
    (275/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.071958166 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.064501134 seconds)
    (277/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.087173787 seconds)
    (278/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.07052152 seconds)
    (279/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.0774687 seconds)
    (280/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.15000836 seconds)
    (281/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.05124896 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.119865393 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.085496985 seconds)
    (284/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072772438 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072060915 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063536124 seconds)
    (287/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.060586618 seconds)
    (288/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.06659147 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063291478 seconds)
    (290/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.05240271 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.087924532 seconds)
    (292/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.051910238 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065523893 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.071920054 seconds)
    (295/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.085941768 seconds)
    (296/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.069105199 seconds)
    (297/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.05396561 seconds)
    (298/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.051076978 seconds)
    (299/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.065799469 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.069860341 seconds)
    (301/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051410368 seconds)
    (302/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.051670433 seconds)
    (303/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.051529716 seconds)
    (304/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.060776175 seconds)
    (305/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.050514531 seconds)
    (306/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.051383278 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.064414227 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.069305442 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.128794662 seconds)
  done (took 30.320767889 seconds)
done (took 31.743837629 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.087022225 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091177734 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073652177 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.091793944 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079074559 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075594844 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.07145412 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077434762 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.078931527 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.0807273 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077521409 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.05478753 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073265419 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073286563 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073339699 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089856001 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077188644 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.071886688 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.071690693 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064010358 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.071918747 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064979213 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066432508 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054147662 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.07678097 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070899275 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.07134546 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.072572274 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.064806702 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065155851 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.067769675 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072286776 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064999639 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.076576425 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071454601 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072244908 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.073484551 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.07490197 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066702218 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065456717 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.072734761 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.064943215 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.071583497 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072743748 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.070328722 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.07025327 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072300719 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.07664083 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089692901 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067311847 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073555491 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.074692401 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075076486 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071545481 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068256845 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072093108 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070092223 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090512809 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.07237764 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067473251 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.072917682 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073058191 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.069934391 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.071803483 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.071937032 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.073864631 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074338992 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070034111 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073680907 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.069808557 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064604209 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.071879931 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.067774997 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064851415 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075034443 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075644791 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063565107 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070739618 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071476542 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070362224 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.063992625 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066477742 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066103246 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070534704 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066525113 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054166512 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.067982229 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070236853 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063953428 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.071964698 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.07022097 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.07075482 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066155027 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.073753863 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.063781756 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.06963828 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064315963 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.06500493 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.065988777 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.06822066 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064628633 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066270286 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.072724665 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.06599307 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.06998373 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.077891882 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.06433882 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070736028 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063345217 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.063607436 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.0778734 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073356867 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064649253 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066704624 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063277546 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.070954316 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063063058 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.06431585 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.063888075 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064083541 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.069601365 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.063939268 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065846542 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070348471 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.075892943 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063434061 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.066553975 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065562136 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063248047 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.068366436 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.06324484 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.06359852 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.199423328 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061658865 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068194349 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065657579 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072533086 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066774909 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.07250351 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066848871 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.07316522 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069368562 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070789935 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070266432 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.063902373 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058229487 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067298483 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067108444 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.06631513 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.064860945 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066844841 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065234419 seconds)
done (took 12.311254902 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067616256 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.142706676 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098293405 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094894277 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085479803 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066660635 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075526752 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101255931 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067234294 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101725988 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086645432 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084696868 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.111830208 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064975602 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065936108 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069493699 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067566518 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081139919 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100164051 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086038152 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.108588882 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065054479 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094120696 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089558458 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086539672 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.100895369 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066758573 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069666529 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069199881 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.090771605 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086329984 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069807874 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066587819 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.100147207 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.091457918 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082723904 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066063567 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082133092 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066951668 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066110902 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.080618378 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097414379 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079279059 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079502802 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070018718 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069025722 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066727932 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.08264994 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088538936 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.077846863 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086124315 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102445755 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068183376 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065674659 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064285596 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084822414 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064814924 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068124373 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065949723 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067616039 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065980167 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068693227 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080091783 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.085970369 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.068929558 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.07945795 seconds)
  done (took 6.791391864 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085966685 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.091177699 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082976442 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082798723 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065412123 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065820216 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066283657 seconds)
  done (took 2.053999896 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069324794 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088805735 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088735825 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089027857 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084416742 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.086668432 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075766063 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066298109 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.079923568 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067338104 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086852542 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101151272 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066826884 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.07263076 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.089955725 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066353693 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090022814 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066332679 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069121243 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.08925982 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068109159 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081604982 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069819549 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066878677 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079830191 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066429203 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112251861 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070846548 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067819948 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.06917669 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064194718 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.105619989 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079690555 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075223543 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066364152 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080190494 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080248064 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064461573 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082014906 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071228236 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079297735 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.065844382 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066924928 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.063960681 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.069695396 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.075945362 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066831306 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066409959 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068302644 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08497257 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066282301 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079088611 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070598638 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068052234 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067344292 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069499975 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.074978989 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066351704 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085217948 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067145611 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082192212 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.081349578 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079118247 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.081374989 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068138405 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079405294 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079661111 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068412491 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068108212 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069446167 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082070617 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.06443234 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067505844 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076491461 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068113683 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088327099 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088310236 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067095167 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075013411 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066198062 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.06605647 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.065957551 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088387994 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068056754 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065888117 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069926913 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068713798 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064408986 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064975211 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069045615 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064157835 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067519653 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068829371 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068848047 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068243355 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081712796 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068200443 seconds)
  done (took 8.720075673 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070973025 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067632561 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069469005 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.066951589 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067326776 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067314222 seconds)
  done (took 1.945377064 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.09556078 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068790473 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.0801961 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072333484 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104101991 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086034151 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086309898 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078039563 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.08316092 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078263354 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086099561 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087856287 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091817251 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072676721 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085940437 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072137562 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086465674 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075089253 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077490321 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072589977 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.085839928 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072490496 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072841894 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081173902 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074957877 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071529126 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066764619 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.0784942 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077881772 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077970543 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071929068 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075042843 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.069852659 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.07772452 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086078325 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.069917956 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071432458 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.07652863 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072106616 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074816847 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.086955274 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072457744 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073752164 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.07667572 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077647912 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.069862422 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076207683 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075475141 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085288769 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076610317 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.075934679 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071015948 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074758379 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.075948755 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069568052 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077446587 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.07616486 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085487756 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071323214 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069296599 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068136304 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074205601 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076889575 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074318511 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.077860377 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.07570868 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069426374 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072059514 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072065054 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071249412 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076155936 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068302349 seconds)
  done (took 7.055376835 seconds)
done (took 28.07097404 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.543223829 seconds)
  done (took 2.044682288 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.623821661 seconds)
  done (took 2.149026361 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.649310316 seconds)
  done (took 8.169937502 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.393956742 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.468439909 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.712965137 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.129785054 seconds)
  done (took 3.262776406 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.662503398 seconds)
  done (took 2.19564031 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.210756611 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.194801376 seconds)
  done (took 1.945612398 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.377686451 seconds)
  done (took 1.901850856 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.103358116 seconds)
  done (took 2.627055446 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.263016144 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.162615705 seconds)
  done (took 1.956179465 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.466947852 seconds)
  done (took 1.995715945 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.850433778 seconds)
  done (took 6.381190828 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.212246372 seconds)
  done (took 1.783325505 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.2414047 seconds)
  done (took 1.770309198 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.725764907 seconds)
  done (took 3.255189885 seconds)
done (took 42.97297164 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082893056 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.08121105 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080413883 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077550739 seconds)
  done (took 1.836782766 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078987606 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072066734 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076111063 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072339563 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076817097 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072349304 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073424094 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076293851 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071849396 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072712637 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071861936 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072097396 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074315829 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074093019 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070397909 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074774352 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075737386 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071990937 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075051517 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071949005 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.07041472 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074602091 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074380529 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071936995 seconds)
  done (took 3.297976111 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079299507 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072579266 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074647805 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072051035 seconds)
  done (took 1.838890133 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079381381 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091208578 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088680526 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077569808 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.09145419 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.08554977 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069018639 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068610585 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072691128 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076444343 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067866648 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095214466 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087225488 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076641363 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079038206 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.06594941 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067842648 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086120653 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076680086 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077201379 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070057734 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076748855 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067462012 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.08795118 seconds)
  done (took 3.417228275 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078758288 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.102198777 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.076732291 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087644667 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089738426 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064723254 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074014016 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088674158 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.122565374 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065125349 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069823632 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065253879 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071787216 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065111687 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075798636 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104303344 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.108136919 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068537854 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095399329 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065096309 seconds)
  done (took 3.185472324 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075594975 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.0701714 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065397998 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068613075 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.07728414 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.07292012 seconds)
  done (took 1.976005412 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069992603 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067911177 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066739415 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067019889 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071601012 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066690029 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065836581 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066900914 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066828187 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066851335 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066216727 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065281184 seconds)
  done (took 2.348537816 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.413171385 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068249039 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069314465 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065497418 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070294571 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066097769 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.07950216 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067544021 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090095159 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066612691 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066380197 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067971363 seconds)
  done (took 2.733745013 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209617857 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076415069 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234465647 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135662986 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110247884 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114812392 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103737189 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11197571 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.142290142 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100974095 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167230303 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16413928 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106430136 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136269199 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089146313 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097216974 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15365217 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16065357 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10256808 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163696604 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142184936 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123911604 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145777499 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100644883 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104925416 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120354869 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070549511 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.0793917 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167647671 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129810043 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144760823 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110416836 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093228139 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174316854 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168765158 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14108149 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133695533 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08330484 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.101311512 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.133173249 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201140837 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088315546 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159289348 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244927302 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081109078 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133158007 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120867691 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.119213643 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106796909 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089467679 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145421916 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179800622 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.138657996 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086918012 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112071656 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115091272 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.115033781 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103489383 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180467841 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159311072 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126531377 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.07084045 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098193576 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151556472 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130977743 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.10812174 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.126201261 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093052783 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133717006 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153850367 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117436683 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14258994 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.127995059 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087961015 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118845637 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138543267 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126884842 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168611218 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123436637 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.07243467 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124057007 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102648739 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081099981 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.141394022 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075181598 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173543651 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097607358 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.105390102 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11198618 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107878132 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1078481 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157906906 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141048026 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.243340183 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.06623734 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102814415 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.119768562 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146933292 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087441964 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108213746 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116313772 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077205989 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138348859 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075683645 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122463621 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075349613 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12526397 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132056702 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075266398 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120762617 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100401421 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100406214 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133117979 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159598514 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089617328 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08209965 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166984462 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120651453 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103945221 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142718788 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1550669 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.098591014 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102174952 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147211603 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17811335 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088801004 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161763853 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106731417 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083758514 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.08728762 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123246999 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111826225 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.121087579 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081814782 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118020098 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166808226 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074986901 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095289965 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132523836 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078762029 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080541441 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102245215 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099027429 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094192405 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098900129 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.102848877 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135266281 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121389944 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1034645 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268852222 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098972439 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168699567 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089573507 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100141593 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103543161 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069327916 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.136584628 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156068015 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079695602 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161693927 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.123161375 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105226593 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118586573 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082383011 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138976747 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078280708 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.07024272 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143284529 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11000527 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108890492 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.150250541 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104438346 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.127857782 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119156818 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133293135 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131876762 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.128578565 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104549867 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087369077 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111051108 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124845708 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072989664 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.09128017 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079491263 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103059245 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094769158 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082742353 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140774896 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123533438 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099528034 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111493628 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096020139 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146047124 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076443628 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127873917 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.118703396 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093577309 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.15022729 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150114824 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129824038 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098098963 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142100988 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069700307 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073103684 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.08800513 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.266623721 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083415608 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084146369 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11793308 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146815171 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129953987 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137630468 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111015594 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120424188 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153641996 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069771461 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.114441408 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147543806 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121570564 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.103797799 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089385273 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098538525 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142128761 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107826056 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179228775 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113836308 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125433098 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152424939 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099185863 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085201442 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102955087 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134373114 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104393126 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14317529 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09897649 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087887353 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109329623 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074054845 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099590231 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126569429 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118703304 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134508777 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.114465142 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131801273 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076921243 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115707067 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119589635 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121576852 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.06418948 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118960063 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158680226 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093322725 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117373491 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151239923 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078413468 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.122551775 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.320026091 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145647551 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085304922 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109343579 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117713487 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128228982 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120421388 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139475466 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108535382 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135135289 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108589072 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085920278 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08697411 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096588279 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1049322 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094137515 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.106252506 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114285837 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094917728 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130821515 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10277692 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109220318 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11676086 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096522047 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089724163 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095888601 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173975515 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119042366 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169633647 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098772014 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.14407672 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163032861 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074426155 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078984919 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077830531 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138627412 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083153562 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129814566 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.097001665 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104854936 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122752995 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140707163 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094320234 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068181828 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107795427 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133034544 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111186976 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09749125 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103669128 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161063763 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.099590986 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078553521 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112056569 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103269371 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101266311 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168603013 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.06061406 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.241353758 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076298318 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081140449 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128147228 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152474252 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080761867 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.1022811 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118494357 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109773685 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12685214 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100837644 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098687534 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114403785 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148649992 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128624845 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089169692 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112353682 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129499246 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155697065 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104746772 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.095537082 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170059831 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168623351 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.162418193 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088435837 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11333671 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114108845 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107515299 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137893067 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083547301 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161463156 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081506121 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134221885 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103278669 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089389035 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128983601 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.098044723 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087813592 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146712096 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116927362 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082019536 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077362003 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117074452 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119447836 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105865746 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075392287 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136460862 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072534725 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130362589 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166615854 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080203685 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102716737 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094839776 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.225667213 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108218847 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103411042 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089346228 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.097670937 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172160963 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087613784 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148522964 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141471978 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112606537 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136152015 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09935617 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.634625045 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077510248 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151342778 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116610011 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173770454 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097528448 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116827454 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109278361 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123450914 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143573438 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10360036 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.178061519 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130579256 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.115701879 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079637568 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101393572 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102034058 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088155704 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104514605 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112629842 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114903774 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092871178 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.115017614 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122357049 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081821845 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094819806 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155245104 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116058579 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142679953 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138928965 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084447259 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11670469 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136787013 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07890474 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.120270928 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149565673 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104732102 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096760087 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.079701793 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.099401159 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163557438 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.071912475 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154388485 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115619435 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106502888 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109832493 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.108406243 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125746621 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103073506 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116772229 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090258349 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.105722951 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108762727 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079851815 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.074706536 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100254299 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105605457 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.093612576 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092333682 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.0917574 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142271938 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.069431252 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090970172 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099541514 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135030503 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161141031 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.084557793 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080049907 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111000541 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106359853 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.106391735 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113876274 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.076334446 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079201931 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.077562134 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.0752281 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.103095045 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107209374 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099251173 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105209101 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15229571 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.07953141 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.219565297 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090111328 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099804 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.068193417 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.075303363 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089983486 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091539477 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101082133 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096241816 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1586953 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.091552575 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.08675563 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087068346 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.071270977 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079234548 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120489678 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.364516583 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121102183 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100139603 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.064785323 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110978898 seconds)
  done (took 58.258345265 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.112281708 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.084392391 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.099217925 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.15156164 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.124307236 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.213462557 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.158879797 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.200577503 seconds)
  done (took 2.822388143 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071076487 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.095351712 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.101009335 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.084446456 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.068229408 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069748399 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.227525309 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.082384445 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067710366 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.090029957 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079773273 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.070150863 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.425102127 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066657154 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068498094 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.063988012 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067903788 seconds)
  done (took 3.467007313 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.38052136 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.362702675 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.373112278 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.07350746 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.891767047 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089261602 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.08182463 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.09654557 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.071029916 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.280338525 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.702712408 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.095621434 seconds)
  done (took 14.181390125 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.080296499 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070543238 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.083979981 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083774087 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072796162 seconds)
  done (took 2.070413536 seconds)
done (took 103.026321891 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082831534 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.394777918 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053800877 seconds)
  done (took 2.156590682 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.086202116 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085841859 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084707451 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082271132 seconds)
  done (took 2.024373743 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.077146198 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078804563 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.084553887 seconds)
  done (took 1.917503555 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.222194507 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.139150378 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.086503813 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084540124 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077744322 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078500532 seconds)
  done (took 1.926195968 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073893186 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074356574 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072157061 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075802096 seconds)
  done (took 1.97535091 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077494977 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053636207 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.05535596 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055991075 seconds)
  done (took 1.921349473 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.087407587 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078062603 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078244965 seconds)
  done (took 1.925157413 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.109625601 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.084972084 seconds)
  done (took 1.875662674 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084122647 seconds)
  done (took 1.765572931 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.10066152 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.112785902 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.127713032 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.108767354 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.135663114 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.108413612 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085494227 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085997922 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076799133 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086471824 seconds)
  done (took 2.709103895 seconds)
done (took 22.404146255 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080959061 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.377448583 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360916236 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091029811 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668203251 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356593534 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.986462091 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092180923 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.113228935 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06770372 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083906347 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648807495 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.977132853 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.323593435 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.964440311 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.319553539 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.66475116 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068143266 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067489518 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068412094 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.970448924 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06780388 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06782321 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067986327 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.666623473 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.37111572 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067744704 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.318784191 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067642106 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069516848 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355194749 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068630936 seconds)
  done (took 16.205828305 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071650129 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.11757521 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07375879 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084135937 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.069543322 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07021201 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.070722597 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068605342 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119556291 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067926506 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084764423 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067410261 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071937574 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068698471 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087315107 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068578409 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068759902 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06854927 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067854874 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068323017 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086596316 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067682398 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068212605 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068279077 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067820084 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079238462 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068355501 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06799912 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068155279 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069993648 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070904025 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068883417 seconds)
  done (took 4.085286872 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11637537 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124514164 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074422655 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.10259794 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112956841 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070241912 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143604883 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09274234 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127477131 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068650548 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084427386 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068109498 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101385958 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068620045 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087412009 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068542835 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069102197 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068600495 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068268455 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068513787 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087423318 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068070612 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068238215 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068850203 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068648613 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081062844 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068860903 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068675906 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069071379 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070126402 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071636445 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068745232 seconds)
  done (took 4.343990014 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.074056451 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074681907 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082803382 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083348036 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068786669 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072151756 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072684561 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069263731 seconds)
  done (took 2.300744146 seconds)
done (took 28.624780616 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080529069 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069328709 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072355502 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080474061 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073433384 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078023023 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066930142 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074505583 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071505764 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073183608 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074449928 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067251861 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070934851 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067136911 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073129714 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067710924 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079080321 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071444255 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079044761 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.078928837 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069359773 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072869222 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073585302 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.07873285 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.078735075 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078487292 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077022576 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072180023 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068938487 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070661946 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076733989 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083767043 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068589696 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079554612 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067647264 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067860962 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071170925 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068307959 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079412432 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076229622 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.06975768 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.07573188 seconds)
  done (took 4.771669131 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090386946 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.093675132 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.08541207 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.06197188 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066707809 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064779275 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088304593 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059337586 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059595488 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087550002 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056155652 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059681763 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062613988 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054439309 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.05998308 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056758108 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061680114 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055889585 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059379999 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059385219 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058366093 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054181243 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060033293 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065620393 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056822132 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061750418 seconds)
  done (took 3.411955287 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.0766978 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08486385 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.088130086 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126655151 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.103894273 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077080019 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.078098422 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.0925299 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.08543683 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066928278 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071156854 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093609989 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088253525 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073775785 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067528023 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084093212 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081773425 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068779014 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.07338552 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090885331 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.084634651 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.083655224 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092815944 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080795105 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.06699156 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069960616 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071601894 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081001593 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072242291 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076428052 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071329354 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070891449 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.06980051 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079169978 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071287762 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069199334 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090399301 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077065752 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077661939 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067926219 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070876932 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.06866095 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089915454 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.122937691 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.069234763 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.07456545 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.07520816 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076966964 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067639082 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085873008 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078491553 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066907503 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070420274 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067284617 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067234884 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080383213 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.06914536 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069738361 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076554155 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070017902 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085546061 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071396372 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082714611 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066658175 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074428226 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066399421 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067854063 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066264794 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.091675317 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068695159 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.107789012 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068285727 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.06789001 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076073694 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074845101 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073124491 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067553235 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08211241 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077305178 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070459639 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075401081 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070691979 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.069997889 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.08718023 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069237757 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068981342 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068442209 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073487479 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070009662 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069638029 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079761542 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067438 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.069954239 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083593543 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066912461 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068476712 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073029545 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.07188399 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066748148 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077739952 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.07192023 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.06814064 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076016179 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067212041 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.069750112 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077320645 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073205284 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066165555 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071684483 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073220606 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067707559 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068630813 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070189491 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068956692 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075773509 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073472601 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071784905 seconds)
  done (took 10.596308133 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.162753639 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.154220694 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070168416 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.14499033 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076585604 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079551966 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.147151979 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094224956 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068063493 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068876757 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069103967 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.120802777 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105722484 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.1150834 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078777957 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067775275 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083029999 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.113862971 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.14901776 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.143014406 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083300528 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076461966 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069694346 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069250056 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070753635 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.07835238 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085910531 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.07693091 seconds)
  done (took 4.468273184 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082839319 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.101599598 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073465119 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088631575 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090011557 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.06780602 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070036164 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069775743 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080199074 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078261711 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067887054 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073332503 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074376147 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071208042 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069045317 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074913203 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074695344 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069398159 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070909448 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073224185 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077503669 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080675659 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071470439 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067117768 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074432742 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.06696185 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064255982 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084151767 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068171537 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090250424 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065480135 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074721109 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081803731 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068669235 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.06783372 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067880277 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.06730559 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067274691 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.06984287 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066134998 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066624817 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057855122 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066730839 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079333789 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073716538 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.057068311 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072171347 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072629333 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072725885 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.06524721 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070203166 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070510607 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070712232 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074839287 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072306517 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072350392 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068480458 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065612222 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075301761 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067376278 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06486444 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065879073 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072184029 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065376358 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075078884 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.07178472 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065658807 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066914292 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069167639 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073437044 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066998414 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070323322 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064867081 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069189349 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071623387 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068994996 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068276315 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065694279 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067011712 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067586271 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055473474 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067285094 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053679677 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070385277 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065386723 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065756575 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067054091 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072155376 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079105935 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068640312 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073153357 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068155715 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066551179 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070374974 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060653428 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070159613 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082658946 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082226442 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067271043 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065124917 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081556707 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071861313 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066330991 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.05672431 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074785328 seconds)
  done (took 9.18540926 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.096919132 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.087891417 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070280191 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083960419 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.091295182 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.085696057 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074840435 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076939324 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069215878 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.081928203 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.07350974 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076364258 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068467025 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.07713818 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.093225452 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076603809 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070084434 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076725309 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071978897 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.100729541 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082736368 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081920923 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.075025523 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068409996 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076008707 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079808861 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089194755 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.080095625 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.078430882 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.075730147 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.080337233 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.090039629 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.07426048 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.072319642 seconds)
  done (took 4.46607555 seconds)
done (took 38.595305043 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.797462363 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.957269516 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.780343098 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.162787495 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.861461247 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.023713774 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.882151422 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.777598654 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.965846306 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.814961319 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.015906595 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.872341753 seconds)
done (took 65.631938904 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.793666003 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.918309136 seconds)
    (2/2) benchmarking "String"...
    done (took 2.052854742 seconds)
  done (took 5.690889041 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.080395457 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.313800816 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.022473187 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.779024062 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.782478447 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.085110401 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.575259159 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.295745284 seconds)
  done (took 30.574717173 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.957909499 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.97349182 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.422301146 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.456396328 seconds)
  done (took 15.576851123 seconds)
done (took 63.514722876 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.793464989 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.826936374 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.785687589 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.761437889 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.836035794 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.784304593 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.002622993 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 8.021062621 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.778590893 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.767465505 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.781216851 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.221154968 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.782643012 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.119438198 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.77784892 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.784932747 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.803947363 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.29092013 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.934831121 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.801073901 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.796556114 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.798942318 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.781003445 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.783463567 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.780113853 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.776558142 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.213583516 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.781553034 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.403811354 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.781123536 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.818712201 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.223224551 seconds)
  done (took 205.313325841 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.781084974 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.665165987 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.719495506 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.784697195 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.152031824 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.949241587 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.922674796 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.229192026 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.7759582 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.793155122 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.946597008 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.76749316 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.955013175 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.8061817 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.772256111 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.764018334 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.916960105 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.954022095 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.764060207 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.022085394 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.771851939 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.791780901 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.746767074 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.914562641 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.776273405 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.84574915 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.920287402 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.776896559 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.954607106 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.890481167 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.782744375 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.77881385 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.98533536 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.633166843 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.767184938 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.766314685 seconds)
  done (took 169.266456575 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.159152945 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.764741233 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.767505233 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.764662025 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.778201792 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.764014403 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.89587987 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.891521934 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.223061401 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.26815547 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.815474709 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.587655944 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.761910555 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.834389047 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.775149402 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.762999416 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.7797183 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.796743311 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.76209603 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.764349911 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.890418694 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.774731435 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.87965364 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.765876343 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.762435608 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.768086334 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.129971307 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.759131788 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.768763284 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.023475378 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.7594645 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.760780947 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.65269343 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.418336602 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.84393199 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.760311323 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.766411594 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.760949564 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.982981373 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.759497556 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.761506586 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.763674034 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.938179941 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.760754985 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.892167556 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.759080301 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.258426338 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.757438668 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.760850918 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.570812765 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.422400448 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.759468724 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.762534413 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.763356831 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.760751909 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.761746767 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.767167139 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.558227584 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.832093241 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.757085637 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.762890476 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.766215992 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.759687209 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.922109668 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.758778587 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.272846871 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.815071639 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.971317637 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.878445515 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.753723281 seconds)
    (70/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.821761183 seconds)
    (71/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.847346038 seconds)
    (72/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.751339978 seconds)
    (73/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.755155911 seconds)
    (74/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.752576571 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.752391008 seconds)
    (76/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.835748075 seconds)
    (77/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.750947739 seconds)
    (78/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.884372007 seconds)
    (79/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.75722775 seconds)
    (80/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.752989422 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.802273538 seconds)
    (82/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.822206067 seconds)
    (83/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.751228218 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.752061275 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.638302624 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.748392427 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.753244702 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.089093329 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.816469924 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.74853866 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.751242062 seconds)
    (92/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.751323891 seconds)
    (93/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.751224165 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.750779856 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.881393614 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.880412994 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.52580533 seconds)
    (98/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.750575726 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.749847062 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.512112713 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.750731041 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.893323609 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.74773061 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.931322915 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.746996998 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.832951462 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.751294637 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.750978441 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.748996043 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.780054707 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.749404907 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.809354794 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.746977725 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.119327535 seconds)
  done (took 400.73918483 seconds)
done (took 779.250703268 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.417876853 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.378544678 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.496697924 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.402862831 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.382921406 seconds)
  done (took 13.767009898 seconds)
done (took 15.456777714 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.83558938 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.840559555 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.773288437 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.838040724 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.768613615 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.837969875 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.819470023 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.77358092 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.806462234 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.771816856 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.805068863 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.771881238 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.759096772 seconds)
  done (took 25.090702663 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.990564758 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.983934714 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.817880821 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.000189246 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.79332204 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.986251543 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.910156089 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.895796602 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.914274088 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.760993208 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.760124628 seconds)
  done (took 22.503032223 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.985563881 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.980126692 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.819005522 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.988332318 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.795924882 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.988044833 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.910496062 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.901968309 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.898492897 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.764666867 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.759459914 seconds)
  done (took 22.480440997 seconds)
done (took 71.763171842 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.754709118 seconds)
  done (took 3.442846947 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.781172405 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.914677843 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.759244599 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.759125829 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.753714471 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.760831441 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.757675902 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.754476596 seconds)
  done (took 15.930199866 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.751788352 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.751261734 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.754829229 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.750770872 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.752464051 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.749771965 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.752615605 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.753667525 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.753735305 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.753621145 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.750030635 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.75296048 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.75084877 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.751531299 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.754448796 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.751729028 seconds)
  done (took 29.725422671 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.754368753 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.750931926 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.75298305 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.752055122 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.751135529 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.752355831 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.752511202 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.751505545 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.754595797 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.751549267 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.752061291 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.751429015 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.752383134 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.752295106 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.753198061 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.752568305 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.750888287 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.751864259 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.755497744 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.754984472 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.752059054 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.750546111 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.752443133 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.752147016 seconds)
  done (took 43.749805007 seconds)
done (took 94.536569129 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.45390315 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.215177738 seconds)
  done (took 8.357298032 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.756268264 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.753922175 seconds)
  done (took 5.236625435 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.753318675 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.753599579 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.752925798 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.754047472 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.753218592 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.753481382 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.753188738 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.753700395 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.753384734 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.754432961 seconds)
  done (took 19.22357729 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.754037562 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.754123904 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.751099379 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.754649443 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.753762613 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.751826134 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.754053819 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.75393764 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.753985697 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.755748949 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.753211619 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.751639105 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.753836904 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.751937787 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.753984675 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.752400446 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.750867235 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.750234849 seconds)
  done (took 33.243189842 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.75528645 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.756042419 seconds)
  done (took 5.19932193 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.751606041 seconds)
    (2/7) benchmarking "second"...
    done (took 1.751538598 seconds)
    (3/7) benchmarking "month"...
    done (took 1.75191149 seconds)
    (4/7) benchmarking "year"...
    done (took 1.752113228 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.752334259 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.750294245 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.751037571 seconds)
  done (took 13.948781547 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.754701985 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.913701859 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.994791597 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.434506564 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.75549249 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.756950422 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.702207053 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.758035284 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.759034859 seconds)
  done (took 19.517544688 seconds)
done (took 106.414205492 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.573030683 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.748799003 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.118511094 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.83008069 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.766033022 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.046989124 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.775825962 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.965388386 seconds)
done (took 42.512981247 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.809512845 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.213496259 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.222091602 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.448074634 seconds)
  done (took 11.572490491 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.732661846 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.265676508 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.782923793 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.33948415 seconds)
  done (took 19.822705325 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.117874304 seconds)
    (2/2) benchmarking "read"...
    done (took 2.106306219 seconds)
  done (took 5.919515217 seconds)
done (took 45.813864931 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.755862262 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.753684773 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.755828757 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.754105547 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.754193733 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.753942451 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.751877681 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.75207849 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.75308178 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.754922856 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.755005227 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.754869193 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.754653238 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.755034714 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.754414891 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.752703353 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.75541042 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.752931822 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.752756048 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.756841633 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.753473195 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.756190691 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.753570778 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.7544396 seconds)
  done (took 43.792008661 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.757876024 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.753326533 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.756078057 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.7566213 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.75405673 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.756956275 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.759281749 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.753622318 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.756504876 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.756606146 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.753640764 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.755698831 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.757486339 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.753845698 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.7567298 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.755007162 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.756872487 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.7559457 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.756886435 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.754386396 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.757512073 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.754478998 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.753950351 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.75801279 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.754673149 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.754714282 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.756296711 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.754979506 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.759345978 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.755710844 seconds)
  done (took 54.368687486 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.762008666 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.763982894 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.756155256 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.759980976 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.757816374 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.756869227 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.758322309 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.757231724 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.758150061 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.758908915 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.758732418 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.757482815 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.758006959 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.756744208 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.758003722 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.759825386 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.758938519 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.757143409 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.758059262 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.75767373 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.758133375 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.759117296 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.76009297 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.758095977 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.757382123 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.758533011 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.759366243 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.758659186 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.759372851 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.75799375 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.758480305 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.757525431 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.758774679 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.758365522 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.759355056 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.757917955 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.761922579 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.766493525 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.759229996 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.758553938 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.759550709 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.759685379 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.759767332 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.760838416 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.760179451 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.759985956 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.76020608 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.760191121 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.759608879 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.761330926 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.759340462 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.759947321 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.760779833 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.760298104 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.760293727 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.760701882 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.760008431 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.760080952 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.761068733 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.760077169 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.762060868 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.76141384 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.760590278 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.760377938 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.761291739 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.761179449 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.766571768 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.759125778 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.759534479 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.760392623 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.760632135 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.762520568 seconds)
  done (took 128.387012437 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.761284927 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.758515535 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.758972533 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.758477554 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.758826055 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.761686468 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.758153614 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.762189117 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.758326634 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.761212944 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.761756591 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.759111591 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.758849126 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.761358937 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.761323072 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.761856783 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.760784792 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.758597237 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.761542023 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.762186274 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.760585814 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.760587498 seconds)
  done (took 40.422363247 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.763873555 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.762308489 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.759802491 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.761619874 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.761347851 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.76206242 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.761686027 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.762729437 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.762376504 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.760537509 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.762660684 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.76257486 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.759732962 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.759533457 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.758797219 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.762095338 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.762014777 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.759674915 seconds)
  done (took 33.403488546 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.760064449 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.760083941 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.764785636 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.760537924 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.75973497 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.762176671 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.761250947 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.76409603 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.763437047 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.761167324 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.764049844 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.764199466 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.763660562 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.761951497 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.762749909 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.760774183 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.764290663 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.761548381 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.764442427 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.764496576 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.760885448 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.762996164 seconds)
  done (took 40.472039231 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.764277862 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.764105376 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.762815757 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.760902794 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.761337893 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.764856729 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.764173218 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.763417742 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.763831458 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.763952733 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.76205089 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.764039795 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.762281775 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.765192138 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.76290718 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.762458556 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.76570916 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.764131113 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.765284395 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.764386959 seconds)
  done (took 36.970359746 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.766068605 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.767330236 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.766729978 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.76733393 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.76644053 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.765962009 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.767039787 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.765901981 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.767665861 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.768691753 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.767263139 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.767717378 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.766623025 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.767194774 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.768221329 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.768648332 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.767631818 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.766247719 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.766891317 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.767100442 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.767400295 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.766501419 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.766532984 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.767969721 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.767261951 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.767328606 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.767727035 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.766942887 seconds)
  done (took 51.18124347 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.766585868 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.766667612 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.763638244 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.766599778 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.763993469 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.763848165 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.763852035 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.764391293 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.767275067 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.764163782 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.767752516 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.767364146 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.767807235 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.766186826 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.768883598 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.767076002 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.767090308 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.764696158 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.764823464 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.764149518 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.769828805 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.766137878 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.766944552 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.764292392 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.765249169 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.768042642 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.767060729 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.765625182 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.768105195 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.766028087 seconds)
  done (took 54.685045641 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.788140618 seconds)
    (2/2) benchmarking "in"...
    done (took 1.787164291 seconds)
  done (took 5.27720448 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.765831411 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.769000305 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.769071409 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.7701604 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.766471855 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.767637977 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.769354857 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.766084013 seconds)
  done (took 15.846267424 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.770574969 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.768497844 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.768443044 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.768646504 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.769366824 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.775066084 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.777774994 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.769236465 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.774504303 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.771963256 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.776547446 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.78383682 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.774882571 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.77146761 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.771202042 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.77282534 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.768781511 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.769231832 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.770266392 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.769022255 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.770605187 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.774325991 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.774404945 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.767395303 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.77222897 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.783327874 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.777030302 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.768258021 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.772923148 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.776632369 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.770294528 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.767280144 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.769558337 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.771193363 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.769986768 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.771385745 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.781772348 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.773032342 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.779088417 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.772237686 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.770314162 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.767145421 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.774501788 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.776130599 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.772322851 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.772119127 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.770472901 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.767374869 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.772517869 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.774964736 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.778406188 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.771298739 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.768363984 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.780540793 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.775309382 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.780066403 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.774416902 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.775792168 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.781948591 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.784667332 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.786712289 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.783257299 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.77653932 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.771690351 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.782138467 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.796997879 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.78108596 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.771513504 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.769243753 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.771713497 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.783440376 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.787954445 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.782898937 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.774828377 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.773678882 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.773055717 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.775276029 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.772302923 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.783201342 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.778025541 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.771872157 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.772748436 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.783208007 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.794032813 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.777745114 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.773573268 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.773807557 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.772713692 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.775041644 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.785207982 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.773609098 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.772884415 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.775267147 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.775745231 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.777846815 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.774682618 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.77479915 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.776987412 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.771627794 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.774275981 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.774287449 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.77822863 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.783972799 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.77376959 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.774670224 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.784201048 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.773941938 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.776753946 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.786698021 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.774142375 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.774735234 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.776795792 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.785872863 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.772444781 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.777907748 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.784767083 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.773695991 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.777730691 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.775074105 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.774834036 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.784362353 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.80008555 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.774553656 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.774786928 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.78025325 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.78597593 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.776377009 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.781039757 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.77590728 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.773143322 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.773264831 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.779600566 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.774663985 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.779655936 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.776953754 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.779645888 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.772531169 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.774743917 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.776129678 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.780146645 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.780555585 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.779188638 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.779855267 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.781606872 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.776952728 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.780646748 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.784822466 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.778519255 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.780303579 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.781103597 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.773053843 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.77630721 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.780793626 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.776999489 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.780166989 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.776599564 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.778307354 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.777648605 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.777938845 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.776592193 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.777638694 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.77856789 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.782650369 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.776118303 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.783732299 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.777312948 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.774057534 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.776472838 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.776711846 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.778897572 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.77769541 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.777061421 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.781138025 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.784150455 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.777801695 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.777749715 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.782980965 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.778623522 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.778560375 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.779334083 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.78234638 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.787199984 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.77797201 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.786982358 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.777451778 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.778085833 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.778482709 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.779872683 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.780071167 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.778426193 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.781991563 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.78520629 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.795035277 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.789426217 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.781550418 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.782415479 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.780662012 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.782722659 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.78559124 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.77835974 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.778448536 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.779069536 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.780370657 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.779734023 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.783941802 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.779747776 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.781340037 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.780451192 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.77887382 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.780775145 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.779521302 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.783554126 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.783737739 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.778393104 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.779747138 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.779889282 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.780710608 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.777664483 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.780932213 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.782142472 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.780986509 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.780894954 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.792834626 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.777626352 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.782659786 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.783708459 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.78247129 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.781577828 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.781744557 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.784734346 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.782503096 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.789776024 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.783983804 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.783703714 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.789236763 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.783265923 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.782326414 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.786116928 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.782068615 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.778625894 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.785645149 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.787601388 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.781803319 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.781301508 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.781272876 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.784051165 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.781017646 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.791172236 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.778691918 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.782551582 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.781719981 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.786016786 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.778046218 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.784453244 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.784080855 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.783158777 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.785044939 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.780876444 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.781355638 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.786067127 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.782612482 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.782153628 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.782600292 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.786099456 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.788658439 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.791107256 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.785117975 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.789118837 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.784536016 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.785248415 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.786548702 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.783556332 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.784753769 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.798843115 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.79185628 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.792886406 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.789113749 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.782611522 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.790303061 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.786097841 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.789489428 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.787256737 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.786581359 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.787090339 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.785160502 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.77991669 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.786560405 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.783852745 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.786239919 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.78517831 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.786789768 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.783615168 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.785452859 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.78405949 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.783702362 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.784517447 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.78419227 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.783906319 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.789387059 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.786716208 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.786049709 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.785836985 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.792588116 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.787031063 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.787625481 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.785106115 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.786319453 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.785865508 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.7884647 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.783464394 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.789372356 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.79233321 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.789598316 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.795557594 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.78734856 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.796795087 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.785896898 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.788571259 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.792578047 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.782295214 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.785717231 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.788226138 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.785321068 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.796727365 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.78542293 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.787597023 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.78890208 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.786365035 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.785632952 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.78555303 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.786210283 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.785007053 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.785452236 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.795950951 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.788655815 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.791774757 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.790202884 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.782139271 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.786029903 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.78619746 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.786939405 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.794270396 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.785948766 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.789634225 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.786404775 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.788629833 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.785555262 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.785853134 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.787136805 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.783104719 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.784295187 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.796862403 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.789060557 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.789455621 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.786450035 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.800053424 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.786762724 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.796951577 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.786969169 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.789616019 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.786890039 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.787211857 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.792355911 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.789222041 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.791751576 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.787838513 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.78899412 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.789992804 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.78704057 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.793411546 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.789982824 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.787391276 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.790100415 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.79819906 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.809107898 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.790096668 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.792483104 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.784179759 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.790137013 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.79153828 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.78730476 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.788950642 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.791175696 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.799182957 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.795051627 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.791942968 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.789114216 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.792303345 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.789179462 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.787747306 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.789506822 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.788899766 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.789047168 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.793878483 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.789827924 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.797248424 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.788225557 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.792157635 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.793471311 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.79153708 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.80282868 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.790410068 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.792732989 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.788891196 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.789436087 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.79266693 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.793481622 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.789468323 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.794445857 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.787820465 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.79173942 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.795923877 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.798431977 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.793816329 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.791318763 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.790086446 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.792530106 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.793316953 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.791482055 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.790413392 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.790353435 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.793461163 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.790371024 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.795008324 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.790410001 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.791739645 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.793235746 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.789395268 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.794652045 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.798514761 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.793922362 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.788357312 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.791033707 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.792290699 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.790981547 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.794394912 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.803552831 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.795651741 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.801484489 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.801499905 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.794361631 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.794192077 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.795988584 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.801441909 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.791845651 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.795616124 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.79162837 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.795489888 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.794492824 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.796311244 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.792488814 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.802431994 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.794824672 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.794898707 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.803013404 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.795237856 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.793334616 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.79477663 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.798049223 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.794265521 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.789913072 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.792917307 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.793630949 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.802000207 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.799121584 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.79277002 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.797202842 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.792515324 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.795663864 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.796838244 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.793871934 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.796372814 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.790406511 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.795610641 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.794113448 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.792562142 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.790369856 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.795089035 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.794920548 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.796965038 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.802291321 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.791156797 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.797596649 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.796300865 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.796187847 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.794900003 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.792785141 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.790922601 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.790535298 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.796781972 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.793824769 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.797254699 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.798017802 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.796937791 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.796414701 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.794889928 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.795323209 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.798386367 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.805886345 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.801669016 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.791986999 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.79618864 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.797196142 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.804609252 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.79575198 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.79541875 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.797755167 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.799924568 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.795440002 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.794971439 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.794233122 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.79836741 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.812047026 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.795115485 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.798565239 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.804199235 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.803364433 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.795177105 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.792083401 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.795620126 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.801244407 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.799489958 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.801657033 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.796604977 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.803691751 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.797938422 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.797230813 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.798308874 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.799488077 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.804989645 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.800838911 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.796059757 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.796562342 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.801504127 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.814045461 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.795832667 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.806036546 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.825113084 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.798733197 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.799305139 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.796058069 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.797861578 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.796402208 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.800981207 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.79653161 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.796608681 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.796630972 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.797713033 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.799016314 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.803946958 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.801584629 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.797703615 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.797803796 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.799888233 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.803048967 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.794128101 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.79840096 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.796870628 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.797918747 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.798457847 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.797451762 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.800560996 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.813164534 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.811040975 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.79771506 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.797798494 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.794472838 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.804418029 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.802208874 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.808518452 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.804000788 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.797904482 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.7974646 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.801112554 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.797424857 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.794885566 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.800692071 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.800791677 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.800168015 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.794867406 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.812760141 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.806093932 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.805964099 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.801036377 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.799096792 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.798618064 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.802847701 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.798676963 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.798959947 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.804344719 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.800634516 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.801735282 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.797974201 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.798780777 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.802999721 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.804972096 seconds)
  done (took 1066.785434538 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.797032429 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.796638129 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.796904578 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.796932296 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.797372773 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.79731963 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.79742214 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.797977903 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.797603956 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.796470626 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.796337035 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.795998107 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.796083114 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.796867992 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.795123235 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.796325176 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.797977239 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.797009999 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.797411349 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.797665593 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.797311886 seconds)
  done (took 39.468727748 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.800642438 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.796707595 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.797894157 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.800028001 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.797566285 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.799851978 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.79752094 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.800554388 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.799643075 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.798647452 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.800509719 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.800843349 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.797674918 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.798655633 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.798857398 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.800725769 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.801404478 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.79753661 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.800241751 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.798185133 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.80016754 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.797072148 seconds)
  done (took 41.315577987 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.802400203 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.802929784 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.803347102 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.799656643 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.802056518 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.797440962 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.802143772 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.801799346 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.801269273 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.805736155 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.803084244 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.80486076 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.808990381 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.806393779 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.807620388 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.802317069 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.945834494 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.802722052 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.803286354 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.802623476 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.79948315 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.813249338 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.800436997 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.80010932 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.803691618 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.803223114 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.803096909 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.803293928 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.803394308 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.806468772 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.806822722 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.80251873 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.805631122 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.80672195 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.804459672 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.806961036 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.807204488 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.804502257 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.801268678 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.803275114 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.81425917 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.821011258 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.805223425 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.814445934 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.804009808 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.803819843 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.808469081 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.810379992 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.801444754 seconds)
  done (took 90.311745769 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.804013876 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.803457536 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.80129209 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.803610573 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.803859821 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.8043201 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.804134157 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.803992819 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.802001782 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.802461243 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.805722628 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.801490296 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.801405181 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.803550325 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.804519187 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.800805943 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.801502554 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.801595803 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.802151999 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.801747011 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.801962225 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.804644022 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.80420166 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.803633894 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.806365092 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.803202497 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.802810783 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.806555087 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.803141268 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.801838838 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.806230938 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.804337722 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.806221011 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.802795832 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.803140567 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.804738565 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.805205502 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.804039486 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.805290433 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.804924311 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.806379628 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.806218245 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.805511878 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.805938856 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.803055488 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.80226441 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.802672886 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.802668381 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.804510705 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.806663871 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.805348547 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.804267265 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.807248893 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.804892833 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.806603206 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.807580601 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.804444336 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.80454726 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.807370725 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.804791005 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.805180612 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.807057937 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.80445248 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.807255488 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.806164711 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.804922072 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.804729715 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.80786271 seconds)
  done (took 124.432972333 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.806502971 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.807498048 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.808687696 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.807941521 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.809163255 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.808948516 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.809431764 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.80883719 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.807743948 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.808804025 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.808941505 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.80919728 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.809742647 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.809157518 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.808589152 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.808679843 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.808960606 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.809116409 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.809269972 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.810084203 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.809687264 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.810656281 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.810334583 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.810025315 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.809561801 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.808887267 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.809400022 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.810505254 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.808943625 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.809940227 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.809968079 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.809879025 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.810456338 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.810405776 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.809481349 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.809613441 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.808950739 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.810991212 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.810552834 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.810651387 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.810209605 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.81037145 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.810406227 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.809617488 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.810028448 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.81008101 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.811223213 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.810657309 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.811575994 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.810471211 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.810574347 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.811345352 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.811375179 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.811117454 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.811837727 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.811208765 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.810935522 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.810645211 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.810587598 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.810820648 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.810423905 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.81085046 seconds)
  done (took 113.952392296 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.810246723 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.810915327 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.807831106 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.8080968 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.811156265 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.808484916 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.810821913 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.811788831 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.811742298 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.811065561 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.811598879 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.809586622 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.808623577 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.81133357 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.80864914 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.80874645 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.807238368 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.807623662 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.810769828 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.808283407 seconds)
  done (took 37.938922921 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.809832891 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.811231677 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.80831287 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.808536167 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.810039012 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.808992076 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.810762022 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.811244655 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.807751108 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.811275703 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.811235357 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.811345886 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.80942506 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.8083308 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.812654519 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.80949976 seconds)
  done (took 30.705399253 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.810687777 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.811190764 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.812251343 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.81395036 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.810486511 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.810294831 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.811573463 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.809737223 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.809398816 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.812759281 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.813086817 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.812822401 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.813380379 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.814053133 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.810736667 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.813983301 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.81165303 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.811054924 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.813343948 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.814272651 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.811453183 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.810962184 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.814536226 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.813129247 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.811290199 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.810444174 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.809881295 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.810796309 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.810621665 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.813775795 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.810564288 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.811649438 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.810376158 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.810285014 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.814839334 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.811480205 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.814625498 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.813483375 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.814393293 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.812950213 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.814575996 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.823431839 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.813869515 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.814647954 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.810988071 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.813908098 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.816481534 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.812821656 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.811181011 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.812047406 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.815650096 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.815757109 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.824207469 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.815723141 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.813883784 seconds)
  done (took 101.459045984 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.816635819 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.821564764 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.81185506 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.815607402 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.815795292 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.812733467 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.816306457 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.822505627 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.812602399 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.815076889 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.814710812 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.815898218 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.819059896 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.815985684 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.813996965 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.816318995 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.814548671 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.815633011 seconds)
  done (took 34.43685847 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.815056909 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.816130398 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.817406044 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.813891533 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.813782983 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.8174456 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.814625476 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.816736177 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.816794442 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.815499604 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.817126977 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.816803884 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.815979225 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.817047459 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.814809944 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.81402503 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.819315842 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.816826251 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.815020187 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.814261536 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.81688521 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.819295233 seconds)
  done (took 41.709060779 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.819418112 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.818983917 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.834975278 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.861532278 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.853506925 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.819916168 seconds)
  done (took 12.759022338 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.816532049 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.817625692 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.817196148 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.817809261 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.817682377 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.814318526 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.816226215 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.81543694 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.821482298 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.815691298 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.814961462 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.818249153 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.818132919 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.816093971 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.817529825 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.817765665 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.815485742 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.816316895 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.816651991 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.821028176 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.815413165 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.818576679 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.816542077 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.815614529 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.81966506 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.817434112 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.818962188 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.81769926 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.817398288 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.819727394 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.821263486 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.817179038 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.819930292 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.817237488 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.821072848 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.818761722 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.817338297 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.819422612 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.82127425 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.817617495 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.820652246 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.821067467 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.820633446 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.818108388 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.820669293 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.817297467 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.817139675 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.817852314 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.818557208 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.820174506 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.820243059 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.818166185 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.819879771 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.82077216 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.821040855 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.821100618 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.818652535 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.818835543 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.820897641 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.818473591 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.818635023 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.82120618 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.819652231 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.820152468 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.822729617 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.81806416 seconds)
  done (took 121.774852783 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.819280019 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.823529651 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.819344682 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822178575 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.819338665 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819368251 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819417633 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.822907504 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.819600282 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.819728843 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.823191617 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819499139 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.823401577 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.818899639 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.819823165 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.820323909 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.820453347 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.820524664 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.823870891 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.824124545 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.820456145 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.820198431 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.820319927 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.824002022 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.820797984 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.823635521 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.820515492 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.820298191 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.819888092 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.825561143 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.820796806 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.820792476 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.820620202 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.82129138 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.822625193 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.820283933 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819729495 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.821897517 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.819762402 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.823068332 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.822559024 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.82244233 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.820815059 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.820456235 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.821700277 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.821367136 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.820766927 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.821125412 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.820662931 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.821456321 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.822039526 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.82162247 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.8198402 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.821098711 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.820698119 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.820768869 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.823816284 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.821861524 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.821779071 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.823432823 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.821420119 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.820521164 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827376732 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.822420036 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.821478643 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.821917233 seconds)
  done (took 121.968093754 seconds)
done (took 2485.513980993 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.862218012 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.010035106 seconds)
  done (took 15.629698099 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.003200335 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.953155494 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.839279316 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.868709696 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.836448719 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.835903217 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.848818347 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.835967427 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.84048919 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.83887288 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.840843659 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.02442752 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.836195674 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.83757555 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.839814068 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.935966511 seconds)
  done (took 51.790639734 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.843135799 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.845104443 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.853815016 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.844976743 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.842755779 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.862349955 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.876878073 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.84709719 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.903867664 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.863289704 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.968202926 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.852164399 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.846042963 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.900919944 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.854142549 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.858486284 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.947184822 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.918002446 seconds)
  done (took 35.499361638 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.922112714 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.846531556 seconds)
  done (took 10.547643231 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.843104103 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.866824639 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.858727143 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.856196536 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.844841152 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.850407918 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.843595834 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.851740533 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.844953622 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.862960406 seconds)
  done (took 70.298174454 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.849598493 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.844948113 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.845981951 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.84276092 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.836117768 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.838534308 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.842976732 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.836629176 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.540618623 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.882874379 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.852677068 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.849572685 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.843710444 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.846663259 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.840217263 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.866548806 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.961465758 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.8405911 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.841125039 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.850512865 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.845125339 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.940901735 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.85756546 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.845166815 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.876110907 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.540517991 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.857901168 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.851352954 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.980122825 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.840680279 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.84357868 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.846412299 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.848430776 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.241119986 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.172214672 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.845261865 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.851662727 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.856254724 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.841160544 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.01592019 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.846234421 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.851746164 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.839311242 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.158143059 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.930542562 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.889244174 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.185302637 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.850019886 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.847128742 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.877647527 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.849432553 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.850133223 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.860266459 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.371586302 seconds)
  done (took 131.535594055 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.841060724 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.416162707 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.005126038 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.844813913 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.121749847 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.081874535 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.840323198 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.892239145 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.840352332 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.091903718 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.018359915 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.964590133 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.839669107 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.841352524 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.837855406 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.838687024 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.000987554 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.913546899 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.84000955 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.842524213 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.879192112 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.110304622 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.971698942 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.842131366 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.870175284 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.071701792 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.965901646 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.958806936 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.376893934 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.843682215 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.912401845 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.84335897 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.84290368 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.838982578 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.010482585 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.949806981 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.937990171 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.840977906 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.841564838 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.844384056 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.50579965 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.067364168 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.951723011 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.981197022 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.092297554 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.069937118 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.488218159 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.843887512 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.480314477 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.040646617 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.053694781 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.101483952 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.971386469 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.844542302 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.087709334 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.843073104 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.843171967 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.104915773 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.069353839 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.955291179 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.841715122 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.845264785 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.84272216 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.160702336 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.843650989 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.952004345 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.84322479 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.840765928 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.958479435 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.959323262 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.070851392 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.086038843 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.872944578 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.772184222 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.353807443 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.130152357 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.914785108 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.108556335 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.844452132 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.842327509 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.937728349 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.598447539 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.02210089 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.162536544 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.108287619 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.884759132 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.449345238 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.844871701 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.093889876 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.093655402 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.073190627 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.092579505 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.010282317 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.177436982 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.844631403 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.846095856 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.053310374 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.97595943 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.845301516 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.203543922 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.094913921 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.58078664 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.879641338 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.153208702 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.984069421 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.845865485 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.472307822 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.847541151 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.051116095 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.890924244 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.848553864 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.846196594 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.091351043 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.714477957 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.846242553 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.64471187 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.910399557 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.847437577 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.110974693 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.845852907 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.088559857 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.846831409 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.158509413 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.341656586 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.890787776 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.044409675 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.093249183 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.641777324 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.117864668 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.159963458 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.971197062 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.104814608 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.666322166 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.846518957 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.132009946 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.846408939 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.847454332 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.017882854 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.849901476 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.00359564 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.851258239 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.111608177 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.871342629 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.019943905 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.84929369 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.120537786 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.891525592 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.902710232 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.846929453 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.965604937 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.850807817 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.882651753 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.032830266 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.853291482 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.848594015 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.420206996 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.84848222 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.99733988 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.15002452 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.872743342 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.921617442 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.373647611 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.849324737 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.94577609 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.873836769 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.452099512 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.851476372 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.021242272 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.85040392 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.808567772 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.849141161 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.163226312 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.070134837 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.853585319 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.84899094 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.647099304 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.554724191 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.848981323 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.027555739 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.081040444 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.496032468 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.072681395 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.852057425 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.985123048 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.854423886 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.929304154 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.201758353 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.849821857 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.851333359 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.849571322 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.850946366 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.852626682 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.081056298 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.87834862 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.545684965 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.988932765 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.098343683 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.161404373 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.116630747 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.898176313 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.85582566 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.116485245 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.85103433 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.920205846 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.849900617 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.877112471 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.103555477 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.853429723 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.084052252 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.141065685 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.896718927 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.903905537 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.854185606 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.851046619 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.848638972 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.000861834 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.952255176 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.85511231 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.853067968 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.97097659 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.980964539 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.038595512 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.44365145 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.029925832 seconds)
  done (took 899.056346182 seconds)
done (took 1216.114575608 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.851735957 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.854405039 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.836475572 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.854993235 seconds)
  done (took 29.183811697 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.860950233 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.859177275 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.861405939 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.859209713 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.861008649 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.858483232 seconds)
  done (took 12.949288241 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.890658328 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.852197929 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.854703282 seconds)
  done (took 21.386957487 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.928548993 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.269060929 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.966627066 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.305015279 seconds)
  done (took 10.259856871 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.859821158 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.860196365 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.859992734 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.861880554 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.860719137 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.862495269 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.861709521 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.860542767 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.863428375 seconds)
  done (took 18.543183468 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.060184605 seconds)
done (took 98.171500985 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.851503944 seconds)
    (2/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.062587639 seconds)
    (3/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.043258788 seconds)
    (4/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.821785699 seconds)
    (5/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.922531082 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.882357056 seconds)
    (7/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.973198016 seconds)
    (8/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.456787949 seconds)
    (9/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.369667462 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.016402256 seconds)
    (11/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.952330113 seconds)
    (12/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.840431599 seconds)
    (13/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 9.380174935 seconds)
    (14/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.954446017 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.157077887 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.901008077 seconds)
    (17/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.990393468 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.88908974 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.844861261 seconds)
    (20/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.906518446 seconds)
    (21/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.993359883 seconds)
    (22/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.811680715 seconds)
    (23/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.966266367 seconds)
    (24/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 3.639461005 seconds)
    (25/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.883910422 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.964840516 seconds)
    (27/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.865987603 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.101168919 seconds)
    (29/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.021619144 seconds)
    (30/309) benchmarking ("sort", Float32, false)...
    done (took 5.624922663 seconds)
    (31/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.857680921 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.157741616 seconds)
    (33/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.743890144 seconds)
    (34/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.943598778 seconds)
    (35/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.997049858 seconds)
    (36/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.159228872 seconds)
    (37/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.530853611 seconds)
    (38/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.860167347 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 9.672161823 seconds)
    (40/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.066782616 seconds)
    (41/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.882902917 seconds)
    (42/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.419842073 seconds)
    (43/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.971509716 seconds)
    (44/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.883219527 seconds)
    (45/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.737738287 seconds)
    (46/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.947006153 seconds)
    (47/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.77344284 seconds)
    (48/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.875364092 seconds)
    (49/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.860311398 seconds)
    (50/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.202064753 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.933915989 seconds)
    (52/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.857666938 seconds)
    (53/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.209859721 seconds)
    (54/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.0386949 seconds)
    (55/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.158409908 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.974221525 seconds)
    (57/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.986394342 seconds)
    (58/309) benchmarking ("sort", Int8, false)...
    done (took 4.859304522 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.117196529 seconds)
    (60/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.252673772 seconds)
    (61/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.968036957 seconds)
    (62/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.877555368 seconds)
    (63/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.860075052 seconds)
    (64/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.479184705 seconds)
    (65/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.226455299 seconds)
    (66/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.916181287 seconds)
    (67/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.843172476 seconds)
    (68/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.098481774 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.548329016 seconds)
    (70/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.866349049 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 3.599477432 seconds)
    (72/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.883440975 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.87187308 seconds)
    (74/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.17399336 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.779536025 seconds)
    (76/309) benchmarking ("sort", BigInt, false)...
    done (took 6.862470786 seconds)
    (77/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.944329936 seconds)
    (78/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.138832348 seconds)
    (79/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.858582646 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.970243744 seconds)
    (81/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.883671221 seconds)
    (82/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.922490485 seconds)
    (83/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.857931378 seconds)
    (84/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.860514274 seconds)
    (85/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.96236083 seconds)
    (86/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.433817572 seconds)
    (87/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.014668282 seconds)
    (88/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.927075677 seconds)
    (89/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.010665082 seconds)
    (90/309) benchmarking ("sort", Int64, false)...
    done (took 5.57754046 seconds)
    (91/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.961719814 seconds)
    (92/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.26693428 seconds)
    (93/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.979420513 seconds)
    (94/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.908004561 seconds)
    (95/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.373484273 seconds)
    (96/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.005870398 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.015782703 seconds)
    (98/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.222607854 seconds)
    (99/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.844022891 seconds)
    (100/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.09091503 seconds)
    (101/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.085609734 seconds)
    (102/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.966913974 seconds)
    (103/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.276576174 seconds)
    (104/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.166159026 seconds)
    (105/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.699326178 seconds)
    (106/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.035272025 seconds)
    (107/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.111676609 seconds)
    (108/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.861857955 seconds)
    (109/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.93919941 seconds)
    (110/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.028247985 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.239736103 seconds)
    (112/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.131686461 seconds)
    (113/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.941596425 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.273678437 seconds)
    (115/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.209765231 seconds)
    (116/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.945375576 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.072043904 seconds)
    (118/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.886640027 seconds)
    (119/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.263087864 seconds)
    (120/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.941579447 seconds)
    (121/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.455376744 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.860306729 seconds)
    (123/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.845558448 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 3.255869032 seconds)
    (125/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.924870695 seconds)
    (126/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.945061063 seconds)
    (127/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.878769245 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.504852218 seconds)
    (129/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.881452701 seconds)
    (130/309) benchmarking ("sort", Bool, false)...
    done (took 2.307933706 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.885608889 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.12738576 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.525760925 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.137785624 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.658611313 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.208505109 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.080031468 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.124859052 seconds)
    (139/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.094364911 seconds)
    (140/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.971311123 seconds)
    (141/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.8647618 seconds)
    (142/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.871603286 seconds)
    (143/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.147983474 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.662307705 seconds)
    (145/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.850201182 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.047937943 seconds)
    (147/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.989268836 seconds)
    (148/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.864760542 seconds)
    (149/309) benchmarking ("sort", Float64, false)...
    done (took 5.65695369 seconds)
    (150/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.971909836 seconds)
    (151/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.060298268 seconds)
    (152/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.141846033 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.080621157 seconds)
    (154/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.890702095 seconds)
    (155/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.269400047 seconds)
    (156/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.282020246 seconds)
    (157/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.038600469 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.16904899 seconds)
    (159/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.121647256 seconds)
    (160/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.994568287 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.886325485 seconds)
    (162/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.847655709 seconds)
    (163/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 8.043727836 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.854808575 seconds)
    (165/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.8817982 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.767686732 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.850704654 seconds)
    (168/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.87188356 seconds)
    (169/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 3.48585236 seconds)
    (170/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.94126337 seconds)
    (171/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.865045449 seconds)
    (172/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.101543906 seconds)
    (173/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.892340482 seconds)
    (174/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.926100771 seconds)
    (175/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.216226393 seconds)
    (176/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.891332121 seconds)
    (177/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.369276986 seconds)
    (178/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.013622702 seconds)
    (179/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.373278549 seconds)
    (180/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.008194104 seconds)
    (181/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.44794484 seconds)
    (182/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.263068967 seconds)
    (183/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.382856425 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.958595004 seconds)
    (185/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.887939237 seconds)
    (186/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.3955817 seconds)
    (187/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.027145115 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.982992874 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.136031814 seconds)
    (190/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.948280708 seconds)
    (191/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.298104402 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.996454615 seconds)
    (193/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.868643463 seconds)
    (194/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.865762855 seconds)
    (195/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.869396834 seconds)
    (196/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.915576666 seconds)
    (197/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.073224809 seconds)
    (198/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.713159618 seconds)
    (199/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.870862251 seconds)
    (200/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.888625483 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.907952176 seconds)
    (202/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.852884467 seconds)
    (203/309) benchmarking ("map", abs, BigInt, false)...
    done (took 8.207600361 seconds)
    (204/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 8.066370678 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.930993689 seconds)
    (206/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.056818481 seconds)
    (207/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.239965566 seconds)
    (208/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.472851348 seconds)
    (209/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.872341379 seconds)
    (210/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.84974903 seconds)
    (211/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.876741007 seconds)
    (212/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.246958875 seconds)
    (213/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.720148099 seconds)
    (214/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.102695265 seconds)
    (215/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.462028326 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.254084019 seconds)
    (217/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.854354046 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.553955043 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.083786186 seconds)
    (220/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.871818982 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.159367915 seconds)
    (222/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.895238327 seconds)
    (223/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.961490471 seconds)
    (224/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.895490654 seconds)
    (225/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.201239688 seconds)
    (226/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.91818255 seconds)
    (227/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.177619441 seconds)
    (228/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.97485296 seconds)
    (229/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.035481984 seconds)
    (230/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.855410287 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.323164721 seconds)
    (232/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.945114626 seconds)
    (233/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.319240266 seconds)
    (234/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.314499173 seconds)
    (235/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.898431365 seconds)
    (236/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.2462897 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.920907742 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.909931483 seconds)
    (239/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.090463067 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.461775107 seconds)
    (241/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.865955712 seconds)
    (242/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.726045468 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.754560646 seconds)
    (244/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.166118813 seconds)
    (245/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.955899346 seconds)
    (246/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.80318057 seconds)
    (247/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.124214314 seconds)
    (248/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.004155373 seconds)
    (249/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.012973568 seconds)
    (250/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.089117503 seconds)
    (251/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.18146679 seconds)
    (252/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.060619188 seconds)
    (253/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.931733598 seconds)
    (254/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.901231997 seconds)
    (255/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.966392487 seconds)
    (256/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.85751157 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.902182159 seconds)
    (258/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.87143121 seconds)
    (259/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.052105249 seconds)
    (260/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.974782954 seconds)
    (261/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.882587319 seconds)
    (262/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.076771311 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.951313658 seconds)
    (264/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.39072647 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.208899552 seconds)
    (266/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.064476454 seconds)
    (267/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.89470459 seconds)
    (268/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.15730803 seconds)
    (269/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.900133686 seconds)
    (270/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.056433439 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.562388823 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.108930526 seconds)
    (273/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.495797966 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.424705379 seconds)
    (275/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.374430638 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.254414027 seconds)
    (277/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.958702165 seconds)
    (278/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.992269653 seconds)
    (279/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.569179886 seconds)
    (280/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.075711852 seconds)
    (281/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.248426502 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.949810766 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.804387534 seconds)
    (284/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.89012314 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.964097947 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.954533425 seconds)
    (287/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.37251374 seconds)
    (288/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.951698962 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.986425398 seconds)
    (290/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.583761441 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.629289881 seconds)
    (292/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.02480175 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.198764764 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.061060804 seconds)
    (295/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.777326695 seconds)
    (296/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.01195295 seconds)
    (297/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.952637183 seconds)
    (298/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.498537097 seconds)
    (299/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 8.073395215 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 2.020462277 seconds)
    (301/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.176001086 seconds)
    (302/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.857948563 seconds)
    (303/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.235592715 seconds)
    (304/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.188453285 seconds)
    (305/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.760555187 seconds)
    (306/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.268453121 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.177291425 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.899437966 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.97486568 seconds)
  done (took 1021.414805422 seconds)
done (took 1023.21930965 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.908896144 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.901336925 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.883485502 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.906801936 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.996156822 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.913822118 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.896129187 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.887545468 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.933906216 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.936880454 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.883289248 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.911445925 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.886255352 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.885673548 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.884029125 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.89654664 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.192606266 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.909312258 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.900996224 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.895077594 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.902627374 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.886043577 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.936292722 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.913608609 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.88758869 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.890244809 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.8886562 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.905949152 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.997509223 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.888216963 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.890986711 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.89602555 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.194516126 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.908111291 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.883218509 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.906141362 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.897809287 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.896780483 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.89091586 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.919733662 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.338242129 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.890148949 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.888920824 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.890751132 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.887595874 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.892089945 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.887878328 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.892156914 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.898897774 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.90276572 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.332948261 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.905117874 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.89190695 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.887049671 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.897024947 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.886083361 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.891653463 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.903744077 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.906287861 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.903789019 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.186650616 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.916884501 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.890068687 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.902777962 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.8946339 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.369886981 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.886714939 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.896712623 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.335154465 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.896019622 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.370246981 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.89914608 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.889445581 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.904036912 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.918791474 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.195881724 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.906410291 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.886799815 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.897453276 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.889499713 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.898410369 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.901981174 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.896903941 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.890034913 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.904043555 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.916459006 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.899430884 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.889222146 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.89861731 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.90794511 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.898315264 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.899592972 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.891028786 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.884154469 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.898021436 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.891860158 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.893247079 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.89195925 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.896254759 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.900919995 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.334585095 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.911871879 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.883675885 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.889713119 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.889280518 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.902654983 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.332038115 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.894351413 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.912425723 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.940712375 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.892069522 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.18566994 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.915848051 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.906184119 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.897562526 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.893838888 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.887148908 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.189510791 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.358555437 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.909990989 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.893657917 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.887095611 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.906210698 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.891601688 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.885095761 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.201544568 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.914072741 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.905834833 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.011393095 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.902920935 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.924019969 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.890245125 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.893886579 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.918409446 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.904833311 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.92159101 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.894305009 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.905295338 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.907650491 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.888959367 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.901722637 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.903457893 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.892146522 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.897838141 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.886126798 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.924613141 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.904902795 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.902637445 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.914086086 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.014012937 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.890764211 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.187594542 seconds)
done (took 296.860046293 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.960991624 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.888696205 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.996824984 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.890652918 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.975768563 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.98182295 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.885271177 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.886006138 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.88460635 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.273564873 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.883849145 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.885248431 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.88472691 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.887323598 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.972871918 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.888283992 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.887139394 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.231203687 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.890082859 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.965329517 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.88789895 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.884432082 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.889417294 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.27745908 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.88977261 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.886161011 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.96550418 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.889587225 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.241542132 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.887230225 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.883917716 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.23812906 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.982924152 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.907875579 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.899953697 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.896120704 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.976404323 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.890998889 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.973573142 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.974793727 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.996884191 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.931941651 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.887000245 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.885422551 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.891293416 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.89123294 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.887975083 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.91622047 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.893625138 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.88768744 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.236488196 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.900752339 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.89763278 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.888812775 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.889993667 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.913792358 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.887905116 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.890733057 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.985241639 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.893075435 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.956902437 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.303686685 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.270988704 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.892385548 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.884544834 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.887906098 seconds)
  done (took 185.79281676 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.960820967 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.967354241 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.961421955 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.896937928 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.946634456 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.966236457 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.898670105 seconds)
  done (took 15.416515628 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.900838264 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.893047586 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.947239171 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.94271758 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.892442041 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.046856636 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.891369723 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.905954433 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.89127377 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.946946467 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.894290055 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.894630119 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.898749745 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.890096926 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.944370444 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.905158756 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.00987166 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.894571227 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.892509624 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.0499931 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.890817214 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.899952904 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.949671705 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.906579785 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.892955985 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.902439786 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.478867178 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.894523179 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.890458521 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.892741372 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.891051052 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.935120977 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.894800627 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.893583485 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.889585912 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.012250879 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.893211506 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.89205913 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.894886249 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.891996843 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.89787706 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.894888636 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.894110252 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.892518754 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.893698468 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.921707545 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.89758686 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.895017114 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.89525818 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.89462173 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.947582451 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.896180125 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.893888919 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.892165177 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.95107851 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.900253982 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.897244114 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.893623309 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.895944035 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.890818979 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.05107513 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.946879989 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.896422313 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.947937088 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.89448415 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.89458157 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.901604249 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.896683113 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.951016016 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.895441529 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.946806995 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.892974873 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.055199291 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.92067887 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.896761789 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.901022478 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.899608635 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.900014143 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.890321354 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.905396538 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.893941092 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.898749231 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.904564321 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.895143999 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.891081693 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.009642677 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.008380421 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.894766162 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.912232622 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.90586409 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.895077113 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.951417091 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.897764296 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.893082891 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.950667773 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.016838994 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 2.393540111 seconds)
  done (took 208.777953068 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.90217098 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.905417801 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.901657655 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.916955295 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.900775297 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.898696253 seconds)
  done (took 13.253989078 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.900371614 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.900642202 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.89533838 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.895656796 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.897293981 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.899107161 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.89923456 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.900717074 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.900469608 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.896031089 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.898471566 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.901449254 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.897316085 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.898612286 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.899525943 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.897997244 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.900524822 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.897664547 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.900233285 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.898778344 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.06709492 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.898885907 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.898144237 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.900738641 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.904505932 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.896152196 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.912138449 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.898369008 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.898582419 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.906038906 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.899753131 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.899766055 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.903924872 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.906812049 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.9049063 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.901954561 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.903226751 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.903588688 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.895876147 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.899428183 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.902421442 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.898734906 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.900675363 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.903584357 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.904626849 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.906514437 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.904447609 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.909465846 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.902417309 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.901793434 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.903300057 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.901617278 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.901875967 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.902138518 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.905795905 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.906915304 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.905006557 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.903233924 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.899654256 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.901917124 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.900876474 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.901913265 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.905523288 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.907324247 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.898735436 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.904968245 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.906227188 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.906914973 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.902789003 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.903064775 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.906456921 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.9008747 seconds)
  done (took 139.91577208 seconds)
done (took 564.991372369 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.157199007 seconds)
  done (took 8.986232911 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.942653853 seconds)
  done (took 8.864591459 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.624378229 seconds)
  done (took 10.458648887 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.91373913 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.921764916 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.902248627 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.902105658 seconds)
  done (took 29.479395545 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.203415147 seconds)
  done (took 9.034344313 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.909620019 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.890237479 seconds)
  done (took 15.697441869 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.943589125 seconds)
  done (took 8.77289159 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.985716811 seconds)
  done (took 8.818142821 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.913661044 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.897685286 seconds)
  done (took 15.656079603 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.880400207 seconds)
  done (took 8.709764149 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.623354717 seconds)
  done (took 11.46078509 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.904961664 seconds)
  done (took 8.744958929 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.891857404 seconds)
  done (took 8.722531959 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.0946927 seconds)
  done (took 9.922844706 seconds)
done (took 165.158526508 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.896979072 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.896456974 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.893417558 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.893291633 seconds)
  done (took 29.404826694 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.931462503 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.932730128 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.934174492 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.941445405 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.935109918 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.931939408 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.942540296 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.924524311 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.942931317 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.935220427 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.932586555 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.934977574 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.931333544 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.923969807 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.932819228 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.951980642 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.941943892 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.932750579 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.923927593 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.933120635 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.898137594 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.941995983 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.936547018 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.899402508 seconds)
  done (took 48.19576738 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.096633074 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.970034326 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.053244739 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.951356032 seconds)
  done (took 9.898186039 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.951636968 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.952186231 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.961258412 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.003088715 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.027947652 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.959664025 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.922834777 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.918084688 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.906107442 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.950242559 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.026261817 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.967513806 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.03213763 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.898014426 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.086687633 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.898610551 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.89603696 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.949322206 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.000534877 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.014202807 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.899871068 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.949260111 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.954300632 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.975451558 seconds)
  done (took 48.92745755 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.897513206 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.904632501 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.903874851 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.895999025 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.897515523 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.895686749 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.902154085 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.897653782 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.91751205 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.900492649 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.8960753 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.898568669 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.898886785 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.896563286 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.899324683 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.909341481 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.910240602 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.896712874 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.900305679 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.905533462 seconds)
  done (took 39.852042461 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.893801731 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.746959663 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.246912004 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.14813214 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.894160646 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.892599575 seconds)
  done (took 31.650170659 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.909603433 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.962341873 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.905686862 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.954777105 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.040265439 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.905665328 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.900100758 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.96760306 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.011395213 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.970084002 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.917790338 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.92903324 seconds)
  done (took 25.201420474 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.900915278 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.893856912 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.893397534 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.911434022 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.910105455 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.908954001 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.908448877 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.894714656 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.91326392 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.917786168 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.907549937 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.91544406 seconds)
  done (took 44.708715457 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98296029 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.938790502 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.89613329 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.584046664 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.278690187 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.110150058 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.550515889 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.23397674 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.899415269 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.170464897 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.953080361 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005643378 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.158072561 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.388448633 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.934550631 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.359696077 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.203132643 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.104840749 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.929086489 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.565811864 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.963924228 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.082771661 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.739523649 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.963367318 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.114656489 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.033204208 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.163684232 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.901426104 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.036228353 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.936915996 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909725364 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.904079786 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.178398996 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.282004295 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002830988 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911562341 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.527136701 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.613877933 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.893865638 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.669138193 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.620761612 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.027661937 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914753983 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.904404355 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.837051952 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.051794186 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.279848421 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.905838414 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.616587709 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.905482496 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.920475209 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998087285 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.906128368 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.720410777 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.824815965 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.904156531 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.903258171 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913147034 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.476645978 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.007442746 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.086605765 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.880050095 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.999726029 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.584067147 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.284497595 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.053349049 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.907184674 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.912602303 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.839704921 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.65940376 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.960821229 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.231728521 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.922105977 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.55397518 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.208607446 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.047588431 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.844453506 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.167960092 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.43521211 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.878543477 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.132110507 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.904845169 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.838759947 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.845763882 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.837364408 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.15646252 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937836941 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.662521585 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947583736 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.2310009 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.908072039 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916146459 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923145367 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.127546889 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.782111692 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.897559979 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.753502509 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.096696218 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925447865 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.235903479 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.840887805 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.913267956 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.161772354 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.115036593 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.981505951 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.397393638 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.064364836 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.45897325 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.956732517 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.049307054 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.951803873 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.17520234 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.961711747 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.026071552 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.963471312 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.910273054 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.199550956 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.501547442 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.048405914 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.042701183 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.035698722 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.219653834 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.934847033 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992300996 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.916593861 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.907445304 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.695106146 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.461829196 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.906957927 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.913003211 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.981996595 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.957589023 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.910889769 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.857455661 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.533189191 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.04333573 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.92271338 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.133708625 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.472945897 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.223281343 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.842660633 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.238451634 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.000958132 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.131755247 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.552548892 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.987009857 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.169367572 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.98288556 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.02326381 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.959060158 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926637544 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007689675 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930657009 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.063925021 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.203825655 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.914201961 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.916536932 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.685455979 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.944669465 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.918351717 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.917301952 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.666620113 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.176522271 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.936587387 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.917347783 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.799638817 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.923477493 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97814382 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.918113328 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.921519661 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.450296872 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.643443383 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.916616374 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.496025348 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.134951838 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.920730072 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.60325112 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.031026132 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.994531857 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.17830557 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.972259269 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.845247951 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.623670183 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.604196611 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.913848767 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.848074685 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.912719672 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923448237 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.923200312 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.108694017 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.183863722 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.953898979 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.599097786 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.957050054 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.923234315 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.918620872 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.912621633 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.42708648 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.041769948 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.100485201 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.961455183 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.058118399 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.926621492 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.848491727 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.915772362 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.919713806 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.913488804 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.914680384 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947717852 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.612629943 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.29941541 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.172640532 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.568981669 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.926752981 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.658707514 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.973829085 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.909684327 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.669203869 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.235543143 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.951433183 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926547435 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.926525906 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.692047066 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.62566802 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.479505532 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.220115172 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.212905917 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.346245879 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.133507627 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.945854561 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.252668123 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.847978382 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.472021362 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.979617285 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.260658147 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.85902273 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.998765932 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.557204237 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.260530527 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.928915428 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.141110405 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.296788404 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.730072504 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.062443242 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.12832783 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.95102623 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.062284667 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.877766204 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.209684938 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.058603566 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.621985187 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.126751094 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.253318343 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.662617724 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.040766469 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.917385531 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.590450113 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.000348215 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.625736155 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.089778706 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.10922014 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.933761797 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399405185 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.920630108 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.145532145 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.261271635 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.080189475 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.042318069 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.851498988 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.928170873 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.92697248 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.917919535 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.919219061 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.798676844 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.170136355 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.929215616 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.851577753 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.042066829 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.202307411 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.821380532 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.923136127 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.917191967 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.213658012 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.456649534 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.086443998 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.017739173 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.43900913 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.925049037 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.854225057 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.853911103 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.611712466 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.926452116 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.895574775 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.12019254 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.022596237 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.833841663 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.991922268 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.998937224 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.176964465 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.933288512 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.185664167 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.19505117 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.618378733 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.942741152 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.018839698 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.663285165 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.032224414 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.920313277 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.156976603 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.677272892 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.14557776 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.974092376 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.872825886 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.922899809 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.131989872 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.921359967 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.910447032 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.155463807 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.640874148 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 7.005107368 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.224747141 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.995814757 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.905494412 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.972580606 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.012332561 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932489862 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000711632 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.930695111 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.930979673 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.934161621 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967742112 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.91314421 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.047651883 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.935543482 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016061441 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.065188611 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.447217837 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.925054062 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.191425004 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274983047 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.24107258 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.985397693 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.920121076 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.924117316 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.859420064 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068291283 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.149097661 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.196493007 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.055321135 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.040000134 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94734515 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.667959123 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.132800838 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.16530062 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.196072657 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.81720908 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.426960741 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.965446406 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.925076639 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.934084899 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.134591315 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.12937848 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.219582245 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.073105277 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.002423678 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.285858457 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.193607641 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.925022403 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.925019669 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.513215619 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 7.054564504 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.604705915 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.965180584 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.913191372 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.20326766 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.93274485 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.310692488 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.944334087 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.07950341 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.698955714 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.653854408 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.217497763 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.907208972 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.985630368 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.192536935 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.29952347 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.238651858 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990661875 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.935302454 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.037548572 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.073630781 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.810251844 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.92412663 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.926341214 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.97617324 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.636219565 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.936880441 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.198008408 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.238052465 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.924475213 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.810492992 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945685039 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.933016964 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.147785328 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.184621857 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.178082833 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.932264532 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.92870985 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.739380626 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.18869602 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.982464012 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.853537317 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.923337107 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019873146 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.16809963 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.942498959 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.376195479 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.635566501 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.187581549 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.923581503 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944343257 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.068735784 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.279627087 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.23989952 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.456203096 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.124545117 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.507523027 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.485318194 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.225955338 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.92793828 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.068709174 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.228390558 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.930117411 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.99902975 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.962997866 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.186553553 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.235008377 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 7.03107408 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.631400509 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.903275759 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.266720142 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.485154811 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.861156673 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.929415491 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.984570757 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.917813786 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.049617631 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.927962341 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.820196974 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.06943126 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.703655113 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.197823032 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.922277886 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.909195122 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.717041939 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.216922947 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.970182117 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.075291157 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.938778772 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.608837652 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.284243171 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.191145306 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.012352046 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.938234833 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.935337743 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.9340771 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.916606957 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.127455525 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.130316521 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.201203996 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.04094054 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.966762736 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.936851586 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.15007723 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.14531574 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.890706008 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.071615765 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.016814015 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.974754982 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.844986778 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.434328756 seconds)
  done (took 1697.349915915 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.947410124 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.95061266 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.926478767 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.946358821 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.954357929 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.015001239 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.96687101 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.968796657 seconds)
  done (took 57.541071576 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.916814993 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.13051405 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.923938919 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.917790121 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.919493475 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.912562728 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.083033995 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.925733821 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.918225565 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.923452455 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.911311624 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.907944826 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.223246978 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.926333894 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.906317263 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.884867044 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.914001985 seconds)
  done (took 75.100197921 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.905692908 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.114865784 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.9304597 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.909936238 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.900102511 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.907538188 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.690830602 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.908830391 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.883143932 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.002982579 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.515296168 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.895222372 seconds)
  done (took 87.403686501 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.887950874 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.886036578 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.886316561 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.887120048 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.887539436 seconds)
  done (took 11.254338143 seconds)
done (took 2208.340569988 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.129110384 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.100720238 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.110823251 seconds)
  done (took 6.021314095 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.026754053 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.073625469 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.193886784 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.21497198 seconds)
  done (took 10.32633116 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.162923788 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.258201341 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.083198458 seconds)
  done (took 8.310304139 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.2734506 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.876521847 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.984766705 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.865932456 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.870121326 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.86596966 seconds)
  done (took 22.412204396 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.868824595 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.868938733 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.868667239 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.869943769 seconds)
  done (took 9.275041514 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.848734074 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.594551263 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.846293878 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.856151687 seconds)
  done (took 20.944224178 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.617213227 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.618795305 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.607888276 seconds)
  done (took 9.637397265 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.613694797 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.855285237 seconds)
  done (took 9.26458808 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.161761042 seconds)
  done (took 3.998909108 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.035754066 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.168861941 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.391835017 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.421929351 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.484069702 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.788027333 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.214172694 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.147183173 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.316242167 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.350812363 seconds)
  done (took 25.15758802 seconds)
done (took 140.425452368 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.27781443 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.895846493 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.098311433 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.227963652 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.112652658 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.127197705 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.113935722 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.212079042 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.734652677 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.729530812 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.22365978 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.105545083 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.049497419 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.116736865 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.046105419 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.121409609 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.136298089 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.253881797 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.898498339 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.104234598 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.08922137 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.836700442 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.04540085 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.851395394 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.125870961 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.019862341 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.412197359 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.104460672 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.048381537 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.419477333 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.0309864 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.24587145 seconds)
  done (took 171.645689485 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.623559826 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.860409392 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.859684628 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.858112116 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.473607142 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.858370196 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.861560166 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.861064984 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.136076226 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.124865971 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.869406004 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.527557675 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.880199065 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.862272657 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.876254659 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.87045646 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.255007282 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.751259424 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.891729677 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.892697247 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.895713188 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.475345065 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.889967917 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.51842351 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.274125828 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.892304498 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.862098396 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.892187233 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.874349656 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.875380292 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.882712782 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.859810765 seconds)
  done (took 209.186542473 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.862819201 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.862805455 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.862529764 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.862955432 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.874676115 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.869986985 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.865879822 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.863763287 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.451671564 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.427925397 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.863975868 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.868290063 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.864648061 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.859732598 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.872045104 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.862169862 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.88391798 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.869919703 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.8668066 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.871160918 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.872657244 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.655877421 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.864339526 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.663404289 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.871604444 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.871293118 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.863187887 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.870753988 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.365406608 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.8879415 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.881558805 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.863479896 seconds)
  done (took 220.845473414 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.065724982 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.871092756 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.873170949 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.826214768 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.87193943 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.869502144 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.863419605 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.06985606 seconds)
  done (took 19.132101347 seconds)
done (took 622.652450823 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.430007234 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.200648142 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.047167926 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.894515073 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.159641503 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.934059219 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.892402558 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.960234905 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.619691619 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.960488634 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.540947521 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.911980247 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.629153262 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.914164692 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.020563013 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.946420659 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.42820167 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.516984332 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.074026868 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.971139088 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.063062345 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.870794417 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.9663926 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.650300884 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.644477647 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.87816843 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.090799519 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.431187559 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.898270621 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.057561674 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.656434392 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.299189418 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.90328629 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.888720486 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.941929854 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.924858148 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.267449097 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.90152711 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.018606314 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.634644876 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.977297707 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.49590287 seconds)
  done (took 103.314529542 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.862355215 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.858642936 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.858228482 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.860462753 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.860431276 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.86180266 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.855877039 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.855316022 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.857167451 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.854722338 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.861619899 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.850549054 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.849778103 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.85091178 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.850842385 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.851165261 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.852791256 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.851684323 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.852171643 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.85225217 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.852075548 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.857617181 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.854581453 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.854269593 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.851022151 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.852447398 seconds)
  done (took 50.041893141 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.863304704 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.012498664 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.094381744 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.883763986 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.868076849 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.869888106 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.887403757 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.870093493 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.869491843 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.869433424 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.961027189 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.871081596 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.886915747 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.090752188 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.881096247 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.864401582 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.865346567 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.869644035 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.016158525 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.883206132 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.88973132 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.873686357 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.888611695 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.881206153 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.872234691 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.869828325 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.871282472 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.334765531 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.879653787 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.966804249 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.95148454 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.890408868 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.303897189 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.101066647 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.933915771 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.872662352 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.866515215 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.969423639 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.877015304 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.871634815 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.889058733 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.876079495 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.100694111 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.37081871 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.881379194 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.870273078 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.346773745 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.975638181 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.910396971 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.877480956 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.099996372 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.884761591 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.86884852 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.869533151 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.90732966 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.878705272 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.874455173 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.225739171 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.879917012 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.887155673 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.87152353 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.870433285 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.015314699 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.870287946 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.015193061 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.873025602 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.872882432 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.859182571 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.083427254 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.869943909 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.355461442 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.866991737 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.852899565 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.950503093 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.010965447 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.354992602 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.867424148 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.010469956 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.30706628 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.882376435 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.862784748 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.314083653 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.886125132 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.85885488 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.854895521 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.854296273 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.85487932 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.900555001 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.873594179 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.295181326 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.362312043 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.228689589 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.880815215 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.870128938 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.858157983 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.219520703 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.862596401 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.856233968 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.076221434 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.375860594 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.869107412 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.866180209 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.348030249 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.869052314 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.876003869 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.863632328 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.086489191 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.870299833 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.900486101 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.855337715 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.865976109 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.861801992 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.877692897 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.862973555 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.856320909 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.334355163 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.968966793 seconds)
  done (took 231.356291993 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.854944774 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.850767693 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.851584888 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.865382556 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.851618843 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.858839933 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.851938631 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.854887278 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.859131827 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.85505139 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.853746313 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.863745883 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.854194375 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.858254769 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.899809521 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.859365267 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.465952065 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.855113611 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.853039375 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.863274598 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.502687925 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.859392355 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.853940075 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.866035312 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.854864475 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.858275923 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.862302177 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.891768205 seconds)
  done (took 167.118745387 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.858114217 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.977849106 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.871861726 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.890531404 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.865847525 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.85599581 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.886621741 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.875470425 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.867338605 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.857535069 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.854596217 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.920856468 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.869036854 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.959410112 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.889145229 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.886822736 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.964709992 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.863357721 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.855972771 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.858074975 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.893105804 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.852906854 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.922523299 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.983893284 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.873644064 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.975608082 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.861247178 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.859428019 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.859573998 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.97790888 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.870289432 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.919915258 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.890170982 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.875837487 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.983958635 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.975147095 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.962907262 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.887241448 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.864494539 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.860246484 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.857983905 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.851545869 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.978008068 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.872560161 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.865009938 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.969348479 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.87447 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.861266602 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.866002142 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.858400555 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.876810433 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.880135092 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.929395118 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.989784324 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.887753106 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.883019443 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.888245148 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.170568469 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.864538861 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.963976164 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.850630668 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.975492706 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.874784368 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.849528734 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.858612736 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.866628849 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.889391645 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.8893508 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.965331169 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.864715288 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.961231381 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.892558386 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.863120401 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.860692484 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.862858102 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.979230835 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.976343113 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.889909441 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.895809579 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.889435434 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.854786234 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.865975798 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.850012178 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.883772595 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.864651383 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.978615827 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.976958035 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.865465997 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.861456209 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.862183572 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.865648831 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.889521118 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.98634321 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.894656286 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.957039585 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.929944914 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.93950619 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.875441808 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.876558327 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.866322773 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.9319029 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.875015548 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.875046756 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.224503894 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.937637872 seconds)
  done (took 201.603776287 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.958262047 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.322625975 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.915230475 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.922310005 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.150922459 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.294791574 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.635404889 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.913721363 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.910364371 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.939239353 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.075333911 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.965369565 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.926265643 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.896185148 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.324008829 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.900196343 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.913514766 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.934931215 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.915210327 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.443779882 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.216607016 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.037099925 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.909911512 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.070521921 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.890888491 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.181064331 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.231274472 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.282647163 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.946016394 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.258156839 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.243850775 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.5912072 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.131277314 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.151710332 seconds)
  done (took 74.199223604 seconds)
done (took 829.433630354 seconds)
SAVING RESULT...
DONE!
