cset: moving following pidspec: 5745
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.352616885 seconds)
loading group "string"... done (took 0.557721546 seconds)
loading group "linalg"... done (took 7.104661875 seconds)
loading group "parallel"... done (took 0.160827938 seconds)
loading group "find"... done (took 1.130889825 seconds)
loading group "tuple"... done (took 1.786776972 seconds)
loading group "dates"... done (took 1.194307541 seconds)
loading group "micro"... done (took 0.224343626 seconds)
loading group "io"... done (took 1.001367003 seconds)
loading group "scalar"... done (took 37.246693367 seconds)
loading group "sparse"... done (took 11.585389466 seconds)
loading group "broadcast"... done (took 0.911323719 seconds)
loading group "union"... done (took 12.311145405 seconds)
loading group "simd"... done (took 4.291818568 seconds)
loading group "random"... done (took 8.433832796 seconds)
loading group "problem"... done (took 1.869330789 seconds)
loading group "array"... done (took 19.820085043 seconds)
loading group "misc"... done (took 1.768278843 seconds)
loading group "sort"... done (took 3.132584424 seconds)
loading group "collection"... done (took 16.435989843 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.475058375 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.120178068 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.112668525 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.116330145 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.129605624 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.113412505 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.121613107 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.082317277 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.782244378 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.142786136 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.116871019 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.407457257 seconds)
done (took 5.032348718 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.172774391 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082109862 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080669244 seconds)
  done (took 1.293307739 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065755113 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.119497305 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.064995046 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.065817147 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066144018 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065558789 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.06496799 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065378677 seconds)
  done (took 1.644326611 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.071886104 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067842206 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067986786 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068035416 seconds)
  done (took 1.407527295 seconds)
done (took 5.723964624 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.754552185 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.200694725 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.180890329 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.394842735 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.130369768 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.155702576 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.646997155 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.306143183 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.180790729 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080429812 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.102742185 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.313649913 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106917229 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.635262219 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.072935658 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.088767787 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.136305527 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.409633256 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066413129 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081349044 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.087902204 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127101607 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.086924845 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.073761434 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.143470072 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.066877157 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.12802339 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079045171 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065449789 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.205459382 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.171260978 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.645044695 seconds)
  done (took 10.095341913 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095002579 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.095914648 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067700473 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.13559674 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.096847854 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068913102 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.069827921 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066378579 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.08604764 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.126439255 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.087629993 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.100041059 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064939489 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068041984 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083430743 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.202199137 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079103451 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080096993 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069577229 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.07435722 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.116084178 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077173172 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.076855768 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077966089 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129966839 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179920827 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095260293 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096843994 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066081445 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079488497 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115658363 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127982527 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06707692 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067135089 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.125072922 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095193085 seconds)
  done (took 4.580859474 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.276531309 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.142451439 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091900402 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.131501271 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065727214 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.107420408 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064621384 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.079810237 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.201190259 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.283396468 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.086062381 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.576877766 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111129722 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102331365 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066860715 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068272005 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066079734 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.335470116 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.107246049 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102806735 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081447025 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069620809 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068703539 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.341137446 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069136121 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064659327 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069319284 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.058625936 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.124900846 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069033361 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.911154723 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.123089844 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065691769 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099374768 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.162050029 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088481199 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.222557927 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.144538402 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069699445 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066357062 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.153228166 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072223985 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.070989264 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.084436542 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10536 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.11393306 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066464243 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068635058 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.16463488 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065044596 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.077628127 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.976440162 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153310181 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076579473 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.06552303 seconds)
    (55/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.065483138 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.248650084 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.088002595 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070780889 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.06547819 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.179991134 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.132134979 seconds)
    (62/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.063617128 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.066759746 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.065520961 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067363318 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068927665 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.349780216 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065028081 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.711752938 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069863717 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077913048 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070802967 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071587585 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072767495 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073971678 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.086817474 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.0673544 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076661764 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067480655 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067160919 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067823195 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.085570398 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.35767538 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.06562834 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067372981 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.063378718 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.084880131 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095148879 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066431297 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066066824 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100377961 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.175255379 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.06549327 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.107535234 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068523151 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.087354707 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068741411 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.11579159 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.065230949 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.08495896 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066754476 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.09646837 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069022611 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098623971 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080211072 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067284921 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.400649821 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064743783 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.06507821 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067229257 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.064640698 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.066772295 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.065705544 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079292091 seconds)
  done (took 20.808475972 seconds)
done (took 37.892084175 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.272099562 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.078422068 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.077188113 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074347437 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074412932 seconds)
  done (took 1.798366352 seconds)
done (took 3.001684683 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.117809199 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098635868 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065643333 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097625322 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065054964 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101203564 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.100686003 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082290608 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100746805 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.06540985 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097749114 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065163288 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065343632 seconds)
  done (took 2.348262779 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081698606 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083844422 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07119075 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083720378 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064893737 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083768294 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08193879 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090143575 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081838855 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073079482 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064678812 seconds)
  done (took 2.062363718 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081157076 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084565103 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070404383 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082826898 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064371803 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08287434 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081780429 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.086905287 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082200473 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074338378 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064625263 seconds)
  done (took 2.052990849 seconds)
done (took 7.657056776 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.075730068 seconds)
  done (took 1.262249622 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.593970086 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.017861247 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080349688 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111345001 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.18401847 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.119565046 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.275132635 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.085828125 seconds)
  done (took 8.835265972 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.086340159 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.082222914 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069947842 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070332762 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.073283928 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.072399012 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.072037423 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.07050014 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.06960027 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073114491 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072704644 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069429969 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070179474 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070434565 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072796324 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071785174 seconds)
  done (took 2.425830039 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091268708 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.09198238 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.07400921 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.07576352 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072886808 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073007429 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.075001233 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074552883 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071672204 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.0728275 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.075835427 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074811692 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.072570784 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066055593 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.075017704 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076727851 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071810167 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075431214 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.076205187 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.07599197 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075491541 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065821443 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.072588559 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07517515 seconds)
  done (took 3.09711223 seconds)
done (took 16.816358154 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.110715237 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070636395 seconds)
  done (took 1.376186145 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.079873731 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083885699 seconds)
  done (took 1.365587726 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.081466261 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.064852134 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090184851 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.079164311 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.067593929 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.067047903 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.087586559 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066305291 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066947026 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.067608229 seconds)
  done (took 1.941763312 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.067103334 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077603025 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069665487 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.08140915 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.07507299 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.065627183 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073058789 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067249952 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.076477338 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062299543 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071449875 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081601066 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072088349 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084519963 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073978659 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.069422703 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071200103 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068144476 seconds)
  done (took 2.514164258 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065171325 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066186092 seconds)
  done (took 1.338749984 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066359081 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063044212 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067645357 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067419574 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.064688079 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063478226 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.064139345 seconds)
  done (took 1.660367979 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.389876184 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.112168187 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.30075575 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071972563 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.08290686 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.250413926 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064811276 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069983585 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.0702345 seconds)
  done (took 2.663248544 seconds)
done (took 14.069574934 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.077646176 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085023111 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.096641952 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.365730453 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091029313 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065168941 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114173357 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.19165435 seconds)
done (took 2.304115699 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.209322275 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.60791702 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.383399627 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.197934085 seconds)
  done (took 2.397966868 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.320738764 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.086530271 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059979293 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068581603 seconds)
  done (took 1.755079893 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065386824 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068516043 seconds)
  done (took 1.35236815 seconds)
done (took 6.930295967 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065264252 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065308453 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.064302876 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066917074 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.064351417 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064613964 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067408995 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066901557 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.067391018 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 0.067307605 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069841185 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064528791 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064466317 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066808684 seconds)
    (15/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064516712 seconds)
    (16/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064454406 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.083715161 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.065517448 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068097532 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.072119302 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066954583 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064586707 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064813087 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066681215 seconds)
  done (took 2.863359384 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.081871868 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066518372 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072513469 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.072514013 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071293023 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071935316 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.072893292 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067604687 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.072208445 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069491684 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070834927 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071261395 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.069024418 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071131244 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069238369 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071386985 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.072247649 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067796511 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069659278 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.07087085 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071962786 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067644913 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071022723 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072644525 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070646879 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070704048 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069549261 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067539286 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072537115 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.070820951 seconds)
  done (took 3.355328049 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069275664 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063137355 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064869899 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072225301 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064857248 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.066109951 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064173088 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.065260279 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.065417357 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064293326 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.066378479 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06449334 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064822494 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.065553418 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065351695 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.068207281 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080617582 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065201998 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.064527774 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.065256386 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068094645 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.06480687 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065230858 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.064703765 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064581977 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.0642886 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064677017 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.064385039 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065647568 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.178849313 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067695016 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068454917 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.064369691 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071295429 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067911121 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064287623 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068231787 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063981182 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064918403 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.064576859 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.064111868 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064063203 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.064701436 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070972232 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.064630423 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.066279155 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064846315 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.0656601 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.064863277 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.06708112 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.063891691 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064622596 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.066217183 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.065442151 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068582515 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063672403 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.065196167 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064457597 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.06552783 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063965087 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063773055 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.063726154 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066463434 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065239391 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078716278 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.07066699 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063841561 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065943778 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.065190106 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.066874605 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065771969 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077241694 seconds)
  done (took 6.111988632 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.086276872 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086783355 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066125039 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066208118 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062955057 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06564359 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068722392 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065446404 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066748969 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.071028187 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065143947 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065936945 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066516838 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077968241 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065583408 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066320524 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070684749 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063357847 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064775633 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068519787 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065356379 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068581077 seconds)
  done (took 2.753625159 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.152424527 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069406884 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104326465 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072751814 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067751307 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072289571 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070615509 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070783736 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07157216 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069423791 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069015316 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071136648 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068434511 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068981975 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068991282 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068843176 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070857549 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069042053 seconds)
  done (took 2.609995198 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076415688 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065867474 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087167508 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067805483 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067000623 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069372611 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071829094 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07503851 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.069357914 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067017549 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.075549887 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069157241 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.069255902 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066882285 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069260189 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066993321 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.0688841 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066714481 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075820807 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071660921 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071545942 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074954679 seconds)
  done (took 2.798327669 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078271394 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067133142 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.084115634 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069817273 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064044019 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065080814 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.071442822 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067002447 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070839418 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068203321 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067100683 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065178281 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070566953 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066762013 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070351497 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066751562 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068399592 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066427798 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068193554 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062698973 seconds)
  done (took 2.615165975 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085361496 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068618 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068967915 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076185407 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06831233 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.068198179 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076411565 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.068302955 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068311861 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088371615 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068459147 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067949848 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07621925 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072945147 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068688618 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07582897 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07611075 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075650832 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068117156 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06835414 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088399734 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.06822106 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07589045 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068373803 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068011383 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.06770616 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068097892 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073370075 seconds)
  done (took 3.272451912 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065548216 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064821359 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062389364 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.06232357 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064912445 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.065032796 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064470278 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064740757 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066747706 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064275462 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066842656 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066526082 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066921787 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.067048533 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06703014 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067102056 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066660023 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.064463513 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064608093 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064314 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.067228262 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066532565 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066549978 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064871871 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064601196 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066843475 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064651876 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064072959 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06652319 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064352457 seconds)
  done (took 3.20607358 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074485987 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073687601 seconds)
  done (took 1.390835737 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063159833 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079398491 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063576509 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070105759 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071212678 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067831747 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074285938 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070954588 seconds)
  done (took 1.798347247 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.079976606 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077865674 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.068689589 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.082014527 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.078137814 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083801484 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132206647 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066502615 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.07302837 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065162496 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.080982882 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066387017 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.073204831 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067872961 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072675635 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073061026 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064787858 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.073243046 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069556359 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.065636614 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068275324 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075995875 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069089784 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062701376 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.068452275 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.089047936 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.078346989 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.066688171 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069773913 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.074396536 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072238865 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061072882 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066843152 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.067306855 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064759553 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076421043 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082550565 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069718744 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.075628495 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067877179 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.077978904 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062230898 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.071446482 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.073315713 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077123546 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.067029071 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.067520492 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062288904 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.0647541 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069221025 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062143787 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066902688 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.06184518 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076768345 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.07089121 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077481563 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.065810567 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068471253 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069997189 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069977339 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074572487 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068758396 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069292056 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066429271 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074008672 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071406795 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076245002 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062199966 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061258837 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064970103 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077195997 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089877871 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073386877 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.067594294 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068043231 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.064354941 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070218053 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06811241 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072832379 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.073207371 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.067189096 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072402739 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07454985 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067308994 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069701273 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.075373881 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065556467 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070103372 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065221172 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083718323 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065788397 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.065748626 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064386318 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077354592 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069820334 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066712455 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066194629 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073833143 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061283006 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.067431865 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068159112 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067494101 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076938944 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070690918 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071033826 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.074936976 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.073488965 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066397169 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069451862 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062892894 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.0666407 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065780568 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.07297727 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060415481 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068976757 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066820906 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.066692716 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.200592746 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064229233 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.065914798 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07320261 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071649365 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.064908762 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.062688043 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069308975 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066118484 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069259515 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074238781 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064620463 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.060807766 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.060547635 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069247995 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066369993 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069769805 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070249913 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069465029 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060196637 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064097146 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.070520741 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.074329224 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.065825749 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067202344 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072031003 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067751715 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065686162 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072436364 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.073076615 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066131809 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.07111602 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066170782 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.06179458 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068888598 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.068321514 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064111587 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069691758 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069084209 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068421411 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066030296 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064147913 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073163614 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066221176 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065129227 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065323724 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064686358 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.075933789 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067163781 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061259083 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.062875828 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.074788325 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063303765 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065231736 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064566998 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.067263222 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066415154 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063794064 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.064947207 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067836064 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075630535 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068972517 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068007129 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071484533 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076560997 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065604589 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.06814226 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065633669 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066310474 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066334996 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074081544 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.070858681 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070202011 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068248473 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063044476 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071181244 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072914937 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065716276 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.06489055 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066398607 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.071203957 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072893039 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.071454619 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067902423 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065421989 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06754014 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070377577 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.06977033 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066899985 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.06639423 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073973961 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.065284473 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.074606186 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068057502 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.077391179 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070800277 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062035356 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070062642 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064658216 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072889581 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061976401 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064603011 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065123123 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067582997 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065666543 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069212574 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.061061051 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073380463 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074576924 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066710466 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.06579338 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065690175 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073047232 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.067920608 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069901932 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069117777 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.072373429 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07627481 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.065794073 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069090235 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.076371959 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.065777641 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.190998888 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.073185428 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065838409 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.067227602 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.066478119 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066710006 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071506273 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.077288413 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.074750442 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061847789 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070065049 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066336255 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066451086 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062885296 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072827639 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070470999 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068767608 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074233994 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069198766 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.068570691 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071695321 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066168918 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.06767553 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068093342 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069725596 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067250912 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069277652 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066822662 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070957829 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.06678574 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.065281529 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069600006 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.06845032 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068183094 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073777968 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.067693769 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068054675 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069380838 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.066972036 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066992743 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066234194 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065166509 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069354237 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067047025 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.065969905 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.067794294 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.060735511 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074145213 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065729679 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073070712 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066186241 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063147689 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.072883383 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.067862841 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071733012 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066449085 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066822523 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067107603 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.06735671 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070240857 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073935471 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065692308 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.078033192 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075981343 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068245403 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070178142 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067560999 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069668002 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066438991 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068115894 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067577696 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067996194 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.0673577 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072215293 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070088362 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066875446 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068808452 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.068217509 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.067525808 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.068296841 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061593882 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066161342 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066230854 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066710258 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077093458 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067614563 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066539647 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.06612495 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068004326 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.066137783 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063634631 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.075217108 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07691994 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067656061 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074349724 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066244884 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068674695 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07806921 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061502449 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065073361 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064348311 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064970881 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073944083 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.067725555 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075902111 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066792503 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066200995 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.064046862 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.067638286 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065286859 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061264725 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.064127202 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069943018 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065205843 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065133315 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066252784 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068578112 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066877078 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07552592 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065506436 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.06709781 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.066580089 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062760929 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.06385092 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.063402065 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.200410304 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067604661 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065202703 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064628309 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.067571042 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069340002 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068975996 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.06766685 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069707729 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077399073 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067430115 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.07075702 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070183285 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061636535 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069353881 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.065891557 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065661968 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065302835 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.06911518 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069957314 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066968798 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074187142 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065684645 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066982897 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06626506 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.063785528 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065161747 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065226196 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066011746 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.064556816 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067571301 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073479081 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063880216 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069237213 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065999182 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066892602 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072164993 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.066925411 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069122262 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07307603 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066286088 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067527382 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074143898 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070464757 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069586804 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067173746 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067395862 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072443127 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065073725 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073361649 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066717051 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.066012604 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067591685 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.06370258 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065259918 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065910904 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064958183 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072319066 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.066411796 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.064838759 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065255119 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063244804 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068109891 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071282132 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075120004 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070032682 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070965674 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063275732 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064399086 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067975717 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065605418 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069461731 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069489437 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073037725 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.069471965 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067341206 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.066084973 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.07648392 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072722853 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070742384 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064996356 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.070931218 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.068132803 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.06907739 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.06826486 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067321548 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068595678 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070904201 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068619276 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066722872 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074262496 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070466539 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068085378 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.06871692 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067994037 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067591941 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062785034 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.068189965 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069493719 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072588415 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069410588 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067053074 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.0772899 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064580002 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067110912 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070298551 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066362996 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071443526 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062194949 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068403638 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067810875 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067635799 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061990457 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065595393 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064228152 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.06840006 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065136782 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061579648 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076234312 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074834953 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068504466 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065006002 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065067276 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061292141 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061144487 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.19853389 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069102893 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070842894 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.077498271 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066920023 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066504243 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062454727 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067314088 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070679413 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.07137735 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.06549748 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063705843 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066867566 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.071317716 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074434306 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066354102 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.067709417 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071131578 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070064782 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066043209 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071207145 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.065150213 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.07201374 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081084281 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.06932542 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068727544 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.075013621 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075564546 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068765043 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063449144 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.068843172 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071200909 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.068120988 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068913722 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.069283761 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082382993 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070905209 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066715951 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066759246 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.07098498 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067459729 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076437152 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068845165 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068930492 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072205995 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071179406 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.077377763 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070625704 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07558204 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070825495 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071154286 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.066801836 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067868742 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065292573 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066396833 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068761278 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.068515542 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072829723 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075994152 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066973475 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077706416 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076914122 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.069484417 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064231599 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066871075 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067068003 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062739074 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068196999 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065350845 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.065457503 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065292772 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066177682 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068272906 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072820436 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068113792 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.068117761 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067156256 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061248402 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069092768 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069214691 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067960303 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063839386 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.067408699 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067545594 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070927586 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070054239 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064926865 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068643647 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068632696 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067665775 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062428529 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073545791 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066221186 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069118797 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066333664 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06732357 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068308847 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070895682 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072671637 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068551397 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.06965897 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070904923 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06914094 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064307577 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063947773 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.072179277 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064584968 seconds)
  done (took 42.830893222 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099318111 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062097736 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061471133 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061403226 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073293596 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062227085 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061128565 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062199901 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062377081 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064465184 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061536519 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061283292 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069656373 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07662722 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072811628 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065580552 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061378418 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.0623231 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061316881 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062314197 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069948255 seconds)
  done (took 2.732856369 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.072685598 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.068894756 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071501161 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074170604 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066412682 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069360683 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071368312 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069894892 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.074549408 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066141798 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.074787388 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069550588 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066148346 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.066143947 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066067669 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069892745 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.074998244 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066427443 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.077838647 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071529899 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069581818 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071250092 seconds)
  done (took 2.859132096 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066433005 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065167994 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.066904262 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061001075 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066419686 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062061576 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070109398 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.065103849 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.070080724 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.06612691 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.066288714 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066053291 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068951357 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062407903 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066584401 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064843713 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.109918361 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.070347968 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066437457 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.067399339 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.06245838 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068132534 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060812864 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.060778543 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.063869431 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068455804 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065440888 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063315801 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064935564 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065317725 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066300659 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064575074 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068669634 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067285015 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065402141 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065673762 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066653421 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.066589038 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062172983 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.064666793 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067210783 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062900752 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066975254 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067991459 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065153636 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.06453952 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068071593 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.066310333 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061933024 seconds)
  done (took 4.572959672 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.077696299 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.106710222 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066302235 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087117374 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.078958437 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.0748299 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069625 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088308578 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063771698 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065188299 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082703147 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080766729 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066715342 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.071564444 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.070331527 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066637398 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067824001 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065492399 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070656481 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066085058 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071015487 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072988426 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.080692982 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079724995 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070459843 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065775452 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065912665 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.07066593 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.079158057 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071023308 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070931213 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071880732 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.081126236 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.068254909 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066153883 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068462011 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.082469152 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.06658792 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068882586 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064354917 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.068351707 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070014816 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071607355 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.082041437 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066531505 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070913834 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065984244 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062558215 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077463385 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.066798581 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072111634 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079195261 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068233877 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.064523523 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068478706 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079070852 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.06433065 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.062712719 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067389161 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076303222 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062228756 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068120759 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077607813 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066027354 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071383011 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078123652 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.069592069 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06834068 seconds)
  done (took 6.337806039 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074307837 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.071618582 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079609726 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078673845 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071131916 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.071089113 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071133639 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.071131412 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07071454 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.0757184 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071120853 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.091347108 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.066677518 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073750401 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071044081 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071035701 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071021529 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071419106 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071234956 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071373221 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071608948 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079026064 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071325788 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079059552 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.096637288 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066739736 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071372316 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.07117036 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078925641 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071132686 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.07838262 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071419938 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071510719 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079014083 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.077956157 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071090569 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064474177 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071029942 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.070852705 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071164616 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066339848 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079023307 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070649831 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066368853 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071011488 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070618127 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.078488101 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.077582949 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073474098 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075382545 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071304979 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.078799458 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070578979 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071022895 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.078738136 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.10338701 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078740939 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078773855 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070815637 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.078368195 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078258835 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.084324884 seconds)
  done (took 5.956046045 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08200121 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073298426 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.075486644 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060736365 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063036505 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069091784 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062899181 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063545551 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073711297 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073104539 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075647362 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068512665 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071734554 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075392575 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068639817 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071595498 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068543861 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068628274 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072905896 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068682126 seconds)
  done (took 2.742465559 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073365644 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.081763884 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066804488 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071252536 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.067648013 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070744855 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067436259 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067969482 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065774823 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068353344 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074805625 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074707609 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065985163 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070743547 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.074512723 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070401643 seconds)
  done (took 2.461034943 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.073688442 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071593428 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.078290372 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065437754 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063461491 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062116662 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.064785794 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060505031 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.06173436 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.076399786 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.064651703 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.067816247 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065174708 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063428839 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062142228 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.0676436 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061488057 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062358414 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065262476 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077107157 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.075168237 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063524101 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.065291901 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.064780995 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065082474 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.069511574 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064609712 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.062734113 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062171814 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065306293 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065162521 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068161215 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062155519 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.062750652 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063514742 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062422714 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064530867 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.064868171 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.0676965 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.064780076 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.062808402 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.064182815 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.064593894 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.065363571 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061013939 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066061918 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061559833 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.066794487 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.062765833 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065090775 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.064651791 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067292562 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065388427 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071656749 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067671476 seconds)
  done (took 4.944581308 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078785594 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068704234 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061126065 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062805946 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069685217 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068597779 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070174386 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068152987 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068699049 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065115329 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068467331 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069450738 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068629026 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069307382 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066721161 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068809352 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06106569 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066850126 seconds)
  done (took 2.562417776 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.069822688 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064562997 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072205148 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065027189 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.064888231 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067174212 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061157196 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063685969 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063463397 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.064828714 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06495997 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067291672 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064179013 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067159716 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.064682846 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06493992 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067150362 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063504141 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064646178 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060814038 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067159572 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063626697 seconds)
  done (took 2.771551641 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.07087191 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.090407933 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.136456811 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.082515979 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.080109983 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.077423013 seconds)
  done (took 1.872385022 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088944149 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077224459 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06576365 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08630302 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072414293 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066361936 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066242696 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06663014 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074635372 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075416838 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066573741 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074597444 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074569257 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074252694 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072428619 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07194384 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066402132 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066558065 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065673483 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083012295 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066264445 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07456314 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066408459 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065913738 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066296579 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0740292 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07473124 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074897212 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065919483 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074639476 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072100867 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066488286 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0750954 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074918516 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068133132 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075029134 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066995268 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083376874 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07331799 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074553298 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068043941 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0724865 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075776616 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071460318 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075236596 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066786097 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070999079 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066840631 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066629796 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084559767 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071988978 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074300624 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072129441 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075118213 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075004064 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084590236 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075276647 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078151113 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072381457 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07736901 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074189793 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071586061 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073974816 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074944432 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072655035 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074064597 seconds)
  done (took 6.146612488 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080690449 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.084807263 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067530254 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075193669 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074542871 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066616243 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066614235 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066407605 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067139177 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066710896 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105971002 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067012084 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074392458 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074662695 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066944555 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066473634 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066551457 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074182002 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066132905 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08476775 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066589819 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074105125 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074269681 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073754534 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075210164 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071885706 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0668426 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067110766 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066713633 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066349244 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07123384 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066834357 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07402366 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066381828 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074513405 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066615064 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066584553 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071592969 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066641229 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072227834 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074139525 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083010633 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066517698 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066467888 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075255671 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066444017 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066655943 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066478029 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066277604 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066017594 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075327526 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075054864 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075550498 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074190758 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066765105 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06668587 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066352455 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066307808 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066523378 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072014381 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07398282 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066635361 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084528612 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066171186 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066190395 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074125786 seconds)
  done (took 6.049078797 seconds)
done (took 128.830510748 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.183148033 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.16887746 seconds)
  done (took 1.679975994 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068236141 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.096151084 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.075919375 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.127750301 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.06595806 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.098949381 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098401129 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.076667441 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.06506829 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065331917 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065492066 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068064538 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130418268 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065556082 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.064992716 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.067846212 seconds)
  done (took 2.64212234 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.095751708 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.15592159 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.09845473 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064258722 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.095401307 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072036807 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.06373792 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074006565 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070050969 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064354503 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072569651 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070178349 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.063984051 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.06960038 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070665343 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.074251175 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065707111 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.074511649 seconds)
  done (took 2.758451149 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.10002409 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.089187849 seconds)
  done (took 1.533537031 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.152301991 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.104924186 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.148272656 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.342762532 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.164650212 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.22773864 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.126101275 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.125823741 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.121066164 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.122174675 seconds)
  done (took 2.977748507 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.097076901 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.150395649 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.252837281 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.113824492 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071358874 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.093561307 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.114530294 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077001677 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.079899434 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.07929431 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.07939144 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075498296 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.097693159 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072756991 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072258365 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075445132 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.101149916 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071350912 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073720567 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.07562285 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.098204396 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065120171 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072650084 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071169022 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076552698 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.07633694 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.064846133 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.064461866 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075787534 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073331103 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.075890263 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092525677 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076652894 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105969768 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069219966 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106685691 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075767181 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073124459 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073107698 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072869869 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077876853 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078131411 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071200083 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075034867 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064644539 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075202966 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.064667793 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.064883748 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.076961236 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066109902 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077219047 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076232671 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.107148234 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066515102 seconds)
  done (took 5.896062614 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101230246 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104101108 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070527185 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.107757422 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096746095 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070449689 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.10004507 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09000042 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.10179956 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.091975669 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.087976694 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070046156 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081006351 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082292996 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.109251407 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.100812002 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.094618106 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070571788 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.101172061 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.101620558 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067910227 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094015126 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090042736 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.10084389 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067028765 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069453907 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.066992531 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.06997222 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.075922644 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077658655 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069462667 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.101036819 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083945041 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077581424 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066489353 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066921731 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06825387 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078164695 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.096809092 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078309962 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077009929 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06701057 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.06707868 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069055975 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.090145323 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066733227 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078002536 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.079686795 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078371094 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069003449 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069414445 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067104647 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068681445 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078580774 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076404587 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079627008 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079133535 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067734907 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067826028 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071101741 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080289873 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078116428 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078329014 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.092064076 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078421646 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06772472 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079630687 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083103955 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067502314 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069009975 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.0680929 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068699595 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069208372 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077157763 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077556298 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06938992 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.06925629 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067567054 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079103975 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078160802 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067320045 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076471105 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06639956 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067596711 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069082946 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068764089 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076229448 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.078488804 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069051105 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06714865 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.067826486 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06744111 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.065745377 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075228179 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077689404 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.076417478 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076423346 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067573328 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.076873294 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076138168 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068427564 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.076793756 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.197208271 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07068089 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070146897 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079327789 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.077961077 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079362198 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069036795 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067764222 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078418708 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08106114 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068190423 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.077860798 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081124391 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.078700837 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.06746478 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08036193 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068939024 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080077818 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069450775 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079307733 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067926163 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078251902 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068782717 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068243601 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069227627 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.078387164 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069830162 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068022587 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069289914 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069635361 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078561335 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.08195654 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07046689 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080645057 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078144359 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07050269 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078989175 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068169719 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079315513 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068980942 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070186712 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067230957 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081739977 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067645534 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068390767 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06869224 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080392523 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068240478 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079454135 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078120797 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067002096 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079987546 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079390594 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076762087 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.078859564 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069542395 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068173357 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067498164 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069757347 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077773798 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078401567 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070215368 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067653259 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.07743957 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.078647592 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.066828056 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.07765955 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077849065 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.081226858 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068089195 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068814816 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079377301 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080221267 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077400635 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077850443 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07857351 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067883272 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076484061 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07750966 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067332325 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083650283 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06732867 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081357692 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078722431 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07589846 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078263373 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079574652 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079402028 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.078737789 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081040513 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067168735 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.066770689 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.077903507 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067112759 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068137393 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.075784917 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068104837 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068059298 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.080982046 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066779732 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.077104535 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.065863397 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.0761161 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065310116 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068086531 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.212759425 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068824093 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069735578 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079459909 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06980682 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.077341075 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080433548 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.078525407 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06833382 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070508439 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078968445 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079036027 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068265351 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068317708 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070062442 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078276441 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077359603 seconds)
  done (took 18.600440791 seconds)
done (took 37.440420764 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.206638005 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.148922706 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.178274196 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.116803512 seconds)
  done (took 2.093887835 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.120745426 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.099311801 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.093513647 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064069575 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.099885697 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064071474 seconds)
  done (took 1.922626651 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.309335097 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.208662636 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.182637764 seconds)
  done (took 2.078871076 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.196552748 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.187276804 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.390232016 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.251797471 seconds)
  done (took 2.510087936 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.142072625 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.088248167 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066035713 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.081867331 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.132267765 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.158900899 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.099872933 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.124655269 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.076878946 seconds)
  done (took 2.399356576 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.145304899 seconds)
done (took 12.530247725 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.095143269 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.122786409 seconds)
    (3/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.243403046 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.143856171 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087590828 seconds)
    (6/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.222915711 seconds)
    (7/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.153039715 seconds)
    (8/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.142490499 seconds)
    (9/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.076767637 seconds)
    (10/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.079106628 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.13832746 seconds)
    (12/309) benchmarking ("sort", Float64, false)...
    done (took 0.123962165 seconds)
    (13/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.210816884 seconds)
    (14/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.194623187 seconds)
    (15/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.082480445 seconds)
    (16/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.082785492 seconds)
    (17/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.075480078 seconds)
    (18/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073790931 seconds)
    (19/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078175682 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.135759955 seconds)
    (21/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.089480377 seconds)
    (22/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072101485 seconds)
    (23/309) benchmarking ("sort", Int8, false)...
    done (took 0.146652985 seconds)
    (24/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.110901344 seconds)
    (25/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.076170515 seconds)
    (26/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.161127954 seconds)
    (27/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.129337669 seconds)
    (28/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.154639343 seconds)
    (29/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.086495898 seconds)
    (30/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.082381619 seconds)
    (31/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.078425847 seconds)
    (32/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.220220876 seconds)
    (33/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.182255988 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.064397181 seconds)
    (35/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071990689 seconds)
    (36/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.20005685 seconds)
    (37/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.050574069 seconds)
    (38/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.075387499 seconds)
    (39/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.20519588 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070813481 seconds)
    (41/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.066303341 seconds)
    (42/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.071088331 seconds)
    (43/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.167077367 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.105320879 seconds)
    (45/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.148373058 seconds)
    (46/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.137677148 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091159923 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.093303224 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.087995208 seconds)
    (50/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.076519337 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.130600707 seconds)
    (52/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.073925789 seconds)
    (53/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.070505713 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088469898 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089027192 seconds)
    (56/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.1040087 seconds)
    (57/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075001607 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.088991821 seconds)
    (59/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.071920679 seconds)
    (60/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071423272 seconds)
    (61/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.070056845 seconds)
    (62/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.064499759 seconds)
    (63/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.165616656 seconds)
    (64/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.09029925 seconds)
    (65/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.182356828 seconds)
    (66/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.072142669 seconds)
    (67/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.214172744 seconds)
    (68/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.051900638 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.089839346 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.10123719 seconds)
    (71/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.07461655 seconds)
    (72/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.050618748 seconds)
    (73/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.06536302 seconds)
    (74/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.097978261 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.088510304 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.111230085 seconds)
    (77/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.1460711 seconds)
    (78/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.096756337 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.073848599 seconds)
    (80/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.070104179 seconds)
    (81/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.182708166 seconds)
    (82/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.166569925 seconds)
    (83/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.216299891 seconds)
    (84/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.159548138 seconds)
    (85/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.083502457 seconds)
    (86/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.150736833 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.13939961 seconds)
    (88/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.183950463 seconds)
    (89/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.070033818 seconds)
    (90/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.074520646 seconds)
    (91/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.174834984 seconds)
    (92/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.160416512 seconds)
    (93/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.051957537 seconds)
    (94/309) benchmarking ("sort", Int64, false)...
    done (took 0.06670098 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.06507924 seconds)
    (96/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052959897 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065106962 seconds)
    (98/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.051490616 seconds)
    (99/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.052968738 seconds)
    (100/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.150421861 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.064816432 seconds)
    (102/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.408722725 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065188898 seconds)
    (104/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.086553589 seconds)
    (105/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.13617521 seconds)
    (106/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.063871199 seconds)
    (107/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.157738899 seconds)
    (108/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.076751374 seconds)
    (109/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.112926221 seconds)
    (110/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066728413 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.112764786 seconds)
    (112/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072437641 seconds)
    (113/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.053388872 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.097456451 seconds)
    (115/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.071773696 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.095246664 seconds)
    (117/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.050759495 seconds)
    (118/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.165941311 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.142060633 seconds)
    (120/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.080345336 seconds)
    (121/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.050896756 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.08820747 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.12682551 seconds)
    (124/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067804212 seconds)
    (125/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.071311486 seconds)
    (126/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.050597642 seconds)
    (127/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.137058724 seconds)
    (128/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.088249168 seconds)
    (129/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.135701766 seconds)
    (130/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.173531353 seconds)
    (131/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.090068256 seconds)
    (132/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.05085666 seconds)
    (133/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078284837 seconds)
    (134/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.068027964 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.08883288 seconds)
    (136/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.137766224 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.064254955 seconds)
    (138/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.107122498 seconds)
    (139/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.072915611 seconds)
    (140/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067913373 seconds)
    (141/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.071570141 seconds)
    (142/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.06940674 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.064128817 seconds)
    (144/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.193369906 seconds)
    (145/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.175740716 seconds)
    (146/309) benchmarking ("sort", Bool, false)...
    done (took 0.131334807 seconds)
    (147/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072177596 seconds)
    (148/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.173731147 seconds)
    (149/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.071481964 seconds)
    (150/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071427377 seconds)
    (151/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.106813762 seconds)
    (152/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.07087228 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.06972935 seconds)
    (154/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.065075479 seconds)
    (155/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.07038875 seconds)
    (156/309) benchmarking ("sort", BigInt, false)...
    done (took 0.181458113 seconds)
    (157/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.068371942 seconds)
    (158/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.070973863 seconds)
    (159/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.070427895 seconds)
    (160/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.052508066 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.064347993 seconds)
    (162/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.10878212 seconds)
    (163/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.050430295 seconds)
    (164/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.068467203 seconds)
    (165/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.051628729 seconds)
    (166/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064309536 seconds)
    (167/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071885666 seconds)
    (168/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.073810514 seconds)
    (169/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.050481603 seconds)
    (170/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.064137223 seconds)
    (171/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.05341545 seconds)
    (172/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067672668 seconds)
    (173/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072212222 seconds)
    (174/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.052789481 seconds)
    (175/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.066313692 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.087610898 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.118019227 seconds)
    (178/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.066245423 seconds)
    (179/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.050965786 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.063925114 seconds)
    (181/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.051408486 seconds)
    (182/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.095981137 seconds)
    (183/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.076099191 seconds)
    (184/309) benchmarking ("sort", Float32, false)...
    done (took 0.124463822 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.116541981 seconds)
    (186/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.073263559 seconds)
    (187/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.086014153 seconds)
    (188/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.051497557 seconds)
    (189/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.07294972 seconds)
    (190/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053027412 seconds)
    (191/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067113095 seconds)
    (192/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.221082179 seconds)
    (193/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080788194 seconds)
    (194/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.150115082 seconds)
    (195/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.087120993 seconds)
    (196/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.061897314 seconds)
    (197/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051728214 seconds)
    (198/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.062272796 seconds)
    (199/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.150232701 seconds)
    (200/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.167163303 seconds)
    (201/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071393805 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.0853973 seconds)
    (203/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.097873225 seconds)
    (204/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.072992403 seconds)
    (205/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.117865259 seconds)
    (206/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.078412768 seconds)
    (207/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073119933 seconds)
    (208/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.066059805 seconds)
    (209/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.148651898 seconds)
    (210/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.052367622 seconds)
    (211/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.070396098 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087036016 seconds)
    (213/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.177052453 seconds)
    (214/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051190153 seconds)
    (215/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.05189389 seconds)
    (216/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.066352368 seconds)
    (217/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.060912423 seconds)
    (218/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.065759642 seconds)
    (219/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.063475968 seconds)
    (220/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.146296565 seconds)
    (221/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.074244548 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.13086475 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.09093841 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.075786983 seconds)
    (225/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.107204073 seconds)
    (226/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.148677996 seconds)
    (227/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.052073343 seconds)
    (228/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.072893411 seconds)
    (229/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072387183 seconds)
    (230/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.051083057 seconds)
    (231/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.05095126 seconds)
    (232/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.051983568 seconds)
    (233/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.08599009 seconds)
    (234/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.065697916 seconds)
    (235/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.164258296 seconds)
    (236/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.050844158 seconds)
    (237/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.050865896 seconds)
    (238/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.064660079 seconds)
    (239/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.052108107 seconds)
    (240/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070118747 seconds)
    (241/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.071400709 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.09482905 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.087410979 seconds)
    (244/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.070521569 seconds)
    (245/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.063350665 seconds)
    (246/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.062893051 seconds)
    (247/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.113331266 seconds)
    (248/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.064982622 seconds)
    (249/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.051133606 seconds)
    (250/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.050572491 seconds)
    (251/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.070819692 seconds)
    (252/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.134235976 seconds)
    (253/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.084436286 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.093254729 seconds)
    (255/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.050512268 seconds)
    (256/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.168929176 seconds)
    (257/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.05123793 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.06417743 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.099196987 seconds)
    (260/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.06418293 seconds)
    (261/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.139340621 seconds)
    (262/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.05194673 seconds)
    (263/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.051304366 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.064352601 seconds)
    (265/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.050863814 seconds)
    (266/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.063946466 seconds)
    (267/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.065280108 seconds)
    (268/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.102138445 seconds)
    (269/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.061235383 seconds)
    (270/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.065415804 seconds)
    (271/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.070916593 seconds)
    (272/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.065367182 seconds)
    (273/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.066048042 seconds)
    (274/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.071948227 seconds)
    (275/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.061098725 seconds)
    (276/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.066830007 seconds)
    (277/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.051311742 seconds)
    (278/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.05341783 seconds)
    (279/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.061702899 seconds)
    (280/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.050350645 seconds)
    (281/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.064135313 seconds)
    (282/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.050465034 seconds)
    (283/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.106075258 seconds)
    (284/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.071754826 seconds)
    (285/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.050791287 seconds)
    (286/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.05203476 seconds)
    (287/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.06491785 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.071308958 seconds)
    (289/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.05074244 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.062967239 seconds)
    (291/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.065593463 seconds)
    (292/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.051467422 seconds)
    (293/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063342581 seconds)
    (294/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.064140904 seconds)
    (295/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.06561453 seconds)
    (296/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.0514617 seconds)
    (297/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.05192867 seconds)
    (298/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.071585037 seconds)
    (299/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052290284 seconds)
    (300/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.050644043 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.069747242 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.064004376 seconds)
    (303/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.051459156 seconds)
    (304/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.077011245 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.084381292 seconds)
    (306/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.051333776 seconds)
    (307/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.05031823 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.069460836 seconds)
    (309/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.051582563 seconds)
  done (took 30.179679304 seconds)
done (took 31.569042392 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084104885 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091077321 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073900222 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092941594 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079936735 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075866248 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071421121 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077449445 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.078739354 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080194549 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077665164 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054368408 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.072986359 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.072717336 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.07337233 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089565755 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077301302 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.071829659 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.071759701 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.063711716 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072183 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065022563 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066595864 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.053971663 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.076452782 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070453696 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071104844 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.072588897 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.064605819 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.064642367 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.067578529 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.071579286 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064632428 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.076150813 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.070804895 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.071670203 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.072978808 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.074501309 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066104364 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.064546777 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.072899698 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065140807 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.071667185 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072160785 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.070751064 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070096843 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.071679398 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.076339378 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089561541 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067123682 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073185931 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.074863187 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.074916915 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071368684 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068643283 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.071561534 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.069314121 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089345928 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.07213172 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067206694 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.072400478 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.072654843 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070102527 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.071376491 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.071826466 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.073486071 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074220982 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.069753177 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073161609 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.069572102 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064590539 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.071666526 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.067655085 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064470825 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074028089 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075825495 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063476989 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.07012324 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.07088405 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070042724 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.063736766 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066669618 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066131115 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070521651 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066199865 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.053681921 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.067960466 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.069784892 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063334825 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.071440443 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070139928 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071024548 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066176791 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.073911062 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.063545709 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069270345 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.0649489 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064201208 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.065666213 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.067901305 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064067972 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066237735 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.072960004 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065755855 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070328254 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.077627635 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064337129 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.07006753 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.06308624 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.063426815 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.0773768 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.072489485 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064318226 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066398221 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063101528 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.070887867 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063359869 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064402208 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.063909497 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064129953 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.069740604 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064432347 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065649305 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070161659 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.075310543 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.06337085 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.0664819 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065273457 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.062994527 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.068183677 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063079469 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063257781 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.199254421 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061889309 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067563845 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.064855807 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071776408 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067058019 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072491974 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.065753565 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.072931744 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.068599675 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070354076 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.069784492 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064229983 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.057852629 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067033456 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066859488 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066606166 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.064473813 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.065804239 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064606189 seconds)
done (took 12.248432002 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066786821 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.141878294 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098363784 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095138344 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.08532058 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066701727 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075827663 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101184851 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067423247 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101979502 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086914055 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084370063 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112138968 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.0642006 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065987828 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069192067 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.06688368 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.080944431 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100663996 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086123802 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115020696 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065079221 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094251773 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089481817 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086984982 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.100790993 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066848197 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069837637 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068929399 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.090839302 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.08606558 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069266757 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066579119 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099713073 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.091967361 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.08269894 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066484851 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081972051 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066138003 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065795438 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067270068 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097369644 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079255301 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079716876 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.06923717 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068635257 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066493066 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082787894 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088497442 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.07825649 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085746729 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101717915 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068089417 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.06531732 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.063952193 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085166006 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064793862 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068363098 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065959255 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067566102 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065745624 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068507912 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080075687 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081054767 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.068970075 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079264648 seconds)
  done (took 6.755811947 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.082703941 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089507932 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082540877 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083166255 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065605768 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065793394 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066312976 seconds)
  done (took 2.020721662 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066201639 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08720606 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088451884 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08850877 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084217475 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.086535351 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074971932 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066167948 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080067156 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067242799 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086622793 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101543136 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066725827 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072408023 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090252162 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066291034 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089455226 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066427749 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069283725 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089587628 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067685369 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081588965 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069654151 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066566818 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080488033 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066193816 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.111462575 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070295065 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067489474 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069198387 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064132922 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.105675008 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079335528 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074795113 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065867408 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080177098 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080012226 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.063880024 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.081799541 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.070487071 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079005104 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066368006 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066924015 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.063694351 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070337206 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.075924837 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066833708 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066336249 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068289667 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084682684 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066683918 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.078825194 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069049074 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.06835047 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.06677748 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069222887 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.07517011 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066412305 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08509172 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067059378 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082210549 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.081658423 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079231941 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082035813 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068145571 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079639405 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079477174 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068488627 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067095245 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069382711 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.081582252 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064066839 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067107354 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.075763804 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067385228 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088316453 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088056148 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067241618 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.0747379 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066527676 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066190066 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.065801259 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088121076 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068388303 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065716536 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069751178 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06876447 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064157972 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064889474 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069011219 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.063844594 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067219532 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068665063 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068747587 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068389697 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081817422 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068432962 seconds)
  done (took 8.677386817 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068908699 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067984667 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.068398198 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.066996956 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.066817639 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067388912 seconds)
  done (took 1.915082331 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.09278287 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068613004 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080547268 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071248887 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103340954 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.08589675 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.085759259 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077890651 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.08302947 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.077785085 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086184036 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087768959 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091954996 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.071977003 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086142765 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071312983 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086261934 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074955031 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077695573 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072461837 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.085970542 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072441826 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07233157 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.080896677 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075159172 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071815486 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066602155 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078377421 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077775232 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077803855 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071655913 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074589565 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.069820164 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077831666 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086497773 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.069858309 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071177125 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076503368 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071834197 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074874241 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087135605 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072151425 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073820264 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076574272 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.07787252 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.06954712 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076292907 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075374867 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085099207 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076052404 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076156541 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070608063 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074222373 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076416594 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069438969 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077261726 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076264026 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085394494 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071382589 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069517126 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068105956 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074701931 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076829022 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074406172 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.07800756 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076059914 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.06932183 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071374545 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071866546 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.07090565 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.075926459 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.06810625 seconds)
  done (took 7.017542319 seconds)
done (took 27.868058791 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.543962848 seconds)
  done (took 2.021997947 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.599055833 seconds)
  done (took 2.100911247 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.372887454 seconds)
  done (took 8.873304043 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.38881486 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.469650647 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.680614286 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.129578202 seconds)
  done (took 3.181907981 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.678156906 seconds)
  done (took 2.191395196 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.207549381 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.197560142 seconds)
  done (took 1.929005669 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.375654193 seconds)
  done (took 1.878306678 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.089804848 seconds)
  done (took 2.593718953 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.260793158 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.162068017 seconds)
  done (took 1.929717603 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.456980565 seconds)
  done (took 1.963277273 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.818923531 seconds)
  done (took 6.327915628 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.210853097 seconds)
  done (took 1.759157353 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.238169594 seconds)
  done (took 1.742480252 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.687408128 seconds)
  done (took 3.194941413 seconds)
done (took 43.193295955 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079063203 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080771804 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.079757179 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.076756337 seconds)
  done (took 1.812157157 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.075628409 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072220138 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075462713 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071602284 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075870476 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.07131332 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073330245 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075414167 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071814226 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.071751798 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071464117 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071503849 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.073710391 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073155766 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.069672059 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.07379572 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.07516316 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071305027 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074461118 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071636755 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.069936134 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074067214 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.073696093 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070875496 seconds)
  done (took 3.259315446 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.076320146 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.071136682 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.073286083 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.070405907 seconds)
  done (took 1.807935791 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076740005 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091126829 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.087865322 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076890372 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.090554312 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.084933237 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068144539 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.06781058 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.07205269 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.075959235 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.066608995 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.094425655 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.086277493 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.07566615 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.077958481 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065254983 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067179636 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.085578238 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.07628114 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.076209048 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.068729055 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.07582123 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067901095 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.086750368 seconds)
  done (took 3.377746743 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.076567751 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.101689183 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.076950959 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.086011665 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.088896295 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064074342 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.073260648 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.087540236 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.120979391 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064356035 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.068922174 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064699975 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071428239 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064113061 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.074830234 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.103473605 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.10632608 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067099988 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.094290693 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064681728 seconds)
  done (took 3.14235782 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072363997 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.068991573 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065075128 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068011482 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076323037 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072123082 seconds)
  done (took 1.943955886 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067165261 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066207052 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066372511 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.065521892 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.070803035 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066858856 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065105324 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.065945817 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.065968698 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.065914186 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065740525 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.064890031 seconds)
  done (took 2.314191491 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.417978847 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.067702077 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068182105 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.064812569 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.06981103 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.06530518 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.078663902 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067085377 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.089621833 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065306639 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065921062 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068106208 seconds)
  done (took 2.707747517 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203450569 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07521748 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233635121 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134717977 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110165757 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113986279 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102741436 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1113978 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.141649301 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1003588 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165335177 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163199602 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105618668 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135797575 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087532411 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.096271192 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153214381 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160011873 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101663278 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163749049 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142025687 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123419911 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144544454 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09962246 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104504708 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120219571 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.06976592 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079168756 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167596186 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129401572 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143845826 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109146989 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092466703 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174413216 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167541745 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139381981 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132103438 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082203103 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.100287313 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.132185909 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195206553 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086804316 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159200632 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243809359 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079830917 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132034476 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120085474 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.118023955 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.104238176 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088994073 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145684994 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182148948 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.137043207 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085965405 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110567897 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113742946 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.113208255 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102585309 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179794794 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159984964 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126475729 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070580516 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097643986 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151759153 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129995523 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.107426354 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.125900131 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092345563 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131791348 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152615861 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117213659 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141568288 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.126873386 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086738311 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117914627 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13769942 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126807154 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168036194 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122559097 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071541634 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123275263 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10257241 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079874993 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.140754122 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073592084 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172161115 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097129322 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.104644306 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.110686119 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107050858 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107262415 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15885097 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140453309 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.243882085 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065265875 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103143674 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.118769826 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146382487 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086985429 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107234072 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115083561 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077077893 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137732567 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.073394029 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12279944 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.074475493 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123729722 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130503958 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.07509984 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120606365 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100222557 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099575746 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13177917 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158179437 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088451896 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080670341 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165005021 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120706886 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.102950789 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141780222 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154693796 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.098023699 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101299754 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147516258 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176139747 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088216302 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160520624 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105541215 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082565144 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.086311838 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12190398 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111078682 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.120673493 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080974761 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118773324 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1663374 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.073638682 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093490992 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131196076 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077391689 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079011023 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101552296 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09843964 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093724435 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098732854 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.102955761 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135340634 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121207931 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102622686 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267503219 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097900391 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168721889 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087604753 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.098830504 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102193931 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.068855836 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.136562625 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15485874 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078231549 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16179371 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.121985356 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103543649 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118190836 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08192464 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139178253 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078022978 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069026726 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143894318 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108701376 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107967464 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.149348212 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102889179 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.125683937 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.118326071 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132953215 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130999635 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.127495234 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103886198 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.0873355 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109954439 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124055085 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072438192 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.089563253 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.078367418 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102245329 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094312227 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08212739 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140315926 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123131124 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09852132 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110075691 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095236961 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145134918 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075208948 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127032964 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.116863882 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092269092 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.149122192 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149270622 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129268118 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097700262 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142397162 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.068870457 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072187229 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.086803669 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.264985323 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082677997 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083424826 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115610535 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146218105 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127568413 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136500058 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110726749 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120668622 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152359448 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069467043 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.114426432 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145645452 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11983667 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.102663512 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088954526 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.097685209 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139757009 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107058569 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179446382 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112549053 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124860769 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151189041 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.098307291 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082068294 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101889081 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133926982 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103580759 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14265723 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09819487 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087081128 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108184736 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.07312624 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098522328 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125832128 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118411159 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133808233 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.113254231 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131764035 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076017982 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115526669 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118136706 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120040094 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063195052 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117941489 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15866825 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092262523 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116760221 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150200829 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07798818 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.122138634 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.317977168 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144827726 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083988801 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10884477 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117571571 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12620368 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118920446 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139102856 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107312889 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133478838 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107045232 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085646505 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085521553 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096481494 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103509748 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.093767787 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.106743085 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.112867783 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.093838663 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13026624 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101181524 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108630314 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116904491 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.094417094 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.088417094 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095893309 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173074497 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117533337 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171308456 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.097495957 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.142805524 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161321627 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073979496 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077300362 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.076870165 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137769311 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083072466 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128666881 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.096131233 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105417739 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122954832 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14005354 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093445003 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.067430811 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107267733 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132599368 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110370409 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096950564 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.102517194 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160585345 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.098657322 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07785533 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11214264 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102862037 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100630933 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16726615 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.059819328 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.094121339 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073508467 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078368816 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12273801 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144725031 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.077176826 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.100116542 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114845765 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105609353 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122554606 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096674895 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095582373 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11019737 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143464058 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122547007 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.084858877 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106063017 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12043569 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144520961 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098601656 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.090103046 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157702556 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14151139 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.148204725 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.083900952 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122834707 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109242779 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10221272 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128642069 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079290722 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150374759 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076625012 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125967377 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097208782 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084886988 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119925314 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.093234614 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082724568 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136171483 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109365651 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078081375 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073817398 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11001996 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1121471 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099174121 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.072107503 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128804554 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.06915032 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122431519 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155485043 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076291525 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099142064 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.345395957 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080412324 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109049583 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103318621 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089682847 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.097296479 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174197729 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088424678 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150780442 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141375231 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114000135 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136681494 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100079782 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.635371769 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077364731 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153307689 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115713208 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171861103 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096711758 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116490666 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107940055 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122230499 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14324985 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104635986 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.175502338 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129973974 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.114624347 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079277336 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101386212 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101629694 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087629849 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103737658 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112447364 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114462216 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.09254008 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.114462376 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121716706 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.080857557 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093853234 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153808954 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115405374 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142793486 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139028758 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083488978 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115079535 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135888514 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078597838 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.120424561 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150569047 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104689533 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096721139 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.079117639 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.249687519 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168465674 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073108808 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161762671 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117648088 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108345732 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111326266 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.112331012 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129124659 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106396486 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119186045 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092102977 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.108793853 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111066104 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080717541 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076095065 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103156528 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110753616 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.096176527 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097764602 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.095534544 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149434345 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070528567 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094081603 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101781496 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143130617 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172186956 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.086906601 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081542021 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117603109 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111169309 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.111957959 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118845298 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078378064 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08118279 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080584975 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076124691 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.107041994 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110961036 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102910894 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110674029 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161745911 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081395835 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.223851615 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093467052 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103078403 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.068742591 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077406887 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094244799 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096196259 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107000282 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098184377 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169882374 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.092881569 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.088363968 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091135955 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.071604481 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081463313 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125877673 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.256588913 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11851988 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097057418 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.061694902 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108281607 seconds)
  done (took 57.838628543 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.108262808 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082324292 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097012157 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149463244 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122326077 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.211195433 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.156762804 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.19917724 seconds)
  done (took 2.786244491 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.06804208 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.093954706 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.098723699 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083064801 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066647934 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.06876112 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.223944732 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081213501 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066442423 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.08769139 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078974382 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069234767 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.429554444 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067743348 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068939391 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.063073153 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067083913 seconds)
  done (took 3.424071237 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.365914 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.36991633 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.374315203 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073329783 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.839408199 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089329624 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.080651959 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.097328576 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.072024334 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.268238864 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.702444763 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.092135609 seconds)
  done (took 14.077595675 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076058414 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069600462 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.084442437 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083371768 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072978786 seconds)
  done (took 2.034091348 seconds)
done (took 102.075138154 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079952198 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.38813374 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053930748 seconds)
  done (took 2.116203276 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.082318955 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084312504 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084415085 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.081689988 seconds)
  done (took 1.99261842 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.073860852 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075879169 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.083779974 seconds)
  done (took 1.887139334 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.223270733 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.138753913 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.086410952 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.080971388 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077102944 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.077753514 seconds)
  done (took 1.895065224 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072186593 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074681461 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.071783006 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075527517 seconds)
  done (took 1.949387999 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.075506858 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.051887593 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.0548226 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055279484 seconds)
  done (took 1.893828775 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.086410155 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078308493 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078568083 seconds)
  done (took 1.900786825 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106506669 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.084657616 seconds)
  done (took 1.848852596 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080930266 seconds)
  done (took 1.73918228 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.097800251 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.112060968 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.128167888 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.108124981 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.135530776 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.108262389 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085073699 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086181294 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076754806 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086463538 seconds)
  done (took 2.681499275 seconds)
done (took 22.07880615 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078106252 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.361782417 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360192047 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089977429 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.68097095 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355891299 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.988319074 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091833357 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.113946557 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067540959 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083689047 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.661023085 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.977808305 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.318395134 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.963125146 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.317883745 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.655091691 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068187617 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067216118 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067603153 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.973709297 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067332207 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067554502 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068043867 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.662529031 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370552872 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067742132 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.316068229 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067389139 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069888816 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354509183 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067965213 seconds)
  done (took 16.167136924 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070715806 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.11792575 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073467744 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083694211 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070331835 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.06968616 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071151865 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068488137 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.11891578 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067559576 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083931246 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067640428 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071286152 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068239771 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086906137 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067787724 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068406562 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068348348 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068174467 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068033673 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086314228 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067321576 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067816177 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068502503 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067829893 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079825863 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.0682205 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067734265 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067956446 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069672072 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070570769 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068496167 seconds)
  done (took 4.05230339 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114027742 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124359654 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074102183 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103026701 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111084444 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069713128 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.142772474 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092674086 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126661129 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067752599 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084266409 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068107343 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100713567 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068766216 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087127937 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068242203 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068933009 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068794469 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068012787 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068276198 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087166027 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068318772 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06822306 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068551055 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068000856 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081305407 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068478581 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068424705 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067979097 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069861344 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071523801 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06855393 seconds)
  done (took 4.3066096 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072403522 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074905409 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082537953 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083139377 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069018092 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.07085951 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072138796 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.06915866 seconds)
  done (took 2.271069684 seconds)
done (took 28.460111681 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078444381 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068791685 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072317791 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080895986 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072657899 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.077832814 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066907784 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074081546 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071840881 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072662314 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074556543 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067236823 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070630043 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066865746 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073305317 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068163996 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078785576 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.07147951 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078597695 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079127225 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069571951 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072529597 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073867608 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078670738 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.07884857 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078717732 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076837102 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072715094 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.06908893 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070445082 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076415463 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084186735 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069869323 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079001923 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068731066 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.06795117 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071196715 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067422238 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.078845156 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076448314 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.0692026 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075664622 seconds)
  done (took 4.746319483 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087029675 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.09156104 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.08419329 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061147296 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066319831 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064791964 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087763053 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059701868 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059386838 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.08730177 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055840057 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059042177 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062421131 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053741082 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059018793 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056530839 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061271873 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055502224 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.058805122 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059138272 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057902259 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054118416 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.059818248 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064624627 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056201131 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.06178077 seconds)
  done (took 3.363567338 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074276499 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083374143 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.087785833 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126216936 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.103796655 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076509933 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.077738851 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.091608913 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.084714189 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.06660508 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.07112173 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093697274 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.098874091 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073516919 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067684589 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084111761 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082128469 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068838962 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073323606 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090504107 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.084272968 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.083730878 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.09223259 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081268715 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066593539 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.06932176 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071271163 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.080967787 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072108408 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076394768 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071477086 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070938919 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069562174 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078373369 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071286205 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069342039 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090211572 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076749877 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077480481 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068064356 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070471549 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.06853087 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089215503 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.121910472 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066668772 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073628847 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074946782 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076494064 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067451362 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085881776 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078137949 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.06694335 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.07006913 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06672742 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067472474 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080611244 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069287922 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069344349 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076296599 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070533335 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085201438 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070865065 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08226046 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066869808 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074752171 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066578148 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067908131 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066107018 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.091762988 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.06837814 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.107503569 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068220939 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067992619 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075399576 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074458048 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073133046 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067927939 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081772072 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07723063 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070601015 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075437401 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.07061939 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070227442 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087064347 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069269305 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068758558 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068234033 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073297474 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069918351 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068706294 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079954806 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.06718482 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.07020854 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.0832783 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066911439 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068633946 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073592936 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.07224931 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066694924 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077991552 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072034782 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068044331 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076266947 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067409023 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070583309 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077332598 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073561331 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066448093 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071580072 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.07287446 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067510543 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068345937 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069746295 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.06905277 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.074883388 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073348209 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071401412 seconds)
  done (took 10.555900316 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.159844105 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.153598911 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070193185 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.144640299 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076176784 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079184585 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.147723799 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.093840437 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067541085 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068306742 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068354766 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109298369 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105231266 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.114565846 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078301395 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067338767 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.08276098 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.11332779 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.148714775 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142040393 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083217061 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076782418 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.06960453 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068576323 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070784943 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.07791398 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085208117 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076125806 seconds)
  done (took 4.414652648 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.080472296 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.096347061 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073447004 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089083082 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091080236 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067344125 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069519547 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069397752 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080037131 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078227759 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067311736 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072990893 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07392149 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.070793404 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068462131 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074407882 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074501608 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068888618 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070573482 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072492853 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077261759 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080790153 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071743796 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066708904 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.07404785 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066879994 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.06448 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084287183 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067934739 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.089506503 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065442024 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074598215 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081785749 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068242646 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067354644 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067632968 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067490004 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067326214 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068951142 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066124162 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065839496 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057471512 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066509156 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079111834 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073407028 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056671213 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072577824 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072463305 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072476076 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065144189 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070157438 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070260957 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070864716 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074279201 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072135512 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072305 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068257317 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065362221 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074830959 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067616127 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064313301 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065808097 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071381428 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065626992 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.074865764 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071565253 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065504821 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066759165 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.068624119 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.07302541 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.06679281 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070414508 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064633492 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068917334 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071560689 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069009193 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.067930973 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065470572 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.0670195 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067293818 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055803594 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067125742 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053413575 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070247788 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065402945 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065674881 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.066884566 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071915758 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079351262 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068401427 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.07291998 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.067893957 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066008219 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.069912088 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060089123 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069854284 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082535634 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.081958972 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067383245 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065261446 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081416068 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071696383 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.06645685 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055965576 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074732902 seconds)
  done (took 9.12892066 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.093964873 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.088182915 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069817542 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085290658 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.090387642 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.08679337 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074193111 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076103665 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069260046 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.082023769 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073584879 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076265403 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068426952 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077418621 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.09306355 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076571818 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069400585 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076502769 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071804261 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.099981815 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082606775 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081418582 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.074676391 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068274978 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075719614 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.07976069 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.08951114 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.079612591 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.078366846 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.075195577 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.079713979 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.088929808 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.07384748 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.071818974 seconds)
  done (took 4.416490495 seconds)
done (took 38.293409953 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.752461993 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.928729051 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.74964494 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.126462749 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.053790975 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.772470096 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.885817745 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.743027949 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.926569538 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.796776077 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.992564377 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.794268074 seconds)
done (took 65.212924229 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.755693957 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.888556704 seconds)
    (2/2) benchmarking "String"...
    done (took 2.015987198 seconds)
  done (took 5.59157193 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.049624069 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.272547044 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.9856483 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.738482129 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.744903502 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.044163091 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.552252221 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.266426094 seconds)
  done (took 30.288397606 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.052761659 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.955990639 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.471467497 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.520223002 seconds)
  done (took 15.743039647 seconds)
done (took 63.207315706 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.767197611 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.746511254 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.760686746 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.724190963 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.796525661 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.756034447 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.801899906 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.952650538 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.738667026 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.728670312 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.737578471 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.158411991 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.739973661 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.882348101 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.735815731 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.743346156 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.774196438 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.228602917 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.894035995 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.758999493 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.754407906 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.767626468 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.740040371 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.750698368 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.77635876 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.740315128 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.169643369 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.750670503 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.348876342 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.741897052 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.766181196 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.081816757 seconds)
  done (took 203.4959473 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.735167361 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.558903945 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.628260914 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.7780587 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.143452677 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.927445002 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.847259667 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.192284094 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.735796596 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.759173323 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.879604148 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.733572284 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.910859196 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.704601937 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.739736024 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.824243367 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.888928933 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.94510427 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.73494512 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.004783889 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.744281131 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.710064846 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.675306085 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.891858059 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.748277826 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.831745239 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.739932021 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.90581877 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.936601259 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.861065489 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.747767839 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.749583977 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.967166525 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.612456762 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.748435523 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.767095575 seconds)
  done (took 167.988910924 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.886474841 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.738315938 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.736681145 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.738289848 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.749199269 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.73792607 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.862265063 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.865262607 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.200834865 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.066271594 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.740182828 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.787875319 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.568171996 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.737933885 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.806623554 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.748937099 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.741494767 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.753062198 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.767088429 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.741326957 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.739972398 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.868265222 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.752649553 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.973883743 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.745858235 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.738170334 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.74608681 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.111990965 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.741132368 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.746510823 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.997613704 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.740835867 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.739110491 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.639128767 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.68781898 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.831902851 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.740229853 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.742180515 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.746626952 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.739609531 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.959388406 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.74054438 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.741969074 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.743167461 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.917438013 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.741282868 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.866299346 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.740156645 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.24085058 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.740271138 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.74078975 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.765416759 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.41494592 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.741284906 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.741142553 seconds)
    (55/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.739507226 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.742580405 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.739660407 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.741095676 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.7470249 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.717597924 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.812730982 seconds)
    (62/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.741205294 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.741385749 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.744023624 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.747194832 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.741167665 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.889963003 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.745716547 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.206054138 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.801779808 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.851730802 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.861626152 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.743227078 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.809011351 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.834771265 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.741362251 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.742162339 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.740755324 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.741310846 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.82247411 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.742397755 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.864277776 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.750376422 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.742435778 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.791639676 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.811540407 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.743268612 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.642618484 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.745242915 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.74269957 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.056402582 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.808005173 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.742822555 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.742735385 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.742022469 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.885539064 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.867171278 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.534500899 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.746480282 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.905400504 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.741831264 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.909954485 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.743836602 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.914799999 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.74339248 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.824721823 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.748575883 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.745279669 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.742072949 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.774460274 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.743459759 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.799955587 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.742991638 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.114368008 seconds)
  done (took 397.771090149 seconds)
done (took 772.886622765 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.443291166 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.40246439 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.509516178 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.423972817 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.40078024 seconds)
  done (took 13.865281377 seconds)
done (took 15.549424363 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.829431126 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.834325696 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.769681807 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.833382529 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.763293831 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.831862847 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.814172927 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.769748482 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.800166082 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.770470774 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.80015696 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.768893636 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.756461921 seconds)
  done (took 25.029265601 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.981844698 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.976247002 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.815336408 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.97009902 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.793941051 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.98282998 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.909571526 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.896135033 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.898372442 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.760241532 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.758326016 seconds)
  done (took 22.430957179 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.994988432 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.983177562 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.819209056 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.981408646 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.794093822 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.980189674 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.908381838 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.899348284 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.901264523 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.761137571 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.757979438 seconds)
  done (took 22.469987737 seconds)
done (took 71.615822041 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.752678825 seconds)
  done (took 3.440479795 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.772524395 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.914694442 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.761470461 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.759639848 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.754941627 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.752658455 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.759121968 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.754972329 seconds)
  done (took 15.918717836 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.751395232 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.752548666 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.750740114 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.751176459 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.754593025 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.754092985 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.755484491 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.752459534 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.752222855 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.754628488 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.753040087 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.752227666 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.752109822 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.753015021 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.755936399 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.756006922 seconds)
  done (took 29.740464373 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.755156944 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.753848585 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.753469467 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.751630897 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.753923872 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.753458203 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.75573392 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.753454255 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.752044571 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.752950361 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.754778666 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.753883094 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.754795914 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.752627201 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.753052575 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.754319309 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.753513307 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.754082785 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.759301477 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.753025294 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.754298309 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.755500537 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.752215989 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.75369644 seconds)
  done (took 43.788173421 seconds)
done (took 94.573829985 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.467924021 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.199240372 seconds)
  done (took 8.358674417 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.757353025 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.756693348 seconds)
  done (took 5.242649971 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.757639698 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.755640633 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.756285003 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.756385996 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.756637725 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.757492478 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.756347503 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.757068982 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.756881756 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.757109433 seconds)
  done (took 19.258909102 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.757204512 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.757174099 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.755314729 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.757129353 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.756486285 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.756117216 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.757082188 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.757532144 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.758122256 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.755377575 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.757136318 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.755689917 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.757627741 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.755798078 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.758737536 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.753555642 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.755690119 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.757282609 seconds)
  done (took 33.311768457 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.758104685 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.756987303 seconds)
  done (took 5.206825099 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.754446914 seconds)
    (2/7) benchmarking "second"...
    done (took 1.755369322 seconds)
    (3/7) benchmarking "month"...
    done (took 1.756082319 seconds)
    (4/7) benchmarking "year"...
    done (took 1.755864846 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.755162852 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.755798016 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.75594005 seconds)
  done (took 13.98194789 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.759577476 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.917565658 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.993066824 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.439089002 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.759283881 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.762394893 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.687346733 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.760516722 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.7645108 seconds)
  done (took 19.53507516 seconds)
done (took 106.586420848 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.566980442 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.753189529 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.141077004 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.87133376 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.771430801 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.048680305 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.766102586 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.973455825 seconds)
done (took 42.586375499 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.841139598 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.277036935 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.298424488 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.072165332 seconds)
  done (took 12.341175543 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.748877853 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.286935264 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.800465436 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.422583121 seconds)
  done (took 20.211651681 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.1242177 seconds)
    (2/2) benchmarking "read"...
    done (took 2.122638611 seconds)
  done (took 5.946773653 seconds)
done (took 47.036134574 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.760578882 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.759797171 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.758429986 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.761363388 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.758157955 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.759158856 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.760062336 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.761532709 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.760964933 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 1.761753349 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.760106005 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.758040549 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.758493411 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.760749655 seconds)
    (15/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.757995163 seconds)
    (16/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.757792507 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.7594422 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.757738556 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.758819173 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.761301402 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.760343764 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.760735374 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.758816229 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.761735676 seconds)
  done (took 43.929226572 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.761271325 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.761449885 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.762965662 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.760004336 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.75875025 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.762301721 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.761070178 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.759076017 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.761794389 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.763589598 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.761301179 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.760454522 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.763373508 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.760970978 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.762312521 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.76114556 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.764062723 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.761060682 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.76275173 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.759942709 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.763950124 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.760839087 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.761517793 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.762535875 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.760348604 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.759377583 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.764258981 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.76253013 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.764163236 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.760927476 seconds)
  done (took 54.54636078 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.766360755 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.770268281 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.763457206 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.763875613 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.764408188 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.762114447 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.764694158 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.764177817 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.764146456 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.763222373 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.763476888 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.762746607 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.763291179 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.763624851 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.76357523 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.764876 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.765003729 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.764561754 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.763688468 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.765352676 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.764476158 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.76452111 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.764875785 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.765202418 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.762558642 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.766110253 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.764951299 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.763899178 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.762811688 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.763883298 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.763787512 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.766955591 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.76411311 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.765903426 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.765261403 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.765545075 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.770193119 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.772222959 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.766112244 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.765563878 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.765690212 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.76471555 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.765288654 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.765282958 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.766348914 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.764292621 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.766819213 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.766017733 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.767544899 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.766153819 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.76472068 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.766095453 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.764961185 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.766338172 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.766055362 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.765399792 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.76810011 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.76533652 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.766063538 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.764805247 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.767238661 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.767452293 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.766691246 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.765575299 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.768983889 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.765890349 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.765702609 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.767935033 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.766395232 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.767416988 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.766453267 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.76656284 seconds)
  done (took 128.813871339 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.765949907 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.765199927 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.764672197 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.764484919 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.763096826 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.767983565 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.764554411 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.766536173 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.764567113 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.76717531 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.767588365 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.765317611 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.763943892 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.767901929 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.766828928 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.764414961 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.766291465 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.765169957 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.768172562 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.76670282 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.76875543 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.766566122 seconds)
  done (took 40.551834949 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.76728031 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.766355299 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.765218921 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.769504088 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.765672128 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.769351646 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.769106619 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.769517683 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.767159619 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.764929504 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.767035259 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.767026647 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.765810262 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.76520856 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.767265225 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.766639332 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.767596498 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.766158615 seconds)
  done (took 33.509669921 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.767081768 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.767355877 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.768501595 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.765097541 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.767030827 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.769029309 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.766606497 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.76908301 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.76934909 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.765463488 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.768993125 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.768723723 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.771117821 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.765860987 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.769390537 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.766618625 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.769122938 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.766691505 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.77094685 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.767123997 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.76713829 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.76827632 seconds)
  done (took 40.598647449 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.770693878 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.768468929 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.766192687 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.765597515 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.76664464 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.76783832 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.771302876 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.766583817 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.769744264 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.770674673 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.766196892 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.771034253 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.766097733 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.768963478 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.768453584 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.770100237 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.771669541 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.770065324 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.77020277 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.766936047 seconds)
  done (took 37.076925937 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.768483384 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.769843123 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.770513615 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.7696513 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.77056488 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.769460943 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.770295151 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.770743633 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.771613142 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.770702399 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.770714888 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.771955864 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.770797951 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.772075883 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.769953643 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.770632231 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.77064191 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.771520139 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.772437673 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.769688865 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.772193378 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.768294563 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.770680586 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.772061778 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.771592318 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.771614979 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.771240639 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.773017628 seconds)
  done (took 51.289407701 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.77354351 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.77322806 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.767881176 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.768245443 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.769558026 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.769835498 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.770027907 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.771206383 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.772854594 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.77026288 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.772842762 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.772107763 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.773708288 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.772572363 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.773113268 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.774087047 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.772477772 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.770659908 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.772636385 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.769835215 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.774233398 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.772566603 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.773425852 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.769706154 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.771501412 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.773568346 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.771210305 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.770698612 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.773040092 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.772601786 seconds)
  done (took 54.8604803 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.793798408 seconds)
    (2/2) benchmarking "in"...
    done (took 1.792283193 seconds)
  done (took 5.295597266 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.772534398 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.775233578 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.775750696 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.771836727 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.772133047 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.775459477 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.773643996 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.771764283 seconds)
  done (took 15.895300695 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.772733683 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.774506995 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.774248612 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.775614319 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.773263631 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.775057971 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.781158012 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.773951521 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.776382163 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.776017027 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.778410935 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.781064562 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.779219523 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.773375286 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.774064946 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.777902389 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.774769507 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.77494538 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.776513726 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.776536639 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.775620431 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.777250353 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.777248964 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.77172426 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.77725597 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.787905454 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.78417673 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.776076387 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.775533294 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.781866177 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.776571844 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.773480149 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.776061282 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.77647885 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.777617717 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.7757856 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.786515127 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.77947435 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.785190015 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.775524419 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.777065826 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.774178516 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.777180996 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.780457606 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.777685415 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.775743849 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.776306085 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.774985946 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.782260861 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.781033098 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.780463481 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.77505006 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.774082615 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.783396914 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.779589638 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.785891987 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.776392835 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.780406584 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.786494576 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.788409479 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.794119043 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.783680772 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.779909915 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.774750752 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.786656796 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.800002431 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.785294495 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.776166306 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.774658256 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.777206359 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.787522406 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.791583341 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.787418476 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.777936222 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.777462383 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.780008914 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.779528197 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.77792801 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.787342317 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.781357166 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.776758166 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.77689786 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.786369413 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.79825299 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.777006519 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.775990238 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.778882801 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.776397954 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.779635968 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.790038893 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.7785394 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.778309784 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.777856987 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.778561856 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.782829547 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.778415178 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.777850189 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.780999889 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.777117663 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.779726704 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.779438269 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.781976975 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.786955629 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.776791341 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.778071473 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.786809002 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.777778937 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.779444441 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.788891303 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.781048361 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.781100965 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.77913431 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.787743085 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.776337009 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.783136937 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.78779921 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.780820466 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.78227928 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.780287897 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.780431757 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.786761708 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.807627347 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.778905466 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.781587947 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.784408432 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.78951262 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.7797256 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.78525342 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.783500116 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.77834533 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.777504336 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.783016571 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.781719399 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.78240197 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.779751509 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.78193404 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.77772917 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.782755413 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.780303978 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.783508789 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.784892305 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.781948927 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.784564177 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.785680493 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.781234911 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.783769341 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.793274727 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.783271447 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.785729946 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.78425553 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.779435326 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.781230225 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.784422842 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.781692615 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.783378189 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.78096752 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.781145795 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.781874052 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.783905026 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.783369081 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.781844464 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.782667548 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.783744524 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.783262158 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.790716888 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.782236033 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.780587485 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.782931198 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.784382963 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.781858971 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.783741483 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.781241082 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.785476502 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.789592205 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.783748499 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.781810912 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.78670131 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.780298623 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.783299982 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.781157751 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.784855645 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.791960937 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.782407931 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.791816978 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.783213536 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.78224569 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.782996856 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.785096257 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.783158314 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.784312067 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.785344404 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.790133973 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.799971497 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.794187765 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.78510796 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.785740801 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.785317664 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.78780214 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.790291628 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.782713202 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.785312311 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.784530899 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.784082159 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.781781757 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.787887377 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.782665624 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.784650559 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.785577971 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.787162437 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.784193369 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.786723973 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.787027514 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.7847139 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.781818374 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.783747895 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.785973683 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.783039765 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.783392125 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.783351663 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.783193123 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.786307483 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.785954195 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.796745199 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.783366023 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.786890217 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.785101718 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.784406623 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.784097338 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.786330278 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.788202248 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.78444873 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.792256824 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.787122847 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.787975736 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.792789493 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.786058309 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.785073565 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.789315109 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.786173451 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.785327947 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.788519282 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.791898915 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.78632007 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.783510039 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.784484315 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.787533351 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.78836407 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.794423349 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.785754005 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.786344977 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.788020711 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.791626445 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.783888745 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.787809079 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.787826979 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.786794691 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.789633139 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.786028377 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.787650065 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.790467979 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.788631521 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.785884689 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.78706897 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.789855154 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.792321138 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.794735473 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.788478501 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.792845831 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.791721377 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.794554922 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.789887716 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.788349319 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.785656657 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.803713175 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.794218943 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.794124575 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.78765857 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.788612609 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.797621462 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.789622376 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.792683689 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.787876079 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.786769446 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.786893049 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.786760484 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.785927879 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.7880839 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.788390829 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.789252622 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.792038011 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.790761071 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.789335372 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.785246815 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.790876693 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.786354037 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.792638625 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.788782844 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.790114763 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.796458017 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.789551012 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.789564011 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.787630406 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.796418284 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.787649667 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.792806765 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.787456301 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.789666185 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.78712608 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.7927408 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.786894476 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.792896261 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.795111724 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.795328982 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.797319573 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.791071535 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.798188655 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.788818948 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.793833135 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.796196452 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.78861155 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.789739956 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.790089351 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.787825637 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.798854586 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.790731288 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.790340918 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.792788279 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.787619184 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.790552266 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.792106967 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.788376321 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.792502566 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.788831414 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.802191421 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.791757701 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.795879784 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.793545754 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.789089916 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.788163175 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.794058134 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.79121404 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.796194474 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.790165354 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.788930324 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.789952005 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.79466939 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.789665897 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.790956993 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.794663233 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.790592812 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.79171787 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.801470292 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.792671328 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.793992616 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.790497677 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.804744686 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.793574227 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.8008344 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.792127054 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.792739242 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.789399124 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.79266933 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.796082145 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.792582188 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.795589022 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.791304614 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.793988996 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.798073224 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.790704703 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.795184814 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.793424741 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.791330709 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.7926753 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.804136163 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.81381481 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.793036806 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.797400844 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.790260923 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.794721976 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.79884224 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.791798562 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.789930493 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.795364454 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.800269844 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.802743295 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.792284191 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.791982545 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.79592169 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.793954716 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.791393676 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.79401621 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.791017019 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.792755576 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.798253959 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.790837453 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.800621264 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.793800964 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.797073616 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.795170285 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.796527869 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.806013243 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.795214953 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.797310552 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.793765152 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.794898366 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.796227218 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.793884498 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.791946018 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.798028575 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.795398239 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.793990951 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.798487041 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.800968107 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.799048549 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.795209567 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.795150561 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.796497277 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.795518763 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.793329973 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.793720289 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.79312682 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.796545392 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.793027372 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.798037808 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.792111819 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.79411971 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.796113538 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.793873264 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.795714524 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.802158124 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.797256898 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.79286813 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.796034114 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.796659466 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.794339374 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.795841481 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.806628933 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.798010733 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.804226571 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.804513485 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.798572465 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.795649234 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.795685693 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.804342838 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.795610806 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.796891353 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.795269614 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.798493068 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.797041845 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.799554327 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.795032721 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.805466755 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.795762292 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.794818519 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.806710857 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.79807547 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.797544 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.798167516 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.79885845 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.797305576 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.795195457 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.795234423 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.795840595 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.805914558 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.800211785 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.797683526 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.800158572 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.796627024 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.797132788 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.80241792 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.798303342 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.798044822 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.794034012 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.79577846 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.796715067 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.797991996 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.794336392 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.799414514 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.796781802 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.799862962 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.803042245 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.795503036 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.800528272 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.798201774 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.798261132 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.796921651 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.799162088 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.796805718 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.795748419 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.799380122 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.796645314 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.798102619 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.801812021 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.79753568 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.796714944 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.798188823 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.795356895 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.800658456 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.808842611 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.805794988 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.796054289 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.796685687 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.800648436 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.802591503 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.79749248 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.795740144 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.796195508 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.801620815 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.799753677 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.798526791 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.799996756 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.799122841 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.817541701 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.796988057 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.798332253 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.800745607 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.808270683 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.798704732 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.797988185 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.80087134 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.803074908 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.802226464 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.805030668 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.797692103 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.810276939 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.798821739 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.800611135 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.8043558 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.803858827 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.808482487 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.801852613 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.798276882 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.799122316 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.805264008 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.822046443 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.801788741 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.811237652 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.829826366 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.800817617 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.803021756 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.80163826 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.798645973 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.802081798 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.806492725 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.799822732 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.801753202 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.801323319 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.800267506 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.803705866 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.810901412 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.799518137 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.80242856 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.80131822 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.801516535 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.806242473 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.797287058 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.801612104 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.803551026 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.799601219 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.80038618 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.800430908 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.801986851 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.815324569 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.810776471 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.80225095 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.802074813 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.797703739 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.807072718 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.805471832 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.812241542 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.81078487 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.800096433 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.800403853 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.804789057 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.802593885 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.797976002 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.803731106 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.802270011 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.799933394 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.799472621 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.81737489 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.806843241 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.80900386 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.803276371 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.804150297 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.801692668 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.805004645 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.801597561 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.80007475 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.804675153 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.800794047 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.807323692 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.801760913 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.803360846 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.807288295 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.811834136 seconds)
  done (took 1069.088764625 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.80167725 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.798925461 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.80258358 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.79784512 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.799055924 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.803476754 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.802170092 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.798889816 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.802501028 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.8030485 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.801427186 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.801884193 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.8017466 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.801576953 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.802674298 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.804191444 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.801982776 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.802826094 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.801878655 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.799618224 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.800646115 seconds)
  done (took 39.568163411 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.800022614 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.801586541 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.800301286 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.804113243 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.803081195 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.80151103 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.800338214 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.80107737 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.804817992 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.805483586 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.802486898 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.806086736 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.803232757 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.801989304 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.799719099 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.804636208 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.802825631 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.800955929 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.806076777 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.803780603 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.802331405 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.800410059 seconds)
  done (took 41.396128446 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.802540156 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.803781843 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.805257112 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.806236945 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.806391484 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.802906851 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.807746039 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.804998422 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.806099332 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.807402136 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.808540289 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.805425677 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.81276602 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.81245867 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.81003608 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.806682862 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.954914735 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.805145586 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.806269723 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.804202454 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.80477993 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.815989912 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.803857873 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.807668798 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.802889553 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.806275824 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.807826104 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.806578707 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.806982432 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.809259355 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.807281169 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.804677095 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.807294972 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.811708152 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.809741771 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.806130135 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.812106875 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.805979168 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.805444715 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.806700612 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.814303866 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.827316491 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.806501332 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.817147401 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.80465438 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.806437365 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.811801951 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.817253522 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.803938848 seconds)
  done (took 90.48105383 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.808387505 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.806712745 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.807368465 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.810769447 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.807852318 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.808801757 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.809962028 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.804990709 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.806098003 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.803382209 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.807048498 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.800868688 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.804515039 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.80777932 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.810470676 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.802232327 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.804968197 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.803864031 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.801031452 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.80588546 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.809016195 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.803247742 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.807992423 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.809021636 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.81097365 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.805211472 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.807037911 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.811469275 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.80430266 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.807935591 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.812320919 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.808407164 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.810179393 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.805291861 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.804716499 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.807087388 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.810126515 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.805826401 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.809365385 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.806061612 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.809178337 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.808266355 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.809699431 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.808913589 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.807949073 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.809563647 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.80883816 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.808239507 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.806595477 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.810925134 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.811707092 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.810834706 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.812034922 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.809594766 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.812188381 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.811889887 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.812750362 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.808216112 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.814456131 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.808440492 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.807516082 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.812573001 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.808887915 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.811764954 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.814989259 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.810786998 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.809046297 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.812298062 seconds)
  done (took 124.707015257 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.810398037 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.814535592 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.810245284 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.80993459 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.815088952 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.813304846 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.81475392 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.812089441 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.812711401 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.814900014 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.815055674 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.813449615 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.816809988 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.813412951 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.816143505 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.812819849 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.816073687 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.815090866 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.81388512 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.813097448 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.812488868 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.812594994 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.816841104 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.816031573 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.812983629 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.813933442 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.81290291 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.814788294 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.8124911 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.813208503 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.815439019 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.81221163 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.81604187 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.809162644 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.814134333 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.813501921 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.814366486 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.814019819 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.813144877 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.810681184 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.817340397 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.809069287 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.814290545 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.810576407 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.812436519 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.817785955 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.816103326 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.817106853 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.816759303 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.818365278 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.81328802 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.815184665 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.81236102 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.816880681 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.815380163 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.817819509 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.81490056 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.818647017 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.818542933 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.811758802 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.813494309 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.815725145 seconds)
  done (took 114.22507051 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.814183404 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.815369014 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.809960234 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.81366866 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.820184337 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.817267812 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.822564631 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.821612169 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.82006116 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.81955368 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.81637701 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.81849903 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.814918159 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.816968537 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.815779052 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.816266658 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.818442681 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.815821952 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.816641707 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.81952419 seconds)
  done (took 38.087937611 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.81948816 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.82285057 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.813701868 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.818379268 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.816148484 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.816930544 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.816326861 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.814064416 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.813461571 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.821322303 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.821475587 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.815128009 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.813619896 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.818207576 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.817161121 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.817110531 seconds)
  done (took 30.829992377 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.814059021 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.814885636 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.81801142 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.820579605 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.819724754 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.819330305 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.819883576 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.814520016 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.820145423 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.819917739 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.822550014 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.823610703 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.822049542 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.818045957 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.821989486 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.820608277 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.822281225 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.819060352 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.820370728 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.821886791 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.818622702 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.818929181 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.821813865 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.821574124 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.817489397 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.821203931 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.818718733 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.819359842 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.822602248 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.82157291 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.820239471 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.825447676 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.818624844 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.818293269 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.816941029 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.822057132 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.824800226 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.822943571 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.823117955 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.824658351 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.82179665 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.81870147 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.825020179 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.826978712 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.819327114 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.823469258 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.821383002 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.820637323 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.821063243 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.82093537 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.822739449 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.821733378 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.823831272 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.823849191 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.819924657 seconds)
  done (took 101.897963017 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.825121444 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.822194691 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.819531234 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.824651893 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.819390175 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.820428583 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.824686102 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.821006211 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.82134912 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.824612052 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.820893157 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.824496204 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.821377968 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.822489189 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.822027135 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.82528009 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.821005055 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.822217416 seconds)
  done (took 34.555139757 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.821163862 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.820002118 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.827392997 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.823210578 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.822361041 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.824685313 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.818615953 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.827934499 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.822005202 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.821055787 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.823758903 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.822666347 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.824460505 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.824998802 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.821746725 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.822851378 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.82389354 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.825230652 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.823445842 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.820080012 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.823071511 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.825638676 seconds)
  done (took 41.862984362 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.823357894 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.825209382 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.843758441 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.864893434 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.857029586 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.826177647 seconds)
  done (took 12.798243951 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822239814 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.824264162 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.822020808 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.824941983 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.826581774 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.824182806 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825273004 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.82336382 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826435677 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.82579931 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.821727157 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.822932656 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828887053 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.823751312 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.82879647 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.826364323 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825212218 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.823083851 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825556985 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.825203496 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825529741 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.823852216 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825391137 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824276847 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.823361742 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.823629014 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827887792 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.822573161 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.826211817 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827282292 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827867301 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825372916 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.826306883 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.827196082 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826463667 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828265458 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824018086 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.824525689 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.826091918 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.826347384 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.829516529 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827280464 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827163042 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822854064 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.829997593 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.826743448 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825518341 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.824715093 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.824253675 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827560359 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.826268935 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.828307961 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.829500187 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.825462993 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.829385861 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828266141 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.82784647 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825139644 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827717502 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.827425649 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.82565421 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827553048 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.827370942 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.829298328 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.827919788 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.827641411 seconds)
  done (took 122.275613462 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.826163519 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.825376002 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826359774 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.828869819 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.828693063 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.827555966 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.82673716 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.826136764 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.826767559 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.831605986 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831789945 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.82411255 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.823067289 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.824660168 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.822883006 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.82824411 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827449327 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.828201088 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825351604 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.829959971 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.82680482 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.825114142 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.82800802 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.824334956 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825861363 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.830144071 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.82502437 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.825971537 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.829618304 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.8304667 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.829555161 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.825968437 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.828993507 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.829193581 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.824938443 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.82794843 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.828129808 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.827657391 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825351339 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.828866962 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.829787853 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.829859779 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.830732553 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.828344782 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828028592 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.831355019 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.830647086 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.829052036 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.831256676 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.83030807 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.830904679 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.832092588 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.833076774 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.831411102 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.829414013 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.829840947 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.826698512 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.827107208 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831727307 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.833857432 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.832236296 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831494117 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834827712 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.827436455 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.821741227 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.830436887 seconds)
  done (took 122.435480522 seconds)
done (took 2492.272390512 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.829712644 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.870500775 seconds)
  done (took 15.463645479 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.99495903 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.948762539 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.833046688 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.841927903 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.83146512 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.852386694 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.833381807 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.833145112 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.828298896 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.83314769 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.832780723 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.019907671 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.847204739 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.830348064 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.829502804 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.928380391 seconds)
  done (took 51.690113545 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.836083798 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.838784549 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.846663764 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.838947868 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.836138752 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.847456129 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.87095799 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.839638133 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.871006549 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.849021058 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.908160554 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.84406167 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.837405875 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.886575817 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.848680951 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.85252144 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.922712746 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.906912867 seconds)
  done (took 35.250597581 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.915530006 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.838317688 seconds)
  done (took 10.531210965 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.82809122 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.838648486 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.834383376 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.849766081 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.85862601 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.872682622 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.873239931 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.87095029 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.843277041 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.840776988 seconds)
  done (took 70.278844308 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.841679707 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.836363899 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.835707907 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.834781791 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.828942552 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.833237111 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.836259474 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.832398722 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.523865418 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.872085976 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.841018767 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.840948886 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.834815894 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.838513567 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.833734101 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.860854496 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.973384141 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.834134967 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.833414888 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.841854874 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.836309971 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.896976432 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.849163515 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.835794757 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.863716287 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.518999934 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.844766755 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.840305359 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.952663777 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.833835273 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.837562317 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.836043757 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.838934405 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.222598999 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.16985394 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.834174705 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.843656189 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.844028937 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.834192858 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.966071392 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.836373016 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.842133777 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.831542223 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.149566609 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.918852862 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.878631823 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.16486093 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.841862276 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.838056734 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.86729804 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.839767825 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.839288098 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.849845046 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.357430886 seconds)
  done (took 130.936236829 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.832858643 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.410052285 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.995772246 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.83148795 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.1153105 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.07562571 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.833529387 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.882284977 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.833284894 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.082819643 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.008963602 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.952556168 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.834107986 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.831303104 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.83441691 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.830516855 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.986261914 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.903832201 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.834823744 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.831795102 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.868831442 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.099485263 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.960868002 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.833740628 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.857733546 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.060343235 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.959565344 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.948227261 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.390221277 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.830970249 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.901587518 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.834610436 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.83042858 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.831739858 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.00043107 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.941305572 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.931780252 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.834098156 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.832927828 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.831397009 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.496231842 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.056810127 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.942725481 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.971183271 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.083550073 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.063296614 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.481001648 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.834346561 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.472315692 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.030993957 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.044096159 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.088171127 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.963728892 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.83736502 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.086391693 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.832955721 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.83402595 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.096891373 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.061810061 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.946659372 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.838154006 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.83325238 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.834909887 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.148866636 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.835695236 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.945545159 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.838514746 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.835970722 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.948318256 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.952290942 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.065393582 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.078033545 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.867657874 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.761607239 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.34320217 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.118937528 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.907638203 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.099952329 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.837054144 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.833958012 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.931032496 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.593541555 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.01620263 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.15310182 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.101972959 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.878633222 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.472744465 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.834507858 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.083932371 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.08709305 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.066093186 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.08027385 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.003760199 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.157793153 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.836011167 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.837361747 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.045371024 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.969968181 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.837189255 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.196782001 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.086909143 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.578293707 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.867168444 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.142581721 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.975803991 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.839118794 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.464551223 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.8382831 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.03802058 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.87981319 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.83712102 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.839552902 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.083179444 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.710390231 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.837476469 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.619399609 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.903840183 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.841184361 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.104436282 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.841077943 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.079225651 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.839662038 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.148497448 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.356455647 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.881848503 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.029693831 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.083849315 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.640549698 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.106476278 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.152149245 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.961765009 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.097901327 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.657112868 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.837803319 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.122064508 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.840625215 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.837656703 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.008049694 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.839124134 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.993782188 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.841141 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.100542294 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.865017606 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.010084831 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.842770561 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.112248848 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.886136133 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.892345395 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.843114743 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.956736902 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.841893918 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.955625082 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.024794829 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.840219165 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.839983707 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.417215165 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.840175496 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.987286668 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.138850269 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.864853783 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.911935384 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.366684542 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.838264542 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.934755193 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.869009381 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.438504589 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.840998633 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.01131939 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.842523912 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.830359443 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.841248678 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.148139218 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.065186309 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.841593063 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.841219422 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.635046971 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.531483314 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.840884938 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.016662866 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.267471144 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.487759724 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.06231791 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.842213368 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.97445993 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.844779012 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.927098749 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.189819823 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.840373393 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.843320459 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.842753125 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.841920596 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.843446884 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.068498356 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.871326955 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.52905911 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.980781632 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.085953198 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.156008319 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.107098378 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.892289202 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.843555315 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.107280839 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.842852869 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.909050391 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.844712106 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.866602575 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.090368519 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.845213498 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.073728307 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.129809163 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 3.01696481 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.894117926 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.843696104 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.842988719 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.841856815 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.98518806 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.944078761 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.845269353 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.843303467 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.961198815 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.97051536 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.034727065 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.44010697 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.022136918 seconds)
  done (took 897.564110022 seconds)
done (took 1213.483414509 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.842829 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.847581215 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.832747008 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.845498242 seconds)
  done (took 29.151801836 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.85009953 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.849833404 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.849903947 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.848632535 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.853401103 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.848870881 seconds)
  done (took 12.882677242 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.893209756 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.848443865 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.845566525 seconds)
  done (took 21.370253633 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.916806647 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.257049795 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.953282508 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.296551286 seconds)
  done (took 10.208148722 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.852008413 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.85053708 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.849299464 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.854108566 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.852269431 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.853043967 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.855440732 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.855177388 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.852370999 seconds)
  done (took 18.456785395 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.979559727 seconds)
done (took 97.830662739 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.939010412 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.844574473 seconds)
    (3/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.447871096 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.833308403 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.75465212 seconds)
    (6/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.147476102 seconds)
    (7/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.368954314 seconds)
    (8/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.050963368 seconds)
    (9/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.959675249 seconds)
    (10/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.992873129 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.952880832 seconds)
    (12/309) benchmarking ("sort", Float64, false)...
    done (took 5.661499033 seconds)
    (13/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.932427298 seconds)
    (14/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.918212346 seconds)
    (15/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.061209122 seconds)
    (16/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.978965142 seconds)
    (17/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.954518817 seconds)
    (18/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.87301232 seconds)
    (19/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.886345529 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.217225619 seconds)
    (21/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.866491141 seconds)
    (22/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.873020199 seconds)
    (23/309) benchmarking ("sort", Int8, false)...
    done (took 4.877903277 seconds)
    (24/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.358589667 seconds)
    (25/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.879944126 seconds)
    (26/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.118583709 seconds)
    (27/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.988055947 seconds)
    (28/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.018500566 seconds)
    (29/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.952683596 seconds)
    (30/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.034407561 seconds)
    (31/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.851487285 seconds)
    (32/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.19828938 seconds)
    (33/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.026298358 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.168462022 seconds)
    (35/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.876294593 seconds)
    (36/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.91179546 seconds)
    (37/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.209494152 seconds)
    (38/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.812619262 seconds)
    (39/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.46287683 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.957444585 seconds)
    (41/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.905557558 seconds)
    (42/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.873107363 seconds)
    (43/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.904975951 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.22974075 seconds)
    (45/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.261737061 seconds)
    (46/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.855484418 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.631929617 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.150012321 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.83441364 seconds)
    (50/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.867692557 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.872391726 seconds)
    (52/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.931911638 seconds)
    (53/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.977688353 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.102944895 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.092544521 seconds)
    (56/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.019784196 seconds)
    (57/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.864086769 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.494938593 seconds)
    (59/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.958430815 seconds)
    (60/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.051302825 seconds)
    (61/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.943955505 seconds)
    (62/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.069828167 seconds)
    (63/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.944346249 seconds)
    (64/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.114943948 seconds)
    (65/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.220733526 seconds)
    (66/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.934257838 seconds)
    (67/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.836866686 seconds)
    (68/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.995423679 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.761372921 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.227666596 seconds)
    (71/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.875919137 seconds)
    (72/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.206388298 seconds)
    (73/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.910614176 seconds)
    (74/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.849056692 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.507288727 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.930491404 seconds)
    (77/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.834485298 seconds)
    (78/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.86672839 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 3.596167374 seconds)
    (80/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.258127407 seconds)
    (81/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.884138028 seconds)
    (82/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.797926392 seconds)
    (83/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.880055267 seconds)
    (84/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.050997205 seconds)
    (85/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.677379751 seconds)
    (86/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.930047707 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.874480472 seconds)
    (88/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.354777876 seconds)
    (89/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.028932238 seconds)
    (90/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.850587711 seconds)
    (91/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.046850682 seconds)
    (92/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.959023108 seconds)
    (93/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.837832595 seconds)
    (94/309) benchmarking ("sort", Int64, false)...
    done (took 5.547655665 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.239524277 seconds)
    (96/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.839706642 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 3.797672533 seconds)
    (98/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.198193829 seconds)
    (99/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.153589174 seconds)
    (100/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.953240797 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.179426371 seconds)
    (102/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.200397837 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.090849028 seconds)
    (104/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.871466429 seconds)
    (105/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.851114304 seconds)
    (106/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.95502516 seconds)
    (107/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.051012221 seconds)
    (108/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.853515333 seconds)
    (109/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.281804186 seconds)
    (110/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.941177045 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.954561847 seconds)
    (112/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.877003749 seconds)
    (113/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.838273638 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.462099192 seconds)
    (115/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.879791718 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.901007074 seconds)
    (117/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.170234763 seconds)
    (118/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.479407086 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.854063553 seconds)
    (120/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.418125515 seconds)
    (121/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.052229346 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.009785633 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.98044333 seconds)
    (124/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.915701519 seconds)
    (125/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.120492033 seconds)
    (126/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.151721417 seconds)
    (127/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.282887587 seconds)
    (128/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.937914437 seconds)
    (129/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.851509113 seconds)
    (130/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.250112308 seconds)
    (131/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.068833681 seconds)
    (132/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.128177781 seconds)
    (133/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.52777926 seconds)
    (134/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.881473579 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.537353018 seconds)
    (136/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.861911297 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.155999369 seconds)
    (138/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.142929412 seconds)
    (139/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 8.001425633 seconds)
    (140/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.008978889 seconds)
    (141/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.861930087 seconds)
    (142/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.97612644 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.536158328 seconds)
    (144/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.726903341 seconds)
    (145/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.853992175 seconds)
    (146/309) benchmarking ("sort", Bool, false)...
    done (took 2.301853335 seconds)
    (147/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.879930443 seconds)
    (148/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.855131274 seconds)
    (149/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.880530639 seconds)
    (150/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.109750112 seconds)
    (151/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.357280114 seconds)
    (152/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.107081794 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.074692391 seconds)
    (154/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.155895344 seconds)
    (155/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.21380643 seconds)
    (156/309) benchmarking ("sort", BigInt, false)...
    done (took 6.854438394 seconds)
    (157/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.451322429 seconds)
    (158/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.985706371 seconds)
    (159/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.879942766 seconds)
    (160/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.840439334 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 4.184510399 seconds)
    (162/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.109377999 seconds)
    (163/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.021878495 seconds)
    (164/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.456142879 seconds)
    (165/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.091574325 seconds)
    (166/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.094243624 seconds)
    (167/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.884506364 seconds)
    (168/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.939596346 seconds)
    (169/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.164243791 seconds)
    (170/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.201133873 seconds)
    (171/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.843651138 seconds)
    (172/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 3.22345847 seconds)
    (173/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.876987803 seconds)
    (174/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.165955783 seconds)
    (175/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.942336451 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.649740944 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.942547369 seconds)
    (178/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.979956536 seconds)
    (179/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.991535552 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.10540918 seconds)
    (181/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.2104047 seconds)
    (182/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.017221017 seconds)
    (183/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.363544435 seconds)
    (184/309) benchmarking ("sort", Float32, false)...
    done (took 5.610432578 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.287000291 seconds)
    (186/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.950054153 seconds)
    (187/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.904794681 seconds)
    (188/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.358772115 seconds)
    (189/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.973701016 seconds)
    (190/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.911605644 seconds)
    (191/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.778658759 seconds)
    (192/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.969575471 seconds)
    (193/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.091632681 seconds)
    (194/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.071272827 seconds)
    (195/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.861798804 seconds)
    (196/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.080265281 seconds)
    (197/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.875681893 seconds)
    (198/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.988905559 seconds)
    (199/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.117053826 seconds)
    (200/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.857273108 seconds)
    (201/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.88539241 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.767920513 seconds)
    (203/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.037113506 seconds)
    (204/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.200186915 seconds)
    (205/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.936471882 seconds)
    (206/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.783926479 seconds)
    (207/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.905394556 seconds)
    (208/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.856637958 seconds)
    (209/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.105373317 seconds)
    (210/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.847981193 seconds)
    (211/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 3.213016494 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.83998424 seconds)
    (213/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.865605323 seconds)
    (214/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.23217654 seconds)
    (215/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.19439889 seconds)
    (216/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.988145906 seconds)
    (217/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.05059922 seconds)
    (218/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 8.063496914 seconds)
    (219/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.010371381 seconds)
    (220/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.28101446 seconds)
    (221/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.949776692 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.960338478 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.906807048 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.191614178 seconds)
    (225/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.069437049 seconds)
    (226/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.17927819 seconds)
    (227/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.847788312 seconds)
    (228/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 4.981431404 seconds)
    (229/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.08293747 seconds)
    (230/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.093721667 seconds)
    (231/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.46660508 seconds)
    (232/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.441060192 seconds)
    (233/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.404915969 seconds)
    (234/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.944607397 seconds)
    (235/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.744520949 seconds)
    (236/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.261539228 seconds)
    (237/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.292723847 seconds)
    (238/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.260881612 seconds)
    (239/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.225308672 seconds)
    (240/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.887443154 seconds)
    (241/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.983426529 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.399401729 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.990794161 seconds)
    (244/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.966325882 seconds)
    (245/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.900469045 seconds)
    (246/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.940909251 seconds)
    (247/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.899004533 seconds)
    (248/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.865203323 seconds)
    (249/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.029813084 seconds)
    (250/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.751308034 seconds)
    (251/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.886688587 seconds)
    (252/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.853237152 seconds)
    (253/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.882601836 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.84808391 seconds)
    (255/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.951581913 seconds)
    (256/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.860182334 seconds)
    (257/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.848973072 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.213648416 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.938948598 seconds)
    (260/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.022905154 seconds)
    (261/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.863727134 seconds)
    (262/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.129764307 seconds)
    (263/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.991778639 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.250799205 seconds)
    (265/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.975950233 seconds)
    (266/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.960582511 seconds)
    (267/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.259383439 seconds)
    (268/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.165519069 seconds)
    (269/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.157970622 seconds)
    (270/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.984588059 seconds)
    (271/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.8871717 seconds)
    (272/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.860597586 seconds)
    (273/309) benchmarking ("perf_sum", Float64, false)...
    done (took 3.483162456 seconds)
    (274/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.248040632 seconds)
    (275/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.167355237 seconds)
    (276/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.927227953 seconds)
    (277/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.995706697 seconds)
    (278/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.851337171 seconds)
    (279/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.987368704 seconds)
    (280/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.933117104 seconds)
    (281/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.00971581 seconds)
    (282/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.966261443 seconds)
    (283/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.812188167 seconds)
    (284/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.87334799 seconds)
    (285/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.053452141 seconds)
    (286/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.472604192 seconds)
    (287/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.863045298 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.958616275 seconds)
    (289/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.253167448 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.946231573 seconds)
    (291/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.862463439 seconds)
    (292/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.865253989 seconds)
    (293/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.977246651 seconds)
    (294/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.205074461 seconds)
    (295/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.916405299 seconds)
    (296/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.375283851 seconds)
    (297/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.84822802 seconds)
    (298/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.114301457 seconds)
    (299/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.847994743 seconds)
    (300/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.04358795 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.90758949 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.132189774 seconds)
    (303/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.754977651 seconds)
    (304/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.543368526 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.788059721 seconds)
    (306/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.003930058 seconds)
    (307/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.050746967 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.893581465 seconds)
    (309/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.23918264 seconds)
  done (took 1019.68282147 seconds)
done (took 1021.481148196 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.900932529 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.891765633 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.872421323 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.895122432 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.985963257 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.904728365 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.884032157 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.874850727 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.920987761 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.923147291 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.873574539 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.902306806 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.875290241 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.874290094 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.873037001 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.887590126 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.181509391 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.898782783 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.891065405 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.88540196 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.891635794 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.873005131 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.923882588 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.903380023 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.87905665 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.877073185 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.879088214 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.894408369 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.987163093 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.879199534 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.87870457 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.885865907 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.180315412 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.897964354 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.870625311 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.89447286 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.88661003 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.884955227 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.879088939 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.908682242 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.318545904 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.879437843 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.876351453 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.876562286 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.877753918 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.881456817 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.877894271 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.881771417 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.890054465 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.888670746 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.316490485 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.895988243 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.879239638 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.876930019 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.88864586 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.877075916 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.880129984 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.89324576 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.89686088 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.891556506 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.172061927 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.906092882 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.878270157 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.895065437 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.883354598 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.356131036 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.878839053 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.881503607 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.319902146 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.888459965 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.352697818 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.891543693 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.87807889 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.891241092 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.907825929 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.181778765 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.896573537 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.876824564 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.886175776 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.876449007 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.888914004 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.890076372 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.882742248 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.879374054 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.891572824 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.906945662 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.88917625 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.880596399 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.887457933 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.896365423 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.886101022 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.890613214 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.881487001 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.874452572 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.888838356 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.883740424 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.882554889 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.882272572 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.884054647 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.889941376 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.31966609 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.901136721 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.876651977 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.877275203 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.879966949 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.893862268 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.320421063 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.885312276 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.903678679 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.926481933 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.881108494 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.175326166 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.907469683 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.894592513 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.887859032 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.884411087 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.87571263 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.175324193 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.344970048 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.899718405 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.881244594 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.878701148 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.89569032 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.882186123 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.87774109 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.186395141 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.906377194 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.893574327 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.001500144 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.890936426 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.912092254 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.878152598 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.884110973 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.909492182 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.896020982 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.911378394 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.883332149 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.89708679 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.896912789 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.878119776 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.891492328 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.891517424 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.884093869 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.88658458 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.876734608 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.91297754 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.893658703 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.894432841 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.903602923 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.002818644 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.878900692 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.175522973 seconds)
done (took 295.187808778 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.947573346 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.878717206 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.979687225 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.877079969 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.960984748 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.961993546 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.875523728 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.87588391 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.875527428 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.25496214 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.875672011 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.876217618 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.872494014 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.876412769 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.959532085 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.879463086 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.875825958 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.218143363 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.878676037 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.948075831 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.870152697 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.876677702 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.879218767 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.260320426 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.873101368 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.87556193 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.949663438 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.878941882 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.223751966 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.877208689 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.871463051 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.224185664 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.967724595 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.907664845 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.880519823 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.886484018 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.963454951 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.892413189 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.960106839 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.960725453 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.983966183 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.908987565 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.879824489 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.871404295 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.882581389 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.880555347 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.878286703 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.907935632 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.872501466 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.888231017 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.221212782 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.889880324 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.877740149 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.878931407 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.877063402 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.909727396 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.877808104 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.879465926 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.968975129 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.881791907 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.942160158 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.26098823 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.25829048 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.881305374 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.87619121 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.880801724 seconds)
  done (took 184.95568911 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.947919247 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.955897357 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.950367373 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.88445732 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.931761049 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.953159084 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.885688001 seconds)
  done (took 15.320213869 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.887373211 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.88143304 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.931336794 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.933334901 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.880785395 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.03198232 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.882433741 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.892966506 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.879414753 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.933319714 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.88490963 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.882230124 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.888932296 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.875962905 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.930297648 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.894668784 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.997915005 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.882658246 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.882642948 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.039008403 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.880065976 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.88981701 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.936252297 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.89430249 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.886419494 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.887895764 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.465990687 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.883007898 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.880865338 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.884200739 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.880845234 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.926052428 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.884105278 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.878179593 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.880602448 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.998853535 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.882585474 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.881662275 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.883928559 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.882224135 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.883311839 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.883032872 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.883931954 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.881551156 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.88508924 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.908730073 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.88548082 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.883976162 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.884737651 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.885410804 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.933866893 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.884459648 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.882323908 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.882648755 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 2.37388229 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.892352511 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.883842616 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.881508579 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.884969821 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.882982142 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.041504794 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.932805402 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.884337152 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.932408801 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.884215571 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.885713362 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.885074851 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.884800759 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.938596608 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.886713866 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.932180137 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.882850684 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.043083926 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.908368972 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.885388056 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.887609632 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.888670539 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.88515806 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.88142375 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.89174287 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.883004364 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.885890369 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.890879021 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.883532853 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.883474163 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.998567901 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.995466213 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.884400206 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.898371593 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.892995022 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.883205675 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.938749866 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.886461968 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.883888925 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.937375205 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.000564231 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.942177664 seconds)
  done (took 207.638910595 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.890973345 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.894656268 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.886981128 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.903233423 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.886082971 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.88578232 seconds)
  done (took 13.164392881 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.889041472 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.887417151 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.886843052 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.886166638 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.887130098 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.890380159 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.88687225 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.888183968 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.890275451 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.886449323 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.890054758 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.88707822 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.890889425 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.886137614 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.887545986 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.888791377 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.887555221 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.886317459 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.887752153 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.887274978 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.039433107 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.887022846 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.886435071 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.888427757 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.893920432 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.887752308 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.895392753 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.887783025 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.888119221 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.894102201 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.890706827 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.891016248 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.889402442 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.895296299 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.892298627 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.891166055 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.892866757 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.888808697 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.886471009 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.890877934 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.889618555 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.887712981 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.88975147 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.889440691 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.890192023 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.894077015 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.892668577 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.896659548 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.888010752 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.88859842 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.88901507 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.890395056 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.891327362 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.889589269 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.893134972 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.893609005 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.89311825 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.889570116 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.888613552 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.891426475 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.890579483 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.893459157 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.892097123 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.893066316 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.887911576 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.889405599 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.891054024 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.892728016 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.889556087 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.891355594 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.889952658 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.887919085 seconds)
  done (took 139.040989721 seconds)
done (took 561.94299097 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.148240604 seconds)
  done (took 8.968531978 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.02335643 seconds)
  done (took 8.931428566 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.458306797 seconds)
  done (took 10.278903136 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.887096035 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.918683371 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.899288944 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.889524585 seconds)
  done (took 29.424607728 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.913048222 seconds)
  done (took 8.734524565 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.898652241 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.883664793 seconds)
  done (took 15.638986329 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.975523599 seconds)
  done (took 8.797925441 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.042805893 seconds)
  done (took 8.86699674 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.911646684 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.89565597 seconds)
  done (took 15.643144663 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.87149055 seconds)
  done (took 8.693234624 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.512281244 seconds)
  done (took 11.344505221 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.893719725 seconds)
  done (took 8.729538344 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.909206007 seconds)
  done (took 8.731535446 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.018218149 seconds)
  done (took 9.839618614 seconds)
done (took 164.443978556 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.888202173 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.88614838 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.887986067 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.884488673 seconds)
  done (took 29.36837044 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.925283303 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.924548651 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.926935123 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.935665799 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.928540033 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.926282613 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.917189561 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.918078987 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.936782168 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.928234549 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.927429322 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.927728837 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.927208052 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.918926702 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.92795475 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.927613563 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.936656707 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.927762229 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.917932469 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.935151689 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.894164233 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.936885209 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.930072795 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.893823703 seconds)
  done (took 48.019768516 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.089395528 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.964194114 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.04643212 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.94534516 seconds)
  done (took 9.873194447 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.944650833 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.946036313 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.958192071 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.997421933 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.039895367 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.957408309 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.917346058 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.91723189 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.902706788 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.951491664 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.023133236 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.963880982 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.031914032 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.893389486 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.088202973 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.894716314 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.893656288 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.945995141 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.997645164 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.014935696 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.896790933 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.946791686 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.949049931 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.963166169 seconds)
  done (took 48.86437235 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.898298189 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.903346872 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.900498979 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.89413246 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.893529305 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.898255416 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.899866564 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.895435605 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.915407868 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.894883992 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.89935125 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.894325199 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.894254673 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.895440832 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.894471086 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.910561025 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.91009333 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.895522872 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.898280779 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.901151265 seconds)
  done (took 39.8122035 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.892004431 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.744291342 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.240623038 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.144190831 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.888785168 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.888407356 seconds)
  done (took 31.624646533 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.907101232 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.958287224 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.900849957 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.951720175 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.03055628 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.901569105 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.895815615 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.962152938 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.004126995 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.964983544 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.914092466 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.921577556 seconds)
  done (took 25.139399323 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.890165912 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.89187083 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.892424973 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.908650537 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.908300668 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.902756703 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.903334843 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.891068077 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.907852257 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.913015361 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.90267597 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.908405059 seconds)
  done (took 44.649997297 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980608615 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.934315304 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.921032562 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.582218366 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.269166867 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.102430904 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.500974923 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.222295056 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.90520391 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.167045989 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.934497449 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997682361 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.151425841 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.358267148 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.923197279 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.354862298 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.18820164 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.099182271 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.919126659 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.562811289 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957222614 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.048458663 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.671575837 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.952158814 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.105088134 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.021834605 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.15256117 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.892967627 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.029887838 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.930910513 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904196486 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.892633254 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.166790601 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.275049635 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99789361 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903305908 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.513399629 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.60697324 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.883734746 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.652734648 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.607425354 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.014999277 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903109196 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.89351401 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.827033294 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.017027804 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.265358147 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.89954267 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.605332913 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.893138519 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.904936821 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988671889 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.898014047 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.709599174 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.812869287 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.896136257 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.891990562 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899872319 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.468341268 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.006017167 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.065054474 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.867462392 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.985907003 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.669790909 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.281419141 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.04302588 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.898793898 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.898290687 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.830191606 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.573009644 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.95128025 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.225584404 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.919313926 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.545436257 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.199122536 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.014367941 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.839036665 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.161427054 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.406224262 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.865285703 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.123340903 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.896385324 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.832965361 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.841922209 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.830922878 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.155471302 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934353241 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.66323734 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938380971 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.225407426 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.907786558 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916896435 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920287614 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.119424216 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.781555145 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.895989087 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.7380897 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.041738366 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918893633 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.231363294 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.832544851 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.900828718 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.154600294 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.112292487 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.949077906 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.396859971 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.059352604 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.431812402 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.946975789 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.03158906 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.942992545 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.164726378 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.957073906 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.012333915 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.95267405 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.899541827 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.19073583 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.470682397 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.034112535 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.977329566 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.025834016 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.222408495 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.92587506 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982391716 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.908056396 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.89884133 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.683549454 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.452364532 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.898293299 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.901828026 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.948546801 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.943009696 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.899061035 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.851936824 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.529059687 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.982667657 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.914875584 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.127043646 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.437540768 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.209586419 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.834704294 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.230994117 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.992402414 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.122187534 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.547972919 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.98023864 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.162969645 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.946182557 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.975199693 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.944779661 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921067781 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99970169 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922547775 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.018426116 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.190363474 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.905010174 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.904634424 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.701673788 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.937636883 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.900422622 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.906728803 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.651471942 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.170043254 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.925203667 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.907434195 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.791300873 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.91600985 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965779009 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.907756679 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.911741421 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.440805082 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.629567381 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.90847058 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.491315089 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.127224734 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.91301366 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.587165563 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.020709175 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.984003924 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.169278231 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.962919801 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.83716624 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.613423392 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.594833872 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.903195089 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.837719693 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.903216241 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912572807 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.913552382 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.097219302 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.175393776 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.947566841 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.594958487 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.946169938 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.914164099 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.908455742 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.90508163 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.415620887 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.026779335 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.058071253 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.946896965 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.049311803 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.917947732 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.838267571 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.90748039 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.911313232 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.90381655 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.909761477 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937572081 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.604477061 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.28194886 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.164965424 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.512647738 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.917636125 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.674398849 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.963980189 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.905308568 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.775280689 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.036914991 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.934329355 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916712582 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.915236086 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.699017986 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.601645053 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.475688117 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.206643801 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.206513049 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.341360945 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.086077033 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.931565913 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.245851286 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.839049653 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.462263434 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.967067573 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.245641317 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.851277507 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.993045395 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.551525254 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.25499167 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.92004669 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.136398815 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.289303106 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.686710689 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.053704553 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.117574782 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94164097 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.020048618 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.866301125 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.430929512 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.05147789 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.614816473 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.117591458 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.244874804 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.627846725 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.035514821 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.908721365 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.584166919 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9921439 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.623482035 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.079350644 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.049788853 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.89028632 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381860503 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.913399073 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.132765214 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.250443164 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.036075219 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.024367286 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.843588028 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.917520329 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.91816846 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.910444188 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.907666297 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.79208998 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.162670691 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.920042681 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.842384086 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.981051522 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.190114255 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.812883492 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.914025602 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.907744732 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.199528636 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.405365811 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.075197709 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.976894777 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.424597528 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.917094801 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.844383215 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.843061116 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.604819746 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.914993962 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.886442309 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.112938247 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.007393631 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.828431421 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.949063046 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.986271751 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.164914879 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.922768002 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.173405753 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.183395975 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.60799022 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93384161 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.01013109 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.623882568 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.022692316 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.909423735 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.145731797 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.661565961 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.136541967 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.935861548 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.865889909 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.909413822 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.126036707 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.910393732 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.866551357 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.146575625 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.633829799 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.990240053 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.21387473 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.988032828 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.863040346 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.961092068 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.004542537 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.919828729 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990081298 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.923914847 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.922005605 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.921789061 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956987404 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.871285881 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.039686108 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.92552012 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005446191 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.038568178 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.435857934 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.918553587 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.179576379 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.266574637 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.233311554 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.972340318 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.91320662 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.913817535 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.846665022 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.061228797 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.138503887 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.18599563 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.040925581 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.026794843 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937616828 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.63579171 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.093514088 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.15069651 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.187968575 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.812403012 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.377024918 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.950792884 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.913836891 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.926423367 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.124085441 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.119054905 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.208510239 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.050209671 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.956816427 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.269193433 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.187398599 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.914379706 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.912943509 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.503527004 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.917947298 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.697547172 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.956536246 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.869845676 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.19456337 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.924234228 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.296230205 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.936665625 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.070486579 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.688407254 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.65917123 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.204615455 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.897800755 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.975112177 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.180765317 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.288939743 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.227940277 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981196589 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.925720384 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.019975825 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.061709977 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.796617943 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.915219567 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.914597773 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.130387296 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.625301545 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.926031802 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.186886082 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.225966097 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.911872678 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.809145254 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938295257 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.925451336 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.139792793 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.172301158 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.168077646 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.925836147 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.922095344 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.732695728 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.183079995 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.976639479 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.849846624 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.919817968 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013394458 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.163508041 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.939852503 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.368635574 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.627271497 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.181847688 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.917096769 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939484742 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.027915837 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.270228344 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.234488339 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.452966846 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.1195409 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.503437644 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.445294735 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.216258716 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.922502871 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.035127213 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.218925888 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.920503386 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.953962184 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.952642968 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.178720522 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.229814315 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.9604362 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.618596197 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.886930279 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.257936161 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.469111355 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.8551775 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.925920326 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.977888777 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.917843818 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.048496046 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.928829305 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.810193428 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.040392642 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.676312174 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.191810386 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.922952601 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.909042115 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.691909779 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.161202139 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948572894 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.073478428 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.920092515 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.594122269 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.268511765 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.175262095 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.9594976 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.926430711 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.923232058 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.919182182 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.905372641 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.115469333 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.1142084 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.187883528 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.988815981 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.953526042 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.921767589 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.134548116 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.131043562 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.857752866 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.06148069 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.956620775 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.958810266 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.825813336 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.428565133 seconds)
  done (took 1691.441505296 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.920539007 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.941582584 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 7.008782854 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.001454631 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.932353481 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.921128654 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.96713728 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.950992336 seconds)
  done (took 57.499760786 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.919900246 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.142760867 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.929524457 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.919188757 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.928497623 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.920510421 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.088480596 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.930837216 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.928179786 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.929001357 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.920720467 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.919812228 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.22843337 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.941699478 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.920480207 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.908312185 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.929707492 seconds)
  done (took 75.263901097 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.91948556 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.937522169 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.950271141 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.940970628 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.942073565 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.933228483 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.729742205 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.943916951 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.923273494 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.047702666 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.555419216 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.927693324 seconds)
  done (took 87.608775831 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.929848923 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.927440053 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.927223682 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.926923844 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.92851146 seconds)
  done (took 11.499279969 seconds)
done (took 2202.513845215 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.180033116 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.140649016 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.155332512 seconds)
  done (took 6.154404748 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.069502986 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.118731392 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.237574518 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.258445448 seconds)
  done (took 10.545279931 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.205451475 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.307528403 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.123935063 seconds)
  done (took 8.495087237 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.320854636 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.924531283 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.032588396 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.921929903 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.923561044 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.925044241 seconds)
  done (took 22.628830122 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.927219685 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.927569604 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.927715574 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.929090557 seconds)
  done (took 9.569462832 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.907080893 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.657599706 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.909935552 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.921079648 seconds)
  done (took 21.254084063 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.672037359 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.685621849 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.669315384 seconds)
  done (took 9.885935633 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.587397934 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.851695898 seconds)
  done (took 9.298220414 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.194240063 seconds)
  done (took 4.052178496 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.059225858 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.189122186 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.389499664 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.427823994 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.491162921 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.790519781 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.232885257 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.16533579 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.320431434 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.364794637 seconds)
  done (took 25.288210406 seconds)
done (took 142.487090342 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.303597684 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.161301371 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.121879126 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.263071763 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.185619353 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.122460565 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.146742992 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.245208365 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.771108319 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.767678626 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.262322793 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.192406443 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.089846547 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.163745845 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.088920509 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.16105002 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.196758633 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.318131109 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.960467253 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.1579327 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.148969763 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.899418987 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.106603326 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.914828538 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.153800259 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.07531681 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.477286177 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.164878141 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.113658723 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.487979377 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.077509707 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.308371085 seconds)
  done (took 174.467398255 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.832538139 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.925509928 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.926404571 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.925185321 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.385222289 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.924853478 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.924880307 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.925412168 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.165876786 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.144239395 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.926507146 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.370508657 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.928063696 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.928080719 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.929864765 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.933046067 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.32023076 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.929538083 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.948691462 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.95310439 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.95924729 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.330507559 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.955270333 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.376523443 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.336144611 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.952148148 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.926888621 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.957359116 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.932077637 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.940147586 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.943205781 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.927067576 seconds)
  done (took 210.64719242 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.925991931 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.927451956 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.947541219 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.927953997 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.930939205 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.933972595 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.929613732 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.928381724 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.492647207 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.502661731 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.957296036 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.932550663 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.933963956 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.92980578 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.939708634 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.92990283 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.946651449 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.928737508 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.938940315 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.942695107 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.947721394 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.648599664 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.930981509 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.646547648 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.934431729 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.935208237 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.929219895 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.941826645 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.945246016 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.946492598 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.946305008 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.930204726 seconds)
  done (took 222.389407698 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.1329141 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.939805098 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.939348846 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.895679765 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.939925068 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.938227081 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.930020145 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.133810737 seconds)
  done (took 20.228945299 seconds)
done (took 629.604851888 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.50146873 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.262776389 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.126244973 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.962932457 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.205768776 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.001291777 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.958071854 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.028357509 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.692245856 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.03263396 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.661436645 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.981204046 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.755449077 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.986437382 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.089808159 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.018377915 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.511431785 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.603674462 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.140888982 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.040133611 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.139970269 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.971856015 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.039314373 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.712168445 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.769081687 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.973320047 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.153132002 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.519678103 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.973200987 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.121503047 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.698043993 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.356462247 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.972988105 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.958109153 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.009993752 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.993660166 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.315675124 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.971419056 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.088829096 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.737684682 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.026892852 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.56823503 seconds)
  done (took 106.499663182 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.930565571 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.929432333 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.928858563 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.929517828 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.932771233 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.930656425 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.92974444 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.928576789 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.92866946 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.927808982 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.928862981 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.931601578 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.930146007 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.930639993 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.929416668 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.928925418 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.930363938 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.931088782 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.927991954 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.928470801 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.930678983 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.930330186 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.930043279 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.927228984 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.930982678 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.92976476 seconds)
  done (took 52.054389073 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.943360078 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.085095742 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.168027078 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.96092017 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.941868328 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.944759451 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.961198009 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.947001141 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.944315124 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.944166345 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.038229841 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.949718313 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.969773074 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.165889122 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.960247344 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.942546137 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.942839405 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.941781439 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.092453168 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.960419376 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.963473096 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.94792953 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.962782577 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.958105413 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.946490679 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.9456856 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.947189296 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.384389564 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.95355943 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.042404383 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.030818574 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.965371001 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.339908894 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.175587816 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.010990307 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.953215142 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.94432469 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.046557442 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.951762148 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.943861417 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.963912911 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.949176259 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.168923866 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.447036917 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.957359011 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.945000554 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.395418131 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.053517566 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.985978077 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.956741273 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.171574023 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.961429839 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.946633177 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.945682076 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.982785755 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.955153627 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.944349694 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.250440824 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.957686384 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.962895911 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.951147127 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.94590046 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.099481355 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.953144152 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.088424771 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.954973788 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.952849887 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.944912938 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.170067957 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.962000492 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.447348587 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.958682558 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.946746481 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.04370348 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.094136394 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.420749213 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.960524512 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.102065797 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.354264965 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.971738173 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.954029411 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.374488883 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.973862182 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.954247109 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.948806872 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.947407604 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.947794571 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.992403382 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.962520356 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.381104976 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.452110094 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.266910459 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.974993547 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.962943176 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.948213425 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.25579193 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.9579615 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.94821872 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.162664912 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.465642005 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.961646715 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.954567927 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.434932041 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.961718118 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.966386734 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.957086937 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.174200774 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.962989972 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.991031643 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.948850659 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.95406806 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.94836403 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.967124006 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.954976919 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.949059083 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.424362846 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.063939591 seconds)
  done (took 240.725876724 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.944576147 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.954452391 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.941668788 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.943702029 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.941340787 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.948706276 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.942083605 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.941955761 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.948346681 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.940133936 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.942525393 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.943247873 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.942337212 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.950918941 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.985711275 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.949572506 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.55494333 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.941071406 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.942634352 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.954052436 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.592450308 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.951147271 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.94187327 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.96015478 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.942465741 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.945965089 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.948677853 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.987843113 seconds)
  done (took 169.703995605 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.9508872 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.064582294 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.965524677 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.978502012 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.959045944 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.947542209 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.974119762 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.965993 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.954866761 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.948521216 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.948726084 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.011143252 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.961189135 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.052567835 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.984861012 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.983023311 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.054274981 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.963765674 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.948699555 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.949505991 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.979558336 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.944493505 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.011789381 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.078971274 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.971654351 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.06798513 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.95909123 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.953524501 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.951161115 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.069142185 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.967860579 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.012017443 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.980051588 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.969073109 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.073628439 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.070748768 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.061636094 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.984873953 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.954614508 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.948318187 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.950620052 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.940320389 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.070422723 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.972132751 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.952145952 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.060647223 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.972746995 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.954050291 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.962623474 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.950419469 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.96674004 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.967727767 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.018366367 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.083666252 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.98702923 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.978824346 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.975695604 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.236386149 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.959791359 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.053336992 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.950917605 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.069852237 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.974772236 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.941566412 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.952982861 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.957869473 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.981672759 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.985746388 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.059157343 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.963168944 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.054474981 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.991397097 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.962512296 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.952829226 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.955056605 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.069526705 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.075585474 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.990239141 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.9924175 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.985554372 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.950674149 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.95310245 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.943154053 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.972171547 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.956904316 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.070221699 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.074760576 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.962232302 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.957163755 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.955732699 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.955933105 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.979408781 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.078721068 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.990962374 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.054253473 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.023519215 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.030161941 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.970452721 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.966512456 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.958297571 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.018854382 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.970233373 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.966629042 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.284246601 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.026246024 seconds)
  done (took 211.411821991 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 2.051338468 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.420937167 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 2.013376635 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 2.009748978 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.245510551 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.413868939 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.75627062 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 2.003153835 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.003840869 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 2.028814095 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.159087121 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.062124596 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.018162763 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.992092689 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.402098409 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.992516285 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.006092901 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 2.022677218 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 2.007189702 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.546737399 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.32462938 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.123317815 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.001986925 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.183020328 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.988586264 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.294666542 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.328605492 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.381817138 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 2.037204055 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.344217579 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.335755384 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.687626433 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.211070334 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.250629209 seconds)
  done (took 77.539242078 seconds)
done (took 859.801596139 seconds)
SAVING RESULT...
DONE!
