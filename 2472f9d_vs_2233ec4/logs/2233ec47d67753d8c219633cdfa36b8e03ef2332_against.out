cset: moving following pidspec: 14192
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.406549895 seconds)
loading group "string"... done (took 0.497967297 seconds)
loading group "linalg"... done (took 8.461148755 seconds)
loading group "parallel"... done (took 0.173105617 seconds)
loading group "find"... done (took 3.01123742 seconds)
loading group "tuple"... done (took 1.945783854 seconds)
loading group "dates"... done (took 1.483968785 seconds)
loading group "micro"... done (took 0.196088147 seconds)
loading group "io"... done (took 0.531800526 seconds)
loading group "scalar"... done (took 50.641476017 seconds)
loading group "sparse"... done (took 13.432209503 seconds)
loading group "broadcast"... done (took 1.262601909 seconds)
loading group "union"... done (took 9.146634355 seconds)
loading group "simd"... done (took 2.984905609 seconds)
loading group "random"... done (took 11.197121885 seconds)
loading group "problem"... done (took 2.168214001 seconds)
loading group "array"... done (took 24.633207984 seconds)
loading group "misc"... done (took 1.101334509 seconds)
loading group "sort"... done (took 3.665554031 seconds)
loading group "collection"... done (took 19.064071798 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.608059894 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.126215348 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.203920933 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.282037813 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.232558673 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.165747422 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.143345667 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.233818465 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.5966744 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.201484404 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.139185654 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.41948104 seconds)
done (took 6.079969169 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.250917138 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.244455341 seconds)
    (2/2) benchmarking "String"...
    done (took 0.166166415 seconds)
  done (took 1.084879934 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.07746505 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.160484248 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.108923357 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.095880923 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094162437 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.11123431 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095438405 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.111414773 seconds)
  done (took 1.455602197 seconds)
done (took 3.54703845 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.536080969 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.864987249 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.511059366 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.144155031 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.314342118 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.294710471 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.270961096 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.198469657 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.093537755 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.089894826 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.175687571 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.412863092 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.383011777 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.936934076 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.090010455 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.094605016 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.131157444 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.75482438 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.079688853 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.121767441 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.493860645 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.19281206 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.115895636 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.106028901 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.186660002 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.134485627 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.162227729 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.106715173 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.676387696 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.133036755 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.179076036 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.099229953 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.161061875 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.189684797 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.210095243 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.096683962 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.687365349 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.200776195 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100035864 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.100880951 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.680942456 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.120755078 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.186871794 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.104908487 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.08949119 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.179147471 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.100640194 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.09417685 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.09541315 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.087283728 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.165762991 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.446752581 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.105989089 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.171964517 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.094727684 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.686489949 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.101207122 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.272245451 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.125767378 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.098621525 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.091128017 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.089870004 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.156567363 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.095303246 seconds)
  done (took 19.984773617 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.147602262 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.166910341 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.079052095 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.15669223 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.123778988 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.081679364 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.102647149 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.080363343 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.12647437 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.179972666 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.138715995 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.152753383 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.092782481 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.091952358 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.145824392 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.231625425 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.108542816 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.122090876 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.091155514 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.090378522 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.140974329 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.098221192 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108558795 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.09432676 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.171007316 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.205000624 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109651029 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123718448 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.091233041 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.096427399 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.14337463 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.14596607 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.092099565 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.090380342 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.188268997 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.110762233 seconds)
  done (took 5.212993361 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.220865624 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.106106245 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.228346895 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.198158172 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.133622392 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.184360428 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.169559748 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.255476177 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.286989373 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.180653583 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.168188496 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130776234 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.098920192 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09795833 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.083139821 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.084327033 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097658831 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.460393793 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.192560027 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.150854282 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.166457574 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115949968 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.084382565 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.363714087 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101718577 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.08585434 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.112777075 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.064900355 seconds)
    (29/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.081845132 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.201640371 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.113402925 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.113568884 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.107054869 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101220627 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135482925 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.198327749 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.138590634 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.124923764 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.111995221 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.084341616 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.086521506 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.225255381 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.120553442 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.080091612 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.116111743 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134776999 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.114431838 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.110532067 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.125807442 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.220726153 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.088242347 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.129142046 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.042440031 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.198950154 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.138861786 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.086361246 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.293727832 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.127351553 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101372804 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.109278658 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.789977633 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.130442228 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.082335914 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079354456 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.115605881 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081022248 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.431546472 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.125689662 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.279725514 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.087062686 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.160581349 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098081563 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.119573758 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085850646 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103055596 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.110763078 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.086666175 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.097008084 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.088235007 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.080216803 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.106841282 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.114971779 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101448724 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.081435444 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.146832135 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.114454726 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.109600784 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124478421 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.091810455 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.086591314 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129523151 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083536417 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.105502408 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.146854442 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.116851551 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.113704038 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115447456 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143450303 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.089568552 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.229240366 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.09989036 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123983783 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099437483 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114602928 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.117813342 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08323312 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084041466 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.096291696 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081835444 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.147364487 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.101282174 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.083837543 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.089535442 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.111052615 seconds)
  done (took 28.635792277 seconds)
done (took 54.507464688 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.43466723 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.081981767 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.080720701 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.100218002 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.081654454 seconds)
  done (took 1.529366016 seconds)
done (took 2.2549645 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.32147497 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.190359846 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.104751745 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.188960652 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088890642 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.193441362 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.179859923 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.094886792 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.205811397 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.084417939 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.185118371 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084541469 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.104797882 seconds)
  done (took 2.777120527 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.101232168 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104771069 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.100667186 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.116909343 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084569905 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100761531 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.114982312 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108326618 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099060268 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.110420616 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084612071 seconds)
  done (took 1.84892308 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.100124587 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102331974 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.090367586 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114009328 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085774517 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.096324095 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.113300929 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105265499 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096634825 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.109303006 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084373938 seconds)
  done (took 1.824490227 seconds)
done (took 7.17340728 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.089370027 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.398226697 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.147663114 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.209841197 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.348357659 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.236649326 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.561133133 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.152074367 seconds)
  done (took 14.011869473 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.166103588 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.108346299 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.09288697 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.092174741 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.09528401 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.108967094 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.092314474 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.094691871 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.111722964 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.096726666 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.094583352 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.108242195 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.095464435 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.095282055 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.106639973 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.096155628 seconds)
  done (took 2.446962231 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.143327164 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.140271834 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.099438126 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.100507822 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.111631675 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.100027973 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.103159632 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.11558907 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.094966763 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.096417243 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.118555321 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.100069639 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.098807911 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.110701467 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.098830598 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.118366388 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.111212215 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.098688153 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.116890015 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.115992548 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.101190222 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096166813 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.113647545 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.099486338 seconds)
  done (took 3.416475557 seconds)
done (took 20.600437783 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.147661886 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.101374442 seconds)
  done (took 0.982411115 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.141026583 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.156758799 seconds)
  done (took 1.035355916 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.112094544 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.091280818 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.135900079 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.102463555 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.092064531 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.107006672 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.116556642 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.108753907 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.091647252 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.092545708 seconds)
  done (took 1.790032849 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.095012458 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.096103628 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.121663794 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.13583055 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.115652032 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094355274 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.095428462 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.093082152 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.112724757 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.092149746 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.095017473 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.125378862 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.095619438 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.125921958 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.098599669 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.097431438 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.115904987 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.095235054 seconds)
  done (took 2.64391508 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.091746268 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.092837629 seconds)
  done (took 0.927507266 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.094618176 seconds)
    (2/7) benchmarking "second"...
    done (took 0.090492583 seconds)
    (3/7) benchmarking "month"...
    done (took 0.093467746 seconds)
    (4/7) benchmarking "year"...
    done (took 0.109556874 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.091552148 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.091115109 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.106735319 seconds)
  done (took 1.420413397 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.489072409 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.380239491 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.357489272 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.110241922 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.148009829 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.350993776 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.149588714 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.105199171 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.121031525 seconds)
  done (took 2.989490535 seconds)
done (took 12.52846822 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.092915935 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.223715811 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.605843182 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.113081154 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.092844391 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.158517273 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.285284558 seconds)
done (took 2.318200158 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.341262944 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.143156824 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.080802275 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.091004397 seconds)
  done (took 1.396953292 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082857897 seconds)
    (2/2) benchmarking "read"...
    done (took 0.100845224 seconds)
  done (took 0.934769226 seconds)
done (took 3.080424013 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090030364 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.120835394 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.105869604 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.090202975 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.088265941 seconds)
    (6/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.089297297 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.106858799 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.089327955 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.088674461 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.106646183 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.090792732 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.088831516 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.088539598 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105815605 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08934406 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089896413 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.105220328 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089184674 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.089325782 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088666012 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.104373932 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.090529353 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.08891339 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.104051946 seconds)
  done (took 3.073436663 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.10760997 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.09115821 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.108567997 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.094933256 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.094664225 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.109539318 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.09342032 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.090714838 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.108794014 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.091164003 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093926046 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.10887947 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.091144621 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.094175095 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107068484 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.095170522 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.094019927 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090365885 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108738961 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.095810883 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.093579096 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106640045 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.094988771 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093540553 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.109610062 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09528716 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.090501395 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.107228927 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094488466 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.093619536 seconds)
  done (took 3.699519231 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.099740032 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.087814157 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.090418381 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.113894452 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.089123328 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.091113628 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.103266966 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.088207633 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.090943777 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.088236783 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.107756122 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.090450027 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.086235188 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.106633146 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.091793159 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.092311873 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.114867707 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.088458883 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.087489261 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.089781774 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.108932904 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.088710349 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.090841775 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.107107541 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.089802377 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.087197156 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.090441296 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.106977896 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.091963809 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.090360555 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.108920137 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.093870629 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.090947208 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.115299281 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.093837422 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.090011932 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.111120241 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.087578131 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.092058806 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.086836725 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.103089283 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.089337034 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.087179155 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.112723536 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.090466635 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.091283138 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.086322704 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.107945803 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.09040108 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.091927023 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.102425885 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.087937502 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.092556093 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.090846819 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.10944559 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.088323039 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.089866813 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.103952576 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.091024788 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.089296857 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.103235502 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.087757793 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.09563029 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.090617575 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.122233244 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.097751599 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.087655943 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.108058488 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.093113976 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.095866231 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.108849974 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.10216422 seconds)
  done (took 7.666759077 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.102872061 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100291671 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.090865582 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.107448428 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091439606 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.090864602 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.112309985 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092422954 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091833083 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.112966641 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091094403 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.091327298 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108694864 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.092248458 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092112053 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.091934931 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.113350778 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092130155 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.090890957 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.107748707 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092161318 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.095427064 seconds)
  done (took 2.910399871 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.235739112 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097951603 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.139727878 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.11980087 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109502235 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.120584623 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.096684196 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.096233306 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112167448 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101442145 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099801208 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110772782 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109493567 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.115365899 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.104091149 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.101105356 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112132102 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.102742828 seconds)
  done (took 2.845206664 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.106149121 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.092679236 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.128401303 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092511871 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.092696276 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.094858985 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.116170725 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111935393 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.110010006 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.093942355 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.099798924 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108265675 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.093747986 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093297804 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110168706 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.093960869 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.093854873 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092972895 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115656014 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098013088 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.113232496 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10083754 seconds)
  done (took 3.012745436 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106853022 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.093946555 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.127162931 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.096760959 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.09160038 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.108125106 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.097481518 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.091858217 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.11576988 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.093983755 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093603112 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.091696959 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.123404467 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.0938087 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.097127339 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108890339 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.093362485 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092598953 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109251267 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.0936356 seconds)
  done (took 2.782988493 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.170671474 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122992996 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.109493026 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115856254 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124582618 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.110046457 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114563716 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.126025635 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108573546 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.135413692 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109171604 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108458176 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.132301374 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113616837 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124205301 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116393506 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116155623 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.132200723 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108562285 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.123877829 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12051436 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108726598 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.133763037 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108688742 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.124276263 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109868097 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109063835 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.129087846 seconds)
  done (took 4.130637361 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093174119 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.091667215 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.090084783 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.107325704 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.091974796 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.09174812 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.090478634 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.108426651 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091652645 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.091080846 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.107587706 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.091750641 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.092720967 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.090055651 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.108109183 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.091791664 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091956377 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.106672929 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092753934 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090909148 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.091764945 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109356036 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.092283924 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090615011 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107679188 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.09247967 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091202864 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.091480713 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108946584 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092325343 seconds)
  done (took 3.643006599 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.105069496 seconds)
    (2/2) benchmarking "in"...
    done (took 0.103251003 seconds)
  done (took 0.975002107 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.099421075 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106673894 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.090780352 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10933818 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.09987065 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.091785432 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.116951042 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100000895 seconds)
  done (took 1.581836797 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.141962571 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.160153363 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.098051974 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.103199801 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.160364925 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.15051155 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.133644265 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.09648016 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.107987186 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.086628884 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.154296492 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084506678 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.09259888 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106739244 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.09320791 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097995673 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.108882012 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.102392947 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.099312579 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.092960109 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.114098987 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098511038 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.110453966 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.104514221 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.087357956 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.111774383 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.096695946 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.104177348 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106556682 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.094799052 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089904601 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.109556385 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.095414309 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.097187259 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.092554084 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.161040182 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098563138 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.10697077 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.093712394 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.096700619 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.142606346 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.093679395 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.093507102 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.108371488 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096996979 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.096349855 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.113738489 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.093559152 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.084345572 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.105519258 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.093500778 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087623601 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.108661008 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.095791214 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.092108798 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116642469 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.095134518 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.088976985 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.105374922 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.089575459 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.092095316 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.105520347 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096183229 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.095417727 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10897324 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.095008834 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092239903 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.109601408 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.095071723 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.093393892 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.092608795 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.125143125 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.094330244 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.113435322 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.09880962 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.09399994 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089087913 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.115062993 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092557362 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.094053852 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.113657452 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.123555827 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094244437 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105524438 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.089961233 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.098761139 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.11147875 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.096917741 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.085540441 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118752968 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.095130599 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.093192599 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.10307564 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.092589872 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.08830854 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.112061285 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.087542989 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093628247 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.091059656 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.116269532 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098145986 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090345083 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.112600755 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09870625 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.097866146 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.108240289 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.137024286 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108429731 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.089336098 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.094219164 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.114216133 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.087805415 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092510643 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.110590161 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091710985 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.088850721 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.096691408 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.110906191 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.094941597 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.096185869 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.112342222 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.094896418 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.093864688 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.109357752 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.090813706 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.095975183 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.117664705 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.096496854 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.094119479 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.110552866 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.093512301 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.093443533 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.112719818 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.09142467 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098321008 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107223384 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.092963077 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.094139827 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.098136436 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.111390625 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.08909905 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.091240142 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.112013266 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.092766298 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.096437955 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.113269809 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.08930644 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.085569106 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.112021159 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.089460543 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.09456427 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.118085547 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.089731427 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.095657318 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.107279525 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10206992 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.090357496 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.115640464 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.096693594 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.098304103 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.115399043 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.087141272 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091470399 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.112214223 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.096125344 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.089372488 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.113285477 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.095091685 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.099535283 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.085524203 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.115273469 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.087330335 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.090073053 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.116636832 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.095682459 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.095320669 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.10583554 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.133423318 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106756603 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.116018117 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.093269699 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.093530408 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.116129802 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.09393934 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.09701301 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.115593433 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.098778941 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.092670234 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.109808625 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099899542 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.089548816 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.09578932 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110811954 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096613411 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.085073584 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.113662927 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.08732369 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.097406393 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.113578824 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.099786195 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.098828149 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.113668659 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.093356734 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102026138 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.108777791 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.097954797 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.086047066 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.116100842 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.105002025 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.100324797 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.115677581 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.096530619 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091593511 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.094295058 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.119548508 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095994783 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.093949701 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.11348521 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.08840429 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.087143321 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.118307457 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.098957104 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.090285817 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.111368999 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.096596925 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.096644187 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.119727613 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.088559746 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.098046528 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116758376 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.09145088 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094938615 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.10842968 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.09446308 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101447249 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.105583093 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.090905622 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.096438001 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.116971105 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.096467602 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.094811404 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.096926293 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.118200538 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.098844821 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.096882648 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110729727 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104252237 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.092335989 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.111760944 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.092216775 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.09727845 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.115730353 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.098116538 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.09592338 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.091726653 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.110236022 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099046668 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.098869756 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.117575617 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093862136 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.098382346 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.117760234 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.100739913 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091281024 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.11881659 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.092162823 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.087568892 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.109184064 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.087971536 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.095790068 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.108372939 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.101148315 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.092916063 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111135273 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.098507496 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096748376 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.109625661 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.101223025 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105459759 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.106518268 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.089510868 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.09324681 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.111889453 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.092838258 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.09104819 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.113425178 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09786611 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.099552191 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096847163 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.092987122 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.095494173 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.100470353 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.110155057 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.102243391 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.100076253 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.118911278 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.092415502 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.099352491 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.110358414 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100440871 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.088451079 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.113112221 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094545688 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093905681 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.109735724 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.09443692 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.091238035 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.106834534 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.092619597 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.101045865 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.112410824 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.101491446 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.095026962 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.111538391 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.093378352 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091741987 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.100938783 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.112739491 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.102008439 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.095186014 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.106679654 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.089941072 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.098890214 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11390553 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.101622878 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.0910207 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.117643567 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103140076 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.098270871 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.094950873 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.121969608 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104960099 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.100219445 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.12010608 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.089422769 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.092928796 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11888047 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.095898944 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.098769083 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.115704372 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.089775265 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.097018986 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.120521822 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.097842964 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.093452925 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.106798808 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.096909315 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.10251876 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.098019656 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.118143118 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.097211694 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096007631 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.109274082 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099891771 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.100248172 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.115117125 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102682407 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094992085 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.117713473 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.092429988 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.100663253 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.114040603 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.091194004 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.08904226 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.111396333 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102228292 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.089819866 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.099640144 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.11829393 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.092375445 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.09287259 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.118368475 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.092404013 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097526354 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.119289175 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.094095784 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103478509 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.11454238 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.094980619 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.099299221 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.118172498 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.09044927 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.094445244 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093748328 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.120737779 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.094400977 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.099823403 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.11486024 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101014931 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.097063432 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.119117886 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.10209171 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.100548888 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.108033489 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.102900726 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.098753644 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.116295312 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.094334164 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.094188332 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.108043189 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.09599311 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.102476541 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.091932074 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.123174103 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.102317333 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.093014079 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.112600557 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.102256242 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093611247 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.12130178 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.093315262 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097724201 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.109013369 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.098138722 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.094338004 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.119837553 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.093495344 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.089683759 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.119418299 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.101668957 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100342364 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.117280883 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.104619936 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.089958309 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.090439667 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.117927876 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.09357612 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103897007 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.11895467 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.094958401 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093133698 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.117744547 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.097685103 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101270541 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.109130345 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.093521759 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.096506609 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.117517187 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.094956314 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.090199117 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.118476537 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.095874842 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097186956 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.112880271 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.091556603 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.095198795 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.101587048 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.113520846 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.092399247 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.092511642 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.120897143 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.0958093 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.091743605 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.108822097 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.10284879 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.097172529 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.121193023 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.092788225 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.096451791 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.112517162 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.098598517 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.105024475 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.112759496 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097086129 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.094439663 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.120269996 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101858267 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.089718865 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.112436411 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107229552 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100024603 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.116231813 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.099516435 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.095946513 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.121217889 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10445069 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.098424209 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.089124503 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.110447329 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.095588673 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.089764016 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.118651296 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101368558 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.093908478 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.114234292 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100941159 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099576035 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.118213281 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.099762336 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.090693781 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.121007078 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.094739254 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.09981196 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.089923806 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.10969611 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.100020164 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100857285 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.114172448 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.097068827 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.097775087 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.117538427 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.091773557 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.093503558 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.119822767 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101184452 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101222232 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114070736 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.095745904 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.100199548 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104703209 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.117236238 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.095946682 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10244987 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.121124058 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097409952 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.09451579 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.119306526 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.103253788 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.097728793 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.121227523 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.094661265 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.095004565 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.121739543 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.103219773 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.105432429 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.114504123 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.091003737 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.099739807 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.113873758 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.092106379 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.099321091 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.121623793 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.103317866 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.095187829 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.112343257 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105870161 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101582855 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.115546384 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.096285481 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.09399199 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.11921679 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.096513898 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100754118 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.092625766 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.123287774 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103016882 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101869557 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.124238606 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.091577359 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101467204 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.118816625 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.1051109 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.096694438 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.110976394 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.093078222 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.099332799 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.121564919 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.10411145 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.100495406 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.099191083 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.120113298 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.097526725 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096618906 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.113726818 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.103785517 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.100441035 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.117278522 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.099331791 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.095611045 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.117257025 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.09953556 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.103502534 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.122357211 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.09905545 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106385501 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.121972566 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.097689465 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.095660995 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.116731972 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.100157464 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.097539192 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100167003 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.113629106 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.092231713 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101900234 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.123518171 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097465045 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102884669 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.122352009 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.097280954 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.098557661 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.123190543 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.10268804 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.09854111 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.116379972 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.101267004 seconds)
  done (took 61.944624613 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146364756 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104947571 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.118730087 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099305089 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115078581 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119939706 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099153585 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099759315 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.11988967 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109585458 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.098487869 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117880677 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115300161 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.137891563 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117227519 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107485096 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118332416 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101694945 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098982876 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118715284 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114669249 seconds)
  done (took 3.199504002 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.116985642 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.111860956 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.12926725 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.113865966 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104567075 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.129850825 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.109002408 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.128869339 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.112881133 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107061551 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.132372316 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110619239 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.125857908 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.107630745 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106424836 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.128079071 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.113808083 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.125859973 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.111557948 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.109302723 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.128334517 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.110651181 seconds)
  done (took 3.395070096 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.129135629 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102308668 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.09589212 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.118491854 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.102533603 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.099042471 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.121517467 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.099838272 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.107658244 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.114484222 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.091766935 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.094698242 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.096611994 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.118629446 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.095901196 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.098187191 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.126275656 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.10325563 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.103298047 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.118958604 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.091247267 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.100193508 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.099439466 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.110488297 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.104146082 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103634477 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.119548689 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.104448175 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.089689606 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.121172997 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.101397764 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.093442805 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.089544111 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.110056194 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.091433183 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.101882909 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.121183595 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.099871755 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.100661204 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.08972905 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.119184025 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.104229601 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.089713027 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.118980317 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.100918926 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.093245149 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.101380747 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.119498835 seconds)
  done (took 5.852195062 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.129258297 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.162800779 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.103433301 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.135949213 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.135567763 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.108666985 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.124079915 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.137412802 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.100921871 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.122700985 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.114304012 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.133296966 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105303255 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.107007656 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.125907721 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104752187 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104433759 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.359856133 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.108531368 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102628436 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.126238748 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.10632177 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.111796892 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.132340318 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.105392615 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101995604 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.124205639 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.105874135 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.130973209 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.11040534 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.104700886 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.126303067 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.113934264 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.103469531 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.122474541 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.104578451 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.113101347 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.122995159 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.104865167 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101350381 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.123018324 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.105494509 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.103926288 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.134941079 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102932462 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.12273247 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103635094 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100710758 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.132152124 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.105226422 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.109653674 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.133196695 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107374851 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.103201126 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.125903567 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.11269904 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.105392906 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.121582599 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.105821887 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.131268037 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.10285646 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.105571631 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.131797475 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.104495362 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.107340155 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.132008422 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.105549071 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.103331736 seconds)
  done (took 9.024195811 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.133167947 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.105742019 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.133524605 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115217443 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105356964 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.127257328 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106227543 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.124995538 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.108106364 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11116097 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126792335 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.197860766 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.12540573 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.110550599 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.10575449 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.127125177 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.106607195 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.106272748 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.127618221 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106316474 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.125547882 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.115544062 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.105843585 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.13303549 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.118352938 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.12300502 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107225186 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.106554035 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.133944564 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.109141326 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.117673522 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.127731695 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.106824967 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.135082096 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.11974675 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.106303743 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.122158607 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.109509413 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.105889455 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.127385536 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104125409 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113920762 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.129283589 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.103995872 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106455287 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.127912101 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.115649344 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.138654355 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.111923123 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110129348 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.127115869 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116125187 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127782097 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108464726 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.112617415 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.143136066 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114742868 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.13571706 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107845387 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.113889482 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.136650654 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.12082877 seconds)
  done (took 8.230057113 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101552193 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099399585 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098849842 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.120896338 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.100150728 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099317387 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.119229737 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.101059016 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100369735 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.099795857 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120488671 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101682409 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099329094 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120373266 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.101948694 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099924186 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099136984 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.120766142 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101384475 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.100015618 seconds)
  done (took 2.944788799 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.111641666 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.116971219 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.123003922 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.109349535 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.102317752 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.127812783 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.103274788 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102985214 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.122539138 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103848642 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110519894 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.13099873 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104353115 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107563867 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.130620739 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.10948803 seconds)
  done (took 2.656797706 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.120925827 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118922839 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.188154296 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.104215604 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.124056735 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.110146355 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.101771756 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.126252209 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.102150698 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.107020282 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.106565861 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.127007118 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.102882334 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.102755337 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.124044682 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.106977106 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100035126 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.126651807 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105512039 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.186887282 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.106682316 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103095667 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.1259194 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.106281996 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.102548861 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.12788405 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.108740227 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101334168 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.125736273 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105198922 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.103362514 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.129984573 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102824773 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.106968111 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.125076022 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.104849103 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.102863255 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.10288852 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.125762991 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.102839893 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.103679032 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.126163049 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.103399659 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.104866475 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.121734477 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.104427534 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100225191 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.128649345 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.104246821 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.103347612 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.123341228 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.110888935 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106683892 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.130867503 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.110275927 seconds)
  done (took 7.138924763 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.114431717 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103413008 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.134132218 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102163841 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.102940933 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.103444499 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.125354958 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.105000783 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103207052 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.12227456 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10534072 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.103433008 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.123931784 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10444191 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.103212802 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.124468066 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.10190725 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.104402341 seconds)
  done (took 2.833458252 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.108798994 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.102497509 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.106445464 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.123210381 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.102548033 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10169508 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.122806197 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.103234308 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101136287 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.123689017 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103850342 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.103631972 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100740375 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.123587384 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104046156 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10259495 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.123719907 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102002684 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.101574286 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.122404463 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.103697219 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101536357 seconds)
  done (took 3.23707994 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.113185726 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.183971503 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.108071533 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.191907524 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.099480597 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.097514067 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.129985252 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.10031833 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.115103375 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.121293792 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.098766988 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.09765561 seconds)
  done (took 2.305301601 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130216807 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139624469 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125041129 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103612153 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110168626 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130048691 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108662502 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106733525 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136718615 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11677298 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128040071 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115182949 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11289185 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137950188 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111184075 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13313118 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108825748 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106291503 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124738558 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123196442 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107252118 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136483844 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106996648 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128863443 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108358909 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114622063 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136754497 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118443781 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127438499 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116436242 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110825229 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130084308 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115899782 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140245044 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104832956 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114072815 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128706105 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122924042 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111219723 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137510661 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103256096 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131764415 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115423012 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111358666 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136449339 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109430187 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1329302 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110178855 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10776859 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.149935737 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114254928 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135272918 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113363545 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114488694 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136917841 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128283731 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139535647 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11584798 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132490918 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119459172 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114016149 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133654138 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115925954 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140158381 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112993469 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114824507 seconds)
  done (took 8.869745453 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.145846815 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.103392133 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129416392 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119959761 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135918432 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10970356 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107350358 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128596582 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109155614 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105362868 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.170432298 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1094122 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138049043 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117935711 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107298805 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129383026 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109212889 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115845495 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126013512 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128914416 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129207402 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117335438 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114969258 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137787718 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118641111 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13312962 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108504258 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107754647 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130500359 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109523887 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134178577 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10987091 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115983514 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.125390889 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117403102 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108745283 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130035696 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113691691 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107323805 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134946067 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115232651 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.143690007 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109386765 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107906722 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143382647 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109235421 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12952745 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106639685 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108665307 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126105169 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122184932 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118443925 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141733113 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116097213 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129699263 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10857778 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108976292 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129782255 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109412914 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111347496 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139895145 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108004517 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.150466682 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109367112 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108119653 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138682194 seconds)
  done (took 8.861220569 seconds)
done (took 167.565942822 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.14973727 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.186331607 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.146057562 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.177878948 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.095644022 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.128699815 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.148084511 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.147623039 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.115066269 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.096761365 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.094773544 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.097646253 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.183988243 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.095613367 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.09433552 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.118359745 seconds)
  done (took 2.927818247 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.193702311 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.307750394 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109170838 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.120777659 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101852176 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.100300943 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.120520608 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.102663934 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.09890236 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.128198898 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.09980336 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.09488401 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.1276576 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096512352 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.099178596 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.119892388 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106975504 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.098574117 seconds)
  done (took 3.087731634 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.120653408 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.14227666 seconds)
  done (took 1.126766703 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.130380353 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.213229365 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.280402536 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.169435924 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.119616817 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.141383949 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.14837809 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.135150776 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.187038353 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.135218092 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.112051394 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.11982453 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.126013732 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.105321736 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.138409381 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.099230965 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.127618223 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.136416668 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114794044 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.101238683 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.145053449 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.103333904 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.104147474 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.137229641 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.178587694 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.134987532 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.103170634 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.124793501 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.10236963 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.112948006 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.13063436 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.118670586 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.13230371 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.158014576 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.124646103 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.156204156 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.129059772 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.10112543 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.112950481 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.123631641 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.103600399 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.123664971 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.115587853 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097219271 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.124666453 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.110148633 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.103544999 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.124852893 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.108823781 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.107048767 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.130561944 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.106768765 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.175745914 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.106724769 seconds)
  done (took 7.876104687 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.867664683 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.140354272 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099034679 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.020280972 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.151783782 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114117314 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.884533413 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.124586352 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.256631908 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.893218334 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.11398828 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.136343242 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.241578513 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.281301611 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.266556433 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.358473493 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.732956451 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.135922199 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.130618798 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.16248203 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.110604623 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124849941 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.14336322 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.515063714 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.102583821 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099922019 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.130316456 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.11436503 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.178176362 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.10171273 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.103445558 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.199362685 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.293765274 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.209428762 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.100563367 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.123102937 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100555523 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.188251789 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.276014124 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.221854715 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.19759246 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099194414 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.099828886 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.132291351 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121601881 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.096889277 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.180535869 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.192232924 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.194156887 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104985539 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.134887117 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.113237551 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.107654764 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.179219861 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.120530024 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.361149573 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.364703622 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099893957 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.133326442 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.117453199 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271629917 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123764317 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.24038756 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127829964 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.2162688 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.121910147 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.842186352 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.164434188 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.123038909 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.108331294 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.12898449 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107923311 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.107847604 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.191345632 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.496883533 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.115425819 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.105131121 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122830364 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.23738147 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102458528 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100285421 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.182929891 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101371966 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132397033 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.115868049 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.135643538 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.168425033 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.271683065 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.135475182 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.111173198 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.106816732 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.136594876 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.101827028 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.235860624 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.229826172 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.176863546 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.23292422 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.111645876 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.182731385 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.186317975 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.109506225 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.191398484 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.107820279 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.139213455 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11049817 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.225902865 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.159223032 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.105894454 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.106764371 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.134145713 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.136291792 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.129287391 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.111504549 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.189605627 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.554466414 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.185665265 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.100186875 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106093323 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.133153613 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.158497882 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.1307096 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268039587 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.111647294 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.187153281 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.108972998 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.120764001 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.11156135 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.183826169 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.111016104 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.133253113 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.111971947 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.111004828 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.28238399 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.224509767 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.137781499 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.257278944 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.178601714 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.134312744 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.193987732 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.111995706 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.190274163 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.111592286 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.13184838 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104958612 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.836985972 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115325518 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.1326984 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.107101637 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.209095482 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.102598066 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102601436 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.124314456 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.100926147 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.824896524 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.103947109 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.122354701 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.1053669 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.10840956 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.133479253 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.110379971 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.129474261 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.158136252 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.268665613 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.116726183 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.10688749 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.124143298 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.158330265 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.124977561 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.102728426 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.101636672 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.124910286 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.111437351 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.106114829 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127045697 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.192630705 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.154306569 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.25257686 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.656141813 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.102770744 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.100966112 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.2429854 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.125059482 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.328319924 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109867679 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.259039258 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163878725 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.121858707 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.366529277 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.186213179 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.186975638 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.127181036 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.169975758 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.122780067 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.111372905 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.181529234 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.102563836 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.109306237 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.178727322 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.140648039 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.116385376 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.284550004 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.124957479 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.23067543 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.121681646 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.166847119 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.128061366 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109035373 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.327615534 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.125189773 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.120548588 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.18119583 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.106046463 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.125693236 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.630617938 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.104194614 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.113560521 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.133711006 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.237999459 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.183391121 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.111605768 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.132236958 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.117305702 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.182194545 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.231795088 seconds)
  done (took 48.180881744 seconds)
done (took 64.057666874 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.265777166 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.176479914 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.281999404 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.176874453 seconds)
  done (took 1.857378881 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.241920365 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.156621198 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.200274128 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.120703866 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.20569702 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.121364571 seconds)
  done (took 1.93781439 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.175636381 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.169203712 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.147110133 seconds)
  done (took 1.380571555 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.201332058 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.221734644 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.325783919 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.257077736 seconds)
  done (took 1.979483049 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.262445101 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.116894012 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.124919993 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.207195113 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.220741024 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.204820705 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.12352693 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.173150085 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.129606057 seconds)
  done (took 2.490166812 seconds)
done (took 10.532057459 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.246492124 seconds)
    (2/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.290243531 seconds)
    (3/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.252658944 seconds)
    (4/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.18341359 seconds)
    (5/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.278200545 seconds)
    (6/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.193341106 seconds)
    (7/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.210288541 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.131819238 seconds)
    (9/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.351739537 seconds)
    (10/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.20060901 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.132102779 seconds)
    (12/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.204305485 seconds)
    (13/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.209826106 seconds)
    (14/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.303858024 seconds)
    (15/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.107249585 seconds)
    (16/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.095096728 seconds)
    (17/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.270531478 seconds)
    (18/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.128680424 seconds)
    (19/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.182680245 seconds)
    (20/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.172010171 seconds)
    (21/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.108954002 seconds)
    (22/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.291543382 seconds)
    (23/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.279989113 seconds)
    (24/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.121311688 seconds)
    (25/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.198208713 seconds)
    (26/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.110662939 seconds)
    (27/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.081581893 seconds)
    (28/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.139633233 seconds)
    (29/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.274197615 seconds)
    (30/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.15058286 seconds)
    (31/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.325480708 seconds)
    (32/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.188072078 seconds)
    (33/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.270961838 seconds)
    (34/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.109906906 seconds)
    (35/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.16584508 seconds)
    (36/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.1219681 seconds)
    (37/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.082559429 seconds)
    (38/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.082707909 seconds)
    (39/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.207395035 seconds)
    (40/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.122799517 seconds)
    (41/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.210696074 seconds)
    (42/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.151123055 seconds)
    (43/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.223404641 seconds)
    (44/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.101722678 seconds)
    (45/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.125238646 seconds)
    (46/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.076926206 seconds)
    (47/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.116801076 seconds)
    (48/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.136026086 seconds)
    (49/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.110587408 seconds)
    (50/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.078605808 seconds)
    (51/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.182199332 seconds)
    (52/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.117034379 seconds)
    (53/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.158560194 seconds)
    (54/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.084871406 seconds)
    (55/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.142893223 seconds)
    (56/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.106312064 seconds)
    (57/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.10577378 seconds)
    (58/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.127375689 seconds)
    (59/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.106893951 seconds)
    (60/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.102365759 seconds)
    (61/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.123829678 seconds)
    (62/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.193780718 seconds)
    (63/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.124437331 seconds)
    (64/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.089511459 seconds)
    (65/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.185489227 seconds)
    (66/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.126044782 seconds)
    (67/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.143471687 seconds)
    (68/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.116131824 seconds)
    (69/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.077124541 seconds)
    (70/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.125441163 seconds)
    (71/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.163491378 seconds)
    (72/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.101642793 seconds)
    (73/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.107571499 seconds)
    (74/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.123289758 seconds)
    (75/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.111318445 seconds)
    (76/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.158831589 seconds)
    (77/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.111873765 seconds)
    (78/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.174491135 seconds)
    (79/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.127505709 seconds)
    (80/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.103717906 seconds)
    (81/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.099427825 seconds)
    (82/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.127159526 seconds)
    (83/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.085404484 seconds)
    (84/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.083088782 seconds)
    (85/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.272607495 seconds)
    (86/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.10248232 seconds)
    (87/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.193540964 seconds)
    (88/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.122845589 seconds)
    (89/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.102211333 seconds)
    (90/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.102342487 seconds)
    (91/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.198498853 seconds)
    (92/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.106888419 seconds)
    (93/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.147490331 seconds)
    (94/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.104122124 seconds)
    (95/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.175048759 seconds)
    (96/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.182220297 seconds)
    (97/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.141545906 seconds)
    (98/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.101133065 seconds)
    (99/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.159009703 seconds)
    (100/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.076790493 seconds)
    (101/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.099985782 seconds)
    (102/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.135615236 seconds)
    (103/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.08671154 seconds)
    (104/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.111052112 seconds)
    (105/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.125689158 seconds)
    (106/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.136191278 seconds)
    (107/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.110272436 seconds)
    (108/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.079984849 seconds)
    (109/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.076773831 seconds)
    (110/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.163385716 seconds)
    (111/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.114369184 seconds)
    (112/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.083819188 seconds)
    (113/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.134529767 seconds)
    (114/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.114975802 seconds)
    (115/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.077645198 seconds)
    (116/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.192412914 seconds)
    (117/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.223500076 seconds)
    (118/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.108033904 seconds)
    (119/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.13301312 seconds)
    (120/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.084603172 seconds)
    (121/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.084970442 seconds)
    (122/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.167099719 seconds)
    (123/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.110340291 seconds)
    (124/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.0843163 seconds)
    (125/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.083390536 seconds)
    (126/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.147538804 seconds)
    (127/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.077627523 seconds)
    (128/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.132090518 seconds)
    (129/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.102773488 seconds)
    (130/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.124236937 seconds)
    (131/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.10493659 seconds)
    (132/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.125995745 seconds)
    (133/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.106622513 seconds)
    (134/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.170591644 seconds)
    (135/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.13606297 seconds)
    (136/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.148056989 seconds)
    (137/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.127775082 seconds)
    (138/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.123882783 seconds)
    (139/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.127179398 seconds)
    (140/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.135362018 seconds)
    (141/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.083853146 seconds)
    (142/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.135003689 seconds)
    (143/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.081158487 seconds)
    (144/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.077920676 seconds)
    (145/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.10235819 seconds)
    (146/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.149466428 seconds)
    (147/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.125995974 seconds)
    (148/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.082930968 seconds)
    (149/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.109092255 seconds)
    (150/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.153424773 seconds)
    (151/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.085153185 seconds)
    (152/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.106372012 seconds)
    (153/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.098877277 seconds)
    (154/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.136790104 seconds)
    (155/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.080838131 seconds)
    (156/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.082125315 seconds)
    (157/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.079425312 seconds)
    (158/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.133056241 seconds)
    (159/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.081241941 seconds)
    (160/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.082385379 seconds)
    (161/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.098744067 seconds)
    (162/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.10464498 seconds)
    (163/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.078443124 seconds)
    (164/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.077967429 seconds)
    (165/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.084316681 seconds)
    (166/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.09882643 seconds)
    (167/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.107649342 seconds)
    (168/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.084070845 seconds)
    (169/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.109712679 seconds)
    (170/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.080649766 seconds)
    (171/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.14751224 seconds)
    (172/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.085637163 seconds)
    (173/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.109467874 seconds)
    (174/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.076397952 seconds)
    (175/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.104115185 seconds)
    (176/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.105251767 seconds)
    (177/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.079656228 seconds)
    (178/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.083778837 seconds)
    (179/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.077413772 seconds)
    (180/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.108618392 seconds)
    (181/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.080440221 seconds)
    (182/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.077139246 seconds)
    (183/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.084309776 seconds)
    (184/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.145210799 seconds)
    (185/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.077819374 seconds)
    (186/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.083700916 seconds)
    (187/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.080989663 seconds)
    (188/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.107391453 seconds)
    (189/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.104500727 seconds)
    (190/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.081501063 seconds)
    (191/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.085010251 seconds)
    (192/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.083710682 seconds)
  done (took 26.39149457 seconds)
done (took 27.288122611 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.204909603 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.126425105 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.111113772 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.109482398 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.200147841 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.116611645 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.149218183 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.113565483 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.120141198 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.132545413 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.101762366 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.122847746 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.109557622 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.203330034 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.111670604 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.126877105 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.102561882 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.120745589 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.149726549 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.126905192 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.201351781 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104836369 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.119795775 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.126618752 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.175890311 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.129366298 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.1108915 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.111701872 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.147969562 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.11336323 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.110553448 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.126746444 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.127083324 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.124446391 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.125770246 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.11230627 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101913116 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.084638086 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.136789497 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112777086 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.122954558 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.136385226 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111607139 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.102270212 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.136224445 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.112201132 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101861106 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.140759642 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.101605185 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.110974468 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.128791239 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.128406132 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.109589734 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.12525566 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.102555638 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.102715921 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.144418529 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.104247446 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.12446992 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.125508814 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.105117246 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102123675 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.112774042 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.127614611 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.110894933 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.101750729 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.138622642 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.114766662 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109800122 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.129006116 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.104270904 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.110591393 seconds)
done (took 9.836564957 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.108185157 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.148692903 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.199905332 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.209224595 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.131881229 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.142739097 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.117664393 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.125655505 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.139571661 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.123468268 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.138844368 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.159024399 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.181947824 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.144400001 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.118562305 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.139842467 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.115982205 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.111391339 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.208465276 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.127081821 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.15188219 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.119921986 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.128246356 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.144926375 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.10808647 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.162351781 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112744599 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.115271671 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.129171107 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.117317541 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.128189775 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.129097603 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.112651725 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.125197581 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.149166557 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.118230883 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.118259165 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.139984322 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.109828936 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.107668031 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.139766111 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.122608958 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.105952955 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.143760925 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.114586089 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.144656524 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.115660682 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.119479999 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.130605329 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.115417981 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.108674586 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.156711279 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.121272043 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.12358647 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.142629751 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.120507971 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.119447526 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.14338455 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.111665987 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.119044747 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.131817421 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.108456202 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.107627678 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.153395297 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.111611371 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.119244303 seconds)
  done (took 9.596424959 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.127626164 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.135887421 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.141812423 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.117685788 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111797695 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.125852377 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.101939715 seconds)
  done (took 1.801666548 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.103462005 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.185628663 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.208854082 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.209500914 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.204316363 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.194134394 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.150228884 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.102880012 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.137634727 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.137741432 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.185814597 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.239447374 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.111377132 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.144519173 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.212162437 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.103293092 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.212910002 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.103259021 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118045135 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.212637977 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117777835 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.157878143 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.116759859 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.102059033 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.205906723 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.102782824 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.255987296 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.145660516 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113469609 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.116939983 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115911783 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.207728186 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.207789835 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.117028685 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.109929166 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.210818043 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.205839637 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116739524 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.222298633 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.105989115 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.206802997 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.116074944 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.14278669 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.119293608 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.117802403 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.197481359 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.12090223 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.142248775 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.117433126 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.21309944 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.114750562 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.20809637 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.114875019 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.116682897 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.138201321 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120219817 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.123639836 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.143230397 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.189362883 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.144701816 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.183613064 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.210535839 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.208459407 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.185253068 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.152653089 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.185012156 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.203165544 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.115335351 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.138311643 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.120190109 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.213641987 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.116804286 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.141021105 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.175416121 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.144565359 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.187350865 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.211771812 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114532414 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.140548726 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.107545282 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.115703974 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.102754313 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.202778466 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.115902925 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.141176843 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.122533728 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.141932326 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.118965104 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.107880329 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.152978282 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.117583663 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.114875075 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.14827163 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.117512342 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.119001275 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.21473986 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.138372408 seconds)
  done (took 15.73182803 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.105908718 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.104153812 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.109173132 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.130953603 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.106052807 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.105150334 seconds)
  done (took 1.611411874 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.141546927 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118456608 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.151695997 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119550923 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.187013234 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.19191314 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.218612617 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.112026621 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.159156922 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127465205 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.216003147 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.19255194 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.218151181 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.119746432 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.220288068 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.119298582 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.221803086 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.115799206 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.152007169 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114491154 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.143729681 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122358238 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.114914009 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.208495979 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118149911 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.145521463 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.112808914 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.12566215 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.151180377 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.114024356 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.120914031 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.164475085 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.111370581 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.135930392 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.197125092 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.135077082 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11496012 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.121367566 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.145611876 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119448779 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.220420527 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.116031339 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.124088018 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.147033939 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.113308839 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.110197741 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.148030918 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.111832086 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.222307052 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.121272456 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.147034019 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.121674326 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120433456 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.14629551 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.113039615 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.111675539 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.147174232 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.196903771 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.147128112 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.110980638 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119242603 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.14543939 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.113357897 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.121932094 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.146589671 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120623472 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.135416495 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.120988492 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116401107 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.14322318 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.122304527 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.118411351 seconds)
  done (took 11.220624828 seconds)
done (took 40.896285068 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.588657423 seconds)
  done (took 2.542516824 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.88287025 seconds)
  done (took 1.838955605 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.606213287 seconds)
  done (took 18.593673473 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.423024478 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.465223484 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.120784165 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.147535739 seconds)
  done (took 3.111174149 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.814929866 seconds)
  done (took 1.79527137 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.280499855 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.258710079 seconds)
  done (took 1.50193144 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.707912018 seconds)
  done (took 1.68094005 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.500574617 seconds)
  done (took 2.46335424 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.284302025 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.241390275 seconds)
  done (took 1.499456791 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.604752957 seconds)
  done (took 1.580906208 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.385859826 seconds)
  done (took 20.363560702 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.25645332 seconds)
  done (took 1.236902458 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.287085696 seconds)
  done (took 1.268389762 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.48372264 seconds)
  done (took 4.466060726 seconds)
done (took 64.909868734 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.115715697 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.117350025 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.141216088 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.116588208 seconds)
  done (took 1.462909057 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.123907279 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.118889655 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.144764254 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119168774 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.123182055 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.142671749 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.117939521 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.120268026 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.116979056 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.145899542 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.118594709 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.117172501 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.145927596 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.119136832 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.115715082 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.145654079 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.121873352 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.117423174 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.144425916 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.119597886 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118637318 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.145862902 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.121186639 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.120730374 seconds)
  done (took 4.02971495 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.114865091 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.108381089 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.109635404 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.133862384 seconds)
  done (took 1.449945285 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.126420271 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.130824938 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.152220178 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126276503 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.130453571 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.154066178 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117293405 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.114618844 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.142214663 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125451094 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.133938323 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.156169068 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.129700629 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.143560001 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.12907407 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.112574089 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.14126534 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.13019552 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.124569559 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.150697884 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.119612003 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.123658338 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.147275146 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.126862931 seconds)
  done (took 4.169324939 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.19252793 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.128884579 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.174877277 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.162612327 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.177012993 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.115667083 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.14368285 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.149542839 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.124124019 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.146266966 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.122586858 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.162016005 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.150386555 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.120503645 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.118263337 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.149590893 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.130988388 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.147713668 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.165127589 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.124059243 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.150080776 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.131407605 seconds)
  done (took 4.175637311 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.122695924 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.11060161 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.131037748 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.110028489 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.120482994 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.136879551 seconds)
  done (took 1.722885238 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.109424982 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.103147091 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.103476823 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.127842692 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.107114329 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.103471527 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.126405735 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.104854028 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.103111659 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.102626646 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.128085078 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.103589326 seconds)
  done (took 2.309331145 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.331502093 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.107886894 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.136148399 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.111250597 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.114000831 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.105683811 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.145964834 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.108017848 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.265491284 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.103617369 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.13119276 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.194109192 seconds)
  done (took 2.848221576 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199523063 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148772536 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251946642 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.367735471 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184303671 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158925664 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.29134016 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189139929 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.176361983 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162732833 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209908453 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160291133 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152255609 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210457288 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164055564 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.158102646 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186787497 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205155206 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167569121 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234921119 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156870778 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.197841034 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188631292 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175399293 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139237683 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186212014 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.118705389 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127372925 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19164389 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189591108 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171355032 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176391619 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139644341 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216283857 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254309425 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171471184 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.297004483 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133723937 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.191666355 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.191843734 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257152322 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165663373 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189075581 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177829308 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129197285 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209627358 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151184375 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.208730344 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.132710563 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170388595 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20588745 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178580764 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.20147656 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135105945 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.309120063 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134510178 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.166382352 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163584078 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211802348 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225199547 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174963493 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.15130828 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200149663 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189068059 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236368306 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.165765787 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.164596049 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149269922 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164311722 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.23137152 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203583564 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160419369 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.233533982 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129577418 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196389616 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194014809 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152626077 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229425788 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167711082 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.147698902 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148885973 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16025603 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12612094 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.183395415 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15169915 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240088591 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13268683 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.340645905 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205616364 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155294395 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186094977 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159484213 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18934198 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145082179 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.126523595 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142877775 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.158478402 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181352117 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126309701 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181099874 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138807141 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.150695853 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151709855 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.120883293 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193648588 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.131487321 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188800409 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192948802 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.133233234 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.201757736 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147882069 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.18588886 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167491076 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218291771 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129197583 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159701221 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217525316 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195058542 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.134290234 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.200778759 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.221286586 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.147958539 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16185049 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163821867 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219330865 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142173411 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226249676 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136181298 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162934161 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.136055035 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198498165 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184237263 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.154833344 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125465648 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.191039035 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216235464 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.127810453 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136375611 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206224582 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130993136 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150848599 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13677182 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161269345 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.142164355 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.145826202 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.164889837 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151339377 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191239345 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161933822 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182843973 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132524841 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198273795 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130769786 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.19409692 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146411576 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.145185861 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.171798031 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223901121 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12771019 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206395429 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.18752484 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21110733 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170933092 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127314709 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.210500415 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126906444 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.147282052 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160838955 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.199326688 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160186697 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.213889133 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205747523 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.190964241 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.161199271 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173615197 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167043473 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.210702561 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154164948 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.169811887 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169728297 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195434346 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.118721664 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.152609579 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.128277781 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134077261 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156857147 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136583185 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202992542 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188005037 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180022447 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.192417181 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136233155 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.217892721 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.124501806 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184872056 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.172165248 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165842265 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.211365304 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18950958 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204946733 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1402432 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188654447 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.120008628 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151239226 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.134221194 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159802583 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165787452 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136057521 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16841739 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187833299 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196764371 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145972329 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219172475 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189470827 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.226600493 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.12035974 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.156460094 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196097065 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19253631 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.182649505 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134006718 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.186263514 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190201878 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169199839 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217151735 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167872523 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20462204 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220064778 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.163984435 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128718292 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175033156 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159798535 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165903957 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162371621 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173821533 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129546095 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17926536 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.138653426 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165254554 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183234427 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170190837 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175805879 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.185738849 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198541012 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126934997 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140086181 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.202886006 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143059633 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.132127678 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168180713 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221865297 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1478839 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182913081 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197550409 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130502717 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.340427482 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185310952 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202529385 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135229059 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1664181 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170444861 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187784669 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159878288 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.212815915 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139251291 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233252446 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.194642091 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.143054941 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157209253 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147153603 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150062144 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.165576348 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.148197789 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.187438488 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.142202496 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209881884 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164009481 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168551337 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20266233 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.142523196 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.175210152 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137847998 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24952434 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165514079 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199414701 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.162282128 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.193113729 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208167072 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122718946 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124887055 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.159316409 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.184955038 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155996741 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175725868 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.193958969 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211699382 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173997609 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188635841 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139281789 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.154140918 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165320442 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174578262 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212814286 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134524767 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.135407495 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213690168 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.125021568 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157973253 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15925299 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.301096417 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146263499 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19716182 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.105231239 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.294614571 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129032058 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158665997 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162860981 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19486016 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.131006409 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.208108855 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173763491 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167188617 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162915221 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160446202 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181907839 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214766974 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191399733 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173166249 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.172481596 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161093789 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18741758 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172641897 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173544093 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.145476933 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18569141 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192394627 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.205771568 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.130387516 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196118702 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165136996 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197719027 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203040233 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1390393 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208292822 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127622597 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190271308 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137540202 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122987913 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188636686 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.195699762 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130851029 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201968234 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168797298 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157158271 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127358577 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144307385 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191425964 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137927764 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.156643296 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209598807 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.130091591 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177647303 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233189153 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128400111 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.194372097 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143771529 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158424223 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138106701 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170536472 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130784419 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.173627049 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205511917 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.130423757 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20375038 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190795803 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16277984 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183753603 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142162088 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.355861318 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.128463674 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216102857 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149522779 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223742582 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14866 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201168626 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166935666 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177237225 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163585931 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175300205 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.215785296 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19272832 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.165050012 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159694512 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141531774 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166077055 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.133042451 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178259121 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169394168 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139008705 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.165197295 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.164707563 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173603364 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.144807402 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169388478 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198147446 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177758144 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212995116 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188387901 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164735428 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174149407 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204482169 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127099462 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.192089522 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169433229 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171764928 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150658386 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.163746036 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.137336273 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239194903 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.125564083 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186042317 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1724657 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.196596013 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17172438 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.163006086 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176757853 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167295172 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174977275 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154046356 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.152219473 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.198147775 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133989338 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.125232637 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198014514 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183772832 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.164350653 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140518957 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.202773895 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195329348 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.151111827 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132483281 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.297407638 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158343456 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22146444 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.133843289 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165488124 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144244224 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186448134 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.162448635 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197492637 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.12979816 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155864249 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.146121784 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.179728524 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.14361964 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166904561 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197941048 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186841284 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184692685 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.131432379 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.278877388 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140297043 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.198602442 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.114297064 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.158496198 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140615043 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13349231 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171361453 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.210331627 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212468751 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.190674187 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.145588345 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163228944 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.126407444 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13079478 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192267787 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148692004 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194906313 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175462933 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.102740363 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140933901 seconds)
  done (took 85.634536198 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.162299541 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.152128851 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.167674134 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.221264346 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.195421633 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.289862475 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.228712804 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.248418405 seconds)
  done (took 2.745024134 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.118256961 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.158580907 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.142038918 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.143399698 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.109195321 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.44263496 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.158975931 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.120727381 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.161549113 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.150939977 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.134769147 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.529047386 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.11650818 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.144204571 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.121056524 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.133499434 seconds)
  done (took 3.956154647 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.634631852 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.543062893 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.940879594 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.293297562 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.259845457 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.202028483 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.744322996 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.196379968 seconds)
  done (took 11.889231822 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.155199562 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.147090676 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.415490625 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.250041489 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.705841227 seconds)
  done (took 2.756480099 seconds)
done (took 130.120026281 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.12293321 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.122383466 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.121733964 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.151127735 seconds)
  done (took 1.591301549 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.174739149 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.089585351 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.091152761 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.116567159 seconds)
  done (took 1.555577121 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.421273886 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.089791369 seconds)
  done (took 1.618656938 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.152925512 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.135506736 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.165586687 seconds)
  done (took 1.545882989 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.138886812 seconds)
  done (took 1.221772592 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.129697472 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.12646817 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.228456822 seconds)
  done (took 1.570858157 seconds)
done (took 10.191694145 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118467049 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.924998538 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.43190391 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.13223262 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.712122655 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.426132809 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.425987334 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.173602464 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.173636627 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.136436755 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13169441 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.68785471 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.438853287 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.873430219 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.402940334 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.899467865 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.691645138 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.109798589 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.143767731 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.110164797 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.438444175 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109252212 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.110136068 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.110117591 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.717386922 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.417262123 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.10899792 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.91169772 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.108133276 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.136922665 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.399077493 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.10965868 seconds)
  done (took 20.897161947 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117150605 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.165291457 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.144673958 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.111278661 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112019794 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.137837835 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.122174751 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.120760971 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.200823105 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.108692232 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.159805189 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.108904005 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.114343511 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.138369883 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.134154929 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.109114239 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.139799896 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.112692123 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118861848 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.13903478 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.132084606 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.107811328 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.138665084 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.11297204 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.109422832 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.158468434 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.11078809 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120696717 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.13868576 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.113806165 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.113755045 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.138522487 seconds)
  done (took 5.203931914 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.157288109 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.175539328 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.14624497 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.14663823 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.184855446 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.112232347 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.222401796 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.149060962 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.202437607 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.112932238 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.132125502 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.137207915 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.150520131 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.110362296 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.163864184 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.110525439 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.112820153 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.140721005 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119525796 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.138627037 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.132982357 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.108465181 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.137825682 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.11320278 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.109972563 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.158992095 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.111187917 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123279486 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.137145878 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.114730683 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.114876682 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.139496228 seconds)
  done (took 5.51872866 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.12460869 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125003313 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.132507805 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.16090506 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.12019768 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.122247804 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.15421327 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.119380724 seconds)
  done (took 2.151437139 seconds)
done (took 34.859296874 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.133999241 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.127122816 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.128244523 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.151985214 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.187370235 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.144680345 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.125129583 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.115452874 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.150340528 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.129696959 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.109455512 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.115344588 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.156532821 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.118794236 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.218260744 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.123309577 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.221292787 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.189320659 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.144659049 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.123314069 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.116810558 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.223050083 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.119613231 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.144637508 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.191308316 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.112424671 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.2123914 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.118830674 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.148323851 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.112753478 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.218190488 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.121752824 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.115879937 seconds)
  done (took 5.956227011 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.207262958 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.121285645 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.147803528 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.119384114 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.119790294 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.146716382 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.209085571 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.146402514 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.119092747 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.117854616 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.117774339 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.219896728 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.123283395 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.14387226 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.12223922 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.107273806 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.238325622 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.120699249 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.109465587 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.120312668 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.114502088 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.117538407 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.251758365 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.113949663 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.117772964 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.148639428 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.121243543 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.12315798 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.149512817 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.121201212 seconds)
  done (took 5.362805131 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.124617728 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.131791682 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.16305344 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.185578304 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.147619268 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.159933015 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.139300523 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.133395721 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.16916122 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.112560751 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.127663529 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.176550232 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128650244 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.123040052 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.145400983 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.132668886 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.134733431 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.142971566 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.123440724 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.129559192 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.163145038 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.131387499 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.136506426 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.149671215 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.111835591 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.120035134 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.151848987 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.127856052 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.121255287 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.15673527 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.116240972 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.11644145 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.144160995 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.148264603 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.11399749 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.15576796 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.138802072 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.124823369 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.155531663 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.144842373 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.116163037 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.14402917 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.138074753 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.16573912 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.144211507 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.126583842 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.124620333 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.156231533 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.112265307 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.13071138 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.184565883 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.113817836 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.161084242 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.113049635 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.111851876 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.120395674 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.142266795 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.118075707 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.126840204 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.144778153 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.138983537 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.118862165 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.153134625 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.115583655 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.122404862 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.139866152 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.113449119 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.116844744 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.165713803 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.12198088 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.148359997 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.112465893 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.155788727 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.126092165 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.123787215 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.15382385 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.1129652 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.122835178 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.152889723 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.119440651 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.124966707 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.145101664 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.117515239 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.129023816 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.162660231 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.127800794 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.123873152 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.155943961 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.11721624 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.115041774 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.158499476 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.115368227 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.118589363 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.154571331 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.114443733 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.116225296 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.153508806 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.12644927 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.110758408 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138262614 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.146543776 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.112719156 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.137355479 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.145626636 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.119940172 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.123305633 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.185126822 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.112637759 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.124176062 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.155485132 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.113661501 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.121084927 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.14523763 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.113479186 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.131049775 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.157852966 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.122815636 seconds)
  done (took 16.89697666 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.317166795 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.27405642 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.213951695 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.243170783 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.126000356 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.237908581 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.300771279 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.303627007 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.112576891 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.18268968 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.165101172 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.272660304 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.144065478 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.143132619 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.305938608 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.355797411 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.173661462 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.152631274 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.179150699 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.127263706 seconds)
  done (took 5.453847812 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.13545436 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.148301264 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.165773831 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.140501578 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.123803354 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.159002192 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.113634455 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135248268 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.153308454 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.123672445 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.115280298 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.159041596 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127380744 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.129738643 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.159199578 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.145188877 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.119969776 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.148335478 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.135842855 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.118199722 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.129551163 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.13987381 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.151089 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.136586537 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.132228399 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.153108264 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.113607928 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.118874423 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.11943765 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.152623263 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.118774625 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.131075356 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.149838967 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.106791099 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.124562641 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.158639488 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.121000764 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.116610758 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.146574495 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.119102354 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129583556 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.154760896 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.125306819 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.097477204 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.131983897 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.107733617 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.158631597 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.126513537 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.104430758 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.163932731 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.126910901 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.128332866 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.149829429 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.137384345 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.119881585 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.160748293 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.12603703 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.127871793 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.148673103 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.112521073 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.111452617 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.147548119 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.123480727 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.127691897 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.153721774 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.136323958 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.130172276 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.142473047 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.11980422 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.117506683 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.144648552 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.130041586 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.134549185 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.151065376 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.121932527 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.125063528 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.150610379 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.094778374 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.123130049 seconds)
  done (took 11.651550593 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.140733838 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.122702464 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.159587527 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.151064779 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.125282823 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.147925078 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.124113127 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.134505826 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.126774972 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.160659495 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.128280349 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.126156318 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.164951241 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.124892054 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.120924255 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.158517098 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.126398073 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.178793942 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.134670997 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.140777253 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.156783894 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.119348415 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.12615305 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.153592864 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.143636517 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.125237105 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.169950298 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.128142147 seconds)
  done (took 5.053575537 seconds)
done (took 51.473742279 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.266993081 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.440701493 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.225751519 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.223322881 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.246545378 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.256475244 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.223023908 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.235312467 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.543551887 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.196263131 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.224522703 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.231302075 seconds)
done (took 28.437252219 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.275880934 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.77728767 seconds)
    (2/2) benchmarking "String"...
    done (took 1.513736544 seconds)
  done (took 4.408687512 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.214229684 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.213991361 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.468889644 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.211777673 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.214323231 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.215022998 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.216371715 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.226566594 seconds)
  done (took 15.884252049 seconds)
done (took 25.899609268 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.260919501 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.385019454 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.454949402 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.224452221 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.220748138 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.22701218 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.216325564 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.235495393 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.219427368 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.221869441 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.616248946 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.473710753 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.228432757 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.589988599 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.225603342 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.24141683 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.217300282 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.443728534 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.218056772 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.244117071 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.193642432 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.205398892 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.218488067 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.21532804 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.220112053 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.228216128 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.276510036 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.217540305 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.395547466 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.237224187 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.244683959 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.217435658 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.277250799 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.223628103 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.216424265 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.219564987 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.398143801 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.222051182 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.19718959 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.242239716 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.392833871 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.230431593 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.224165863 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.222990515 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.222212403 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.25513714 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.218618285 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.329464053 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.238961472 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.222284293 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.276014136 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.594058696 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.217693377 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.21998173 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.226907162 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.436717656 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.230008054 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.265212986 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.240791617 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.219549064 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.225048197 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.21732877 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.226517482 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.232924055 seconds)
  done (took 144.535817696 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.219739779 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.218707122 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.21862012 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.235735716 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.221143648 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.219152331 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.219032091 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.217340509 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.218747358 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.241373017 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.221567786 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.220411907 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.222486225 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.227614669 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.229485095 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.237055879 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.221883267 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.220683959 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.245963635 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.219538672 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.244923328 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.219974607 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.220670004 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.221675905 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.251959339 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.291467384 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.252043134 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.252516688 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.232924944 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.220245101 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.256408261 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.269032758 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.83814812 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.070140367 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.232030657 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.245603875 seconds)
  done (took 80.937481718 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.220156056 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.219074173 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.219372298 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.250907954 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.21971744 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.785647681 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.788628494 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.197742044 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.545018641 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.543596335 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.220374952 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.424934844 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.219743276 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.310869749 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.233309806 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.222469346 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.219749206 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.23803098 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.247318645 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.22571825 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.221087476 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.789775415 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.236560146 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.246368911 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.395119523 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.238940844 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.254023861 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.61452282 seconds)
    (29/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.223254865 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.221658613 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.254923111 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.553411417 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.271581396 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.220724835 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.538010892 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.625198674 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.332091668 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.222876243 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.254680573 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.223123147 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.221778358 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.503707934 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.224826562 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.22403273 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.227598842 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.836961687 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.224022682 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.788352743 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.224738363 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.153842991 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.222565234 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.222731261 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.175876673 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.836165416 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.223374694 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.222875635 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.227738175 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.223061802 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.223980331 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.25608524 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.122115095 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.319878806 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.225325793 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.227350694 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.25694831 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.225462748 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.249701691 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.224413488 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.053709281 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.28425727 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.441868928 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.794432565 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.228711837 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.319403017 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.342178941 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.225866981 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.22320344 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.224728399 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.224021826 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.335304211 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.226001985 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.907195527 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.400975372 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.244386694 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.544487766 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.321941665 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.225244959 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.574487957 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.228250165 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.225082138 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.925304567 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.319795628 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.225826959 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.225138163 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.225059449 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.907332947 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.797480538 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.46097788 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.228964342 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.805580913 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.228364534 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.080066893 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.781545144 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.871556503 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.230533744 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.336844168 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.402225414 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.243677946 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.227838989 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.557610058 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.230369664 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.282965753 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.23030265 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.62795614 seconds)
  done (took 375.982466432 seconds)
done (took 602.572007825 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.113095596 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.059884647 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.209594485 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.069730467 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.052725338 seconds)
  done (took 11.633470394 seconds)
done (took 12.761451051 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.41727662 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.419859779 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.290567969 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.421794261 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.262123805 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.437652078 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.400294255 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.244342809 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.338858903 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.310581105 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.339587222 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.280807425 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.261957533 seconds)
  done (took 18.555603154 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.518140224 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.239040133 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.293476411 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.495717205 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.273825335 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.506312376 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.546711797 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.240811667 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.380053318 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.271214819 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.252410114 seconds)
  done (took 18.148294134 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.519210259 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.238756915 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.295969981 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.50131626 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.27442842 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.551966765 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.5399557 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.241444183 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.389595142 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.252112942 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.249719299 seconds)
  done (took 18.185249004 seconds)
done (took 56.019289045 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.268011108 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.332467803 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.264096981 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.248223941 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.246844755 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.24624668 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.250379886 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.247079068 seconds)
  done (took 11.23496143 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.246124433 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.244873581 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.245659294 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.245521446 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.246730526 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.245951456 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.246102526 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.246164223 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.246330686 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.246487061 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.247409721 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.247204131 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.246979731 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.247711901 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.248935893 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.247117257 seconds)
  done (took 21.077882516 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.251204193 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.248717047 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.248863458 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.246570357 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.248575942 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.249352156 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.248813686 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.247425371 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.2483111 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.248829073 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.249198683 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.248664832 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.247236801 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.248792063 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.246814932 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.248639106 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.246268187 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.24634885 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.253028959 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.246844147 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.249282822 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.246694756 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.246252481 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.247946167 seconds)
  done (took 31.092295286 seconds)
done (took 64.536100707 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.232534655 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.235725613 seconds)
  done (took 5.602142847 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.303400987 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.308020627 seconds)
  done (took 3.743508863 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.24700118 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.246885136 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.245898618 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.246579614 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.246303629 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.245433323 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.245788013 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.24546753 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.245113921 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.247268831 seconds)
  done (took 13.59417562 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.247335753 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.244757849 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.245645956 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.246560364 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.244862572 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.245803701 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.246880054 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.24564719 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.244929331 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.24317786 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.244440215 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.244988375 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.245904447 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.24588215 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.24431254 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.244443259 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.245008504 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.245059183 seconds)
  done (took 23.546454444 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.259577011 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.263318912 seconds)
  done (took 3.652114702 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.38307478 seconds)
    (2/7) benchmarking "second"...
    done (took 1.286000929 seconds)
    (3/7) benchmarking "month"...
    done (took 1.348556611 seconds)
    (4/7) benchmarking "year"...
    done (took 1.341274255 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.286963517 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.266882773 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.286802753 seconds)
  done (took 10.329783656 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.247604009 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.461388663 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.577583743 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.252944014 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.246193667 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.249079487 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.435373592 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.250724341 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.250772097 seconds)
  done (took 13.103304172 seconds)
done (took 74.703415866 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.241918817 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.247195144 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.250967748 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.24997412 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.609155462 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.236310084 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.2339017 seconds)
done (took 16.199070563 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.220949627 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.220187347 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.227257271 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.242720995 seconds)
  done (took 10.042945592 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.228595984 seconds)
    (2/2) benchmarking "read"...
    done (took 1.554204469 seconds)
  done (took 4.911936022 seconds)
done (took 16.085378527 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.244985193 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.244679351 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.244503823 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.245958734 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.245585636 seconds)
    (6/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.244484202 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.244134216 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.24493878 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.245838092 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.244902827 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.24487671 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.247504517 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.244424313 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.246171204 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.244169133 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.243930406 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.245861247 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.245859388 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.244680648 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.243789627 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.243847375 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.246630754 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.24522714 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.246223511 seconds)
  done (took 31.012675724 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.24598604 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.246608506 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.246229898 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.244613689 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.245194396 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.245707872 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.245843525 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.244677128 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.246958607 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.245504222 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.246110704 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.245445217 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.244839714 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.245613062 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.246683399 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.247833123 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.247765062 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.245846104 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.246990625 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.247302971 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.24681507 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.247398447 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.247380467 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.246208743 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.246021778 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.247056834 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.247433113 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.247426092 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.24731421 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.245942057 seconds)
  done (took 38.519670865 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.248647178 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.246082254 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.248192039 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.24809921 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.247087931 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.247144616 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.247810226 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.2481504 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.248732375 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.246118767 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.248759085 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.247664566 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.246831054 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.246933834 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.247560454 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.248774519 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.248730904 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.24750317 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.24854926 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.248127416 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.248121995 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.249818172 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.248433448 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.24919459 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.248449911 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.249511067 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.247489299 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.249239014 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.248248313 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.248694795 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.248490038 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.2487115 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.250918973 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.247866005 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.247641726 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.249065802 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.250581346 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.250518247 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.249430048 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.248402754 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.250607262 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.248701059 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.249964095 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.249518864 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.249259136 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.249881492 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.249633977 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.250352292 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.249775681 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.249680639 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.251258892 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.249955512 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.249201547 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.250491026 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.25075859 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.249407114 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.251291716 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.249337182 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.251226088 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.251706215 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.250879615 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.250574048 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.251818851 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.250594694 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.250372068 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.25022132 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.251536513 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.250766834 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.251618795 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.251675009 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.25184473 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.251150343 seconds)
  done (took 91.083167024 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.25089424 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.25308161 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.252087282 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.252127821 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.251854428 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.249784692 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.251540871 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.251570768 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.250888374 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.252409419 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.251277291 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.252670523 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.252357863 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.251440325 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.252337435 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.252650417 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.252475899 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.253701938 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.254011719 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.254564824 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.252459583 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.254942916 seconds)
  done (took 28.685882168 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.252319097 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.253395066 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.252332707 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.255026775 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.254222507 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.253639749 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.253144673 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.253754677 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.252429047 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.253590777 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.253189163 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.251984229 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.253700446 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.252739328 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.25203881 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.255602943 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.253743058 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.252957038 seconds)
  done (took 23.696022346 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.253670055 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.254757098 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.253190254 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.251987683 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.253753907 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.253967145 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.252619696 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.253126887 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.25403981 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.255168721 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.254858861 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.252938369 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.255865773 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.253749237 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.25365493 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.25433915 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.255908096 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.254264093 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.254129666 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.253569571 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.254733239 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.25499595 seconds)
  done (took 28.726865156 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.25248236 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.254503627 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.253942021 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.254738664 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.253808041 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.252606229 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.255160177 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.255348169 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.256050219 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.256571862 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.254647057 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.254093822 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.256054372 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.253835159 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.255403275 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.255117082 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.252745994 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.255106891 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.253298613 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.25353744 seconds)
  done (took 26.227945889 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.253869011 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.254241007 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.25356284 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.255716704 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.255622088 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.254320692 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.253363786 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.253631143 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.254239037 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.25416933 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.253866386 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.25314609 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.254898143 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.255650738 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.260096738 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.253949142 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.255287969 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.255126981 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.254464666 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.254534028 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.257772167 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.254293362 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.255918287 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.253275354 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.253548474 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.255624189 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.253991589 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.254113352 seconds)
  done (took 36.270509658 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.254677298 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.254730225 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.253452916 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.256167763 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.257106968 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.255039942 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.255447167 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.255486671 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.254108989 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.254433254 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.254107828 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.253901387 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.255151996 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.254895871 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.255457419 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.257428598 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.254859084 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.255471415 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.255375327 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.255110997 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.255889536 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.256440335 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.257091083 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.255271988 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.253869655 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.256514647 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.254768242 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.257219999 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.256884792 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.255861799 seconds)
  done (took 38.801380802 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.275794881 seconds)
    (2/2) benchmarking "in"...
    done (took 1.274055617 seconds)
  done (took 3.688973399 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.257825051 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.256860684 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.256702985 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.255656617 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.256448964 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.256746747 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.256001755 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.25520066 seconds)
  done (took 11.1899135 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.248039803 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.256533254 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.256757405 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.255963057 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.259640615 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.248566303 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.255936139 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.260517781 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.249568537 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.249883717 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.249115273 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.248766729 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.252992007 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.251112647 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.250474964 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.251562624 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.258655611 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.257350917 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.257122449 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.257503952 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.258122423 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.250999967 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.253581409 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.261819261 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.24809176 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.258183787 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.257463417 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.261599193 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.25210795 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.255442947 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.254038988 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.260565235 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.25851895 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.258070477 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.256347121 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.258083586 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.258812231 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.255441518 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.257760312 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.262512122 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.2579517 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.256569934 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.252576776 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.255006406 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.255295126 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.261300228 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.259335518 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.258562867 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.24890482 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.253827424 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.259864828 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.250605368 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.259004237 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.253686425 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.255225063 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.260928822 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.266172694 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.251461039 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.250700871 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.259403371 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.266735406 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.260082001 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.256858161 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.263469019 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.256596065 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.2585222 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.261746914 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.265913109 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.26065088 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.259271992 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.259272474 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.269959619 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.264110034 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.263567242 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.259957823 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.260239376 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.254621341 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.262785286 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.260041388 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.263872148 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.264534092 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.259823669 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.256679532 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.258388832 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.255372449 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.263027513 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.260374435 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.259958143 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.252776335 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.26313951 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.268303229 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.26020466 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.251720883 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.254748754 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.256529093 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.261716714 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.251616425 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.255450178 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.26436153 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.260675256 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.261077967 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.25260611 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.258015282 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.265165507 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.262227411 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.261616003 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.267811647 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.253897157 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.264546448 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.268439396 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.261791453 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.252454399 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.257585065 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.263922049 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.255031385 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.259245111 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.266448565 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.257435878 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.267324336 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.262427492 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.259015775 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.263789558 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.267652822 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.260296535 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.255072215 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.265671544 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.261444855 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.259489122 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.26782512 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.261607109 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.262823614 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.258515909 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.267012953 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.256445856 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.265158542 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.254538991 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.266896714 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.26456169 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.262557766 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.258951541 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.26332429 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.26032033 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.26191528 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.265239934 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.2689589 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.258331034 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.27000135 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.262135799 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.260892285 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.264049217 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.267909143 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.263784057 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.258456145 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.267284363 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.256492797 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.268546484 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.256629221 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.269373963 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.263311666 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.265410121 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.264907193 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.254833371 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.258584995 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.268735855 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.263250434 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.265278338 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.26766917 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.265270822 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.263951721 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.256567549 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.26688109 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.256341732 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.259788217 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.268887754 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.265236825 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.265507424 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.262338595 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.270941717 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.265289875 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.266717141 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.257787649 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.261513922 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.269536649 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.26670723 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.272418765 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.265735447 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.265056978 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.259385794 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.260193648 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.267617741 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.258898059 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.268775861 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.2682658 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.271518684 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.261886711 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.270419976 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.255420784 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.266948658 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.264645918 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.273062269 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.264413059 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.266643383 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.258613901 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.269016714 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.261254111 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.268347142 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.255959271 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.267188224 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.265835469 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.266173386 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.266353724 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.259937875 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.26222016 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.268419899 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.266585116 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.26555632 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.259118935 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.269335695 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.257553246 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.261942924 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.270450365 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.265419658 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.267097469 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.272570683 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.263962331 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.270891124 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.267526643 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.261926607 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.267877928 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.262943583 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.265619892 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.271260028 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.267530244 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.263368341 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.272167522 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.26908976 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.260509486 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.266272328 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.274757635 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.266160337 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.259361498 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.269130021 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.268452278 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.267291233 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.266538528 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.260068902 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.270844567 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.268184654 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.275784199 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.260373718 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.272096084 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.261789744 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.270485718 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.263580311 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.268515758 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.268146926 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.270447911 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.27591379 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.268147252 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.262695498 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.270741813 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.268900065 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.267653971 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.260629973 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.27060077 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.269740298 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.268916819 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.265316426 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.26474494 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.270135094 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.259728358 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.272658269 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.261359652 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.27757366 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.284296411 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.270301688 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.273037561 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.272747207 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.270417184 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.270821052 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.264071542 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.262087554 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.268906657 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.263894289 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.26306589 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.273992035 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.262503494 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.273013456 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.267086726 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.272917426 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.270370602 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.267296752 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.262895802 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.272702137 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.26760899 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.26994178 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.259546046 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.271458785 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.264350732 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.270505356 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.271687033 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.263368418 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.274962994 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.273455742 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.266495586 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.266300632 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.264337352 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.26354148 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.265513931 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.274546058 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.263319486 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.273477427 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.262799614 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.268442285 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.264535396 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.274440121 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.279477315 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.263800103 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.273941401 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.270234787 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.2619267 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.266558213 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.271769181 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.273844284 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.282048511 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.26301616 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.273225287 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.270499306 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.271753449 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.270926169 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.270118626 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.270595928 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.2692693 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.274264374 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.275364369 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.265397228 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.273797679 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.280840935 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.269668714 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.270464069 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.262623455 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.271534672 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.27990381 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.26592419 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.268023815 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.26809167 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.272443074 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.269340277 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.269986127 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.271309811 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.270407791 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.273581672 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.27672873 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.272467626 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.270298056 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.27364613 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.282340351 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.274374512 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.283664688 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.267639807 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.27754086 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.273219833 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.266203322 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.268150587 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.267533883 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.274888164 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.263593052 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.275148829 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.274029783 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.266218918 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.270544083 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.278661422 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.262572034 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.271223612 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.278732354 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.264306615 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.275075327 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.269624421 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.26322208 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.273926776 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.271546961 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.263063346 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.266800292 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.26633761 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.275164937 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.265681774 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.275025665 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.265725567 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.274992846 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.272182153 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.273771583 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.272604127 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.27208747 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.263155319 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.273185454 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.270823953 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.282633947 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.26671703 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.271369101 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.267066702 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.279521194 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.284111559 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.267306845 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.278071313 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.273946819 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.266447819 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.272175228 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.277629007 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.267165169 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.276407287 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.26386666 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.267144079 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.266740459 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.273927414 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.274767477 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.276078887 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.266108347 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.265776728 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.273787416 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.271505887 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.272678406 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.267602437 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.279037076 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.265242286 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.265484236 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.27396619 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.266149859 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.277347969 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.266748933 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.269627998 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.270491025 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.278063584 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.271905807 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.271617241 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.264413047 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.267963922 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.279652125 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.277309457 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.268467306 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.269151713 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.27528591 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.265550349 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.269345909 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.269185322 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.267249812 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.268303746 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.275964404 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.267899224 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.268668889 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.267080831 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.274671653 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.277620843 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.277164051 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.267654503 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.280022533 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.282543916 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.280353911 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.265375524 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.268383003 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.26952959 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.275250103 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.274186054 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.265933766 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.284423767 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.279736677 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.275968251 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.271405162 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.275601138 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.267128112 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.274927706 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.274642292 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.269518104 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.278755811 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.269167177 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.281037841 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.275895316 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.273315426 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.267046717 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.26725067 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.270750689 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.268462753 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.274896247 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.272776112 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.276593449 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.272388698 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.282225176 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.274435918 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.274366608 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.273523082 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.266184803 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.276661311 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.267388314 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.275484205 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.277377557 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.268858602 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.275966563 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.275049433 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.267938665 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.270352557 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.277640543 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.276158432 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.268165229 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.272685142 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.279485748 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.284201054 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.275376161 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.269061247 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.272553279 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.27865434 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.275220094 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.276252076 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.268595616 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.284580712 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.289385749 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.269014182 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.272474776 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.280488137 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.285051154 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.276177588 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.275839079 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.271933838 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.275175846 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.278268147 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.276740494 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.280366914 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.283166663 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.273011573 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.278444151 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.269189607 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.271155041 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.278011741 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.287444285 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.275905621 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.271988933 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.283297183 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.288258455 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.273987839 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.288491682 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.283656748 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.275913122 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.282844041 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.270119712 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.278506497 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.271463607 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.282013896 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.275689053 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.276380394 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.27764503 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.269203673 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.279250505 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.284525839 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.28700089 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.277612184 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.267577758 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.272340213 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.279049389 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.27832942 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.279478764 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.277498727 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.277713511 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.278566867 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.271183704 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.28787906 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.29220852 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.284819085 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.279776014 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.277820805 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.277479292 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.281267694 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.274801636 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.282080783 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.278048222 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.278540655 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.274188794 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.287347087 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.279920801 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.272171719 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.272991192 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.272436506 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.281686946 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.285987093 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.29687891 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.28075854 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.281806891 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.281121822 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.278888789 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.272484682 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.283114272 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.278219188 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.272455704 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.274786089 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.282808879 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.279605872 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.279789372 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.272937041 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.282996164 seconds)
  done (took 756.961234572 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.27962491 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.279033145 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.27865214 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.278824642 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.28067597 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.279015398 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.27947542 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.278493086 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.280449848 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.27892174 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.280345006 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.280003294 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.279737255 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.280779735 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.281102077 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.279937605 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.279428232 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.278624338 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.279421166 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.279230094 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.279908231 seconds)
  done (took 28.029120052 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.280621266 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.27987014 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.281634178 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.281596824 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.27972563 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.280538071 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.280461587 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.281102075 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.281657841 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.280377396 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.282183464 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.280160765 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.280486204 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.281753722 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.282039936 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.281282 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.282581417 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.280508707 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.282179539 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.282544086 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.281239283 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.281294076 seconds)
  done (took 29.343397545 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.281269792 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.282173556 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.275372597 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.285311408 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.283119124 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.28044662 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.281767746 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.282254826 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.281778871 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.275131962 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.275630307 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.278567005 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.276941039 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.286412605 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.27885078 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.287908568 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.283419717 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.281480204 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.284023844 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.282043706 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.286418027 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.295191303 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.281558273 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.273904725 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.285474015 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.28422653 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.283838281 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.28308754 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.275087049 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.284729363 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.283920036 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.277504575 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.285601524 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.286661746 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.276897352 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.286103689 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.283840232 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.284541598 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.284613913 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.282148519 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.292082643 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.284444498 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.287305052 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.297188094 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.285777928 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.279674101 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.288328129 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.285308655 seconds)
  done (took 62.75107642 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.286776837 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.28518507 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.283909418 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.285678902 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.285605915 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.285349707 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.285304457 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.286153907 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.285337209 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.284950703 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.285002272 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.285399525 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.285545626 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.285942717 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.285574996 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.285069484 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.283516713 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.28533911 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.285495167 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.285442587 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.284780678 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.285310842 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.287383308 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.28614693 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.285628267 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.285811532 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.285246018 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.285654484 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.286431432 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.286966421 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.287335704 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.286630422 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.286108567 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.287109179 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.286984495 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.286308072 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.288410619 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.285571212 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.290359633 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.286864059 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.287963276 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.286350144 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.287660102 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.287174236 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.286454422 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.287379084 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.286334288 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.286467927 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.286899362 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.287492718 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.287281277 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.286461149 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.288318671 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.288404145 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.286105936 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.286914187 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.287354891 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.287242503 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.288213261 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.286680287 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.287069922 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.289131326 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.287287864 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.287907238 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.288638275 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.288254115 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.287486415 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.288296831 seconds)
  done (took 88.64748322 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.288886936 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.288780187 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.289513912 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.289421206 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.287594514 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.290199431 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.288619857 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.290679687 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.291899707 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.288971252 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.289232902 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.288865259 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.288630733 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.289832051 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.289550062 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.290069366 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.289846957 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.290688382 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.290043604 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.290155863 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.289982919 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.2895907 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.29089556 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.290747832 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.2901671 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.291343293 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.290857735 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.290694709 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.290038853 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.290729155 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.290684927 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.29050396 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.291463434 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.290824805 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.292301349 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.290397637 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.292756027 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.292642975 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.291969235 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.292476463 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.291922855 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.290970737 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.291490157 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.293083543 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.291529448 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.294126659 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.291296489 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.292872041 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.292575097 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.292491944 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.290856403 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.292941907 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.292449246 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.292479414 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.293325825 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.293131657 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.292273372 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.293836976 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.290596934 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.293017255 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.291715121 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.292605053 seconds)
  done (took 81.210346355 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.292758771 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.292595873 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.293422083 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.291065828 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.29191919 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.291330067 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.291311511 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.292728547 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.29205608 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.292637648 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.294781524 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.292163256 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.294546343 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.294364531 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.292251772 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.293023725 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.293168326 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.29257312 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.292982494 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.29409287 seconds)
  done (took 27.023059074 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.293276497 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.293111467 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.292777295 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.2933237 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.294768637 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.294074287 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.292812727 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.292622006 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.293498115 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.293788229 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.294001394 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.293863291 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.295103009 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.2934314 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.294768798 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.293626051 seconds)
  done (took 21.866336311 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.294495216 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.293200325 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.295594001 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.295095193 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.293765132 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.293521287 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.294534059 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.294169693 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.296175001 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.294458237 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.295592126 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.295571849 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.296077807 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.294844282 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.294891371 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.296475006 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.295214244 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.295466537 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.296064604 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.299376363 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.297458259 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.296373719 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.297062125 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.296278549 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.296106712 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.297302911 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.296508392 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.296859833 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.295920226 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.296329804 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.296175836 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.297242334 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.296292877 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.295797123 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.296358893 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.296821257 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.297748056 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.297108417 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.297041844 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.296850359 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.297085068 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.29678399 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.296884936 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.297760906 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.295778726 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.297387428 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.296895838 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.296554232 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.298000314 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.298273855 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.298780439 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.297955224 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.298658124 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.297982511 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.298822663 seconds)
  done (took 72.472780442 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.298839564 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.29797747 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.299175076 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.297754638 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.299532533 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.299043998 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.299297896 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.300261264 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.297831371 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.299427216 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.298699054 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.299587755 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.298152098 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.298212529 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.296955766 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.298227359 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.299464865 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.300210158 seconds)
  done (took 24.551328076 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.299299632 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.299016675 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.299389639 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.298377492 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.298858102 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.300070042 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.299023739 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.301391569 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.300724883 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.30052199 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.299951261 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.299827073 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.300221518 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.300762796 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.299694157 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.301911737 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.30143268 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.302404803 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.3019685 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.300419388 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.299941277 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.300786645 seconds)
  done (took 29.781370595 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.290360363 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.292521088 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.291611375 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.305896449 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.300606563 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.292452346 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.291539137 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.292491265 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.308240965 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.315409631 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.31087979 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.299176512 seconds)
  done (took 16.765342825 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302742394 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302318172 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.301688681 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300280852 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302249716 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302197566 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301179261 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30105438 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302699034 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303349211 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301647981 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303182033 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301529033 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302230649 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302494943 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302087183 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301845074 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302019395 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303581913 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304232247 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302221065 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302021911 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304158871 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302929861 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303825186 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30326547 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30272011 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302854791 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302863739 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304122902 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302668045 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301944202 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304363649 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304205075 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304081346 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303913736 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303861889 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303544587 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304708531 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302285382 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.304418101 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302897801 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303792205 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30505905 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305373836 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.3042368 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304417233 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303839251 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304079506 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305490383 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305853421 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304469209 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305522343 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305332443 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305374523 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305923554 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306181239 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304661132 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307352593 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301778305 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302874551 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301714884 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302119853 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303257904 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30157734 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300958655 seconds)
  done (took 87.196925615 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29235726 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.291541154 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291753678 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293197255 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291552248 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292463782 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292765261 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289366983 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284031941 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284932609 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283511302 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284557895 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284369742 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285039192 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284832603 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283974903 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279986317 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279502835 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279114948 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279839623 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.2799444 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281481443 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280884405 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277040578 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277915306 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276207142 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276763575 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277179 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276640923 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277071362 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27857734 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272289934 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271350909 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.2722869 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271784079 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272621489 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271118823 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272814106 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271206849 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269051274 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.269602043 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.267250034 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.267548384 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.270183175 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.268717191 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.269653882 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268892076 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.266129641 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.266524807 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.267112664 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.266575388 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.268124777 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.266113069 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.268141117 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.265262168 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.266147006 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.266548923 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.266000499 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.266415892 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.266402571 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.265363664 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.265922559 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.268131791 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.26610296 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.266505634 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26645847 seconds)
  done (took 85.355278589 seconds)
done (took 1770.986336093 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.421041933 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.37596983 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.252656905 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.258743495 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.251974258 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.252636848 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.266109044 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.252134835 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.248776991 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.247947795 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.247528999 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.440612818 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.285698049 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.248872567 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.249993854 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.343342838 seconds)
  done (took 25.788724457 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.269321578 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.262779188 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.361403589 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.25911506 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.284446675 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.431171696 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.317346565 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.264550103 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.410128614 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.281142162 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.263282845 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.280483301 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.25964287 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.261663334 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.276193222 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.430595626 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.499647552 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.255857956 seconds)
  done (took 27.808324511 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.655620223 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.254701108 seconds)
  done (took 5.058057463 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.278953214 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.261347198 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.263346228 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.26030648 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.25000408 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.249207145 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.257300757 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.250098694 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.253676654 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.364046995 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.259425623 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.266097791 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.252779363 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.25402589 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.262896466 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.298232263 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.404924346 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.259806591 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.257355747 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.257370489 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.250405848 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.341205065 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.29218671 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.264840877 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.36225434 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.25160715 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.252656014 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.257676511 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.363703469 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.259947809 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.250456965 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.250823012 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.250218988 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.137618841 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.767244165 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.243611185 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.272686229 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.260014118 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.258013319 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.400348761 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.251036958 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.257502976 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.242257911 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.771124949 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.349731949 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.364899533 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.244254458 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.253173286 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.252269054 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.318552393 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.258564894 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.251484843 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.307900161 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.009322553 seconds)
  done (took 80.730948763 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.249143246 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.244117337 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.426671119 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.269668288 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.244267653 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.243391335 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.245303817 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.499582731 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.270235151 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.244271771 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.55797377 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.821625116 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.251939108 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.312963389 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.283214532 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.306814303 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.245665908 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.244399009 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.246967472 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.248903458 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.793113097 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.246717237 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.245522989 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.320156919 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.2840513 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.754042579 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.244489442 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.249183965 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.25015532 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.246582784 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.799063347 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.252857912 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.297620286 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.247389426 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.519982021 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.606236196 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.5660106 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.249970577 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.295763687 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.249262975 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.272225982 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.746634513 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.595045844 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.249695278 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.247458527 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.746916474 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.251425331 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.252789491 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.255102308 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.513969237 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.248368586 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.246653624 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.251571803 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.254593421 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.246247452 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.298240474 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.295619189 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.759916296 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.252391023 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.248229137 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.285076808 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.249676943 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.255674916 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.24993665 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.246230714 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.593789643 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.506054723 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.255028622 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.590557015 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.790633721 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.261933857 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.873293706 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.252719464 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.254245625 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.278101589 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.255260024 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.250115292 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.750028085 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.27186054 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.240286456 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.560394784 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.242046518 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.533408759 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.257493496 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.242152798 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.797734206 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.254902784 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.28124195 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.236874877 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.236242134 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.236660132 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.242069329 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.515954888 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.299203431 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.238364163 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.237568804 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.287526552 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.237630253 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.251282486 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.23930562 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.859019609 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.24046844 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.236947943 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.255403336 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.237406095 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.24176624 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.241147187 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.239292418 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.519264147 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.240144945 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.255345427 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.240596431 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.238508862 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.24168353 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.314050492 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.240843188 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.523216356 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.246513438 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.237919721 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.242017472 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.238695994 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.283768238 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.239584125 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.259713874 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.207741089 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.534018913 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.255126657 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.252758796 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.24211388 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.251242498 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.241768501 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.244775857 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.296834819 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.242027163 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.988065818 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.284318337 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.286681892 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.238967291 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.249384035 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.25057209 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.250443667 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.24002748 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.538054535 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.51892063 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.49436946 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.243468101 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.239851055 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.007036405 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.277014849 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.421817719 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.258202759 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.239564888 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.517651026 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.481470027 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.243241703 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.241189194 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.241584309 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.517990285 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.243437265 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.553641886 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.817249782 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.245153616 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.249016006 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.975684465 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.049237904 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.246282451 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.242811595 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.533776294 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.260991738 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.241320448 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.241947249 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.242965995 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.240972632 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.247334544 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.243077793 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.241831446 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.242149244 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.584331888 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.435871537 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.258056653 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.245467902 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.750365188 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.280285935 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.243145103 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.252228696 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.246752554 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.241219543 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.293653081 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.244300235 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.271716815 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.244926534 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.253025127 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.774159402 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.242722987 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.248573844 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.436368388 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.947702838 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.247936456 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.24425888 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.244620006 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.309058712 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.779824325 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.294020391 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.526475278 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.256331443 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.28187068 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.244268921 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.25836784 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.783920079 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.246930769 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.243872758 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.951884654 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.247343282 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.670949063 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.245162114 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.251368945 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.863192313 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.246543746 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.244100963 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.244285542 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.245009158 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.559869042 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.248544371 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.265528554 seconds)
  done (took 477.946551527 seconds)
done (took 618.478073941 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.244328371 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.248789784 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.25043755 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.249372582 seconds)
  done (took 10.133936108 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.262688342 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.251017582 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.260824428 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.252094601 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.263292521 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.25231061 seconds)
  done (took 8.682710894 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.246722143 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.245803732 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.250299038 seconds)
  done (took 7.885005042 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.440916288 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.270325566 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.578943166 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.259914552 seconds)
  done (took 8.69114944 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.261799818 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.262502901 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.261871505 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.262740843 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.264520989 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.264960339 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.264195676 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.264119302 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.263908716 seconds)
  done (took 12.511527097 seconds)
done (took 49.04495983 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.358311697 seconds)
    (2/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.402400708 seconds)
    (3/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.313685974 seconds)
    (4/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.331956443 seconds)
    (5/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.226582514 seconds)
    (6/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.357052884 seconds)
    (7/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.233986995 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.329940314 seconds)
    (9/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.46168988 seconds)
    (10/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.454926605 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.285857591 seconds)
    (12/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.341478867 seconds)
    (13/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.252928841 seconds)
    (14/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.24034517 seconds)
    (15/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.241542372 seconds)
    (16/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.319628246 seconds)
    (17/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.282735561 seconds)
    (18/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.321054395 seconds)
    (19/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.259038304 seconds)
    (20/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.243150908 seconds)
    (21/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.335737463 seconds)
    (22/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.243676492 seconds)
    (23/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.228664677 seconds)
    (24/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.259213313 seconds)
    (25/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.263300341 seconds)
    (26/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.283637247 seconds)
    (27/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.412409565 seconds)
    (28/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.453977339 seconds)
    (29/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.472334639 seconds)
    (30/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.337320813 seconds)
    (31/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.478010995 seconds)
    (32/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.487415029 seconds)
    (33/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.314741928 seconds)
    (34/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.32216683 seconds)
    (35/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.339374986 seconds)
    (36/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.395231163 seconds)
    (37/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.420574486 seconds)
    (38/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.545477491 seconds)
    (39/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.361535059 seconds)
    (40/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.333784595 seconds)
    (41/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.318942136 seconds)
    (42/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.344188803 seconds)
    (43/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.458150627 seconds)
    (44/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.364343764 seconds)
    (45/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.36698021 seconds)
    (46/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.259875171 seconds)
    (47/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.376230934 seconds)
    (48/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.328425596 seconds)
    (49/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.228386041 seconds)
    (50/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.406151742 seconds)
    (51/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.381687669 seconds)
    (52/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.253551878 seconds)
    (53/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.267176129 seconds)
    (54/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.231442261 seconds)
    (55/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.408069823 seconds)
    (56/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.328221717 seconds)
    (57/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.3554095 seconds)
    (58/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.497687546 seconds)
    (59/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.366709444 seconds)
    (60/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.491703642 seconds)
    (61/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.332555895 seconds)
    (62/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.234348604 seconds)
    (63/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.409622599 seconds)
    (64/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.234940415 seconds)
    (65/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.545770881 seconds)
    (66/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.258699163 seconds)
    (67/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.259268284 seconds)
    (68/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.25950539 seconds)
    (69/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.237816461 seconds)
    (70/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.373376124 seconds)
    (71/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.23610451 seconds)
    (72/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.410714623 seconds)
    (73/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.38125937 seconds)
    (74/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.344163252 seconds)
    (75/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.332180446 seconds)
    (76/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.405395453 seconds)
    (77/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.285999177 seconds)
    (78/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.478843809 seconds)
    (79/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.285422898 seconds)
    (80/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.25352047 seconds)
    (81/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.353249966 seconds)
    (82/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.353749865 seconds)
    (83/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.233121046 seconds)
    (84/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.504940068 seconds)
    (85/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.441075288 seconds)
    (86/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.2539816 seconds)
    (87/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.367183597 seconds)
    (88/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.336462833 seconds)
    (89/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.372069074 seconds)
    (90/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.350087612 seconds)
    (91/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.593915856 seconds)
    (92/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.364881918 seconds)
    (93/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.342269352 seconds)
    (94/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.406215327 seconds)
    (95/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.235670531 seconds)
    (96/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.439408161 seconds)
    (97/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.279652089 seconds)
    (98/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.404305223 seconds)
    (99/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.244383604 seconds)
    (100/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.236409255 seconds)
    (101/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.371539198 seconds)
    (102/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.289754873 seconds)
    (103/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.232436017 seconds)
    (104/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.29186859 seconds)
    (105/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.328486281 seconds)
    (106/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.297024162 seconds)
    (107/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.293507222 seconds)
    (108/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.406292448 seconds)
    (109/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.241081256 seconds)
    (110/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.366327336 seconds)
    (111/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.401306836 seconds)
    (112/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.23344035 seconds)
    (113/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.295393963 seconds)
    (114/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.33085659 seconds)
    (115/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.284730201 seconds)
    (116/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.381927168 seconds)
    (117/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.544456651 seconds)
    (118/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.293771941 seconds)
    (119/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.29933306 seconds)
    (120/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.474326779 seconds)
    (121/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.263620835 seconds)
    (122/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.46368253 seconds)
    (123/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.302182569 seconds)
    (124/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.41084199 seconds)
    (125/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.438034571 seconds)
    (126/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.490488267 seconds)
    (127/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.242431616 seconds)
    (128/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.333918153 seconds)
    (129/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.364019911 seconds)
    (130/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.363864686 seconds)
    (131/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.294079606 seconds)
    (132/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.599208814 seconds)
    (133/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.460615516 seconds)
    (134/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.491674868 seconds)
    (135/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.248060559 seconds)
    (136/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.39191079 seconds)
    (137/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.349543293 seconds)
    (138/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.338141545 seconds)
    (139/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.280266837 seconds)
    (140/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.290889009 seconds)
    (141/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.555105435 seconds)
    (142/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.330573595 seconds)
    (143/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.341558478 seconds)
    (144/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.237326728 seconds)
    (145/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.403204358 seconds)
    (146/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.360461306 seconds)
    (147/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.488077637 seconds)
    (148/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.37550917 seconds)
    (149/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.291171044 seconds)
    (150/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.50103996 seconds)
    (151/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.405903964 seconds)
    (152/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.436170243 seconds)
    (153/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.2369156 seconds)
    (154/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.325265042 seconds)
    (155/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.414054416 seconds)
    (156/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.424835139 seconds)
    (157/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.416436089 seconds)
    (158/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.294303468 seconds)
    (159/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.475050136 seconds)
    (160/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.23766933 seconds)
    (161/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.475757001 seconds)
    (162/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.268773817 seconds)
    (163/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.33242303 seconds)
    (164/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.245699053 seconds)
    (165/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.237433435 seconds)
    (166/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.350267269 seconds)
    (167/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.501419129 seconds)
    (168/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.375654287 seconds)
    (169/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.307147748 seconds)
    (170/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.531984769 seconds)
    (171/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.388653054 seconds)
    (172/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.656572504 seconds)
    (173/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.293569964 seconds)
    (174/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.237904454 seconds)
    (175/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.417028306 seconds)
    (176/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.371443633 seconds)
    (177/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.324233142 seconds)
    (178/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.494523674 seconds)
    (179/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.329636502 seconds)
    (180/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.556261832 seconds)
    (181/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.418015702 seconds)
    (182/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.242217053 seconds)
    (183/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.261642551 seconds)
    (184/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.458083247 seconds)
    (185/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.239452648 seconds)
    (186/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.375655297 seconds)
    (187/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.416591823 seconds)
    (188/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.305777493 seconds)
    (189/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.41552702 seconds)
    (190/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.386285207 seconds)
    (191/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.664900078 seconds)
    (192/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.478213313 seconds)
  done (took 309.391049759 seconds)
done (took 310.533775108 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.288360153 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.364235259 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.268406883 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.268667433 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.268156507 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.249008798 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.290390005 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.269898344 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.282613433 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.283233575 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.250238905 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.278569964 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.284390433 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.279773982 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.302642003 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.270756371 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.270852269 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.279983545 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.284800901 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.286693155 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.271273297 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.270776238 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.297402915 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.269436304 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.27777067 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.277585965 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.276269786 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.260639471 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.278164399 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.285816499 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.261559721 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.290927841 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.287273592 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.282349401 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.271367857 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.280235295 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.27250473 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.368578536 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.292463026 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.28253989 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.279186383 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.287280631 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.275482053 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.274825382 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.282228795 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.299208787 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.280192742 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.286682294 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.263055214 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.242605047 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.292898764 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.284328536 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.280298559 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.242010912 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.273991018 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.286666013 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.282006809 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.292236423 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.280243919 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.273601529 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.306247449 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.292318928 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.284611093 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.279406328 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.279924764 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.287941012 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.282340199 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.287853636 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.280980052 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.274107828 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.273976097 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.281664439 seconds)
done (took 101.403695844 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.396922217 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.269869459 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.430259443 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.28100234 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.435725111 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.393727408 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.281567118 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.281451552 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.279439446 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.074102846 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.282245171 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.281118547 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.271410008 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.281311844 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.392058522 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.281207398 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.2814892 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.971944785 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.282959583 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.40871095 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.274492913 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.283834467 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.281894458 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.08675772 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.271846412 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.266490948 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.410225741 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.284123051 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.980921789 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.266091136 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.269041804 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.98205866 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.408827882 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.300574592 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.291343861 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.291562657 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.439221634 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.284152907 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.400099562 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.400593605 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.434600168 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.320801237 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.268471253 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.272497589 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.285564725 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.28386434 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.283252187 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.312922781 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.273448596 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.28302556 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.974296544 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.29363932 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.283343907 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.283952855 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.284209496 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.312505745 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.284329343 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.284715498 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.411358149 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.285605574 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.401261106 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.086072595 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.080122001 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.28414931 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.271734192 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.285918398 seconds)
  done (took 104.617775278 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.344462533 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.352306677 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.384398829 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.276869053 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.32497681 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.384040301 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.276643295 seconds)
  done (took 10.505580024 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.282876556 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.284224756 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.323543443 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.32347087 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.285179212 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.448487314 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.285323406 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.288960366 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.284825022 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.328102397 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.287436314 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.28644807 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.295577627 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.275153297 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.324665878 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.287163286 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.395827655 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.278215186 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.286394252 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.430692791 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.2868675 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.295936482 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.328811035 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.289535611 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.286800025 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.284068618 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.059856593 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.287320562 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.285983636 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.286578914 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.285159688 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.343369012 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.286615832 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.277420701 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.288147452 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.392495331 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.28790121 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.286571935 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.288208778 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.281181767 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.287268801 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.289666951 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.287859374 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.28792263 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.289052528 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.304170595 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.288793884 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.288911181 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.287970972 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.287681104 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.329278592 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.289439161 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.287435141 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.287738153 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.334589255 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.298740412 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.290426212 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.28821789 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.289469228 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.287233609 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.43061509 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.326268416 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.288610652 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.32654663 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.28929176 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.287698739 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.289317586 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.288502464 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.36935145 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.289322506 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.326992962 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.289708974 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.463563807 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.305021644 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.291212268 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.284245062 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.283156471 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.291456587 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.277479131 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.286819633 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.289911782 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.28207609 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.287895331 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.290902155 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.289620448 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.440512995 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.388565281 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.292499291 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.297101905 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.288351522 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.290653266 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.334570645 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.291242675 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.290310361 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.33488017 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.40136358 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.333519729 seconds)
  done (took 132.748328455 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.294503424 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.296136349 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.287904346 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.309652902 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.282972318 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.281704857 seconds)
  done (took 8.921465734 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.285301221 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.294350648 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.292044425 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.292478993 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.292384645 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.293234729 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.292246627 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.284678749 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.294687959 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.291465313 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.293590304 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.295460363 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.296270259 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.292733072 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.292870733 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.2931308 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.294758937 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.293352415 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.294378834 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.294118635 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.280468119 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.293830989 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.292921603 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.286528463 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.296171373 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.29359545 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.310341509 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.293648008 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.29392972 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.289228276 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.296515083 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.295748652 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.287426648 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.288998625 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.296804676 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.286852799 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.297540271 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.296060071 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.294274066 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.296382761 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.295997757 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.294746951 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.296485946 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.295807269 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.286323074 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.291571297 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.29960683 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.310082759 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.29604504 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.295714952 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.296596195 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.295945304 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.296454096 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.296701419 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.289047131 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.290906307 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.300145772 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.296328821 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.295642244 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.288885216 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.298821366 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.296848985 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.289607099 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.297756333 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.297421217 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.296267223 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.289355001 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.299696377 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.297996974 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.296395612 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.296962779 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.294774305 seconds)
  done (took 95.352875151 seconds)
done (took 353.303711982 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.710414587 seconds)
  done (took 3.88384963 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.545025309 seconds)
  done (took 3.717732881 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.570686869 seconds)
  done (took 21.989490353 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.367057322 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.370092355 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.304735115 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.289748941 seconds)
  done (took 10.504843331 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.531972397 seconds)
  done (took 3.705086289 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.29296026 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.306348318 seconds)
  done (took 5.773972638 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.432590214 seconds)
  done (took 3.606789125 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.484673313 seconds)
  done (took 3.660079684 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.29452743 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.312678161 seconds)
  done (took 5.789952636 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.262562669 seconds)
  done (took 3.437177428 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.096322589 seconds)
  done (took 20.271872391 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.306222992 seconds)
  done (took 3.483560184 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.326765641 seconds)
  done (took 3.501723581 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.689335781 seconds)
  done (took 5.863254267 seconds)
done (took 100.362415375 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.28370359 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.284417661 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.286123795 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.283983089 seconds)
  done (took 10.312556305 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.363439301 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.361499734 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.372736844 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.356903567 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.358258395 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.365157921 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.338914956 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.32614183 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.355348357 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.353158232 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.371514076 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.357156859 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.36741735 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.325310151 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.351204768 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.366550515 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.355903695 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.373937087 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.328055809 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.35806866 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.300467202 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.358358193 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.352736417 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.300148722 seconds)
  done (took 33.59432431 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.810122628 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.361658142 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.445580936 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.345952404 seconds)
  done (took 7.139134859 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.404599456 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.405741321 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.423841202 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.459400857 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.487029845 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.419390208 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.327938577 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.323012449 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.310404457 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.407108045 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.48616292 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.404727633 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.623121807 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.303989256 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.619416987 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.301792403 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.302825411 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.407104497 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.455527396 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.484219506 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.302635857 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.405858167 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.409732901 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.406605674 seconds)
  done (took 35.059612107 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.310580599 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.319665622 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.303005463 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.318343243 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.305707099 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.304750871 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.305721576 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.310589608 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.304959499 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.303910996 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.30562631 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.318387335 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.30441468 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.305184972 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.310192978 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.305698111 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.305836935 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.312039837 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.313555743 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.304240359 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.304157654 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.311979948 seconds)
  done (took 29.967407927 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.28892882 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.289750219 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.640261576 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.543926784 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.290814027 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.288538413 seconds)
  done (took 13.521701261 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.361020849 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.49060962 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.295616954 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.623060953 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.712341088 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.301252231 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.295640313 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.525410558 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.804915396 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.796955426 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.354881952 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.36248015 seconds)
  done (took 19.103334625 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.295098345 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.294538327 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.296410248 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.309835722 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.346815392 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.300811343 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.301757936 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.289954511 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.352926281 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.351209088 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.300434875 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.349289717 seconds)
  done (took 20.970834348 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.381870623 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.301004151 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.305729107 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362645784 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.301986345 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.301286769 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.368099204 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.973109929 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.306313796 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.576217305 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309071567 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.387736391 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.547445122 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.30220384 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.307714811 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.23688151 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.528663633 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.762629409 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.303817825 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.303308184 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.339156695 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.316397552 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.306492592 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.502035702 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.310357835 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.303429595 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.618248266 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.30255504 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.565163142 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.541431125 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.543794164 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.308326766 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.580638902 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.927120111 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.409047672 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.496751155 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322713217 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.304290128 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.283636278 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.30454709 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.313593342 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.309188948 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.539254701 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309078624 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.304545782 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.304428723 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.990167227 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.310744969 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.304556054 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.304839218 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.539902431 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.393071317 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.310497993 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.304569801 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331884213 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.304669609 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.310944746 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42562915 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946756373 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.319537406 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31785546 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.311205261 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.303061944 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317828918 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924848271 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.313690462 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.312646606 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.311083649 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.30688259 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.315523592 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.3314113 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.305621976 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.324466777 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.304952698 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.045358944 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.312873946 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313284567 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.81614906 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312101407 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.307270789 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.53111246 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309070166 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306057786 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.306207348 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.305830166 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.0010875 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.315572649 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.275639222 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.344215197 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.982976523 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.500643264 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.330501318 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.33635023 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.52677448 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.27745159 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309038587 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.317530023 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31364011 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.329983508 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.989796344 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307096669 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.314240869 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.554363872 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.518361904 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.308684622 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.243340885 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.755105857 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309914831 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.336433856 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.311558833 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.50156831 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.904176357 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.554130307 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315519684 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348043919 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.308765315 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.059416066 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.311998218 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.315344835 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.310581414 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.582121844 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.082668534 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.310008378 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.382570834 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.309491279 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.308652203 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.316797547 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314828247 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.31005445 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.482896662 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.315423009 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.543578201 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.316825564 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.311084366 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.310096977 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309800202 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.316071537 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.531865353 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.311022214 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.585962925 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.310781525 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312255894 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.311958121 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.530728543 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.311269397 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.322029563 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.651310194 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312387166 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.312374345 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.547757857 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349114236 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.424075646 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.343455055 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.312245544 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.560091548 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.317586265 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.318082743 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.323563338 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.319446484 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315147814 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.320933178 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308581232 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.908894853 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.292365732 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.320872653 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.313118546 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.328918732 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.387013158 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.321556868 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.506817219 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.317534146 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316126275 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.320605941 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.321844008 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.538164795 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.551099759 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.320455118 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.492552633 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.763184648 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.904975963 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.332314984 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.313337697 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.313888933 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.314563832 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314058258 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314524079 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.314649662 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.50943587 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.561696555 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.323148765 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.915488124 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322018304 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.315776836 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.326668639 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.552845711 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.330952248 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317507553 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.323175412 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.320291847 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.3306991 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.554870043 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.539409589 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.331976818 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.315250803 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.834631929 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.322447412 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.317103346 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.315378315 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.342962242 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.317439969 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.13749776 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.655422545 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.31241554 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.551435095 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.322378199 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.338463976 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.314752109 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.316170442 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.320898134 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.337162999 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.329479295 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.51366591 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.337512051 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3237146 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958535052 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.061677941 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.860069636 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.318501125 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.317001042 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.321273158 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.004759036 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.317099788 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.317770613 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.556325701 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.006468189 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.318009619 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.766716847 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.322686669 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.04972246 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.5600414 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.548656796 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.31805724 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.319215429 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.562173464 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.535010347 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.346388754 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.324465345 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322430823 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.287894365 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.840943435 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.318567914 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.517977993 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.003860357 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.318591812 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.326214202 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.361154173 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.318226453 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.696161731 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.31872146 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321536223 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.326798722 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.334090223 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.140086756 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.326671387 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.319655812 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944947286 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.323714971 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.778400009 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321058943 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.516813079 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.562993968 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.538778271 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.329111322 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.331735352 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.569437915 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.559590086 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326015065 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.324569611 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863282004 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.177681921 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.328668292 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319928012 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067148008 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321955418 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.604247644 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.326796114 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.327339953 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335347032 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.322728835 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321478042 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.322050069 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.32827518 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.29778906 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.783836221 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.329399115 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32239079 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.355734906 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327089631 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.567425242 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.337794065 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.918760933 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.552591846 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.326214958 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36007968 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.327431631 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322014296 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.298918092 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.32299803 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.322787432 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342912124 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.542664603 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.338651902 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.291952735 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.32342661 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.532870259 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.323744469 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.323241884 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.536750605 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.329244588 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.324519776 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.101616376 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35965867 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.32420814 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330696544 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.31528244 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.36489001 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.398627487 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.519462402 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.566339275 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.565257125 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.707060958 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323865321 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.328994763 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.339181727 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.404418642 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323175497 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.335747125 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.327491543 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.918302762 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.084250306 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.929739768 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.567051946 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.333189456 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325021788 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3245458 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.566693407 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.324620577 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.601305126 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327206818 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.319322894 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351543345 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339581653 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334768361 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.540255152 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.600125354 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.325346681 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328399651 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330093427 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.32663298 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.57080253 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.543672707 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.791874951 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.84839557 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327195841 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.32748927 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.036830692 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.603252144 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325333309 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.327632414 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328411806 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.336823206 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.354558886 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.334535885 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326244596 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.556709644 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.565062615 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966387229 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.565900347 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.509952683 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.242574888 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328354653 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.579501303 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.162968675 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.5239484 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.936839689 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.021322667 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.583343011 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.40292659 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.526389154 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.333650766 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.56658816 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.330653669 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.333519847 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.331553815 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32897871 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.327901811 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.566420551 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.937081846 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.581236487 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.334988696 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.328955361 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363574221 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.526364167 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.556073806 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.03539026 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.548993526 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.572731508 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.343142751 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.329925219 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.9389568 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.57190074 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336531179 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.336162229 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.53893285 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.335278636 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.366582579 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.208800338 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.330052214 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.852379455 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.542354811 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.352361975 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340458617 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.03399431 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.942986365 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.343022108 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.804974677 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.333002817 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339175994 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.613359231 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.340230845 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.340460204 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.616635007 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.337064012 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.330897728 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.535097245 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.935779749 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.065740596 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.35133288 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355290636 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.355763537 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332629285 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32622334 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331922253 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.344251137 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.711800947 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.332772707 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332291269 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.346846373 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.338659699 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345698072 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.336974224 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333980471 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.341407345 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.330721328 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.311237694 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.34466086 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.456658061 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.864977562 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337034446 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.948752648 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.670454321 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.579892902 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.33990923 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.307267978 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.341086524 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335416927 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335278834 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335289021 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.324919329 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.860717552 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.342576488 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.580746606 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.347612761 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.545827988 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.544825492 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.339655358 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.541157506 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344412855 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.361455107 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.303922258 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335347379 seconds)
  done (took 952.568402687 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.364354324 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.342097099 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.336961875 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.382131623 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.32742717 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.325947326 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.329451289 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.388374196 seconds)
  done (took 20.008479765 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.326454701 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.333211611 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.327784175 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.335098742 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.33668147 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.852844078 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.336923962 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.333444744 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.347176904 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.333565539 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.345906817 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.979035669 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.339500821 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.327509898 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.33891754 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.341257172 seconds)
  done (took 31.747914945 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.015648676 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.337696276 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.814660133 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.34592078 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.347826593 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.32866531 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.450162875 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.327418771 seconds)
  done (took 25.18211903 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.341587423 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.340550389 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.342066833 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.341338368 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.340762767 seconds)
  done (took 7.919816294 seconds)
done (took 1208.272568946 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.343477892 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.344399835 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.344121516 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.343925353 seconds)
  done (took 6.589525356 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.308452368 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.307744432 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.308777313 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.324502942 seconds)
  done (took 9.463052079 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.986049413 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.840316668 seconds)
  done (took 5.040810914 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.88562597 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.886431607 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.880080172 seconds)
  done (took 6.865179916 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.621936155 seconds)
  done (took 2.835602446 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.328449095 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.333613181 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.070850898 seconds)
  done (took 7.947477869 seconds)
done (took 39.954260602 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.334525873 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.088526546 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.485828718 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.336180854 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.491285337 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.484136359 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.580182721 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.33199745 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.336357015 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.332504691 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.336887052 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.492086219 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.569026292 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.091345741 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.568103578 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.092653793 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.492847514 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.331414579 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.331021122 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.330046623 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.581528409 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.336288475 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.329305222 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.336922311 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.492792952 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.473848167 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.330180039 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.092285214 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.330055045 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.330927038 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.474406412 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.330502491 seconds)
  done (took 81.091680588 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.332758577 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.330511129 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.340756719 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.345098711 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.3312728 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.341160587 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.333481387 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.331168654 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.332885954 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.331749472 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.344453279 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.330227756 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.335810869 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.344974189 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.334809773 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.342645973 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.331776451 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.341473948 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.332206134 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.346401889 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.334417899 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.332931284 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.333388492 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.34000505 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.331141592 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.347155019 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.345832649 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.331768215 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.332856446 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.333277404 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.333837257 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.348046598 seconds)
  done (took 75.997160413 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.332393088 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.347853416 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.352943882 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.332883904 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.333857178 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.341157282 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.332204982 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.334250522 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.333359414 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.348510259 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.333628547 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.333569 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.333034147 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.349533563 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.336638037 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.348667997 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.33332761 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.353233433 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.343116807 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.334736002 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.337750963 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.346153836 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.344792961 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.333208028 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.36341342 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.335688653 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.334448145 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.348676798 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.334497364 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.349637877 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.341859578 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.347689978 seconds)
  done (took 76.12565983 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.575275498 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.350456766 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.352363813 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.345562465 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.353271829 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.351716788 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.345193006 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.58244248 seconds)
  done (took 14.476325933 seconds)
done (took 248.905738127 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.345865049 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.818089498 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.378485194 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.348984537 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.362500773 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.373091745 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.558348937 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.372860064 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.560954639 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.363382582 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.376062063 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.349237493 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.113555209 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.49304815 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.134177192 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.249440623 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.188181456 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.341652312 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.89962826 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.625475498 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.377285655 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.338844445 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.138383387 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.207425426 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.328911318 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.425112922 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.436479796 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.567030127 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.503015966 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.420660876 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.831497395 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.35284983 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.352530901 seconds)
  done (took 62.7542784 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.342369089 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.353874229 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.353390562 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.353402328 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.354592304 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.354132469 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.343430369 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.353915505 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.355397711 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.354589806 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.354091649 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.354233853 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.355011217 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.354603631 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.354074992 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.32783418 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.344318067 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.355386831 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.343892116 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.332026157 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.354630582 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.354188868 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.355719001 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.355582824 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.355876425 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.355713333 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.356128475 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.355126711 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.355542227 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.355637242 seconds)
  done (took 41.771129871 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.355917271 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.884055963 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.063298259 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.358894329 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.347096291 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.351185901 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.623649771 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.361903974 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.350826338 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.350527221 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.809581353 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.365231096 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.378266479 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.067111797 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.354536428 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.357730392 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.358406754 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.346738591 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.89203402 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.361481072 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.621572827 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.362366234 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.621904205 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.363858265 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.351836469 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.349425656 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.351713453 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.132305422 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.371113439 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.810107459 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.082721699 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.621976893 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.089024882 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.116011963 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.078726379 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.364213275 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.35840609 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.816621802 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.356638818 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.348463961 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.620189643 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.354040146 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.071212163 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.034938294 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.36572237 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.358774319 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.163363174 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.816681875 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.58628298 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.361591362 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.107068367 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.357625194 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.362940685 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.353195741 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.581210634 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.358802954 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.351257102 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.184986952 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.360435021 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.622719384 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.364946876 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.351329166 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.891420683 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.356875818 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.888043526 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.358321497 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.358949142 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.35213833 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.075730066 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.358993891 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.05008551 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.372620803 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.360944246 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.812380877 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.8923651 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.214906025 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.357716969 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.896304104 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.122212048 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.643009735 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.361501713 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.111699454 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.646469698 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.360229093 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.363019009 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.36475239 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.361141993 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.426656217 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.621929241 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.971984823 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.049715051 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.196312104 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.632119944 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.364939999 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.353606928 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.18952319 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.365948719 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.361482605 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.071357881 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.05652123 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.37428139 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.360985297 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.037058181 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.377517711 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.6286415 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.364754441 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.109870168 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.3603434 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.42800261 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.362993969 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.36044309 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.358408152 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.628304485 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.36335543 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.364192413 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.036487361 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.847399338 seconds)
  done (took 189.182099455 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.350689378 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.34847943 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.350534161 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.349936298 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.349202018 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.355772327 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.349566904 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.34892665 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.354080438 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.350240174 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.350177995 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.357896553 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.356654974 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.350349138 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.349761255 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.350434097 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.349945851 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.356870316 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.350361247 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.34999432 seconds)
  done (took 44.261690176 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.366338657 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.896529896 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.864028007 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.371101111 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.364420831 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.356158265 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.409583744 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.367141708 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.365076419 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.64458534 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.52649546 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.37129407 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.367064072 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.366175237 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.86016375 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.343949125 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.645445393 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.902478426 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.372365101 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.897858606 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.343798791 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.36715966 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.356089544 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.898170757 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.660184847 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.633775363 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.417772086 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.899269683 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.372415091 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.367260384 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.899672745 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.37247426 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.3584026 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.886086852 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.373901648 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.38412494 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.36763879 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.412967999 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.413322618 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.649416261 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.909375029 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.644941739 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.382927643 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.512939672 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.37261351 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.341159216 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.910791639 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.375831424 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.3407964 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.370171869 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.374303141 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.874624045 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.364783361 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.873976871 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.37399345 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.369050936 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.899793171 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.87937837 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.867947827 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.526817056 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.364279129 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.630937201 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.373771052 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.912001226 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.374466376 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.368909603 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.3698902 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.525346369 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.901557887 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.637444082 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.654859883 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.657153659 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.377168779 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.426554162 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.370842285 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.652051256 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.428552602 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.732144347 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.655632016 seconds)
  done (took 123.30663403 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.618316535 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.47168181 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.730125558 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.930321656 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.860940447 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.49726992 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.470994653 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.594812487 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.371083846 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.47711901 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.003655824 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.455679132 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.096077821 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.428088737 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.472547915 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.48500771 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.75330835 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.28895843 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.001887754 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.976682393 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.382266897 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.457105716 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.867437342 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.566574488 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.360552373 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.899114338 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.27003336 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.880752691 seconds)
  done (took 51.904576982 seconds)
done (took 514.400746738 seconds)
SAVING RESULT...
DONE!
