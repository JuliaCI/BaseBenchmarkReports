cset: moving following pidspec: 9633
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.392958082 seconds)
loading group "string"... done (took 0.491669276 seconds)
loading group "linalg"... done (took 8.342703074 seconds)
loading group "parallel"... done (took 0.170995124 seconds)
loading group "find"... done (took 2.976702355 seconds)
loading group "tuple"... done (took 1.82658643 seconds)
loading group "dates"... done (took 1.523481295 seconds)
loading group "micro"... done (took 0.194313876 seconds)
loading group "io"... done (took 0.521760977 seconds)
loading group "scalar"... done (took 48.900448911 seconds)
loading group "sparse"... done (took 13.361325969 seconds)
loading group "broadcast"... done (took 1.159331167 seconds)
loading group "union"... done (took 9.12050289 seconds)
loading group "simd"... done (took 2.964314984 seconds)
loading group "random"... done (took 11.119436867 seconds)
loading group "problem"... done (took 2.17898064 seconds)
loading group "array"... done (took 24.525465537 seconds)
loading group "misc"... done (took 1.089696639 seconds)
loading group "sort"... done (took 3.663279436 seconds)
loading group "collection"... done (took 18.876672705 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.60837407 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.128828242 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.204012424 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.281547406 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.230358497 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.168940143 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.143251301 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.227735125 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.559681767 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.200781929 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.13988879 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.419354964 seconds)
done (took 6.038772878 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.251784246 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.240516303 seconds)
    (2/2) benchmarking "String"...
    done (took 0.16284314 seconds)
  done (took 1.074911178 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.077719653 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.156876118 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.108322238 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.094744075 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094435075 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.109197519 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093506601 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.109023908 seconds)
  done (took 1.441710402 seconds)
done (took 3.520341871 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.494369333 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.861405285 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.482418405 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.143937342 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.311270796 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.291094262 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.268664706 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.200974128 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.092341184 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.089151991 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.172858206 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.38831979 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.38072246 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.929658239 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.090114046 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.096240342 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.130960169 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.746601031 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.079695315 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.121346816 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.488455722 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.187218933 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.099794938 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.12065438 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.186820651 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.132984954 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.160342431 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.102277686 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.657974579 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.131660203 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.17714017 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.098184605 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.158284144 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.183797799 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.193789208 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.110505504 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.674541903 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.201955572 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098585943 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.101230203 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.671692294 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.118166608 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.183985355 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.105014587 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.088957334 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.17812959 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.099409165 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.094875533 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.09698059 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.087887473 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.166664764 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.444350002 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.106900559 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.168906325 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.094938781 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.686850429 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.098609635 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.273524092 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.126440753 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.099186685 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.09249664 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.08904028 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.156335396 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.095800383 seconds)
  done (took 19.770865579 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.145752481 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.164498312 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.079630755 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.156481638 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.123776552 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.080480788 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.101892905 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.079674847 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.125196451 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.180035806 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.138785633 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.152990854 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.092642088 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.092313838 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.129083702 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.24929415 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.1095665 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.121207678 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.090247461 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.09098082 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.140013074 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.098291916 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107064873 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.09319085 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.169099735 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.20584493 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110389573 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123145363 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.089910217 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.09583264 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142678546 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.145694216 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.093541281 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.090357773 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.187044607 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.110150069 seconds)
  done (took 5.196906878 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.218134816 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.10579261 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.222730585 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.113879084 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.099948363 seconds)
    (6/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.195059672 seconds)
    (7/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.132763533 seconds)
    (8/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.183412019 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.150801631 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.269549309 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.211899047 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.163941526 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130258628 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.097105288 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097052879 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081797497 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.078944265 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.45595692 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.151662024 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.188975358 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.141382914 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117162402 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.09914051 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.362701028 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.10002408 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.087164258 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.093461526 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.079555253 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.196963882 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095620679 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.127137877 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.084802849 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.11698409 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115984453 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.206425829 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.125273993 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.121383396 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.111047267 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.085871851 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.225502898 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.115561472 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.080677277 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.115634978 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132884735 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.116352841 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.108182073 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.123572648 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.218702359 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.087300598 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.109487305 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.014357875 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.195040002 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.124415885 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.083738676 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.289049079 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.126094585 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098992326 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.107797066 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.773097209 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.127450444 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.081830801 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079007906 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.110784603 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.082770888 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.429018028 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.122408657 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.210501326 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083764683 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.155777412 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095025983 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.11623923 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.13509869 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103513303 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086298676 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.124401391 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.087346671 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.079387207 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.102995923 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.082375927 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.088823112 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.129023703 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.085870575 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080351829 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.161695821 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.099304452 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.123619182 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110075994 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.104523712 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.085373328 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128096574 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083054074 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.088422055 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.162069584 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.096548498 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.129785692 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.085330517 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111931494 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.141830882 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.088950689 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.222000291 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.096018968 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.122907742 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098375079 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11418164 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.115382347 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081725441 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085301775 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.096746593 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.082281822 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.14760531 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.099945667 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.082263537 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.087562441 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109575852 seconds)
  done (took 28.195332629 seconds)
done (took 53.834466367 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.429768234 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.080589389 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.080543307 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.097453236 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.080096168 seconds)
  done (took 1.516054348 seconds)
done (took 2.238389342 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.318452511 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.188306899 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.103294494 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.185144904 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08988392 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.19195319 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.177305636 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.095154659 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.202045686 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.084408881 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.182520427 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084051379 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.103552384 seconds)
  done (took 2.753074528 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.103289659 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.106341678 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.102081453 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.118194922 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086953208 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101162211 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118777475 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108057635 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100843295 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.111552244 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086711341 seconds)
  done (took 1.867692622 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.100754908 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.10343362 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.091955844 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.1157427 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087338661 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.09901382 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116859737 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105638288 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099004779 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.112275155 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086830645 seconds)
  done (took 1.845582062 seconds)
done (took 7.185155897 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.071681157 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.216982077 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.165930698 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.209733129 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.347670547 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.233577822 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.550958956 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.154617942 seconds)
  done (took 13.818268212 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.164723708 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.111055132 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.095736101 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.090973135 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.094846817 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.109740568 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.094987889 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.090183632 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.112121169 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.093947533 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.092698544 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.109615368 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.092367376 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.093655389 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.090286646 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.111727854 seconds)
  done (took 2.432995533 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.143586019 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.140399112 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.097939422 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.099697667 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.112090685 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.099118703 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.101265691 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.114165173 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.095387395 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.095308086 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.117423284 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.098179378 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.097542054 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.109070181 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.099634808 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.117595676 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.109856461 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.09883566 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.116352077 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.114505157 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.100408409 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096338614 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.112499405 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.098934944 seconds)
  done (took 3.396865001 seconds)
done (took 20.375010416 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.146304272 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.101019107 seconds)
  done (took 0.978450527 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.140298006 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.156662634 seconds)
  done (took 1.032990189 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.112140872 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.091255254 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.135692578 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.102832194 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.091604313 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.107152781 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.114677202 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.107207404 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.092231509 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.092344655 seconds)
  done (took 1.786678234 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.09491394 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094957008 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.12087387 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.134464852 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.115296333 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094005094 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.095441201 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.09340691 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.112274796 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.091461698 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.096073308 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.123915193 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.095724046 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.124989818 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.095883625 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.096600922 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.114450521 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.094889192 seconds)
  done (took 2.629019105 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.090355491 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.092824108 seconds)
  done (took 0.925133255 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.093376226 seconds)
    (2/7) benchmarking "second"...
    done (took 0.090462217 seconds)
    (3/7) benchmarking "month"...
    done (took 0.09298429 seconds)
    (4/7) benchmarking "year"...
    done (took 0.108285737 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.090749791 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.090165041 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.105178017 seconds)
  done (took 1.412441857 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.481598167 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.376144729 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.350636654 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.107452607 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.142545497 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.345079403 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.143400338 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.104732358 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.103135895 seconds)
  done (took 2.930456697 seconds)
done (took 12.432448833 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091062371 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.219570677 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.599958074 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.113068631 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.090324586 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.158253026 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.280567475 seconds)
done (took 2.298861753 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.334461092 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.141904352 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.080741811 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.092021688 seconds)
  done (took 1.387222708 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.08199369 seconds)
    (2/2) benchmarking "read"...
    done (took 0.100511361 seconds)
  done (took 0.928085718 seconds)
done (took 3.061986997 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089944162 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.12097241 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.106151555 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.090294005 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.087921891 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.087462679 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.105654372 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.089306716 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.088050521 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.105426928 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.088871494 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.089531607 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088365733 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103240527 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088534189 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088708211 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.103408452 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088658534 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.088763133 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088247477 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103983295 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.089845248 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.088608646 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.10385176 seconds)
  done (took 3.051849153 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.105983737 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.091379297 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.109859891 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.093814872 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.093534098 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.108158116 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.093842599 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.090744571 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.108503578 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.091523585 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093809938 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.108282073 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.09135357 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.094341714 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090130914 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.108908606 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.094422212 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090919824 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107187074 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.093386392 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.093463007 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107624247 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.094129424 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092466124 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.109226002 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093776417 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.090529267 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.107050538 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093887755 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.094152232 seconds)
  done (took 3.680453316 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.097870712 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.087088204 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.088505943 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.113037798 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.087632244 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.090560409 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.102654677 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.088310909 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.09078803 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.088271271 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.107281573 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.09135753 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.087133927 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.106790598 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.09223669 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.092589236 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.115038776 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.08808896 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.086625715 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.090412198 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.110451146 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.088352671 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.088561072 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.106528042 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.090992687 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.087659536 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.089606005 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.105757322 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.091076094 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.089758953 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.108671203 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.092306176 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.089453257 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.11386694 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.093798881 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.089553964 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.094323872 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.104049761 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.09083606 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.086422666 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.103087339 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.090104358 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.087189509 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.095327338 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.106104096 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.091229511 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.086875936 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.106953252 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.091425415 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.092904673 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.103354932 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.087925264 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.092260622 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.090533226 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.108909589 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.087546324 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.090801511 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.103127205 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.092077263 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.089634536 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.086450308 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.103290775 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.094502805 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.090688389 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.120972593 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.096482193 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.087940387 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.10822493 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.09188673 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.095236994 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.107865614 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.099734187 seconds)
  done (took 7.636305294 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.103431427 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.098895176 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.091023276 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.107478659 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09133866 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.090096567 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.110815551 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09087312 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09166847 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.112368509 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090745896 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.090921981 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10776761 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.092630204 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090780764 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.090951973 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.112018317 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091350628 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.090467701 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.107121615 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091883691 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.096010449 seconds)
  done (took 2.897911282 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.232215624 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097992925 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.137244132 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.119310868 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.110281693 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.119030766 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.095219716 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.096851589 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111374657 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100856986 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099678417 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111623213 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108895216 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11666457 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100604889 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.101344443 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109887476 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.100455935 seconds)
  done (took 2.827793275 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.103956831 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.093099759 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.127341733 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.094052917 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.092967258 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.095021119 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.115063549 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111001239 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.108730237 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.093148852 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.099107821 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108982307 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.094054903 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092964577 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092647581 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10984607 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.093878968 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092606381 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115957977 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097889433 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.097107705 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.116001376 seconds)
  done (took 3.005967191 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106059572 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.093238185 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.125946063 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.096348498 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.091692297 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.10881348 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.098326265 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.092709889 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.11608305 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.092922237 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092773713 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.092273779 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.123397405 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092894194 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.09736571 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109895294 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.093085802 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092234514 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108538031 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.092117098 seconds)
  done (took 2.774560117 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.168609999 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123631609 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.107909827 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114462466 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123934627 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.108255172 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115162201 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.125404244 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10763972 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.135439598 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108442027 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107796823 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.131636218 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112363022 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123751131 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116682445 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114548728 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.131796088 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10757902 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.123991332 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.119202379 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107964836 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.134501651 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108477873 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.10641264 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.124276923 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108481617 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.128471375 seconds)
  done (took 4.108414831 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091822365 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.091409927 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.089464966 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.107842875 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.09104812 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.090883092 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.090302482 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.107741451 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092190793 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.091050803 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.107454311 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.09145545 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.090492698 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.090718059 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.107794989 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.091323553 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09078347 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.107792952 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091874823 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090779829 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.090707091 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107650686 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.091774973 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090793147 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106837765 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.092023272 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090621501 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.089725837 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107825893 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091783996 seconds)
  done (took 3.624789182 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.103889501 seconds)
    (2/2) benchmarking "in"...
    done (took 0.100905417 seconds)
  done (took 0.970044429 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.099029722 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105034724 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.09122496 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.108753023 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.09879042 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.09298599 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.115918217 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097719704 seconds)
  done (took 1.575885147 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.14123661 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.159323191 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.096441689 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.104582768 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.161059807 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.150264657 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132198001 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.095957453 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.108073054 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.086320468 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.152616738 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084893135 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.092745254 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089018841 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.111821493 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.099620227 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.091025953 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.118119896 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.098337978 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.094130386 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112812218 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097905497 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.093255106 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.120096497 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.087524608 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.09354817 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.113166796 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.103736508 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089115192 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.111201006 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090696473 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.091624783 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.112098499 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.096451298 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.092055074 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.160458237 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098888311 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.105493309 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.09371963 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09631852 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.141561847 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.09383265 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.092888495 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.106800879 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096579904 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.095344336 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.11404389 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094165293 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.084679434 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.104072173 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094331173 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087746442 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.092963012 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109615044 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.093362298 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098546227 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.110744406 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.089313229 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087356309 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.105228323 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091473579 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.088272763 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112564401 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.097191764 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092212311 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.112236862 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091869753 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.092415735 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.111703778 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.09387445 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.091274818 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.12350632 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.09398886 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.096189124 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.11448273 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.094368384 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089685927 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.113574976 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091741546 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.094395671 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.111867372 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.122394604 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095239234 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104310014 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.089802142 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.099693456 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.110275403 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.096802786 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.085779534 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117265409 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.095750571 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.094140618 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.086202668 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.107867957 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088468634 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.094666948 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.103049545 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.095245942 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.091094469 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.113882254 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099398946 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.091266994 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.112421776 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09859871 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.097585901 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.108444272 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.138558345 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088499626 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.106161912 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.095671852 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.096662099 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.103935259 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.093219297 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.091563936 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107227162 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.089089039 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.096668173 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.108928609 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.09442074 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.09710903 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110946813 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.095444802 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.095682886 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.091787611 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.107552791 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.097274597 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100527193 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.113232196 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.095817669 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.093468864 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.111141946 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.093913838 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.096745066 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.107639638 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098821477 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089888343 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.110725469 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.094951318 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.098727934 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.111027801 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.090183765 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.092015965 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.110926142 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.094213429 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.09616054 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.111005379 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.090107456 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.085934493 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.093796903 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.10709632 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.094731552 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101379556 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.107644526 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.096414656 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.089623306 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.119422747 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.0909039 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.097304578 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.113725251 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.099711434 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.098168463 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.10254758 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.092150015 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.095295617 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.111827832 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.09108459 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.096517141 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.092186683 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.117695659 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.088274549 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.096344485 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.104655885 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.091518113 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.098954574 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.114304428 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.098265403 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.088821173 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.151037329 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.108411115 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099001751 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.11020532 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.093521336 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.096284734 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.109968202 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.098146128 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.098226917 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.114581416 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.091804321 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.092851303 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099014747 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.108846276 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.097072967 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09079524 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112615911 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.086351175 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.094615465 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.103966789 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.097842716 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.095017613 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.115946746 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.099132262 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095356414 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.110660477 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102765507 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.091185404 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.114126019 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.087323594 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.098427958 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.103413055 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.118056013 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100049467 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095064403 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.11040824 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.095239044 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102396268 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.114510013 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.095854376 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.095026577 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.10516912 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.088650108 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.098690661 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.114402098 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.091252531 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.094572242 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09500574 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.124675943 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.09207012 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.086076639 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.117652604 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097809874 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.089842099 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113149684 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.090716759 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.092449513 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.121015536 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.086736453 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.089950727 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.114477423 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.099535829 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.093628075 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.111635262 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.097494141 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.099489957 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.114659153 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.098524892 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091752161 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.119337224 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.093533426 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.094909027 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.090273323 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.115580076 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.097997133 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.095655415 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.113050265 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.093046054 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.090591318 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115967599 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103483749 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.10041495 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110415587 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.100026947 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.099528399 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.118033761 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093680077 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.099447522 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.106706402 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.089061786 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.09059396 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.086698998 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.113722274 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.091003169 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.098619879 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.110326066 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094152379 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.097990916 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.114747408 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.092817218 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.099864576 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.122416393 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.089860241 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.087678046 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110778517 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094840182 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.090893705 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.109182097 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096617881 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096688337 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.115924346 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.097887355 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.091310811 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.112865136 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.101601949 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.090953292 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.101183875 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.118399376 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.101435993 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.090106956 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.11726387 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.091741958 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098809465 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.107033945 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.09508886 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093553994 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113051204 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.092321242 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.093229454 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.109200732 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.089204447 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.091505279 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.117749735 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.09439059 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.098322601 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.111511706 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.09558536 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.09095568 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10814108 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.101023157 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.093754886 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.100284415 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.114446291 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.089374545 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.087859077 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.118316192 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095750237 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.100028667 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.108683977 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.09897691 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100918663 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.117271291 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.097491002 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.104593231 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102719113 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.119892216 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.101974647 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.087430547 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.111687039 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099444269 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.094749294 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.116338131 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.097935337 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.088469545 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.116148934 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.102338423 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.095110834 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.111660488 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.089663093 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.095281605 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.119277734 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.098877932 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.099249901 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.096202089 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.114234929 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.090778047 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098606763 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.119304258 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.095993616 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101029247 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113063618 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.100713923 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.091286743 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.119765852 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.096380817 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.090037658 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.088116296 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.113011362 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.101604236 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.088317117 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.117918282 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.100253085 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.091304142 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.11261047 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.100279902 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.091678514 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.116573544 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100900066 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.092395544 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.122802184 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.097956876 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.09310495 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.100486453 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.120048517 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.08977753 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.093575066 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.112963993 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103514563 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.093369434 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.118797613 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096491663 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100149956 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.116238636 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.101111694 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.100239695 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.118211535 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.089598184 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.101924914 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.117541569 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.098713412 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.092977733 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092922309 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.109629471 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.095928802 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.100119581 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.111385567 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104327121 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.101241761 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.111884361 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.094210436 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.100804517 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112383818 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10345357 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.092884792 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.11557348 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.08974208 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.097206902 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.113070348 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.103510256 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.092582277 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.108603 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101175829 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.100203147 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098872867 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.117023573 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.103081674 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.088440218 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.109757462 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.099734412 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.092818976 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.123928523 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.098724883 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.093595323 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112468209 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.099296877 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.096427485 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.119927937 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.09148542 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.092908776 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.095712673 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.115984977 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.094378532 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.089760141 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.118345137 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.094991591 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.0958412 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.113480182 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.090373665 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.093712669 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.120973911 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.09519579 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.09110627 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.112947101 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103970146 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.094223855 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.111735604 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.090363511 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101119561 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.116258378 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103106759 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.091901318 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.114767165 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.095476364 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.098414761 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.122195912 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.095182955 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096954457 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.093139726 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.120404702 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101456824 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.087636784 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.112458745 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106013348 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100188043 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.116136457 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.099486481 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.093593124 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.120810585 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102934079 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.098660305 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.107571053 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.093068172 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.094478359 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.107753716 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.099875069 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101662535 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.112666837 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.095035928 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100520928 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098803661 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.11790663 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.100883574 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.08951256 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.121206293 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.094446038 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.097949706 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.108291879 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.09140101 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.098024769 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101279608 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.114111667 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.097712534 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.096319782 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.118027735 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.092777085 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.093062071 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.118369525 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.1017092 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101585482 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114754003 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.096565036 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.098319398 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.123806724 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.09770178 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.095209926 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121168408 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.102636027 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096561956 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.113435619 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.100658514 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.101168311 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.097440802 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.122310041 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.093925398 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.094516076 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.121206982 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.102772922 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.104249726 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.114127015 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.090362085 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.09921527 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.112814264 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.091269306 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.099630838 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.12162187 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.102404583 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.095098998 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.112184732 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105974843 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100448459 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.115443552 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.095033086 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.094173162 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.118713074 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.09544984 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.099789755 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.111307836 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.10429054 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.102432552 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100532945 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.124267452 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.090696418 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100083675 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.117958022 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.104378333 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.09673204 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.110400635 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.091837327 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.09870323 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.122125351 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.103672802 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.100136309 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.099016672 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.119052681 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.098630417 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095400931 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.112998481 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.104239263 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.100785309 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.116707439 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.099580297 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.095155139 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.117248417 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.098667126 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.101313696 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.121845707 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.09877449 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106351027 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.122021656 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.096833633 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.093790278 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.096294292 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.120075936 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.098320412 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099959479 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.112944348 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.091224366 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102024445 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.122161797 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096545633 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103946581 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.121548153 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.096021814 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.099806877 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.122833285 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.102375328 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099107652 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.096873482 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.118910745 seconds)
  done (took 61.767298046 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.144336697 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104508302 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.117865518 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099217932 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115019949 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119320683 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098669351 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099635969 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.119353592 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108714854 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.098189918 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118233418 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114639898 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.11840845 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.135866271 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107147202 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117849055 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101515734 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099249757 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118975669 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114112259 seconds)
  done (took 3.189575703 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.11623548 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.11091931 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.129190875 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.112566354 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104652735 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.12987222 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.110586886 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.130235768 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.112726903 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106048535 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.132159912 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109400029 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.127196105 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.10817597 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106336303 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.126792852 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.114098234 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104874507 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.130492771 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.109131989 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.12840479 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.111474492 seconds)
  done (took 3.390590677 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.129305203 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102144065 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.095675959 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.119173021 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.102328733 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.097782045 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.1213764 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.100080205 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.106621939 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.093673329 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.110626228 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.09442588 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.097167238 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.118668839 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.094215924 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.098838431 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.1262164 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.103212133 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104544551 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.098200764 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.110416807 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.099366193 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.098288718 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.110519286 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.105531597 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103348417 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.119232479 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103301757 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.090063657 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.101190302 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.120551773 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.093260178 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.090005486 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.109684932 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.091532412 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.101278279 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.100858568 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.12039545 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.100842307 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.089759744 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.120377209 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.10389755 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.090311052 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.099163175 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.11974536 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.093820491 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.101217202 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.119876759 seconds)
  done (took 5.844698754 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.126567304 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.164411801 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.102840044 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.135988465 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.135244805 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.10905208 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.12316743 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.136994318 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.100002517 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.123397093 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.115432559 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.133944509 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104906098 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.106418012 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.102040649 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.125226799 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104897032 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.342385538 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.128562073 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102818347 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.127694796 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.105812895 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.111347583 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.132598899 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.10612811 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102306285 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.123752559 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.106846539 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.112093816 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.12829897 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.107102821 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.105739534 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.133345978 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.102569725 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.122376923 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.10514904 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.113204761 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.124438265 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.105252185 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.099989157 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.123555907 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108029448 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.104128659 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.133109783 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.105300831 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.103320877 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.124406658 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101299716 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.110524664 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.123567493 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.108419829 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.132305273 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.106400437 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.10337199 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.124845097 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.114457478 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.105158459 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.122542487 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.106005829 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.110276606 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.121295747 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106376968 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.11203044 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.123760466 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.108056079 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.13230227 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.106264244 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.104333653 seconds)
  done (took 9.021259413 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.132771033 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.105381188 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.134413572 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113993763 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105652152 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.12767063 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10631453 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.105095796 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.126691228 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111136002 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126109569 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.196672014 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.124191562 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.110483694 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.106320834 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.12858753 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.107269225 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.105347646 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.128053601 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105941874 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.10537251 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.135176354 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.105680438 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.133355539 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.11850336 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.10307068 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.127616304 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.107059007 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.133914852 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.108444917 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.116490436 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.126831306 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.107558272 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.113863606 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.138016119 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.10690422 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.12148791 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.107829432 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.106776811 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.126758277 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.10440249 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114440985 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.128173882 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.104243546 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106038734 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.128187972 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.114811623 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.137579253 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112052543 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.112140385 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.128364425 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.11554087 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.105863926 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.127469127 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.11459695 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.14020191 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115293762 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.13336798 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108154108 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.116054922 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.136217195 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.121938367 seconds)
  done (took 8.2172164 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101181569 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101191455 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.099569063 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.120440578 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.100582624 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.100086002 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.099412061 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.121533821 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.0996568 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.099100244 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120670294 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101234012 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099488408 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099757552 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.121466581 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100589219 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099673039 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.121210911 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100546889 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099718925 seconds)
  done (took 2.944379412 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.110343872 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.116112846 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.122296119 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.109424403 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.10185697 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.127970338 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.104529325 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102470353 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102328378 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.125688637 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110534257 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.1306253 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103740573 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107799345 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.129859528 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107927018 seconds)
  done (took 2.652479267 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.120439397 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117378407 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.186727411 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.104134414 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.123009215 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.109451716 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.101107492 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.125371394 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.102893872 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.106701137 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.105278001 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.126299043 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.102319339 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.10343403 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.125020223 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.10630771 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100200785 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.126968443 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.102841594 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.186092533 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.106667178 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103451818 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.123950426 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.106170781 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.103899342 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.128264426 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.10906256 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102797706 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.124964239 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105411079 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.104324537 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.129741906 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.103983751 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.106856545 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103097486 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.124512257 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104345294 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.103432249 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.125971523 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.102353287 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.105141512 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.124441187 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.103372238 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.104497126 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.122191334 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.104651899 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101085705 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.127069718 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.105148589 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.104625991 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.101554147 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.131845397 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107095149 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.1094333 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.13056559 seconds)
  done (took 7.12967435 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.113700144 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103901908 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.133935609 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101431208 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103351534 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.103029007 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.125301479 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.104438031 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103490582 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.12247596 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.104981796 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.104749321 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.124447194 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10476403 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.103458544 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.124751501 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.101813981 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.103533075 seconds)
  done (took 2.828378616 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.107663255 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.102318663 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.106213399 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.123334743 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.102200339 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102945229 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.122564475 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.101761694 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101499949 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.12404358 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104181963 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.102308437 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100902253 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.123654814 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103215181 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101364101 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.124865504 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10217655 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.101977369 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.121407918 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.104568812 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102331158 seconds)
  done (took 3.233420282 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.113746714 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.183128194 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.10784627 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.191325836 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.099037749 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.097549252 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.129454877 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.099039609 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.113143015 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.121422107 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.098056897 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.097501068 seconds)
  done (took 2.298787067 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129576601 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139289126 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.124406429 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105117493 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111329114 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129624288 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107848818 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106524082 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136430056 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118064034 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127698873 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114704494 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113133717 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137151558 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110531275 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132461197 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108347944 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106850889 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123736732 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122164334 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106115556 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135170084 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107643794 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127609139 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108625326 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114246972 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13589846 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119127164 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107153272 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135753909 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111909751 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129128857 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115877345 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117360674 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125800281 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11447326 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128540874 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122452559 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110985723 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137310467 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103606084 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110571804 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137025495 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111861489 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136960502 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107737231 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11137092 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128930912 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107679303 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.149037623 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112218509 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115301555 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132292714 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114736901 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136386833 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127307004 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139244208 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114892539 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111776671 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140838487 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115848761 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132794641 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116068637 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139939864 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113453262 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11438664 seconds)
  done (took 8.849142923 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14507443 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104665713 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129731241 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119703348 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136454429 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108867599 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108044849 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129879913 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109804228 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105490788 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.171549527 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109555851 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13661682 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117977962 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10789757 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128466531 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109913545 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115551444 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126527846 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128177683 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128324073 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116329735 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115551492 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137010541 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118321957 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133874125 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108607637 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107930716 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130696403 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108578006 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112345061 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131060246 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116158326 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.125970592 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117135705 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107489404 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129981679 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113682876 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107942195 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135044858 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116671517 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.144190881 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108723142 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10857726 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141355583 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109232107 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108370592 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12649259 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108846948 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104075423 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140934817 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118997794 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141511213 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117090303 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129843451 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109807453 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108100899 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130116165 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109394139 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112247727 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137607712 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109728527 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.150559291 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109298327 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108548123 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138782704 seconds)
  done (took 8.856986173 seconds)
done (took 167.12419979 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.148829341 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.184634957 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.144803437 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.17837747 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.094767624 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.128381553 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.147944723 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.147130517 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.092568154 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.116853343 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.094770313 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.095667275 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.184246619 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.094768263 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.094537867 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.117900217 seconds)
  done (took 2.915401256 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.192098573 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.306013152 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108929046 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.120940843 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101864664 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.09913894 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.119270519 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.103272926 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.098694121 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.126919655 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.099990598 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.094639876 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.127729701 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096743045 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.098951763 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.120096225 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106847299 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.098545125 seconds)
  done (took 3.079654769 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.11934603 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.143250394 seconds)
  done (took 1.125499454 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.129108071 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.211220245 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.279008098 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.167592549 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.119776493 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.138084088 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.14750497 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.133853021 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.18926142 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.134084773 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.112567124 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096999986 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.147979767 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.104364766 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.136683819 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.09822197 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.126955945 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.135383963 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.11415959 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.100778487 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.14386094 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.103658686 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.103867397 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.136202131 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.178409557 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.134051881 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.104279245 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.101878432 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.123694027 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.113579701 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.104180871 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.137793611 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.110993158 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.176433821 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102458897 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.1745233 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.127351647 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.100596625 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114656565 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.120966483 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.104056439 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.102910718 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.135019329 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.098758235 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.102577618 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.12846514 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.103524305 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.102388307 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.130412501 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.106918624 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.128325061 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.107516714 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.17134114 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.108071393 seconds)
  done (took 7.828217397 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.854867511 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.140466126 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099620026 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.99420269 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.149287118 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114893205 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.846804048 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.145847759 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.251248375 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.877545373 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116680844 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.113011919 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.25475057 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.258584685 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.283925108 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.35370544 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.691198889 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.136320259 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.129298864 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.162049732 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108024129 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.147853109 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120542344 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.51739269 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100841707 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098916264 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.130589558 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.112942525 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.176569777 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.101502717 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.125832176 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.193582184 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.269450567 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.204981538 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122476799 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.100704885 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099264411 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.184056475 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267008654 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215152352 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.193928403 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098349807 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.100543087 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.131295513 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119735617 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.096981608 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.179008597 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.190906375 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.1897781 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.105056714 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.136337928 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.112281073 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.107414602 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.175815711 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.120033243 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.354858759 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.356701241 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.100230124 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131210428 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.117430953 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26373019 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.101609385 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.252235127 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129381331 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.211423964 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.099731266 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.826302916 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.184405204 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.099634695 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.131471252 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.106945585 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128381605 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.110354764 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.188003775 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.475301041 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.134262181 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.10674422 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09934701 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.229611703 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.122454515 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101898941 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.178441914 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.102316525 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.107854414 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.137425816 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.112750332 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.187348976 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.269627484 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.114197225 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.130820686 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.107068726 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.113098228 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.123857304 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.208559087 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.244821413 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.151141241 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.227916613 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.131450783 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.157517182 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.184536239 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107260406 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.188106458 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.129620844 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.117920258 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128366483 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.22007963 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.134524108 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.127093461 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108365695 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.110487382 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.158635331 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104612925 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.130682923 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.164288347 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.551339648 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.183764705 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.099668004 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127752023 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.112539078 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.177799501 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110204012 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.259810259 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109129863 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.184811575 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.128801213 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.100139167 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.109296196 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.180269391 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.111098354 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.132803548 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109245235 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.131988399 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.254903946 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.218975223 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.138208336 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.248975183 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.19703564 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.110705052 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.190591218 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.110794808 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.186399208 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.111846642 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.131693964 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103297188 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.816602994 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.113548542 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.131614885 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.107012198 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.205591874 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.101772638 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103271939 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.123146497 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.099570672 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.811017618 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.104287593 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.120645464 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.105093752 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.108658186 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.131385346 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.110010965 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.1075615 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.17876912 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.239454622 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.137254387 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.108009504 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.122410277 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.155677738 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.125243537 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.103086541 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.101193093 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.123235196 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.112390159 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.105789013 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.12572044 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167864624 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.175270096 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.224124694 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.64859073 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.125611996 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.102927038 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.236777386 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100545972 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.343108801 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.111834759 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.229823533 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.183549419 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098957915 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.354763509 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.185951595 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.20643483 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.106280892 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.190227146 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.099615491 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.109074019 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.178981857 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.12326796 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.111244807 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.175300051 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.117196278 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.135458499 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.274404723 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.102237024 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.250765358 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.099295079 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.188843883 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.103527541 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.130392084 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.322881971 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101903513 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.140486338 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.156924388 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.128995666 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.103226294 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.627152033 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.102999179 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.135278227 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111421798 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.231546576 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.182318687 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.110042677 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.133825277 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.116134005 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.179138312 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.22839449 seconds)
  done (took 47.561059853 seconds)
done (took 63.364899004 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.26335261 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.175430427 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.280286863 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.175834538 seconds)
  done (took 1.851197641 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.239732389 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.16174295 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.199608792 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.120255302 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.204919128 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.121875667 seconds)
  done (took 1.935403966 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.172605511 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.167581019 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.144605347 seconds)
  done (took 1.374146138 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.199407591 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.214460145 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.323595692 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.252436007 seconds)
  done (took 1.963260879 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.260091613 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.116061166 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.124244665 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.20518829 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.217558751 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.197164521 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.122185801 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.169986459 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.129719127 seconds)
  done (took 2.468882489 seconds)
done (took 10.479220736 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.245554904 seconds)
    (2/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.330905306 seconds)
    (3/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.295171444 seconds)
    (4/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.144731857 seconds)
    (5/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.262907212 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.139132154 seconds)
    (7/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.109093478 seconds)
    (8/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.208022195 seconds)
    (9/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.111798486 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.111815088 seconds)
    (11/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.298046243 seconds)
    (12/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.308327633 seconds)
    (13/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.121621492 seconds)
    (14/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.197021722 seconds)
    (15/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.334876876 seconds)
    (16/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.108706947 seconds)
    (17/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.198873586 seconds)
    (18/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.338080163 seconds)
    (19/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.127982664 seconds)
    (20/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.161308232 seconds)
    (21/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.165247362 seconds)
    (22/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.291262551 seconds)
    (23/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.129392364 seconds)
    (24/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.139671268 seconds)
    (25/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.127216887 seconds)
    (26/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.251617972 seconds)
    (27/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.188278536 seconds)
    (28/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.202830378 seconds)
    (29/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.290342585 seconds)
    (30/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.13028736 seconds)
    (31/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.26940418 seconds)
    (32/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.112748368 seconds)
    (33/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.105117511 seconds)
    (34/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.135910989 seconds)
    (35/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.180100631 seconds)
    (36/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.11709597 seconds)
    (37/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.117884197 seconds)
    (38/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.083226455 seconds)
    (39/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.121524828 seconds)
    (40/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.101845379 seconds)
    (41/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.349921418 seconds)
    (42/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.101921489 seconds)
    (43/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.177917737 seconds)
    (44/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.209194196 seconds)
    (45/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.076815515 seconds)
    (46/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.101120249 seconds)
    (47/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.125435134 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.104574518 seconds)
    (49/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.099617861 seconds)
    (50/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.191687338 seconds)
    (51/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.15805109 seconds)
    (52/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.289351526 seconds)
    (53/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.100456737 seconds)
    (54/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.268272928 seconds)
    (55/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.146764412 seconds)
    (56/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.130387402 seconds)
    (57/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.102838595 seconds)
    (58/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.135526248 seconds)
    (59/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.213442444 seconds)
    (60/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.122743495 seconds)
    (61/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.108070716 seconds)
    (62/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.127031684 seconds)
    (63/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.077903693 seconds)
    (64/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.170027996 seconds)
    (65/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.158270433 seconds)
    (66/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.076158568 seconds)
    (67/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.168241009 seconds)
    (68/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.077411125 seconds)
    (69/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.106191761 seconds)
    (70/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.124177793 seconds)
    (71/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.164345049 seconds)
    (72/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.145655337 seconds)
    (73/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.126545164 seconds)
    (74/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.120719666 seconds)
    (75/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.101175023 seconds)
    (76/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.10767987 seconds)
    (77/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.079928286 seconds)
    (78/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.121651526 seconds)
    (79/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.100623835 seconds)
    (80/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.076815868 seconds)
    (81/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.110450834 seconds)
    (82/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.083638128 seconds)
    (83/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.159831488 seconds)
    (84/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.213990119 seconds)
    (85/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.12310546 seconds)
    (86/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.111248467 seconds)
    (87/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.078287465 seconds)
    (88/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.077012007 seconds)
    (89/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.125019343 seconds)
    (90/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.251917778 seconds)
    (91/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.149401835 seconds)
    (92/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.08450331 seconds)
    (93/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.083018251 seconds)
    (94/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.101490089 seconds)
    (95/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.081806243 seconds)
    (96/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.10480667 seconds)
    (97/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.104967532 seconds)
    (98/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.141094174 seconds)
    (99/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.131585566 seconds)
    (100/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.128527976 seconds)
    (101/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.076977729 seconds)
    (102/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.082249219 seconds)
    (103/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.139963408 seconds)
    (104/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.111152588 seconds)
    (105/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.076438911 seconds)
    (106/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.076592736 seconds)
    (107/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.150815674 seconds)
    (108/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.107160627 seconds)
    (109/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.099754168 seconds)
    (110/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.152745616 seconds)
    (111/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.083761257 seconds)
    (112/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.10966816 seconds)
    (113/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.083420838 seconds)
    (114/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.159016005 seconds)
    (115/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.192852455 seconds)
    (116/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.076352884 seconds)
    (117/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.195442409 seconds)
    (118/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.080412838 seconds)
    (119/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.10151318 seconds)
    (120/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.133867367 seconds)
    (121/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.083551684 seconds)
    (122/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.079908084 seconds)
    (123/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.20862227 seconds)
    (124/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.175390031 seconds)
    (125/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.082741159 seconds)
    (126/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.136594899 seconds)
    (127/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.08451173 seconds)
    (128/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.123568188 seconds)
    (129/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.121971149 seconds)
    (130/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.108079962 seconds)
    (131/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.10825043 seconds)
    (132/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.101823195 seconds)
    (133/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.082171531 seconds)
    (134/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.102893508 seconds)
    (135/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.111756893 seconds)
    (136/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.077905919 seconds)
    (137/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.108687371 seconds)
    (138/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.106661745 seconds)
    (139/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.120529588 seconds)
    (140/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.077114091 seconds)
    (141/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.122948478 seconds)
    (142/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.105928216 seconds)
    (143/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.07837707 seconds)
    (144/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.102831052 seconds)
    (145/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.107196841 seconds)
    (146/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.112601434 seconds)
    (147/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.080918047 seconds)
    (148/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.150562654 seconds)
    (149/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.10424608 seconds)
    (150/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.11412721 seconds)
    (151/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.084209066 seconds)
    (152/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.08399339 seconds)
    (153/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.133167321 seconds)
    (154/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.084603019 seconds)
    (155/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.102827771 seconds)
    (156/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.134782632 seconds)
    (157/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.113350816 seconds)
    (158/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.09955102 seconds)
    (159/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.080290627 seconds)
    (160/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.104141569 seconds)
    (161/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.123588083 seconds)
    (162/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.079480704 seconds)
    (163/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.10901864 seconds)
    (164/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.15371082 seconds)
    (165/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.082824658 seconds)
    (166/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.122394663 seconds)
    (167/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.080119668 seconds)
    (168/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.151528087 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.103395454 seconds)
    (170/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.076291264 seconds)
    (171/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.102223895 seconds)
    (172/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.105021268 seconds)
    (173/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.103047612 seconds)
    (174/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.081984922 seconds)
    (175/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.100722568 seconds)
    (176/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.110389528 seconds)
    (177/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.102500589 seconds)
    (178/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.108317262 seconds)
    (179/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.108114522 seconds)
    (180/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.078427313 seconds)
    (181/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.103078797 seconds)
    (182/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.079939648 seconds)
    (183/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.145896769 seconds)
    (184/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.081696252 seconds)
    (185/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.080468624 seconds)
    (186/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.079735589 seconds)
    (187/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.106907717 seconds)
    (188/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.084497418 seconds)
    (189/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.079071575 seconds)
    (190/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.081068806 seconds)
    (191/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.082338465 seconds)
    (192/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.124477959 seconds)
  done (took 26.331644468 seconds)
done (took 27.224096718 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.203578969 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.124617498 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.110066887 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.110046233 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.199639948 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.116482575 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.123788672 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.137477308 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.122074964 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.10880054 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.125112462 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.122400637 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.108516973 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.201677404 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.111505523 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.126728855 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.101838888 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.121097814 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.14971476 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.126365756 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.199111771 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104544356 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.119349453 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.125874337 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.177631211 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.126737392 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.11082428 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.11074687 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.146737448 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.112740623 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.110674969 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.12450654 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.127460062 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.12549762 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.124566636 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.113804357 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10204876 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.083700841 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.135390643 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112719367 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.123520441 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.134382218 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112005754 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.102623814 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.135223948 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.111432874 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102586792 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.13606141 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.101624713 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.111021091 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.127098411 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.128796509 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.110201819 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.099487557 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.125114033 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.103441144 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.121269059 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.12759166 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124802911 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.102112389 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.126060589 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103987118 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.112458409 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.125336746 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.11258864 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.101973101 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.136980787 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.11497267 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.111633675 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.104395426 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.127065128 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.112281757 seconds)
done (took 9.798355204 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.107492477 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.14619469 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.199819005 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.21066087 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.129678714 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.115654075 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.142690534 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.126187212 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.138731833 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.121740327 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.138889426 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.158641065 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.18224872 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.143323955 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.117393102 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.113899807 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.13910101 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.111911587 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.206955273 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.127802563 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.151916374 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.119467836 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.129167937 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.143507692 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.108049172 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.135312535 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.13460242 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.115156497 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.105415948 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.138659635 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.127248481 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.105293102 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.133971351 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.125610856 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.122922963 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.141439305 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.117121642 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.138427117 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.107593777 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.106525169 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.137482995 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.123262891 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.107275213 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.141980811 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.115436874 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.121105705 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.137653663 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120539168 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.108338208 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.137396844 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.109818675 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.131035092 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.142753132 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.124571427 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.118074423 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.143022988 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120124586 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.118820498 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.134421174 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.120207459 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.10656655 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.129951063 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.10981492 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.127345734 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.134426374 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.120431719 seconds)
  done (took 9.552456137 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.126716963 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.134900384 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.14078262 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.118966651 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110470516 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.124465969 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.102042525 seconds)
  done (took 1.798025695 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.103031879 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.184750938 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.208439351 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.208758182 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.180820126 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.217969502 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.150608824 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.10391217 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.135909187 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.13739481 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.184687295 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.237726466 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.111636416 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.142986152 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.186387434 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.127586523 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.187989625 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.12801757 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117520074 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.211605627 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121427895 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.131655981 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.140053409 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.102984103 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.205350692 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.104346166 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.255000716 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.118723569 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.137055337 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.116729423 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115854817 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.204095793 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.205637511 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.116930344 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.110307384 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.208925096 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.2036337 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116807672 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.219687743 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.106794256 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.205755581 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.116910241 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.11728767 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.141173306 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.11782419 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.193739444 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.122163508 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.117475111 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.139960785 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.19006932 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.136574731 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.183826646 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.138319313 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118776938 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.113458321 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.142670056 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124822429 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.118185736 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.215267709 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.119710705 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.210288045 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.207763381 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.182692271 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.210168152 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125356728 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.211249774 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.200618552 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.116781425 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.110746196 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.14220397 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.186727141 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.141045566 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115305641 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.19970655 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119880658 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.210979058 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.185876429 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.139090003 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.116881587 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.107079503 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.140279633 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.104411103 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.201147682 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118981385 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115191372 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.145896433 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116332146 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.117753658 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.131683162 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.127038403 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.116172686 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.138760594 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.122074908 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.116273073 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.14418423 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.187805698 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.13939741 seconds)
  done (took 15.652914686 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.105815963 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.104701955 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.108410509 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.130273289 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.105023306 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.104527474 seconds)
  done (took 1.618425585 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.139776723 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117974394 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.150127148 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.118588282 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.160407338 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.215069628 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.218504035 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.111398733 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.157058417 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127105503 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.215187778 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.192417882 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.216572902 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120023248 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.219954203 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.119248071 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.221127499 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.11523371 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.150956848 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116068563 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.116680582 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.146448893 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115477575 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.207538926 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118224493 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.118335384 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.137786508 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.125852496 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.150233382 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.11374667 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.120211792 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.14377176 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.111297493 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.111877029 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.221795567 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.109569531 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.140043942 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.14229217 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.120806734 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.145653671 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.194746337 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.142612991 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.124114472 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.145233285 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.11350651 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.110200008 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.146891809 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.111808431 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.222055383 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.121247499 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120153074 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.145639076 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119669778 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.120152383 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.13728373 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114179714 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.120017017 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.220991263 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.14534856 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.113348117 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118415015 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.144381907 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.113640683 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.12208085 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.144007048 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.12115904 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.110512998 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.144356315 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11688005 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.118878607 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.146968574 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.118835254 seconds)
  done (took 11.191638057 seconds)
done (took 40.745806557 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.626923384 seconds)
  done (took 2.583471326 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.877759054 seconds)
  done (took 1.834005161 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.57255968 seconds)
  done (took 18.560731441 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.420442658 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.461700268 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.119051202 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.148294081 seconds)
  done (took 3.106351201 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.812939577 seconds)
  done (took 1.790537244 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.280119515 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.258920184 seconds)
  done (took 1.500459161 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.705188475 seconds)
  done (took 1.67772033 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.494931695 seconds)
  done (took 2.454903264 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.281941394 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.239045022 seconds)
  done (took 1.495242912 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.602978071 seconds)
  done (took 1.577975855 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.762014735 seconds)
  done (took 20.738401812 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.254182943 seconds)
  done (took 1.232699278 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.283239372 seconds)
  done (took 1.264671182 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.483765224 seconds)
  done (took 4.465881537 seconds)
done (took 65.249790365 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.11497915 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.1173772 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.116338713 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.141476702 seconds)
  done (took 1.459597845 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.122221726 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.117796941 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.145772124 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.11885073 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.122499024 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.117479851 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.142322947 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.12018471 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.116648082 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.14549945 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.118720445 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.116596708 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.145609808 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.117145566 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.116043517 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.14561581 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.12161375 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.117200186 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.14285152 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.120016166 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.117638744 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.144135591 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.120534932 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.119581761 seconds)
  done (took 4.014623061 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.114248736 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.109602506 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.109546597 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.132369495 seconds)
  done (took 1.451470443 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.125687697 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.129427011 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.152224368 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125194444 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.128882569 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.152635118 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.116479685 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.114703441 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.142262352 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126250727 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.132830011 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.155768671 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.128409166 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.117725588 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.152818348 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.11233515 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.117421689 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.153527085 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.123761122 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.149445072 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.118551158 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.122896803 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.146612863 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.127136119 seconds)
  done (took 4.154160241 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.190515325 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.128322735 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.173135212 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.160730374 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.175099636 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.116047613 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.143555039 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.149423337 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.125215941 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.117840856 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.146385855 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.162409468 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.149603349 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.1196331 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.116941545 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.148452492 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.128689963 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.12275292 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.187448762 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.12241271 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.149914841 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.130229101 seconds)
  done (took 4.15372621 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.121082708 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.108146469 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.128202322 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.109504853 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.119976509 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.135110135 seconds)
  done (took 1.712933578 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.108612465 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.102895858 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.102911968 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.127742385 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.107666345 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.103341058 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.126107536 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.104151281 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.103315497 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.103265498 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.128287738 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.102618553 seconds)
  done (took 2.30602273 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.3281825 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.107831387 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.135728943 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.110926099 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.11386838 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.10549935 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.145986156 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.108186026 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.264657294 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.103721878 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.131357716 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.193166058 seconds)
  done (took 2.842224623 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197798554 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148957347 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248485975 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.364994069 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184420205 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158890798 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.292765911 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188497742 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.173358271 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162595751 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205484696 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158844724 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151817396 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208507641 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138221446 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.181732528 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160920747 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229287216 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166460096 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208900293 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181745718 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.196481708 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187448509 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17438646 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138125005 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183763591 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.119710706 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126993755 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189952919 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16043039 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194613461 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175871948 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139766881 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21416514 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248601057 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171663619 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271324455 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158685409 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.167670403 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.212619602 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253455463 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139828174 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210342016 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149316001 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15463615 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180729887 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177409588 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.206539754 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.132731006 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142024303 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202846962 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201685589 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.171156817 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162128502 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.303544282 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132849143 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.13955914 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190332889 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210194597 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196088091 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200323424 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.122112394 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202960884 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213309844 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233201501 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.140709763 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.186736832 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125050736 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161039054 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.226782873 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204542901 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155500667 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.225761739 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156581252 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169394956 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194492359 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151191356 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226217981 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193034342 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.118915087 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146519973 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15941843 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125949697 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.214365058 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122344049 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239870895 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130170567 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.340856225 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210374287 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153218656 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185893167 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156312146 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187866506 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14456283 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.126666912 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142057285 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.185582918 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15429069 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125562193 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180442564 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137208089 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.151581929 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148688945 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.147225042 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165882105 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.156397364 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161783011 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192726371 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.132321672 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.20159062 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147713435 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.187170736 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167353303 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215484758 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130374152 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157989222 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212134215 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194999919 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.135157778 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.19846947 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.21964996 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.147842213 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159244394 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16171712 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217084899 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142176988 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222185832 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136791811 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160231894 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.134933 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196039727 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157536475 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.178841459 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12768503 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.18955944 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187038277 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.152476908 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139218771 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205521466 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132430037 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149376662 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136078737 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134308695 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.168126174 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.14698965 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.163870171 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152759676 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188629626 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163433606 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179912599 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133447409 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194144629 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130117606 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.193464483 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146597967 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.118380504 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.198748392 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220445186 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127747965 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204886299 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.160047926 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210578197 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19614103 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12926446 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.207246549 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127202897 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.119863688 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184361004 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168994393 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.188116505 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.211575432 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207154548 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.162783579 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.187287243 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147152792 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190727415 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.180308513 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181060046 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.141372987 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197033805 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163970875 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.147138895 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.122669439 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.126672974 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162938514 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129101294 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1615267 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172617372 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18816702 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.203664016 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165853562 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163663219 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.187823218 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.151784313 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158518513 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.200518533 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138380321 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.21398636 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185790328 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203831295 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16484122 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160289662 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.119249995 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151726389 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.13282964 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.187678093 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136601488 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132996441 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165907647 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.214068143 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16937034 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172346626 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218270774 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161159496 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.226575279 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.12020009 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.189100503 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166566693 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191502899 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.183151077 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132596491 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.184591137 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.215001018 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140039105 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215743192 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166135281 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20399223 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216954289 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.163247975 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129593183 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174675706 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158063063 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163926153 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159766943 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172717756 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129449639 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176705128 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.136805399 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163894639 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180730601 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169237277 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174071123 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.183476069 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164395785 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153883259 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139370519 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200563957 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143757197 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.129435725 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168258437 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218825927 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148351715 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181789271 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168763557 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156524483 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.313186298 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210641705 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199428681 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135551392 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13506786 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197967447 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157985546 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187415652 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.210104416 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142273803 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229197493 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167265332 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.170070078 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129973524 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17311264 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14941404 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.16025578 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149490955 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.185011735 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.14168214 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207644901 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136279038 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194109572 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171997316 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.172209907 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.148502039 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136469666 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246607491 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195002479 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169605472 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.189676262 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.187624569 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181861339 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122261146 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153734329 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.131992916 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.210049976 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128914549 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199653669 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.168402863 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211301329 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198918153 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159956607 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168313263 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.127855553 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192775547 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146868362 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212849321 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134423319 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.164973949 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184121256 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.152775298 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130259351 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186664188 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.272503157 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172573003 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167084417 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.132178102 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.269580068 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155077056 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132458637 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185079799 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167553889 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.158463886 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.180647961 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17210136 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166425613 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159605749 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161400295 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.20619049 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185538321 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190835155 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169164065 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.171486856 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159028636 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186439438 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198468028 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145472604 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.145228494 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185324441 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217199792 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.178242937 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.15800137 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167553893 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193526834 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16950041 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197778664 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137488182 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207824293 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127576113 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188475617 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136569421 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123885745 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187574279 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.194176582 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129123805 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200505843 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168286762 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157400109 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127220248 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143289864 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191090116 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13683886 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.156043013 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179872648 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.158053904 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177589339 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231153528 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128543071 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.192892701 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144285091 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158043219 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137820226 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168092482 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131942768 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.174026665 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203903635 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.130621062 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202563931 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160164907 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188283105 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153820352 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170388947 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.329339545 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.154381401 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187958755 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17684028 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192511429 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177211607 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171079555 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196013774 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146696714 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18922173 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144042652 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.246881732 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159615011 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.193128299 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130526643 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171415513 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13625633 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.159228067 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150715623 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19312966 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139391962 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.134029086 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.192710594 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142860955 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.173379924 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140169283 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224689909 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149526805 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208977204 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.213805606 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13643613 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201568384 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170787096 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157447537 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.162168226 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197408028 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143772123 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176545458 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.133101961 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.137037275 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235819261 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.124384303 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184755852 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16998765 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195035713 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195192859 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.135145685 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200403038 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140114078 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200039187 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127188896 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.150529619 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.198382402 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133851456 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.155102217 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168729462 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184234177 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.163647122 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168873609 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.174360494 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21817397 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.125828692 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132327867 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.302082835 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157525186 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218235195 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.161014169 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137662464 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143750064 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185088894 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.162591458 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196617915 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.129184568 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155574802 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.14491927 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.179083281 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.139717433 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.193475019 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170326858 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183868626 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183567435 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.132052751 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.280896562 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140559954 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197056189 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.114223606 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.157024303 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139714939 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133343544 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168589315 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208503737 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210287703 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.190610595 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.145758987 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163674237 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.126995159 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129408802 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19241938 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148702774 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194440614 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144550641 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.130578193 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13947675 seconds)
  done (took 85.030052393 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.161858972 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.150987351 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.166331609 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.220918891 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.192856133 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.287574662 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.227990985 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.243671569 seconds)
  done (took 2.73089088 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.120024918 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.158722047 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.142180172 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.143297081 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.109012666 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.43879348 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.13083529 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.145677533 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.159958977 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.150207178 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.135614883 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.522779385 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.115242641 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.142275266 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.12068158 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.133534814 seconds)
  done (took 3.938475364 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.616892474 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.539516716 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.927883715 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.288529671 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.255220896 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.198129392 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.738129886 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.1942542 seconds)
  done (took 11.835175728 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.152910989 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.146505548 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.412365086 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.250015645 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.704966366 seconds)
  done (took 2.75036086 seconds)
done (took 129.350040028 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.122209227 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.122705002 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.122044556 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.151424233 seconds)
  done (took 1.588891714 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.173235876 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.08930798 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.091474348 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.116568843 seconds)
  done (took 1.55458058 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.421688549 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.089372425 seconds)
  done (took 1.617761636 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.146483217 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.136214501 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.163569122 seconds)
  done (took 1.536641584 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.138054082 seconds)
  done (took 1.217101356 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.121838431 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.120325564 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.234247143 seconds)
  done (took 1.56135004 seconds)
done (took 10.160723151 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118880642 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.926684733 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.431834163 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.132141581 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.708245206 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.426129855 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.420160501 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.173310465 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.172440249 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.136825648 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.130363997 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.6873937 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.433196837 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.87166774 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.389627479 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.899358634 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.694288861 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.111863847 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.145021603 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111314428 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.399320103 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.135052387 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.111257079 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.110196006 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.717983059 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.418634925 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.108205762 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.912303476 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.108114043 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.112446932 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.425638932 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.110061049 seconds)
  done (took 20.867295275 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116967553 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.164439197 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.144909595 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.111255439 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112873658 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.13772449 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.120885426 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.122605868 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.201633081 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.109014001 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.159261637 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.109873233 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.114298198 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.136886665 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.134726797 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.108798715 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.139428413 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.113566624 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117137325 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.140498939 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.132226825 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109381168 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.138469274 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.112922899 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.110889758 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.157817817 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.110730002 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120801226 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.137045702 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.11398395 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.113453918 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.137331461 seconds)
  done (took 5.203458563 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.157543969 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173301571 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.147155689 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.147645468 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.186734132 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.112223742 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.221718986 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147957242 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.202464821 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.113461807 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.131420116 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.138744419 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.150788259 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.109916187 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.162683455 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.11099616 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.113534162 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.140611796 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119595169 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111262109 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.159245726 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.108894957 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.110515348 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.140858405 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.110439106 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.158490329 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.112215519 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122867974 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.137084927 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.11525054 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.11517129 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.136622227 seconds)
  done (took 5.517510191 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.124000539 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.124278239 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.131945094 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.160996069 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.119144293 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.122736093 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.152142038 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.119503142 seconds)
  done (took 2.144151739 seconds)
done (took 34.819184283 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.136256346 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.129252069 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.130517302 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.153966652 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.186818931 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.146950418 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.127406465 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.117304631 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.150709162 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.132195801 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.109370021 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.118867309 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.158998301 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.121332784 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.218464964 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.125373729 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.222282241 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.189341405 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.147920013 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.126161035 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.118062629 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.223468439 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.122168024 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.147236841 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.190626994 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.11310686 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.212425816 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.120604289 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.150077509 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.112037785 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.218461161 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.122791506 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.118286074 seconds)
  done (took 6.002887535 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.205354443 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.119821781 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.148157362 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.118170146 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.120119478 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.146524425 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.20874519 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.146959764 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.120079488 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.118471676 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.117687929 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.220492244 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.125379857 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.145229086 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.123643231 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.10839159 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.237764751 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.121812723 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.111268646 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.120427146 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.115279707 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.118506477 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.251347309 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.114961623 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.117943459 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.147402393 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.121772247 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.124023096 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.149597975 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.120832803 seconds)
  done (took 5.374297193 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.124743157 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.131395916 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.164707162 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.184988165 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.14762672 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.158949889 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.138949264 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.132637611 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.169948142 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.113339039 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.127307494 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.176951481 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129330842 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.122765272 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.145952737 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.130225105 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.133457581 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.142973577 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.121744929 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.129910166 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.161773595 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.13142202 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.136602826 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.149996956 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.112794942 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.119459908 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.150595671 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.128357042 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.121074511 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.15564636 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.116120416 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.117700715 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.142670038 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.148554502 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.113935793 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.154211482 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.139122703 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.125112116 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.15561282 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.146041967 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.115850978 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.143209418 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.138752834 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.165196398 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.144066309 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.126679403 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.124939619 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.156819438 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.112505108 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130407375 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.182984342 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.114116365 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.132999272 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.140893004 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.1131276 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.121669148 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.141037709 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.118074452 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.127770909 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.114652707 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.165018401 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.119887679 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.122879768 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.143436917 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.123895485 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.111192339 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.140546759 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.117621191 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.138459294 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.149142715 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.149205279 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.112976471 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.152522619 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.126223577 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.123607011 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.151666744 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.113968785 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.12408306 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.124067385 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.14714011 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.126621376 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.11506164 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.145659142 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.13084704 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.132412009 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.156055078 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.126307509 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.125815462 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.145960784 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.114977486 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.129566982 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.143117802 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.119163262 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.125200876 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.141869734 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.117616442 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.125265099 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.152026737 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.111690121 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.139096631 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.116284833 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.141322685 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.138706336 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.115918834 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.147354855 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.122996674 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.153320314 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.143312055 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.124723909 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.125681805 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.142773736 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.121922666 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.115535137 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.141406133 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.13188235 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.129285982 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.149793845 seconds)
  done (took 16.880827421 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.315798784 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.27270105 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.211927732 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.244870995 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.126528591 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.237041268 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.29887731 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.302045175 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.112930229 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.181418797 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.164997029 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.272472644 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.112606625 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.171698215 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.30551665 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.356305036 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.140997066 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.182575738 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.178273767 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.12757148 seconds)
  done (took 5.427204364 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.134070706 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.148002324 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.164502224 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.141727588 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.123288844 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.158355161 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.115508659 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135172799 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.154357386 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.124063733 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.11602617 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.157563053 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126827149 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.129089663 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.157717332 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.145167418 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.119760405 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.148848799 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.135900577 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.11769637 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.130629474 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.138930666 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122210212 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.163933531 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.13312841 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.123655371 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.141493128 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.11858502 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.120026089 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.151707024 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.118736027 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.130994749 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.153330102 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.104019293 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.1254199 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.156316827 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.122154527 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.116616183 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.117641785 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.146795566 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129870671 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.125870262 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.151851943 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.097694994 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.133129908 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.109119405 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.157936184 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.126233973 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.104670873 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.162938129 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128223133 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.127512328 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.149995787 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.136746412 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.120880034 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.157746545 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.126687168 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.127818595 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.147230788 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.113975103 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.112907249 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.143383053 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.125132009 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.128005384 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.125914072 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.163533611 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.130498042 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.113754495 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.149252845 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.117176912 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.11726384 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.157404866 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.134277314 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.122399599 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.151194628 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.125445528 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.121886709 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.121105095 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.124317409 seconds)
  done (took 11.640018776 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.139117853 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.124155473 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.159438381 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.149645605 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.1279424 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.14685085 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.127042741 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.134880611 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.128675317 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.16160077 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.129538754 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.126467334 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.164775102 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.124795593 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.123009662 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.158600439 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128004901 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.178170272 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.133923162 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.141589605 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.159111877 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.11969908 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.126398933 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.124965918 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.174752504 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.125852983 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.170036441 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.129513559 seconds)
  done (took 5.073445493 seconds)
done (took 51.494175472 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.252757862 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.448644206 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.230108073 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.226150532 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.265303184 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.243102941 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.251698128 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.237331774 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.59873461 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.199067295 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.226328896 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.232377066 seconds)
done (took 28.532503376 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.290048407 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.781356596 seconds)
    (2/2) benchmarking "String"...
    done (took 1.514355672 seconds)
  done (took 4.412240843 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.216671644 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.217811375 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.462437462 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.215593131 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.219265198 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.216702203 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.217591111 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.216483913 seconds)
  done (took 15.882404197 seconds)
done (took 25.916494803 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.261027738 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.401892255 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.468696087 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.227700915 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.226718768 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.226803117 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.220689744 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.239212887 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.23374462 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.232302117 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.627189326 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.489764359 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.233413807 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.588939075 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.230599892 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.244030587 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.216984603 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.442786685 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.219654207 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.245380671 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.196945757 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.200937123 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.236927013 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.221452489 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.224346491 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.234050387 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.272545798 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.217611288 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.395492612 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.245386847 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.246807845 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.222049509 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.2701404 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.220158729 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.222391874 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.225019713 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.39902867 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.228479861 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.203794562 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.247561018 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.401296619 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.235344527 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.23019151 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.228613887 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.227513813 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.259479461 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.205740076 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.3506739 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.247237161 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.225421192 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.282474188 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.582936863 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.221567884 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.232973617 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.232843489 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.437421318 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.234869752 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.274420269 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.24519167 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.234387236 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.231411983 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.220909118 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.284071943 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.239006677 seconds)
  done (took 144.894642677 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.22072246 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.227467556 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.225278026 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.286674673 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.223808086 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.225958977 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.221612211 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.221812045 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.227290167 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.255050081 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.225159221 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.221172549 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.227050794 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.179244797 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.232007787 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.242344229 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.227026302 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.245172056 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.251312342 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.223220878 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.225500435 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.228124911 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.226925933 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.227675952 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.267338993 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.302528663 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.249323477 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.254061849 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.237025011 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.223116159 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.264927132 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.275155055 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.832069029 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.07733605 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.231262181 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.240902252 seconds)
  done (took 81.093463986 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.222813625 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.222892748 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.224425886 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.224659321 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.224180141 seconds)
    (6/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.254637625 seconds)
    (7/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.223662036 seconds)
    (8/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.791363883 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.793848913 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.183341031 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.36779102 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.571625355 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.444766772 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.224433825 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.314977334 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.236385808 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.224843608 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.239821704 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.252231056 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.225523249 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.224688875 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.793341 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.241849301 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.236445333 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.400331779 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.240353706 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.25763805 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.614261489 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.22416574 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.257768734 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.55559091 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.274033484 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.225096426 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.570565012 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.414753966 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.335393207 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.226973341 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.257185815 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.226710951 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.506261095 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.226848601 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.2268132 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.227917901 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.868618494 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.229735248 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.795041872 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.23196015 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.193713834 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.230866501 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.226647234 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.179091052 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.918578037 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.229872574 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.227674357 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.229857107 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.225585173 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.227670967 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.258591472 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.127184594 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.323461276 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.227881985 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.230782593 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.260510414 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.226861945 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.482578053 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.227253685 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.244695334 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.282542917 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.331103707 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.797815394 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.231768042 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.227060494 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.321835969 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.34489109 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.227545049 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.228038662 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.227028263 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.228719536 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.34028491 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.228235665 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.906896936 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.402590743 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.244814272 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.588085223 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.330797639 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.227591527 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.547757038 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.232528728 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.227679233 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.927967216 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.324077282 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.228723632 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.229686485 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.22979711 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.904600728 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.229413941 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.797006092 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.472521303 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.234010435 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.740053929 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.233843976 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.08683469 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.785452404 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.87116826 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.235216092 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.340611107 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.405346433 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.246608544 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.228921401 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.593896458 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.234762419 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.28656138 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.235712609 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.631508741 seconds)
  done (took 376.445696465 seconds)
done (took 603.55070064 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.097886329 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.044882628 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.196809198 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.058404803 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.044221769 seconds)
  done (took 11.570205976 seconds)
done (took 12.698298386 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.419769434 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.422449792 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.29079854 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.425930633 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.263756327 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.437923437 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.404513039 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.25087186 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.338378134 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.313340564 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.33999673 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.28226543 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.263769024 seconds)
  done (took 18.58269597 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.516284736 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.247695595 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.299700013 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.490973114 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.28170437 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.507549937 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.545471379 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.247069119 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.397379595 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.253257829 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.253081541 seconds)
  done (took 18.169763635 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.517654279 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.246938659 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.303487644 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.509349575 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.281310615 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.520909855 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.568268308 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.247237182 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.403678929 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.255242199 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.253498566 seconds)
  done (took 18.237892819 seconds)
done (took 56.119351365 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.272991869 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.331919024 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.265286827 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.25108574 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.251715126 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.250381729 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.253007922 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.251353732 seconds)
  done (took 11.257573797 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.249464993 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.248018886 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.247266294 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.249577894 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.248421994 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.249099378 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.250114415 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.249318507 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.24951534 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.248583558 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.249326969 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.249261379 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.251371496 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.250585 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.250145271 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.250048097 seconds)
  done (took 21.12184971 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.254554497 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.249316234 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.250094658 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.249567417 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.250543602 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.251123262 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.250409624 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.251529344 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.248325345 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.249696561 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.250831778 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.248619989 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.251262764 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.251787751 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.251987653 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.252266419 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.250727335 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.251046212 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.255586187 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.251542839 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.251605972 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.250567184 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.251309703 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.250217061 seconds)
  done (took 31.157717805 seconds)
done (took 64.6667742 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.238080392 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.249219222 seconds)
  done (took 5.620336152 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.309317432 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.309037878 seconds)
  done (took 3.753095188 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.253521846 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.252638858 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.252648944 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.252272312 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.251287657 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.252833914 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.253114793 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.252072871 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.251192001 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.252725109 seconds)
  done (took 13.65769095 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.251921576 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.253147561 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.25191986 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.253791006 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.253310498 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.25091192 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.251258922 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.251381243 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.253396484 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.250924336 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.252526579 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.251952066 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.252204251 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.250796008 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.252541034 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.252505197 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.252474393 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.251325849 seconds)
  done (took 23.67159863 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.263246914 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.269995405 seconds)
  done (took 3.667227554 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.379829038 seconds)
    (2/7) benchmarking "second"...
    done (took 1.294056263 seconds)
    (3/7) benchmarking "month"...
    done (took 1.359360543 seconds)
    (4/7) benchmarking "year"...
    done (took 1.348342508 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.295294004 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.273041397 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.294146644 seconds)
  done (took 10.377544548 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.254011433 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.446897833 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.578769944 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.261021904 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.250827973 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.254034504 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.434378533 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.255271 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.256089574 seconds)
  done (took 13.124435585 seconds)
done (took 75.006275366 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.24841082 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.245867311 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.262647003 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.254561371 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.583821519 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.245338405 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.239085894 seconds)
done (took 16.211497129 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.216097941 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.219551945 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.215336583 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.250052882 seconds)
  done (took 10.031281506 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.242303915 seconds)
    (2/2) benchmarking "read"...
    done (took 1.559388367 seconds)
  done (took 4.930153199 seconds)
done (took 16.092213534 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.248957962 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.248510406 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.249167886 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.250169797 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.24939328 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.248821338 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.247991697 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.247652534 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.248137977 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.248475594 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.248139826 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.247314798 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.247746475 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.249664809 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.247621889 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.247409503 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.248534997 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.248343507 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.248229611 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.248967082 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.250018824 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.249294938 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.249167488 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.247813712 seconds)
  done (took 31.096662947 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.248113869 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.247349784 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.247550496 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.2477084 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.248608009 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.24746394 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.246640578 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.247227485 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.248051178 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.249467723 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.247295559 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.246879778 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.250021645 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.247385302 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.249223058 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.248074184 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.248679101 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.249934444 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.247468568 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.247867858 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.248409862 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.248285759 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.248902202 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.248448634 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.250061927 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.249027308 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.249716121 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.249595261 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.250572848 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.248794065 seconds)
  done (took 38.583123804 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.250517117 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.251427384 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.25061201 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.249994894 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.249662961 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.25023437 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.252002226 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.249603352 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.250681235 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.250127625 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.251300839 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.251538822 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.251126104 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.251325274 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.251707481 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.250907135 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.252001023 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.251152534 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.25085985 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.249787516 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.24938978 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.251112354 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.250848065 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.251158726 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.250587041 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.249920423 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.249832791 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.249731432 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.251206688 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.251227207 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.2499022 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.250801595 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.251554076 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.251589954 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.251125019 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.252201974 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.251490523 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.251468707 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.249777798 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.250944668 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.251457539 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.252110336 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.250703764 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.25128435 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.252759889 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.252718478 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.251733585 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.252479178 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.251638677 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.251985925 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.250467957 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.251341793 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.252225664 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.252272375 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.252431695 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.250874231 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.252367118 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.254354412 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.252818769 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.252997848 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.255415389 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.253375289 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.253752242 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.252900721 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.254182361 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.253117672 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.253625868 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.253429843 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.253537599 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.253186441 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.25288439 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.253887182 seconds)
  done (took 91.247805 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.254041188 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.254470164 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.253972816 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.25415478 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.253000885 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.253749043 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.252808978 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.254203962 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.253693654 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.254629923 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.253570418 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.253788939 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.254103268 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.254980075 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.254161672 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.253769823 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.256749877 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.253181118 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.256877081 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.255859133 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.254955851 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.254994077 seconds)
  done (took 28.730657961 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.255863944 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.255134715 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.257195697 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.25538015 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.257325675 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.255329055 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.254868253 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.25608724 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.253605359 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.256241425 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.256231304 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.256591835 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.256200222 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.254084332 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.255235975 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.257264459 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.255499807 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.256962595 seconds)
  done (took 23.740530571 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.256734063 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.256796782 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.255439987 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.255597616 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.254680171 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.257201706 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.257320902 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.256945884 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.257219749 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.257353725 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.256665009 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.258361559 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.257284325 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.255828371 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.25705041 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.257861726 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.256408037 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.25593893 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.258383878 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.257399304 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.25627276 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.257054243 seconds)
  done (took 28.78731776 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.257716611 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.255723662 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.257279574 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.257090972 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.255154795 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.257068951 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.256702716 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.257192806 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.25938288 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.257128591 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.258217358 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.258449761 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.260135571 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.257494196 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.257046978 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.257500618 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.257982993 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.259911611 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.25652816 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.258426413 seconds)
  done (took 26.289802172 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.258462392 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.258889114 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.258865519 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.258981748 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.260515784 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.259706425 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.26061109 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.258638694 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.257358676 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.259388485 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.258747893 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.258490693 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.259178207 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.264786344 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.263142658 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.258940382 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.258620011 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.258534787 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.259384253 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.259999686 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.259106812 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.261824941 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.260220243 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.25996799 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.257759784 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.258840512 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.25780408 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.259711288 seconds)
  done (took 36.406218352 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.258207201 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.258440905 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.258217223 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.25878363 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.25963474 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.257667689 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.257461846 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.25666556 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.260143463 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.259596649 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.258240371 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.256427073 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.258118909 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.259242927 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.259815704 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.260338527 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.258619516 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.2595828 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.257921135 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.258537336 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.26008298 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.260611563 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.258376157 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.258990926 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.258672463 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.261876312 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.258712504 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.258506561 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.258928177 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.257765806 seconds)
  done (took 38.904319286 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.277935702 seconds)
    (2/2) benchmarking "in"...
    done (took 1.276317801 seconds)
  done (took 3.692439153 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.260804657 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.258350304 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.259330569 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.259290472 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.258933474 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.258277933 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.261241982 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.262324522 seconds)
  done (took 11.218157287 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.251101391 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.260368426 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.259212949 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.26104922 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.258407036 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.251773483 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.259618005 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.263839914 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.253159056 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.251869915 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.252180876 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.252263492 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.254617515 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.254641117 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.254717649 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.255403135 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.263575094 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.260867043 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.261671736 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.26113173 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.260752404 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.255662268 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.259437817 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.265317465 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.253553579 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.261119214 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.26072901 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.26399332 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.253561232 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.260298468 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.258454732 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.262730685 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.260698879 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.262339185 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.26157118 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.261850712 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.262950554 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.259876809 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.262306765 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.264968034 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.261061833 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.261945371 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.255266622 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.259960382 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.258478045 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.265149499 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.263788571 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.260432355 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.253147416 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.258264072 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.262746158 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.252864815 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.262982642 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.256054403 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.25985583 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.264037062 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.269047977 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.254159078 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.255812446 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.262378012 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.268800508 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.262197055 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.262867603 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.266006778 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.258675293 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.260957625 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.26701729 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.267391718 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.262866782 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.262980564 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.261386916 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.270348408 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.266324453 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.266561344 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.261877669 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.261898235 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.255184646 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.265733277 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.264265208 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.266231253 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.267784976 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.262605958 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.259087284 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.261067037 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.256953589 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.266449016 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.263481164 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.262261812 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.254211076 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.264635978 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.270665169 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.262916081 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.254908089 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.259023326 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.259632487 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.265731883 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.25308398 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.258329543 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.266395013 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.262666621 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.264054061 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.256751491 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.260915255 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.267145711 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.26307466 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.263303761 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.268922501 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.256186005 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.266771499 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.272269099 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.262954375 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.256095268 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.26050072 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.26663948 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.25683654 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.259676723 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.269875913 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.259362744 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.2697607 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.264862164 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.260030477 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.266315026 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.271236245 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.264870538 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.257216163 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.269051586 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.263896864 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.262423185 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.271895891 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.26431888 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.265124591 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.260254422 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.270224883 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.259135107 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.268566275 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.258177724 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.26939799 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.265721494 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.266386328 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.26113391 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.266655989 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.262589329 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.264828822 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.267256303 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.273056902 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.261517357 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.272815365 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.265939205 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.263412804 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.267657587 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.271249009 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.265220926 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.26207163 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.268833416 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.258215405 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.266928802 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.260492694 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.269907296 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.266089543 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.266941933 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.266473892 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.257076671 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.261561844 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.27084001 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.264746465 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.266673448 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.270209981 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.267758407 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.26766578 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.258171965 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.269111966 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.259394374 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.260896759 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.269481147 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.26662028 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.26790948 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.264432732 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.273978015 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.266783692 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.267718289 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.260456577 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.265575318 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.27383347 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.271168537 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.276035439 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.267326022 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.268289162 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.260511824 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.264249182 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.271552367 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.262057594 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.27281164 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.274251465 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.275775359 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.264825983 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.270583013 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.260353025 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.270781421 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.267594463 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.275418833 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.269078935 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.268395527 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.262244525 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.272667023 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.265209092 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.272657435 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.259172649 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.271639886 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.268915708 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.269795627 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.269336893 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.262111905 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.266669945 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.272966079 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.26900577 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.268782242 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.262421264 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.272719498 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.260220686 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.264768585 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.273853727 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.26874563 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.269842206 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.276750124 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.266469763 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.272862601 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.270162904 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.265890465 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.272460449 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.267127699 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.269280413 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.27311954 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.271088653 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.266872246 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.273111677 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.274407043 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.263577338 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.27055352 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.278012368 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.269813934 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.26323235 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.272388753 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.270846323 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.270074358 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.269938738 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.263900716 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.274887988 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.270605259 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.278325439 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.264211151 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.273630983 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.266563852 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.272320156 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.266109253 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.271243608 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.269911382 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.273542144 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.278400533 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.271442842 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.266760596 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.274278121 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.27121133 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.270111592 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.262543406 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.273252365 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.272500332 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.272715353 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.271053873 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.268137992 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.273732153 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.263688157 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.273441467 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.264133226 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.279721537 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.286213903 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.273835891 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.275276363 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.274251848 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.272510969 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.273438075 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.265582998 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.26658978 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.267387391 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.270231163 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.267602444 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.272908979 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.26522642 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.27621037 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.26987147 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.273206583 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.273638128 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.271405522 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.265072457 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.275074569 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.273398971 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.273082289 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.263998024 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.27415371 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.269973333 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.274187869 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.273346853 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.266691018 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.279238562 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.276959187 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.268779293 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.268187466 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.270773778 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.265730552 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.271292672 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.27871692 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.26744207 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.275298686 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.264986918 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.268234919 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.26854594 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.276929713 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.283082645 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.267177756 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.274861058 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.270921145 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.264982823 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.268145621 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.274947323 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.276293265 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.283760893 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.265119296 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.274051735 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.27360704 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.27284935 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.272230069 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.27299673 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.272786552 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.273285954 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.277671118 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.277362219 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.26912375 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.275480365 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.280846727 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.2744573 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.273292313 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.266321125 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.275199482 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.282946837 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.269737705 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.271690753 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.269262937 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.276455426 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.274475871 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.272955752 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.274884516 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.274254517 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.275622332 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.278672316 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.277141939 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.273715237 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.276926118 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.284329036 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.277327165 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.286134333 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.268923174 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.279905232 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.277439853 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.268960814 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.269162948 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.269620009 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.278520942 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.266519967 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.278103833 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.271898226 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.271902228 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.275304575 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.280794465 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.266034943 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.273010328 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.282149595 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.265860198 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.275227787 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.27481721 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.266006788 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.277590616 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.274640397 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.265787259 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.269427914 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.2726913 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.279244202 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.269366185 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.280171724 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.267905195 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.278728275 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.275641345 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.276280989 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.276665593 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.278398621 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.268697314 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.276121116 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.277092649 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.284729226 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.270235461 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.275836623 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.270833166 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.282329474 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.287949793 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.270847323 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.28104051 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.278362193 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.268864672 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.273794513 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.281530665 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.270327916 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.277999169 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.266523985 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.271359552 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.271209352 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.277152248 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.279507515 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.280559827 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.268096702 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.269862223 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.277679224 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.276973078 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.275655409 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.273329465 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.283793517 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.270464934 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.271295249 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.277198895 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.270509822 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.281751525 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.26846477 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.271892366 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.273302541 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.279481082 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.276912424 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.276157576 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.267169924 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.269739861 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.282510528 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.281264869 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.272176317 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.271623131 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.281414842 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.26884369 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.273119203 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.273571539 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.271079929 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.271350622 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.280564321 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.272121592 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.270993495 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.271730784 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.277889513 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.280565753 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.281774836 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.271966375 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.283230284 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.286160747 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.283971905 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.269303163 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.273067182 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.272817886 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.278356304 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.276835543 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.269952885 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.28514656 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.283249591 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.282185485 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.276081168 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.279205095 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.269857253 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.279621047 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.2780437 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.272924833 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.283257012 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.272709586 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.284722415 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.277613564 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.27655355 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.268164925 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.272398495 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.271187029 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.27108067 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.27754801 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.276811325 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.28020842 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.275303637 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.283102735 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.278267342 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.277947243 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.276005248 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.268580096 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.281373125 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.272277755 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.278903229 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.278822376 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.27261471 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.280551686 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.278683601 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.271268469 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.273731764 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.282301651 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.2799937 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.270652172 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.27624389 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.281315386 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.288861102 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.276998797 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.271522175 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.277201729 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.28039223 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.278418785 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.279446301 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.270150265 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.286628229 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.291051767 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.272477792 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.274655777 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.280486885 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.287727585 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.278771655 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.278367149 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.275176811 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.276680765 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.282739148 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.27794259 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.279694947 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.283434653 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.274023521 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.280673978 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.270333287 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.273369777 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.2791107 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.288549251 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.27917271 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.274080148 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.284398344 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.290377838 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.275237055 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.290012041 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.285078999 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.279536436 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.284738483 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.271242542 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.281376399 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.275491498 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.285235456 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.278891446 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.278503033 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.28000581 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.270327119 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.280842439 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.285982523 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.289622823 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.279848627 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.271368599 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.275459932 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.279696261 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.279087346 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.280656381 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.279409522 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.279598071 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.279639984 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.273818145 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.28974348 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.293406587 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.285116183 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.28210657 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.279581764 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.279169585 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.283670238 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.276165155 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.285447926 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.28053837 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.281540574 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.281532012 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.28959437 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.282889944 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.27384496 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.278221062 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.27493405 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.283970385 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.288875128 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.299180786 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.283227622 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.283911098 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.283262446 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.281935115 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.275938995 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.284228807 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.28398753 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.2744647 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.277278255 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.282056218 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.281395777 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.281362849 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.274974901 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.285664507 seconds)
  done (took 758.720656721 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.280794302 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.280067414 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.281354988 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.280951225 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.280997787 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.28189204 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.279917143 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.28152245 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.28045987 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.280261476 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.282514435 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.282248217 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.280639793 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.281979507 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.280120402 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.281759777 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.281323615 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.280477276 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.280919967 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.280451063 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.280964239 seconds)
  done (took 28.057732539 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.282008091 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.282838357 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.280918076 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.281315622 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.282836115 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.281596171 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.282511245 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.281765013 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.28089182 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.281791279 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.281177494 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.28200209 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.282786867 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.282497092 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.28250995 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.28355423 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.282925884 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.281596402 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.281796868 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.283296261 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.282548018 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.283576511 seconds)
  done (took 29.365171728 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.283467099 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.284130077 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.275546957 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.287694705 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.283446206 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.284229237 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.283546189 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.28452522 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.283761425 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.275968205 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.278006121 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.276941794 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.279869123 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.287361822 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.280209005 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.290765389 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.283147263 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.283436281 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.286478104 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.285997935 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.287454256 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.295653914 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.285000036 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.276007916 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.287598674 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.285875104 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.285036691 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.284089165 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.276235496 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.287825219 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.285484867 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.27808279 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.285939085 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.288069281 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.277906479 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.287211366 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.285833541 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.285687541 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.284254887 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.283439301 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.292799663 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.286848562 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.288738293 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.300121317 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.285644373 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.27972477 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.290680117 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.287245883 seconds)
  done (took 62.822559731 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.285597754 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.285185298 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.28670903 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.286713179 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.287204222 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.286104052 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.286605243 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.286634151 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.285456708 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.286621036 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.286763668 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.286752725 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.288160963 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.287836333 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.287013031 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.287902982 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.289253143 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.286962 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.289071095 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.288168506 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.286711314 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.287521315 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.288751875 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.288926301 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.289267657 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.288315222 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.288452559 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.28856028 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.289559207 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.28843931 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.288019946 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.287965876 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.289056921 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.289510882 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.287975367 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.288792725 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.289943122 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.287641577 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.290198136 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.289776865 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.289083999 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.289853857 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.288929413 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.290047005 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.290124462 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.290682726 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.289814363 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.288861221 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.289816754 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.28956991 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.291228889 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.289872024 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.289049701 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.289711527 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.29017488 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.290100627 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.289425693 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.289797732 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.29077073 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.290637828 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.289756397 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.291268183 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.290194073 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.291110579 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.291029913 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.291452017 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.289979551 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.290625136 seconds)
  done (took 88.799987696 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.290877657 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.291660171 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.2906297 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.292100196 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.291558824 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.290639536 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.290484612 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.291735436 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.292397218 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.290628068 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.291151392 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.29173995 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.291281487 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.292516092 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.291990864 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.291171789 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.292141623 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.293119124 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.291453366 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.292639185 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.293534306 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.293781544 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.293763741 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.292829471 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.294020466 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.293126366 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.291484533 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.292659807 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.292979588 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.293588142 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.294447569 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.293888514 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.293602492 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.293963084 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.296006068 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.293879492 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.293932595 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.294487615 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.294942799 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.294472741 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.293743138 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.293784775 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.293809433 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.296478865 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.293906278 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.29409957 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.296613901 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.295099136 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.294001059 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.294708871 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.293646578 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.294300696 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.296571119 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.294942382 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.296871625 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.295425914 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.295939561 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.296054965 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.294015453 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.294483142 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.296872693 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.295031315 seconds)
  done (took 81.362798247 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.295516996 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.295266437 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.295279215 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.294602991 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.294564312 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.295930202 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.294419034 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.295313108 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.294142505 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.296110912 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.296224846 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.296805228 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.296635286 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.297298798 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.297091287 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.297003719 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.296613374 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.295545094 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.295616503 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.295044496 seconds)
  done (took 27.081948091 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.296328998 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.29706903 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.295864622 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.297533875 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.29627025 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.296163611 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.296113017 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.296200154 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.296734967 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.297633777 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.29673873 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.29703916 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.297156092 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.295813007 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.29779297 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.297017403 seconds)
  done (took 21.915063484 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.297766416 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.296225328 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.298622778 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.297691193 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.296469746 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.296859082 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.297853137 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.297238417 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.297509707 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.298368123 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.297530789 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.297527755 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.298673726 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.298050092 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.297027528 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.296609986 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.297860894 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.298474544 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.297755152 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.301295978 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.298739835 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.298439467 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.298029986 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.299313352 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.297539229 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.300327493 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.298913818 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.299712124 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.299391704 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.300327841 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.299053146 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.301173556 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.298554841 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.298588314 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.299547505 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.300980201 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.298655749 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.298912671 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.301278164 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.300957145 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.301007645 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.298449795 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.299092371 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.299437035 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.299316668 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.2995468 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.30035059 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.300008864 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.301122902 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.30164044 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.300399153 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.301675324 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.302073461 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.301669455 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.300730994 seconds)
  done (took 72.620544492 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.301168204 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.301756293 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.300161994 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.300959438 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.300519795 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.301011907 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.300006902 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.301932065 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.302051952 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.303266534 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.301129218 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.301280929 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.301802554 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.302883008 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.304267846 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.300949742 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.300714367 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.300906458 seconds)
  done (took 24.598101712 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.303221934 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.302649906 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.302279447 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.300171635 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.302950784 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.30282572 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.302529045 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.303499723 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.3004521 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.301551342 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.302856073 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.303948419 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.301402748 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.303359833 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.303187117 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.301061282 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.302405291 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.302652364 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.30178694 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.30272832 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.304676905 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.30258172 seconds)
  done (took 29.827137084 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.293890755 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.294506839 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.293304354 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.307561167 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.302794454 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.2941056 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.293917896 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.293726594 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.310368492 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.315686276 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.31337841 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.300268397 seconds)
  done (took 16.786150539 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304368462 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303311189 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.303204046 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305100873 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304756178 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305347285 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305155984 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303795877 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305273431 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30543441 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303337782 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304326074 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304939733 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306580032 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305275237 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304671684 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304954561 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305079895 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304906481 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305888383 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304079244 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30518123 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306210227 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305690154 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304389276 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306372119 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30641964 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306626634 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306448373 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305560602 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307263905 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306473431 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306414556 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307249014 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308026801 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30617655 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306104709 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306356268 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306386592 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307976875 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.306764902 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305945069 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307805433 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307773025 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306367217 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305711434 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307129213 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306726568 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305456059 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308138242 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309065219 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308164589 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30649723 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306640084 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30779202 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30884941 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308839326 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308577965 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306896946 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30786447 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307021813 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308753798 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306911358 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309172013 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308427065 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307861832 seconds)
  done (took 87.391651597 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310067669 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.309355119 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308501136 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309220025 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307746431 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308815085 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309830555 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308849853 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30807092 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30764277 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310303482 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309397546 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308905858 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310991525 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309258959 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310592341 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309369524 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308772332 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308607852 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310442218 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309494374 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307352168 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310078592 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31029132 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309667957 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309298441 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307927124 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310554757 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310987763 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308334533 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306531811 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306935589 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306733965 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.308079471 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308185703 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30863915 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308136911 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303115984 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296640542 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297892669 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296328401 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296870798 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29785541 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298619371 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301155313 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288083393 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28956736 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28973168 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289064388 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28971244 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289953296 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291007631 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290323617 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285092017 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284082553 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283493934 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283497638 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282301284 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28377175 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284234305 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28276944 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280904547 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280618652 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282182515 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280037335 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280745845 seconds)
  done (took 86.991643192 seconds)
done (took 1776.168625837 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.435405722 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.385846386 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.265625645 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.272357838 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.266583571 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.263684416 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.280409745 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.261574575 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.262011028 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.261448305 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.263361082 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.45275238 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.299094103 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.26230311 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.260697277 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.357478099 seconds)
  done (took 26.005364709 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.282876232 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.275888144 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.376245729 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.27996836 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.296664843 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.446202631 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.331386017 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.277294428 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.426229278 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.29469589 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.264984176 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.30846126 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.274248578 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.266070492 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.310517007 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.447311658 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.514812594 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.274704465 seconds)
  done (took 28.096456721 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.666535044 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.271462064 seconds)
  done (took 5.092713233 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.292003638 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.272347658 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.271018737 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.268054863 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.260442808 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.261079608 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.269183392 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.263164197 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.257286284 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.381707482 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.272877165 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.278108652 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.279267031 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.267578879 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.271034149 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.305352614 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.425207011 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.27183819 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.269932667 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.266984006 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.262288407 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.350652891 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.306090853 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.276521447 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.374048472 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.265507254 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.264477222 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.268927318 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.372155757 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.275607085 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.260908617 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.263236644 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.263231143 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.155077079 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.775327277 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.256742545 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.284727703 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.27293963 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.270876661 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.415317609 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.264068203 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.272174289 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.253217624 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.784196075 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.35909373 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.374438374 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.268303994 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.264074104 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.259852571 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.319034556 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.26092644 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.260123381 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.314908493 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.040700923 seconds)
  done (took 81.39149286 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.311112629 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.248456916 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.429517723 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.264556237 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.249559239 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.246489461 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.247305271 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.503840152 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.251475615 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.246124446 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.551178968 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.835425578 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.25570501 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.328086422 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.289588308 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.299212626 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.248804588 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.24775715 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.25115274 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.252733935 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.797337747 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.253462725 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.249239397 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.327626308 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.287582674 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.762041491 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.251220169 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.248156031 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.254915098 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.247889059 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.813456609 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.258229471 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.303260888 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.253411148 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.52338959 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.609913562 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.568259285 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.252703789 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.274715566 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.251242047 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.273931021 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.748976569 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.593049351 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.249305648 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.249508325 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.749692238 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.249933592 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.259759291 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.259836034 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.515363448 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.250887997 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.249901852 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.256541758 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.250965855 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.248393826 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.301464913 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.296524409 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.760779381 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.248964315 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.250038429 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.29477416 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.252126187 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.255664565 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.256035006 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.253922098 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.594578042 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.488807592 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.254999347 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.593086724 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.802186702 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.259163876 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.878772126 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.250157501 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.258345623 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.286328403 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.256623785 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.251367341 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.758559334 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.279598104 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.251499363 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.573859299 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.250937381 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.543587338 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.269537888 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.25262244 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.813539782 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.265612985 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.297345594 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.252794073 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.253124693 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.251974336 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.258653408 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.530988846 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.301593309 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.252543139 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.252569897 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.27447296 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.253212044 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.267635267 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.263121451 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.874951671 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.251401523 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.261207512 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.250307942 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.249956948 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.260189591 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.249077354 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.246384695 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.524264161 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.243412466 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.261863515 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.245031518 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.242435141 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.256568299 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.319442324 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.249624264 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.526056762 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.244907147 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.241191046 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.245773995 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.241174592 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.253081737 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.243214194 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.254952402 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.230958747 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.539291309 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.257983357 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.257393197 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.243847757 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.248716442 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.242461212 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.2465268 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.29743731 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.243674765 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.993660866 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.287202759 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.242722991 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.243076504 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.252809566 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.251107606 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.244905087 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.24562405 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.541650644 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.527188999 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.464173506 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.243953737 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.244764609 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.022436517 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.285371764 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.4251322 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.259387811 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.244019563 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.523662565 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.468016029 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.243693903 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.244276522 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.247646865 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.522008541 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.246013859 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.565398085 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.829583774 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.243212819 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.247634893 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.996465941 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.048287383 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.250129447 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.2474977 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.533480459 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.260208936 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.244379743 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.245451172 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.245817847 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.244508432 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.249108631 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.245744051 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.244973581 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.245987261 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.586819912 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.44007095 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.260502909 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.25718802 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.754508074 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.267283696 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.246139304 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.257683657 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.246501264 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.246004417 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.29462523 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.247253575 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.279096536 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.24569259 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.245113028 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.778360175 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.24544398 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.2510536 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.439669213 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.953063914 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.250052533 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.246688455 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.250068471 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.307900795 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.786727905 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.283295907 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.533478905 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.262890636 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.286914933 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.249845592 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.264417066 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.800443578 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.250979995 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.248138229 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.968127925 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.246867653 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.682740223 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.246937107 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.255630171 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.880730707 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.253079281 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.254037902 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.24955877 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.251405983 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.561564493 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.252725291 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.25194341 seconds)
  done (took 478.885222643 seconds)
done (took 620.627687096 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.249147126 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.254236801 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.255786387 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.254395522 seconds)
  done (took 10.155393305 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.266461675 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.257643536 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.263963072 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.253862001 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.267274736 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.255540175 seconds)
  done (took 8.705552898 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.249385043 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.256820878 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.253698074 seconds)
  done (took 7.901391799 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.446782764 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.269882252 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.585624797 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.263172179 seconds)
  done (took 8.707685395 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.265745399 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.265966187 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.266107575 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.267801389 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.266845417 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.268212934 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.268166955 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.268406426 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.26815977 seconds)
  done (took 12.545755334 seconds)
done (took 49.1592029 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.353240536 seconds)
    (2/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.247731617 seconds)
    (3/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.23286218 seconds)
    (4/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.372665771 seconds)
    (5/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.369749095 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.324426634 seconds)
    (7/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.295918807 seconds)
    (8/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.320774542 seconds)
    (9/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.281515599 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.285633338 seconds)
    (11/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.229521073 seconds)
    (12/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.54134887 seconds)
    (13/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.393790421 seconds)
    (14/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.487958888 seconds)
    (15/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.332591121 seconds)
    (16/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.28538142 seconds)
    (17/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.228570223 seconds)
    (18/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.406212204 seconds)
    (19/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.333465533 seconds)
    (20/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.687458842 seconds)
    (21/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.493693677 seconds)
    (22/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.233768528 seconds)
    (23/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.343252664 seconds)
    (24/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.365547322 seconds)
    (25/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.335319074 seconds)
    (26/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.397656657 seconds)
    (27/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.715305911 seconds)
    (28/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.23477339 seconds)
    (29/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.355970712 seconds)
    (30/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.336257097 seconds)
    (31/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.538174757 seconds)
    (32/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.358706474 seconds)
    (33/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.429359917 seconds)
    (34/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.330472271 seconds)
    (35/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.395395444 seconds)
    (36/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.235411736 seconds)
    (37/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.276874071 seconds)
    (38/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.234385469 seconds)
    (39/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.283701428 seconds)
    (40/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.534782474 seconds)
    (41/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.544402626 seconds)
    (42/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.403407859 seconds)
    (43/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.376501268 seconds)
    (44/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.419427529 seconds)
    (45/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.237017084 seconds)
    (46/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.386949488 seconds)
    (47/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.339140693 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.35592026 seconds)
    (49/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.429190214 seconds)
    (50/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.23568184 seconds)
    (51/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.236775958 seconds)
    (52/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.390722067 seconds)
    (53/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.257962649 seconds)
    (54/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.48070785 seconds)
    (55/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.4591669 seconds)
    (56/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.37254087 seconds)
    (57/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.350910163 seconds)
    (58/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.68176832 seconds)
    (59/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.238008539 seconds)
    (60/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.349363218 seconds)
    (61/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.288490927 seconds)
    (62/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.350320068 seconds)
    (63/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.580638723 seconds)
    (64/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.239322605 seconds)
    (65/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.721865923 seconds)
    (66/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.2417218 seconds)
    (67/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.486997018 seconds)
    (68/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.237034898 seconds)
    (69/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.584735873 seconds)
    (70/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.409745141 seconds)
    (71/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.486390772 seconds)
    (72/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.342940726 seconds)
    (73/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.478599171 seconds)
    (74/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.260642838 seconds)
    (75/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.602491649 seconds)
    (76/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.37034367 seconds)
    (77/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.480136961 seconds)
    (78/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.351037033 seconds)
    (79/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.232422125 seconds)
    (80/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.23917915 seconds)
    (81/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.290044765 seconds)
    (82/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.233478321 seconds)
    (83/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.741919566 seconds)
    (84/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.535148989 seconds)
    (85/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.37882189 seconds)
    (86/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.294916137 seconds)
    (87/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.531247028 seconds)
    (88/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.240625554 seconds)
    (89/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.371028544 seconds)
    (90/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.232074955 seconds)
    (91/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.367717619 seconds)
    (92/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.656185656 seconds)
    (93/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.413101242 seconds)
    (94/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.41255223 seconds)
    (95/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.418285061 seconds)
    (96/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.365384624 seconds)
    (97/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.25931255 seconds)
    (98/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.005266416 seconds)
    (99/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.372064844 seconds)
    (100/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.336881343 seconds)
    (101/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.2340269 seconds)
    (102/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.417022083 seconds)
    (103/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.285615953 seconds)
    (104/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.297497769 seconds)
    (105/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.235486512 seconds)
    (106/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.240636436 seconds)
    (107/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.384239971 seconds)
    (108/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.330636764 seconds)
    (109/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.363211772 seconds)
    (110/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.263686205 seconds)
    (111/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.470816273 seconds)
    (112/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.30017589 seconds)
    (113/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.234271035 seconds)
    (114/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.417671172 seconds)
    (115/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.235189101 seconds)
    (116/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.246723825 seconds)
    (117/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.481350249 seconds)
    (118/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.341759759 seconds)
    (119/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.370178969 seconds)
    (120/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.297963177 seconds)
    (121/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.41830285 seconds)
    (122/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.32869922 seconds)
    (123/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.435969642 seconds)
    (124/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.279376281 seconds)
    (125/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.470586086 seconds)
    (126/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.417263683 seconds)
    (127/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.594346622 seconds)
    (128/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.393873699 seconds)
    (129/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.34756826 seconds)
    (130/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.235149873 seconds)
    (131/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.38589742 seconds)
    (132/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.406327947 seconds)
    (133/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.467286651 seconds)
    (134/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.84648979 seconds)
    (135/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.333659322 seconds)
    (136/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.253730996 seconds)
    (137/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.307714247 seconds)
    (138/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.461789402 seconds)
    (139/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.501210474 seconds)
    (140/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.241439489 seconds)
    (141/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.366169321 seconds)
    (142/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.325522988 seconds)
    (143/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.236764548 seconds)
    (144/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.292412483 seconds)
    (145/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.258163793 seconds)
    (146/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.304817483 seconds)
    (147/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.413067361 seconds)
    (148/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.469259151 seconds)
    (149/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.379646931 seconds)
    (150/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.339197281 seconds)
    (151/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.398884682 seconds)
    (152/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.548186364 seconds)
    (153/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.299298458 seconds)
    (154/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.237323506 seconds)
    (155/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.526029189 seconds)
    (156/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.336843241 seconds)
    (157/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.33859719 seconds)
    (158/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.321688265 seconds)
    (159/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.529465986 seconds)
    (160/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.422102649 seconds)
    (161/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.500244851 seconds)
    (162/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.419983862 seconds)
    (163/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.305188313 seconds)
    (164/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.417865503 seconds)
    (165/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.380629278 seconds)
    (166/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.377593238 seconds)
    (167/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.359261968 seconds)
    (168/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.326558466 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.496264818 seconds)
    (170/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.244148755 seconds)
    (171/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.419207128 seconds)
    (172/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.29378132 seconds)
    (173/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.268586278 seconds)
    (174/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.571352273 seconds)
    (175/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.243351124 seconds)
    (176/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.31466323 seconds)
    (177/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.408031803 seconds)
    (178/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.302083776 seconds)
    (179/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.475825694 seconds)
    (180/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.541921073 seconds)
    (181/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.293020987 seconds)
    (182/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.243667443 seconds)
    (183/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.468012446 seconds)
    (184/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.239511739 seconds)
    (185/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.501208787 seconds)
    (186/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.359921699 seconds)
    (187/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.442083112 seconds)
    (188/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.664561534 seconds)
    (189/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.715020686 seconds)
    (190/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.600885602 seconds)
    (191/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.470645355 seconds)
    (192/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.370921099 seconds)
  done (took 314.534571361 seconds)
done (took 315.678428135 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.293075842 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.364512628 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.271144454 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.272407124 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.273153801 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.263449931 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.299503907 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.273025975 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.286498399 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.286638386 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.26485556 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.284939507 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.287688408 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.284109277 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.306155348 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.273216725 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.273452655 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.283853189 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.287697547 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.289103504 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.274733303 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.274896201 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.300744508 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.273204089 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.283224699 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.280979634 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.280456938 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.265922038 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.281697934 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.289023654 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.266080078 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.279446714 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.290298414 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.286250343 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.276251782 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.28488163 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.276093325 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.367917898 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.296215108 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.284949214 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.282792215 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.29025392 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.279801847 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.278278074 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.2863612 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.303765722 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.282858869 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.289492154 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.265846158 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.264951755 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.298941011 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.286709941 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.284225069 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.262893498 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.283391503 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.290164728 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.284864833 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.295945203 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.282969787 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.275019079 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.309020989 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.295732528 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.287925863 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.28398313 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.283369225 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.292360287 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.284620372 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.293056556 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.2838139 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.276941382 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.277143798 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.283004956 seconds)
done (took 101.708129234 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.400961028 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.273124618 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.433801681 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.282980724 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.439085536 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.398892804 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.284200864 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.284837332 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.284396212 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.079209887 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.285768726 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.283838067 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.273719606 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.284326283 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.396050298 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.2852818 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.284280269 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.974532715 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.285541479 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.411459472 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.277174104 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.286009411 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.285770717 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.082798626 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.276481564 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.270769665 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.413291603 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.28591025 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.98441251 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.26946416 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.273564987 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.984428747 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.413550327 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.305155301 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.297065832 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.295553532 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.441755545 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.288460382 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.403899972 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.402749415 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.435578689 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.325111341 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.269520632 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.276826475 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.28929073 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.286603092 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.285827853 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.313878437 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.276098239 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.286274047 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.976921886 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.297702527 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.286632453 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.286710755 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.287148144 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.317805925 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.287586126 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.28842191 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.414525983 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.287898881 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.403995187 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.084430886 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.079564573 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.288164292 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.272645324 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.287149609 seconds)
  done (took 104.816688366 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.347632003 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.354769882 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.386027918 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.282331413 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.327829987 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.388652036 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.281879066 seconds)
  done (took 10.531132632 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.284350726 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.287500275 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.326741217 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.325839196 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.288723321 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.451328969 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.287889192 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.290744483 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.289254529 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.329385763 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.28878919 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.289471357 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.298547149 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.280646 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.326471457 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.290831996 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.399060558 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.281944475 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.28962683 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.432486207 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.289691316 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.298224394 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.329538403 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.291638359 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.291454057 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.286624414 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.060971875 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.289851431 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.290206908 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.289813298 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.289269454 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.347474919 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.289158896 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.280774467 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.290223174 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.394659959 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.289636862 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.290671073 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.292209111 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.283121311 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.290325375 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.290541036 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.29122789 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.290798192 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.290615281 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.306535564 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.290776595 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.291008119 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.291160197 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.290616876 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.331426415 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.292398557 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.290080608 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.290477978 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.337220794 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.301198256 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.29081635 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.29130126 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.291789957 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.292205725 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.433950395 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.329579636 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.293407793 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.330988337 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.293379905 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.292093766 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.290727706 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.29164323 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.371594427 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.292513124 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.329827531 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.290619342 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.464786731 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.307255647 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.292829061 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.286889041 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.285909139 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.291885447 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.281009905 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.289704719 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.292790836 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.28491099 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.289708372 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.292716472 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.292737593 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.442377115 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.390045392 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.292228646 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.299798382 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.292346657 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.293735261 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.33563668 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.29368975 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.292956153 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.334361079 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.402376691 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.336510367 seconds)
  done (took 133.00292091 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.297875316 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.297555759 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.290196525 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.311381963 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.286009985 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.286088603 seconds)
  done (took 8.936832794 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.288062617 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.296982882 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.294658818 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.294206902 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.295031434 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.295211428 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.296343615 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.287870943 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.299194771 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.29457964 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.2960768 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.296363986 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.300070877 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.295948613 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.296635357 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.295044658 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.295724392 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.296397194 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.296045512 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.295649733 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.284039415 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.294839264 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.297326094 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.288753738 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.299350305 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.296765699 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.310929553 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.296052613 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.296379083 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.29494824 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.299875709 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.296647226 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.290754383 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.291790772 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.300684917 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.289130554 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.299904752 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.298964678 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.296180324 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.297268956 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.298888624 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.297893369 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.298221106 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.297219431 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.291304372 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.292095424 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.300567544 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.311263126 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.299465251 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.29927758 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.299378538 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.298346342 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.299058884 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.300269072 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.291291765 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.292576315 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.302859776 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.298045755 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.298709612 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.291627445 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.301382086 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.29989954 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.292830714 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.303697915 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.299973727 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.300801732 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.291493437 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.303281901 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.300995237 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.299250952 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.301108168 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.29832735 seconds)
  done (took 95.549894768 seconds)
done (took 353.995511729 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.571902629 seconds)
  done (took 3.744907671 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.549091953 seconds)
  done (took 3.722594787 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.659640703 seconds)
  done (took 22.079620471 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.379736411 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.372357209 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.300787062 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.284330203 seconds)
  done (took 10.509328945 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.534098923 seconds)
  done (took 3.707255416 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.295645094 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.309791009 seconds)
  done (took 5.780956012 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.434803087 seconds)
  done (took 3.607233089 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.493909965 seconds)
  done (took 3.667491166 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.317612095 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.303192577 seconds)
  done (took 5.803381314 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.263105614 seconds)
  done (took 3.436958618 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.600996545 seconds)
  done (took 20.775115588 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.315066738 seconds)
  done (took 3.493241123 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.33032828 seconds)
  done (took 3.503928634 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.675510637 seconds)
  done (took 5.849975505 seconds)
done (took 100.855534962 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.286911708 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.285596648 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.287637061 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.286279766 seconds)
  done (took 10.322042289 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.365514756 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.366553394 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.37504236 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.360898586 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.359697601 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.366406631 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.327676803 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.327852113 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.359104061 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.354781644 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.369740404 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.358721459 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.366390512 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.329613906 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.354371949 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.369233895 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.359402 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.37633907 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.345963116 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.356576586 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.304738837 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.359940456 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.355420857 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.304111476 seconds)
  done (took 33.64895132 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.812526747 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.365131142 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.447936453 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.345240534 seconds)
  done (took 7.146597219 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.408865898 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.409038385 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.426202256 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.462271294 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.49036558 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.421143781 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.331411014 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.326049844 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.310776541 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.409619774 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.489135302 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.408739832 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.62456839 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.304325004 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.622102055 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.305440563 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.306268498 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.408248202 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.460719771 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.487813316 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.305997584 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.408802924 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.413021816 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.409711349 seconds)
  done (took 35.127667435 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.314499465 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.323084683 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.306647773 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.320682252 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.308372016 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.307910114 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.308813506 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.315105925 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.308051235 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.308448754 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.307499126 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.322028042 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.307561411 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.308064488 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.315931788 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.308323129 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.308725797 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.314025037 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.316491422 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.308480357 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.308698432 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.314053913 seconds)
  done (took 30.039423564 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.291639527 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.291259229 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.641942315 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.547839218 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.293763206 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.292016571 seconds)
  done (took 13.537452896 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.364520434 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.497244749 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.299768284 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.625010109 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.717926905 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.305331099 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.299919665 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.529917846 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.807046267 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.801383156 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.357202041 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.368323581 seconds)
  done (took 19.152787856 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.295655582 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.297633427 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.29849443 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.314832096 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.350332728 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.307371376 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.306106994 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.292447791 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.35610356 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.357925655 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.30807632 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.351349647 seconds)
  done (took 21.017145168 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.384453553 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.303700279 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.313580855 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.301401811 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308785684 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.304671874 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.311484424 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.979884936 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.310115677 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.57961489 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.305836183 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.391815949 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.550258134 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316374343 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.308398118 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.22179306 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.537382799 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.763417302 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.306728017 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.305269628 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.342667416 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.314802684 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.323364244 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.503738205 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.31192996 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.305705899 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.567037077 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.305131341 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.567286347 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.546940565 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.546902895 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.312096979 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.581385349 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.926094274 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.411502031 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.496671224 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325148921 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.312870229 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.285490915 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.325466075 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.313260702 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.330763432 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.538096474 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314393773 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.305197177 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.310890691 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.993769539 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.314391852 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.305607881 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.308276238 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.539561362 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.395591715 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.313405148 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.30680774 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351899229 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.309114623 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.312256722 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425948084 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948310643 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313630399 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.317345851 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.315155393 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.305982762 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32445381 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.925542702 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.315486561 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.313085883 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.314022187 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307854968 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.314655545 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.336869615 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.309781854 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.330111575 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31057083 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.044235172 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.330572142 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315025682 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.817912073 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322163933 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.31455308 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.534340574 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309108479 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.308976845 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.307449828 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.308914787 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.004347434 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.317551127 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.276393222 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.34817129 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.989460512 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.502559259 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.333535357 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.338824034 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.531137194 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.276573105 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.310089378 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.316650769 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.317830761 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.331004895 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.989932495 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.309848736 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.316847193 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.558086905 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.521164737 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.309659191 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.246458435 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.76310409 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322718405 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.339207452 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.311823261 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.509776122 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.90291724 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.555802504 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3184629 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35001611 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.311716752 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.06402589 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322087798 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.324173821 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.313432132 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.60261106 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.091443027 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314296892 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.384466366 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.312690387 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.312114802 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.320202644 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.320870419 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.311494316 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.481971063 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.319174416 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.551761202 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.321819765 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31287432 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.321968531 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317409001 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.320202337 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.5335649 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321614459 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.594562648 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313683624 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312439432 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313360734 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.530613009 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.321132841 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.325499618 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.652716976 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323676576 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.330969946 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.55536994 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351810793 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425549299 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344759003 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.313550297 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.584097792 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.320763812 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.320527867 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.32063664 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.320685463 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317684602 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.322366635 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.310604248 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.909602437 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.301669325 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.322237215 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.315901209 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.331018383 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.388867736 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.324439584 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.509421222 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.321978168 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333700982 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.328713431 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.315334413 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.541928411 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.551168619 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.322724567 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.496235983 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.76409923 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.905063786 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.338366677 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.315779874 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.315947395 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.316341255 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317850705 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317165512 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.316391441 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.510459749 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.563932223 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.320105823 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.919125829 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3260321 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.316151021 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.331105767 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.552483861 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.332626065 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318225454 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.327300531 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323823078 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.327460423 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.558163423 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.545047474 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.334301779 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.31822125 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.837633227 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.324503853 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.319791121 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.319921221 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.343951859 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.318923233 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.138836572 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.659751869 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.315525315 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.560317404 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.325881909 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.342677105 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.319096644 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32029699 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330507878 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.340464174 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.334669267 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.513732753 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.339288699 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327885567 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961981681 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.061232586 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85930131 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.326179014 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.339258456 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.326737306 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.005519064 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.318426648 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.32062206 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.558114893 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.003925683 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320128731 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.771179226 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.32782268 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.050643507 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.563328349 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.551776569 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.320842065 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.327778822 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.563291213 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.5386851 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347120085 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.321454127 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327539097 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.287169691 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.842534347 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.325321152 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.506295281 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.007303518 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330016987 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.328942735 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.385433564 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.325284338 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.698847587 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.325670686 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323074893 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.327634909 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.328253109 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.142073743 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.329893899 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.321726737 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938876574 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.329781266 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.778759842 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321696704 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.518774998 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.566808317 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.539974667 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.336487591 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.337909429 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.572672085 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.55871786 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329084087 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.328024021 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865775308 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.180338331 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.330824008 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326380432 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.07529652 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32327915 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.592517901 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.330927844 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.333180428 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337684317 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.325131457 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324413672 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.324007205 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.331972844 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.297842073 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.785263896 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.33340973 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342579717 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.331815905 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331333582 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.571530906 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.339913033 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.918612748 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.559709323 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.322237079 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362790685 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.329718574 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337117178 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.298896075 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.326088856 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.325426787 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357264874 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.54924061 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.326088605 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.316403563 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.317958137 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.541060986 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.326866711 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.325186164 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.53986955 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.333149279 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.327788578 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.094539738 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36420903 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.32693716 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333336268 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.335025454 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.369005504 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.400685583 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.521809861 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.570110866 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.5726807 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.707416672 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332012251 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.333301591 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.343183055 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.408556755 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32699332 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.339644972 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.333097889 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.92081425 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.089987827 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.935009333 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.571666365 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.333602295 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326655576 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327804983 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.567998273 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.328540718 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.603897641 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327781167 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.340688849 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.354893593 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34100052 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339097393 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.545199321 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.60313738 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.327968188 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330116774 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334809429 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.328963037 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.57091447 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.546686352 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.792120362 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.846490985 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331922598 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.329731282 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.024117497 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.605030391 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329837769 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.329007797 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330526811 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.339509357 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.356629733 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.337087469 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330316946 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.558435392 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.56475425 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963819406 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.568262566 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.517263743 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.265929337 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329633535 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.582407657 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.167525653 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.526861549 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.940005425 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.026790605 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.587571062 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.404424812 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.527566826 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.336320431 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.567519006 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.334831973 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.336790209 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.333404231 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331259376 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.331195595 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.569621294 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.939021767 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.588472172 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.336322755 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.331743253 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367269811 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.527912691 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.559137135 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.035959671 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.549832945 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.575791285 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.346353497 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.332059717 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.940759741 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.578263487 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340846439 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.337702027 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.540052794 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.340815985 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.36826712 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.205423004 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.332372487 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.850711689 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.547389571 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35457554 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335507525 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.033963684 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.94618059 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.344761329 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.803812635 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.33562268 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343907629 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.617176813 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.342628362 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.33428578 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.620715199 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.338931746 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.33702977 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.538810877 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.936316962 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.070174597 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.353491049 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368916534 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.344048178 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335074319 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33240259 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334398299 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.346826374 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.710737075 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.340332114 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335944714 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.34975343 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.343930939 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347665191 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.341237259 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334511298 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.343140967 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.334144645 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.3061949 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.352788626 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.461329448 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.869568202 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341278504 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.952756717 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.67658276 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.584792884 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.347206731 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.312087237 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.345009639 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340734398 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339363209 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340016602 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.34177224 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.862721276 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.347568342 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.583521343 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.350788015 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.547044533 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.547620487 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.340950691 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.542957715 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351674653 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.361718882 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.305521936 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337811136 seconds)
  done (took 953.999574663 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.368336455 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.342857131 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.340644846 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.384981982 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.329346899 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.332815053 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.331336728 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.382214396 seconds)
  done (took 20.023120074 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.327899795 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.335574763 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.331320367 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.341226096 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.336789362 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.861827531 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.347032641 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.338170317 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.350332379 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.337480531 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.335161796 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.98534986 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.343230837 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.331229342 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.343253833 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.344524339 seconds)
  done (took 31.803344286 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.019477648 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.338160344 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.81238927 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.349339536 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.348457576 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.332529716 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.467602755 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.329168567 seconds)
  done (took 25.212077244 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.344696333 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.345199427 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.343973964 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.346473264 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.345138807 seconds)
  done (took 7.938460598 seconds)
done (took 1210.144540365 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.347422595 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.34729106 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.347153011 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.348744248 seconds)
  done (took 6.605303459 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.307827653 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.310551441 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.311048795 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.329996783 seconds)
  done (took 9.473978772 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.985173654 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.840891723 seconds)
  done (took 5.040039125 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.882678509 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.88263614 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.878134913 seconds)
  done (took 6.857953677 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.621697205 seconds)
  done (took 2.836591291 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.31534168 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.341723298 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.060291325 seconds)
  done (took 7.933644907 seconds)
done (took 39.961526414 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.338609993 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.0913803 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.489138728 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.340036764 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.492156087 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.488110588 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.584308875 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.336070877 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.339660802 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.336103821 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.342376444 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.492955726 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.571211849 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.088581169 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.570842428 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.092558717 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.492038572 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.333789966 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.334286838 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.332074646 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.584476128 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.338092364 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.332767941 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.339960002 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.494784566 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.479701494 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.333392252 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.092157715 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.333983979 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.333295717 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.477819307 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.334807006 seconds)
  done (took 81.177164712 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.334758306 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.348941164 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.337258456 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.345234521 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.333771902 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.352293903 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.335511965 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.333878546 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.346816143 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.339040653 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.346205754 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.346518261 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.334292439 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.345775621 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.335858126 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.347462348 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.342798181 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.334896604 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.334306269 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.349621512 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.33538899 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.335133649 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.334918555 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.343945843 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.33434561 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.345034038 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.34582569 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.334734999 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.335570146 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.348732262 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.346739652 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.335409548 seconds)
  done (took 76.118964012 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.346673561 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.334816387 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.352629479 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.339621185 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.336378187 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.344113681 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.339575401 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.351704449 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.349676465 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.345707304 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.337904347 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.341299914 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.340523842 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.335960174 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.339367284 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.337376263 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.343449473 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.339874447 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.336807325 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.353985284 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.338517362 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.3660486 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.336823266 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.337394333 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.341140744 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.347824448 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.337061835 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.336441664 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.337295471 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.336544407 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.350735166 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.346187496 seconds)
  done (took 76.178997137 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.578728463 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.35411208 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.356615785 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.349180116 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.356721265 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.353222072 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.350190174 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.583572394 seconds)
  done (took 14.502626003 seconds)
done (took 249.192427865 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.361256227 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.819933018 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.380789257 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.348843407 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.384814001 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.377005315 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.559044574 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.379154044 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.565006787 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.383908726 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.362324304 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.357012417 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.114434613 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.498801254 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.153258623 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.25977776 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.192469562 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.345691782 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.895452768 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.624379618 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.380169756 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.344184396 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.151278297 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.203510515 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.322515534 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.448504372 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.43790466 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.570620678 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.507236676 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.421896994 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.83154488 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.355321616 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.356284094 seconds)
  done (took 62.916553021 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.346637678 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.356227018 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.355517558 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.356528017 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.35675975 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.356659452 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.346984379 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.357401678 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.356821462 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.357539259 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.357411125 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.356273131 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.35720297 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.357062083 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.357826015 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.327444874 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.346403993 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.357570042 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.347806475 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.329179949 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.357657278 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.358556336 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.357502384 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.357545714 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.35793393 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.358531798 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.358261459 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.357727284 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.358090725 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.356943144 seconds)
  done (took 41.843906946 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.358701383 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.902883417 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.060841979 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.354824345 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.349535034 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.353909456 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.6240251 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.359469437 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.352846425 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.353282485 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.808346717 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.362324734 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.381630493 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.069265363 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.357373697 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.360447262 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.360802173 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.350664759 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.914448066 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.365808458 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.624475436 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.360968086 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.625769961 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.359701595 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.354048918 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.351790403 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.356589449 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.133886161 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.370438905 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.811736028 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.082953214 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.625625376 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.061134736 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.124208851 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.080928463 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.368054175 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.361182324 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.816245259 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.354449897 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.353600289 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.625272011 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.356555809 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.076076569 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.053325247 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.369655266 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.364033421 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.163866085 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.814485215 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.582653186 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.363212706 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.111023596 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.36211809 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.363355605 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.354277938 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.584442305 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.361341632 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.353079981 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.175318658 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.358299178 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.626104051 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.367811467 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.354564014 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.916564735 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.360295409 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.909272225 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.361374443 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.363055019 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.355788319 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.08046331 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.361434064 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.05851253 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.37051204 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.363321802 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.816047429 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.915104854 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.218140474 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.362585762 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.921359619 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.104119672 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.646998001 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.36512944 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.123048085 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.650633034 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.364417331 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.365673462 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.366660814 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.363475884 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.426684236 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.625579214 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.977243215 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.06067071 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.192707132 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.638393638 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.370564642 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.356561095 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.181436988 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.36450228 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.365463732 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.078790859 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.065333479 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.373258331 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.364159862 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.051450138 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.3741478 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.631771575 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.36861825 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.119477923 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.362213151 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.430288224 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.367102557 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.363435206 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.359775059 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.632089585 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.366374691 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.367088441 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.042186596 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.843164669 seconds)
  done (took 189.554220662 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.353455895 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.351586049 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.353448111 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.354132838 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.350288437 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.358758648 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.350606577 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.351302353 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.357218253 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.350730216 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.350718874 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.363133624 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.359927671 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.354216809 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.351948582 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.353291588 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.351205293 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.357589921 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.353406183 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.353129362 seconds)
  done (took 44.312537528 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.368281298 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.890530176 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.859921745 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.374055353 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.36887995 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.360099178 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.412675713 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.369989096 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.370348095 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.643222405 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.523627201 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.370396357 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.368751173 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.36934903 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.862195964 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.347241668 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.645510081 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.904161728 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.375561659 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.897476845 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.34670851 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.37023384 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.358735746 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.899950258 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.661598112 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.635901549 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.421163605 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.893843772 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.370560475 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.370632421 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.895243222 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.371607771 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.360687963 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.876132975 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.369260277 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.38379367 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.369036377 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.415922946 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.41701892 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.646388469 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.906678537 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.646385546 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.381842403 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.520727854 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.375265125 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.341724314 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.904930973 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.372419762 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.342330087 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.372548573 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.377330887 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.876809708 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.367313886 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.876339892 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.377895386 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.372180009 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.896394685 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.878798014 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.872211524 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.52886952 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.369153857 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.634552212 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.3795879 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.914298451 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.378674639 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.373136871 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.374520831 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.528865766 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.904307773 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.64243698 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.648871525 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.648389408 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.37349481 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.428195274 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.372960365 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.655219019 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.43183334 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.746580065 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.65873566 seconds)
  done (took 123.404329933 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.621751274 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.47978041 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.732655266 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.930557335 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.858732154 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.499130326 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.474826715 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.598696999 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.373767509 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.480313681 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.983116254 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.454099971 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.096040698 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.433827955 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.47040064 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.482254953 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.75406504 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.29530614 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.975645713 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.97553115 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.375046338 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.462770725 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.891531026 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.556804294 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.365411136 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.914862778 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.291311564 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.872121912 seconds)
  done (took 51.938499581 seconds)
done (took 515.190598102 seconds)
SAVING RESULT...
DONE!
