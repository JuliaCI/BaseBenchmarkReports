cset: moving following pidspec: 22884
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.538442077 seconds)
loading group "shootout"... done (took 1.225868475 seconds)
loading group "string"... done (took 0.403428375 seconds)
loading group "linalg"... done (took 7.627690535 seconds)
loading group "parallel"... done (took 0.151759844 seconds)
loading group "find"... done (took 1.263016537 seconds)
loading group "tuple"... done (took 1.829358548 seconds)
loading group "union"... done (took 11.997039133 seconds)
loading group "dates"... done (took 1.248060938 seconds)
loading group "micro"... done (took 0.191329902 seconds)
loading group "simd"... done (took 4.150571985 seconds)
loading group "io"... done (took 0.998376158 seconds)
loading group "random"... done (took 8.25063765 seconds)
loading group "problem"... done (took 1.522176675 seconds)
loading group "array"... done (took 18.490937709 seconds)
loading group "misc"... done (took 1.447119349 seconds)
loading group "scalar"... done (took 37.770421986 seconds)
loading group "sort"... done (took 2.885720265 seconds)
loading group "sparse"... done (took 11.332872678 seconds)
loading group "collection"... done (took 15.979763581 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.515139237 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.126709976 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.134411218 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.122073147 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.14701926 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.124274404 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.130734983 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.088531496 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.922313564 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.144099198 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.114700988 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.439077544 seconds)
done (took 5.493227016 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.16779608 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.089601666 seconds)
    (2/2) benchmarking "String"...
    done (took 0.079502892 seconds)
  done (took 1.439302654 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.063953514 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.135613654 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.064895275 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.065678662 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065512484 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065089334 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065547944 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065051507 seconds)
  done (took 1.797457968 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072398063 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067003672 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.064019002 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.066795819 seconds)
  done (took 1.543639613 seconds)
done (took 6.299966762 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.2383876 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.101895709 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.288847061 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.39164835 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.457629869 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.089739512 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.072846108 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.067736771 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.126559318 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.336088924 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104500841 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.183409899 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.09001031 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.173776634 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.968031212 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.115629717 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082715162 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.122111315 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.090978915 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.126763143 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.405794564 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.074097998 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.070502101 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.068292716 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.065248009 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.636862635 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.666685065 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.128198425 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080940853 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.098159742 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.112904451 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.63487312 seconds)
  done (took 10.573674205 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.092730076 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.089671529 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.066138185 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.122468486 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.091690568 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.066725445 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071973598 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.064142307 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.089007396 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.122637287 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088565591 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.097855374 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.063842315 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.06643956 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.073070492 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.196219203 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.077702018 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.07833287 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.065006229 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.077136088 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.104554591 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.076227156 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.076346525 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.0762581 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.126696528 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.167378105 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.09329129 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.094885895 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.064419044 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.077567353 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.111692039 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.124857603 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06380859 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.062512789 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.11841337 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.092712052 seconds)
  done (took 4.615682724 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.933356006 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.088228381 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.10126509 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.620988244 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.062826956 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.14798956 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.235835837 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.069777879 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.441573484 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.1410115 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.13856152 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.141290949 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.112089328 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.066417374 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.219422615 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.113538648 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.377672134 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.065951135 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.064354706 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.063514853 seconds)
    (20/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.083355384 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.066047284 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.061118242 seconds)
    (23/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.066130035 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.067611619 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.090463265 seconds)
    (26/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.061236364 seconds)
    (27/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.085557683 seconds)
    (28/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.169307246 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.928167294 seconds)
    (30/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.246312631 seconds)
    (31/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.064932196 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.157465168 seconds)
    (33/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.081769842 seconds)
    (34/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.356596318 seconds)
    (35/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.067505515 seconds)
    (36/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.080328641 seconds)
    (37/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.397426752 seconds)
    (38/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.12027483 seconds)
    (39/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.063778888 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.165438958 seconds)
    (41/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.118759993 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.062201075 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.112666672 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.07554005 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.06656841 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.065820139 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.068530382 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.068774477 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.075255096 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.099531308 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.065708399 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.062183415 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.160459893 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.062458024 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.063123974 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.06511489 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.146845755 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.062328272 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.139222466 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.061356156 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.066024394 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.094521153 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.065399318 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.087631512 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.099583864 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.330772422 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.028310567 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.063386318 seconds)
    (69/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.060406353 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.930116774 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075987331 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.063116003 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.068113669 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.063899795 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.064627007 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.063499425 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.071309144 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.067111932 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.065741727 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.105768152 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.06426056 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.066677119 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.063648329 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.068225028 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.09774054 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.063081047 seconds)
    (87/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.061332466 seconds)
    (88/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.473440392 seconds)
    (89/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.094915468 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.063952982 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.074272631 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.102118441 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.063206665 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.06959376 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.064640685 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.064082111 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.062697305 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.064543827 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.179335766 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.090896471 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.066401406 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.11003366 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.033353262 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.064409789 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.0633813 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.068391695 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.066854786 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.065980866 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.064443322 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.066708048 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.064670239 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.061684608 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.109751925 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.064694552 seconds)
  done (took 21.377617093 seconds)
done (took 38.770890087 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.249379606 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.079298536 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.079858406 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.079576113 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.079456158 seconds)
  done (took 1.934485629 seconds)
done (took 3.295488152 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.105234895 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.061001719 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.097010662 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.096204745 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.064130628 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.061189568 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.095016527 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.06115292 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.095177651 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.096618973 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.099276105 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.098060598 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.061492532 seconds)
  done (took 2.457322986 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.068407242 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.07806645 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.079264164 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.059158417 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.069665746 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.078625507 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.059205059 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.077251351 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.084336936 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.078145909 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.077953407 seconds)
  done (took 2.165621726 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.06677184 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.077790356 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.080663611 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.059017057 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.073850265 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.078377594 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.059234524 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.078284178 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.081651775 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.07870436 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.078572792 seconds)
  done (took 2.15767968 seconds)
done (took 8.131646107 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.065935669 seconds)
  done (took 1.393569772 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.529177486 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.578478143 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.065880961 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.087253963 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.184303501 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.097850901 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.227713827 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.072076445 seconds)
  done (took 8.351259689 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.093299638 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.069758494 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.06566607 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.065773728 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.066498854 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.066536174 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.065330473 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.067394516 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.065995448 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.066175016 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.067308464 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.066523655 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.065802576 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.066608421 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.067468277 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.066580092 seconds)
  done (took 2.522416228 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094544347 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.093265606 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.070710649 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.071767333 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.06954144 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.068975445 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.071906212 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.070705926 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.067823743 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.069457542 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.072048374 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.070461815 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.069990517 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.06094873 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.07077466 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07266694 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.067994992 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.070630687 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.071766043 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.073071217 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.07161581 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.061266912 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.06960882 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07081071 seconds)
  done (took 3.17858358 seconds)
done (took 16.79428807 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.11189665 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.074346807 seconds)
  done (took 1.520196419 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.069333593 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.069156529 seconds)
  done (took 1.488240062 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.075240089 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.059315219 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.081162336 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.071024716 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.059488194 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.059528497 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.07903205 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.0597263 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.059544886 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.059782236 seconds)
  done (took 2.013800344 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.062579227 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.069477078 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.066173248 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.068462834 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.066640403 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.060979109 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.064307004 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.060942515 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.069101292 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.060199843 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.064828414 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.079855756 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.064192699 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.081757977 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.06425039 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.065209951 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.067475141 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.06386645 seconds)
  done (took 2.555226629 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.059907659 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.060437339 seconds)
  done (took 1.480031826 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.064449682 seconds)
    (2/7) benchmarking "second"...
    done (took 0.060732131 seconds)
    (3/7) benchmarking "month"...
    done (took 0.062976045 seconds)
    (4/7) benchmarking "year"...
    done (took 0.063338609 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.060139889 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.059724963 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.060239551 seconds)
  done (took 1.782612273 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.411886511 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.116920166 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.338270251 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.066750406 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.076924044 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.24648785 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.060882245 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.06688648 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.06598495 seconds)
  done (took 2.842670331 seconds)
done (took 15.05175374 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078548613 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.081096845 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.087365964 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.419902755 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.090284107 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.064473364 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.109943712 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.179643837 seconds)
done (took 2.490648367 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.213058781 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.419556023 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.967616286 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.064926936 seconds)
  done (took 3.816808142 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.323995525 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.081888241 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.075836314 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.065047406 seconds)
  done (took 1.920874935 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.062664035 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069202546 seconds)
  done (took 1.503308167 seconds)
done (took 8.833860533 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.062576643 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.061128452 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.062089134 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.061136878 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.086955268 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.061339093 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.061116035 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.060718132 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.061208035 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.060924105 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.060855778 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.060791967 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060955276 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.061279621 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061274068 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061130601 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.061140176 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061382645 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.061406294 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061374115 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.061151093 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06113715 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.061182223 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.061000991 seconds)
  done (took 2.891655694 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.079233705 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.063777732 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.065258576 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.0648951 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.065324163 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.065210132 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.065091472 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.063351329 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.065113437 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.063313423 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065435756 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.065767965 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.062836009 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.065452007 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063310617 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.065396514 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.065383222 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063546219 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063037059 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.065271206 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.064893476 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063016937 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.065143852 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064865983 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.065399805 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065298714 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.06333544 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.063682287 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064935749 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.065242217 seconds)
  done (took 3.335091064 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.062948102 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.057740469 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.058998494 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.066811546 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.057760345 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.058946515 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.058845101 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.057422033 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.057928307 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.059434264 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.058769708 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.05802453 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.059062228 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.058020066 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.057953354 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.05886115 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.06169674 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.075643173 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.058252949 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.058201628 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.062037366 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.058280758 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.057672911 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.057574836 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.058241924 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.057478319 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.057644157 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.058840603 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.057878423 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.058686404 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.058381379 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.061320424 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.063832644 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.057841172 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.066627029 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.062095548 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.058234026 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.061531262 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.059067847 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.057636971 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.057370118 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.058020776 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.057723751 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.058145757 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.066764198 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.058241559 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.058956237 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.058907144 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.058170907 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.057521396 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.057913061 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.060254913 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.062587968 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.059454809 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.057600844 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.058972243 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.057736078 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.059022185 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.05814969 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.057478639 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.057283779 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.060673953 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.059506779 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.058869149 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.075331304 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.059583727 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.066608129 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.058035188 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.061334928 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.060785117 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.058463679 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.073429398 seconds)
  done (took 5.704529157 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085059127 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085508578 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.062973872 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.062608324 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.058486772 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.058631401 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.06625796 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.058947689 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062541615 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077533172 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058853706 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.062671748 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062803912 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.062139323 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.058640621 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.062780309 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.067172792 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.058659344 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.058679811 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.062205817 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.058862099 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066340522 seconds)
  done (took 2.819620495 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.139062787 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06442726 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.101622422 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075568311 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067265317 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074885029 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.064151691 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064083996 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064218973 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064791354 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064914807 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064432056 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066999489 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064539911 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064952602 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064470688 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06411868 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065143211 seconds)
  done (took 2.689382523 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076237152 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.064222431 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085562507 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.063896015 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.06387121 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.063524546 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068287138 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.068753632 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.063807262 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.063866042 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.068858099 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063367039 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.063238211 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063944512 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063387145 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.063566838 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.063256705 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064189691 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068653023 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067920019 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068060439 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068554291 seconds)
  done (took 2.858649117 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074073519 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.062612443 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.076307214 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.063966444 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.058875376 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.058593071 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.063681749 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.063067598 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.063704854 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.062182167 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06317773 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.059056923 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.064673886 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.062720363 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.06490936 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063139546 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06264318 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.062795883 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062651841 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.058564202 seconds)
  done (took 2.663338732 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085797748 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.061707603 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061845325 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080030714 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061437347 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.061661447 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079822772 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.061315278 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.061411115 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.082353597 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06174364 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.061722503 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079798732 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080226537 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.061536581 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080339647 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079754442 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080358257 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.061454391 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061785199 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.08294854 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.061717226 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079993569 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06197636 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061851504 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.061618871 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061382835 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.080464726 seconds)
  done (took 3.349977018 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072235401 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.061011148 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.06164385 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.061823895 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.061243314 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.061635642 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.061249712 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.061912489 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.060951431 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062295879 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.061033622 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.061248787 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.060944645 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.060906752 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.060892818 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.061214079 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061661803 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.061621132 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.061784543 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061598504 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.060805919 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061122611 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.060920705 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06194478 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061340778 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.060979992 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061478398 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.061442332 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061100156 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.061358432 seconds)
  done (took 3.247396931 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.073387783 seconds)
    (2/2) benchmarking "in"...
    done (took 0.070226895 seconds)
  done (took 1.541912176 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.06166938 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075134199 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.058796099 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068472452 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.067218525 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.062038036 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.068105174 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067349836 seconds)
  done (took 1.920932147 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.066717254 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.087753151 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.060364148 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.06117313 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.064288982 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.115762704 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.074147803 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.069197976 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.074512357 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.061338737 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.060882942 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.071900002 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.060263555 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071159562 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.062237241 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067166712 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065144715 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.0699736 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.070707197 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.05862617 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069726032 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.060754183 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.05872943 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.061222042 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.059780612 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.065171242 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.073635212 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.070566415 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067003576 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.057650996 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.07684196 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.058735829 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.059889905 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.067413266 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.063723413 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.058871555 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.092997744 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.059183612 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.065049003 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.058586893 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.069600096 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077566496 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.07153639 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.075735579 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.060545122 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.061069991 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.058136762 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.06101774 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.061441658 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.066915318 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.059008648 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064856478 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.058240391 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.060899034 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.068588886 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.059027812 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.064961671 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.067234317 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070059491 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.067600619 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.066034397 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072350942 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.066371763 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.068370641 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.059797604 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075765797 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.06073219 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069808159 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.071535652 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.059888849 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071638164 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.058231001 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.057654186 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.058316552 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089009031 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.060772637 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.059858653 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.058787123 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.058270976 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.060155189 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.066665283 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.064861874 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064736998 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062637973 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072477753 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.06645634 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.05820596 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.066746083 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.075423765 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.060975027 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.058734385 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.073514776 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.061091457 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.058454254 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075095938 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.066670756 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.060889554 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.059942677 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.060976553 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.071815629 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.06041956 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.057599638 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065328006 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.060557163 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.062314465 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.064741587 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065262288 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.058110808 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067297268 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.064422429 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.060309622 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.05699107 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.061801936 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.059856377 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.057174841 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.066759879 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.05858844 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.072677802 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.063792397 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.070980566 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.07127794 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.067772184 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072650626 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.058516542 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.057435623 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.074803182 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.198017543 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.060213298 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075949933 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.058886283 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.06840125 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.058024711 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.060804698 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.066504232 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.057839597 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061721255 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.058902273 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.06489541 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.061203732 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.060864116 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.061993415 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066075141 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.070353603 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.060552724 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.066308066 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.059582715 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073204168 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.067913118 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.062470633 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063542875 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.05951387 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.070027186 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.064371115 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.066815888 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.058572621 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.059660263 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.059408719 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.068075504 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.067218066 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.060480486 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.06786592 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.062660103 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.059748793 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.059333351 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.059648935 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.061000225 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.0631334 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.0597034 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064534249 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.065821858 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.072197714 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070282501 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.065788511 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.05786804 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.057921606 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.060478214 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.058706168 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.061945642 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.066541291 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.07191164 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.069550973 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077351134 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.058873978 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.06676055 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.060241283 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074326971 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.070164603 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.059986224 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.064516046 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.057636713 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.06074574 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.066891068 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069236657 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.071701341 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.071879022 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.062431147 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.061840448 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.058480443 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071628033 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.058983792 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06586116 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.066435509 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.064278643 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.058700105 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.060559839 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.066906139 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.062609249 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.058635661 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.072458051 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.066259989 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.058251929 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071339537 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.058942481 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.068923431 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.058408553 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.061227457 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.06261918 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.061268579 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.066818074 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072563665 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.057660715 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.059597244 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07271861 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.061099778 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.061110249 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065564119 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.072202437 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.06242565 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.06567805 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068523033 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067592323 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.062133082 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.066735996 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.059820555 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.066453376 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.063200784 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.069196038 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.058430265 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.075167374 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.057381801 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.071745878 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.058891039 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.068223673 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.059416576 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.066888616 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.059750959 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.073959877 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.060700589 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.059765498 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.069787324 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.057366893 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.066560853 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.058400607 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.062398791 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.064094759 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.066709207 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.060661856 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.202012392 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.061331627 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.065846898 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.062318169 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.067612886 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.066881993 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.062090839 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.058189795 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.065496595 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068966579 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.065972836 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.061190389 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.060462387 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.059623717 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.067219059 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.061207708 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.060743019 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066127894 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.062672354 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.063352209 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.060707103 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.061531729 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.061125329 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066503848 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.067077703 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.075762427 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.065901151 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.065227004 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.067042289 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.058449291 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072828237 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.059281166 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.064799578 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.057520211 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.06589385 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.066854752 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.058999845 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.076433724 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.060160055 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.065043838 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070871542 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.065836233 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.060897425 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.075441796 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.062492751 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.065340499 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.065455765 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.061929427 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.063718331 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.06070075 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.065483982 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.066994246 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.068330644 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.059736769 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.064565073 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065948004 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.060927616 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.068250157 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.061363604 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.065515776 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.060589875 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.057660662 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.062409617 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.069281031 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.062647782 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.062723918 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.059070863 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.057929854 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.059277677 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.067569165 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.062654113 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.065604248 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.072177583 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.057535347 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.059837448 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.058807918 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064243769 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.075347943 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.067304303 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065454144 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.062831685 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.057677387 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.060690545 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.060989327 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.059097262 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.062972601 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.057956023 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.058358789 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067945465 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.060899388 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.06209317 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.058986117 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.060364324 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067226433 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.064755727 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.059197304 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.06410607 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.058846987 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.062407701 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.057591517 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.060564534 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.062601823 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.058034276 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.061150445 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.067572313 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.073309439 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.064195913 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.066090529 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.059637912 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.065559357 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072131816 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.067844944 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06008084 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.06661289 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.058295625 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.075361956 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.066805314 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06550304 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.067328775 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.059846373 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.07439415 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.062221138 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.067543783 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.072349638 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.059990993 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.067333159 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.058572421 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.072325473 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.06212944 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.058428352 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.065914741 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064810072 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.063780719 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.069695109 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.059524145 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.065860115 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065219345 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.061783814 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.060389039 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.060339425 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.065940337 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.072915723 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.059167463 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.063490411 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.065158269 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.065396554 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.062732154 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.069187866 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.065407211 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.05991465 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.06065736 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.060713578 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.059408456 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.068924804 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.058263516 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.061413693 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.061433895 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.057830552 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.063451765 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071934028 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.065823321 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.066128075 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.057828009 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.05719419 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.074239047 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.060702798 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.061653185 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.064859619 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.065788816 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.068847689 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.065764916 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.072732679 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.05842502 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.062768144 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.06848547 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.058856947 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.057412032 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.060293468 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.059444249 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.065881943 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.066233607 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.063696146 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.060127367 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.063532585 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.06901955 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.059489972 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.061315557 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.063268149 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.058565803 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.06651339 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.064373562 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.064932221 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.05915702 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.057359295 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.060360344 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.065632333 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.064653259 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.065885844 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.059228419 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.065941873 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.070595687 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.064002534 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.061883068 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.057812673 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.061990529 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.065693417 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.063009597 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.057447191 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.061663013 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.060742539 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.065241694 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.066067373 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.061225814 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.057204644 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.072862943 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.065000603 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.065498065 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.059614666 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.060086938 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.058466157 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.057663245 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.067575176 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.05730101 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.059630016 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.061568459 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.060059392 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.073742813 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.06499538 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.071303317 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.058719209 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.061515536 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.057600709 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.066000073 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.061073608 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.058037539 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.066396519 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.056977766 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.070915222 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.068187484 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.066514322 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.057671911 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.061467711 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.064610996 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.070431642 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.066221239 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.065415744 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.0618062 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.065815431 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.059553788 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.067377426 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.057313833 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.056766978 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.06660168 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.064589649 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.068660628 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.057457048 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.066236717 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.059627708 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.064485639 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.065006652 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.059344357 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.059518508 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.05926586 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.313907198 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.064715958 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069492574 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065664524 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076221866 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.061848066 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.0715989 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069522852 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.071891147 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073515368 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074019898 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068328819 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.061933185 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06734858 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.068121277 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.062713538 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.06468761 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.065177741 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.081163595 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.06316916 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.062084813 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.074820331 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.068140526 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.061266761 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.069060211 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.064566597 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.069737769 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.061106445 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.069328093 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.06493566 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.061526974 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.064714952 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.064637986 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.05958648 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.059512134 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.059908481 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.068180058 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.063789982 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.060243186 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.077449967 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.060896039 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066154671 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.069243818 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.064714876 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.061392394 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.057903873 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.060660969 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070202043 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.072883761 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.062652022 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066494865 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.061677897 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.067595541 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.058388137 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.06696278 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.066411854 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066626836 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.058992242 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.059752284 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072359668 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.072907039 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.063482632 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.067940375 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.06749132 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.061185671 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.080135592 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.066811284 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.060427477 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.069186272 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062282393 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.058497545 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.058708166 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.061619552 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070240456 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.060383899 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.062970032 seconds)
  done (took 40.346501115 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099808696 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.060022394 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.059123186 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.059260344 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071320841 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.059974008 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.05887714 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.060340193 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.060182404 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.062397492 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.059018911 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.058974801 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071382826 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.074377146 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070337602 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.063446598 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.059101549 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.060332836 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.058998522 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.0600706 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070207255 seconds)
  done (took 2.886075251 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.067898349 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.075006291 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.07117716 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076446084 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067762954 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064192347 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071393057 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064193431 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072152822 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069360267 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.07227845 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064230361 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.069989538 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.069635311 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069980597 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064798496 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072205051 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068155891 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.064356397 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071615272 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064712768 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.0714221 seconds)
  done (took 3.024699858 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.06167652 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.059778668 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.065863538 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.058452503 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.058391455 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.06261559 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.058322726 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.062199874 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.062134775 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.062191933 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.066166163 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.059580654 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.058531205 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.063363499 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.05883898 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.060324392 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.103428565 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.059928185 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.060487877 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.058754003 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.064876778 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067491965 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.05861897 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.059309448 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.062064032 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.062429914 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.058670293 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.062173854 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.059699667 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.062253932 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.059718604 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.058539097 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066399275 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065631319 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.062029407 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.062217101 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.060663526 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.060437323 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.058946142 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.058613961 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066532404 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.060271562 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.059225541 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.059934275 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066301899 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.05843517 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.058277384 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.065876231 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.058258283 seconds)
  done (took 4.551441106 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.072288299 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.107340837 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.064849737 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088253112 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.073218104 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.066322908 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.064194723 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089011162 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.060180226 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.060984604 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.074530355 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.074396869 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.062355204 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.064430163 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.064672289 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.062251391 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.063246964 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.061594552 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.065567921 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.061709645 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.065552517 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.065735338 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.072919751 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.074442583 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.063611645 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.061587362 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06160619 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.064017011 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.073661786 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.066222499 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.064332598 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.064676968 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.073915044 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.065141931 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.061518879 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.062036878 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.074709498 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.062517083 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.062211131 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.060220943 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.061935554 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.063843979 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.066000215 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.074819472 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.062251122 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.066398914 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.062523324 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.059976299 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.073696152 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.061987989 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.067253431 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.074896519 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06345309 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.062870488 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.064099602 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.074123641 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.062394114 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.060931518 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.062886401 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.07331152 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.06022124 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.063174388 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.074703427 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.061711053 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.066513304 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.074712109 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.066428904 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.063395721 seconds)
  done (took 6.211952885 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070749735 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.090066117 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070940814 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071835515 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070342314 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.070325334 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070427175 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.070511321 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.069776625 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070778943 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070434894 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.109529821 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.065263403 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075732653 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.070335539 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069869559 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.070089343 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069886667 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069954613 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069781985 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.070120575 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070780203 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.070100387 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.070934772 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.073304524 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065898001 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069813594 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.069821218 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070499252 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.069686314 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.073239693 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.070079611 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.070190242 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.070614968 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.073119885 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.069606239 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.05944803 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069786659 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.070478374 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.069764191 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.065228759 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070479823 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069875132 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.065642765 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070230612 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.069697983 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.070548045 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.073470376 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07891935 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071391485 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.070239435 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070874618 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070760423 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070171697 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.070864401 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.079308698 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071012387 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070842195 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070101608 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071636201 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071113308 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.078799123 seconds)
  done (took 5.970470858 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076427275 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067159374 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.079604901 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061167928 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.058445922 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068749842 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.058639799 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.058551027 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067462659 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.06789202 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068925978 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069076552 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07154316 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069186117 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068506017 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071534722 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068553827 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068563851 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067127195 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068784973 seconds)
  done (took 2.885873853 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.071643382 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.076254593 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.064635267 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069161629 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.064388058 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069101374 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.063505918 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064505857 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064995561 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064840179 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070239541 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070643808 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065254503 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068979665 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.070404311 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068784542 seconds)
  done (took 2.612360424 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.066197523 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.068107243 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.067617937 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.060799418 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063762939 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.059400784 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.060043099 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.058113751 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.058886842 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.073019995 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.059848999 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070971082 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.059847999 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.059262121 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.059640511 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.065703406 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.059175609 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.059817108 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.059643101 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.06580709 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.066567428 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.061580144 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.06360099 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.060050015 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065352843 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.067192762 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.061858743 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063468665 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.060258861 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.060445154 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065899843 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.066515175 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.060113944 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.060662027 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.059409613 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.060159216 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06043062 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.060398816 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.065528221 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.060182396 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.058468434 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.06518993 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.060130832 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.061458212 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.059296651 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.060209243 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.058819872 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.065333339 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.060325361 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065313216 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.060137726 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.062454187 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.060498387 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.067314733 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.06283145 seconds)
  done (took 4.950486131 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074333871 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.064395781 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.058802069 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.058785536 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.06358091 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.064227555 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.06389017 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.06431714 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06466924 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.058763128 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064189711 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.063477832 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064823203 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.064855342 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064300657 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063677257 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.058563926 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.063852418 seconds)
  done (took 2.676472146 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.0707433 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.063985595 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.06878264 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.063822116 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.063846076 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.062774619 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.059111385 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.059163467 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059293193 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.063413355 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063892882 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.063662862 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058927525 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.064017581 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.063573818 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063139699 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.062834863 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.059204808 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.063078114 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.058899502 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.062709267 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.05888967 seconds)
  done (took 2.902404095 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.087169671 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.081414505 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.120321328 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.076772183 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.084761279 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.068658418 seconds)
  done (took 2.045358191 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088404354 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102306594 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063554965 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.063481879 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07425135 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067280109 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067160882 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067369418 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074919204 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072389672 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067569979 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074527194 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074442232 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070055474 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074510597 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077761392 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067602721 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067787415 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064012447 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078067336 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068058479 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074484689 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068230434 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067456797 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067496069 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088632034 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077378815 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072683465 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069808475 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074470354 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077391278 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067875433 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075036889 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0728059 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.063602459 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074703423 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067674635 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077853326 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074360532 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069575466 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063520921 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074694795 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07482871 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069437842 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077915072 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06779756 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070316038 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06770372 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067607393 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080293077 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074545856 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070381696 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074514149 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077821102 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078034868 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080455309 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072386586 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070012739 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074829639 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072526843 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069740555 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0747168 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069751425 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072598966 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077767341 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069879587 seconds)
  done (took 6.333409684 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096802514 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064576933 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067638829 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072804623 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06981339 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067571421 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067879072 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067942501 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067814695 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064408786 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102671489 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068009892 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069953184 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069780711 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067850099 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067853092 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067576887 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069944001 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064232567 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080256477 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067945976 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070194686 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069996873 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069714833 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072532933 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077362456 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067608073 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067574533 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067548734 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067212203 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069551808 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06740462 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069795564 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063968498 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069700576 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067678274 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067551134 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069776402 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067610875 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074414174 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069428736 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077712067 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067490444 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067295354 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072535728 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067850751 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067461759 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064122116 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067455634 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064183276 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07248084 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072520222 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072693696 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069830831 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067858239 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067610795 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067651627 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06764005 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067891658 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077728476 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069777493 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067488876 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080339153 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06782187 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067664958 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069896177 seconds)
  done (took 6.187583402 seconds)
done (took 127.977892729 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.208249143 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.180838944 seconds)
  done (took 1.902170113 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071054968 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.094039016 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.072726918 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131647374 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066431188 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.102407091 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099731156 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.071404458 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065917397 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.068082092 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067849723 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.070351481 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.135102459 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.06675934 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.067185318 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070830874 seconds)
  done (took 2.857531174 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.103119638 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.181039919 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10636572 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065694848 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102420274 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073446552 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.066013318 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.076933804 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.069500173 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068933902 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073687697 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.072331276 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.068487468 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.071700019 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.069616719 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073553951 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.068340845 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073389456 seconds)
  done (took 3.029536388 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.0923605 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.083485218 seconds)
  done (took 1.726062661 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.153540008 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.100554342 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.139509654 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.315951967 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.132982076 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.279614122 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.129619722 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.127682923 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.110684468 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.120442352 seconds)
  done (took 3.152173352 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100035894 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.164422492 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.299453187 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.116023548 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072428719 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.084493912 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.118090585 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078481543 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.077578055 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.077350521 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.077255989 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076686111 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.095137589 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.074321136 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.07350786 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.07356055 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.09783711 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072443636 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.072604143 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.073013765 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.097879424 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067137469 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073719605 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072898201 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.075040976 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.074867022 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067748442 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.066156017 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.072794087 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.072630119 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076519085 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.08218201 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.075022069 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.101121365 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070456207 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.102222692 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.071753593 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.071200293 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073155311 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.071186093 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.074765017 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.07472588 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.075503618 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.07372523 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.06764284 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.072040826 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.067669156 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066172616 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.076657178 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.06782473 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.076522567 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076029948 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.100539084 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.067646222 seconds)
  done (took 6.111965771 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.10666895 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.102156984 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068442135 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.111498613 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102106834 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066960049 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.103246903 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096656426 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.104876879 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066868077 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066034205 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.066634892 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075089125 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.079894053 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.111407413 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.103199645 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067057385 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.066508856 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.10502702 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.105738679 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066352325 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098624375 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.094908923 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.105073081 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.063963311 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06664746 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.065455102 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.065782881 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.072622434 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.074023335 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.065736885 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.075089567 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.082437246 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.072475156 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065174548 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.065426798 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.065344795 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.074676082 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07463325 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.074889649 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.073492907 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064773082 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.065367118 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.06573225 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066930054 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.064769588 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.073698405 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.074712827 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.073399768 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065517543 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.066144205 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.065308359 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.065933518 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.074270085 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.073182883 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.075981997 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.075403469 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06575283 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065443965 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.067238189 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.075562058 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.075371803 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075711624 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066950223 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.075830241 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.065423338 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077030503 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081193206 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.06607597 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.0660282 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.065607924 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065496638 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.065993579 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.073192891 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.07342196 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066778717 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.065731124 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065372554 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.075671258 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.073520019 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.065389285 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.072492244 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.064651128 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.065731819 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.065953224 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066537798 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.072960647 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.075030635 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.066234213 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065535551 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.065330937 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.065775034 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.064731701 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.073316235 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.075191503 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.074514345 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.073755474 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066436907 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.074375696 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.073979472 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065885233 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.073808188 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.065590958 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.065830877 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066574525 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.07390957 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.073449626 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.07515367 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065988325 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.065521686 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.074523767 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.207087957 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.064395473 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.073734237 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076338969 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.074110517 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.065628474 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080465221 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066523656 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076074446 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064478759 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076114842 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066947602 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.07426149 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065833593 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.065064335 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.065573387 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.07415741 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066323084 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066377458 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066430665 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.065788918 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.07434701 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.077406431 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066851822 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.073806409 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.073950541 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.066494129 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.073511003 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065731617 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.074181526 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.065842677 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066151284 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064781773 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076764128 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.065527576 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.065895698 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.066044409 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.077317261 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.065666998 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.075828935 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.073799363 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065071879 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079427943 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.075925231 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.073334557 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.075987587 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066832317 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.065641732 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065565135 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.065261976 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.072784427 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.074380186 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066257065 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065311577 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.073107144 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.076416088 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.065601339 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.07368554 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.073457617 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.073862386 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.065929625 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.065486096 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.077062422 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.076192445 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.074302723 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.073343917 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074747739 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.065820757 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.073043379 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07359204 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065931091 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.07927093 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066207703 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.077952896 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.0745432 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.073014478 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07426302 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.075603866 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.076338378 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.076315924 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.079341415 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.065459439 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.065557858 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.073396127 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06600164 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065587768 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.073496152 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.066517314 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.066084528 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.079275117 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.064480707 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.075601142 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.065390889 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.075133858 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065174916 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066103985 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078329876 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06646384 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066132982 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.074112141 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.065814562 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.073332771 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077048254 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.073893823 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066128658 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066763014 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.07476393 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.075039135 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065854307 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.065876168 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066274404 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.073835869 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.073044742 seconds)
  done (took 17.931171533 seconds)
done (took 38.269559123 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.207046149 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.157134738 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.193521063 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.114890712 seconds)
  done (took 2.315145215 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.096544237 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.095964867 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.077663675 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.062195047 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.08271983 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.06231279 seconds)
  done (took 2.065798923 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.281138794 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.199538646 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.17646797 seconds)
  done (took 2.242235422 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.213706293 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.193487723 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.463294119 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.291828786 seconds)
  done (took 2.844489934 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.131166478 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.079576016 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.061609094 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.07278339 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.112244171 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.145655966 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.089671178 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.113563538 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.073085981 seconds)
  done (took 2.525651404 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.132522399 seconds)
done (took 13.734568833 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.189406142 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.109627495 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.116940135 seconds)
    (4/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.100000085 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.144900439 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.094620436 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.065521156 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.090183159 seconds)
    (9/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.170100477 seconds)
    (10/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.07512983 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.079191983 seconds)
    (12/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.193593145 seconds)
    (13/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.20996091 seconds)
    (14/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.239202275 seconds)
    (15/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.205820897 seconds)
    (16/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.297935267 seconds)
    (17/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.073289071 seconds)
    (18/309) benchmarking ("sort", Float64, false)...
    done (took 0.13002002 seconds)
    (19/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.222336706 seconds)
    (20/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.162162978 seconds)
    (21/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.071634729 seconds)
    (22/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071777561 seconds)
    (23/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.069200985 seconds)
    (24/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072006799 seconds)
    (25/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.150848697 seconds)
    (26/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.17382202 seconds)
    (27/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067217728 seconds)
    (28/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.213028081 seconds)
    (29/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.175149262 seconds)
    (30/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.141186339 seconds)
    (31/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.073926362 seconds)
    (32/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.193014216 seconds)
    (33/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.249561382 seconds)
    (34/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.069779841 seconds)
    (35/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.062091979 seconds)
    (36/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.074118827 seconds)
    (37/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.07752736 seconds)
    (38/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071279455 seconds)
    (39/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.156778819 seconds)
    (40/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.06183887 seconds)
    (41/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.078024622 seconds)
    (42/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.075708242 seconds)
    (43/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.076699613 seconds)
    (44/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.071118466 seconds)
    (45/309) benchmarking ("sort", Bool, false)...
    done (took 0.150823104 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.088894435 seconds)
    (47/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.072047006 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.089540951 seconds)
    (49/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.075559027 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.121360753 seconds)
    (51/309) benchmarking ("sort", Int64, false)...
    done (took 0.063473638 seconds)
    (52/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.204538974 seconds)
    (53/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.072821919 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.073956028 seconds)
    (55/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.238185505 seconds)
    (56/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071905044 seconds)
    (57/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.062711583 seconds)
    (58/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.071785787 seconds)
    (59/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.062334166 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.126512809 seconds)
    (61/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.062050848 seconds)
    (62/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.24302073 seconds)
    (63/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.13853516 seconds)
    (64/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.21203579 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.078828898 seconds)
    (66/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.170807197 seconds)
    (67/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.215869323 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.084161061 seconds)
    (69/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.159371117 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.13298715 seconds)
    (71/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.073834764 seconds)
    (72/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.064599609 seconds)
    (73/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.064061429 seconds)
    (74/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.073652207 seconds)
    (75/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.063220839 seconds)
    (76/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.070646659 seconds)
    (77/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.072415522 seconds)
    (78/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.070236038 seconds)
    (79/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.093189932 seconds)
    (80/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.215831976 seconds)
    (81/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.084451111 seconds)
    (82/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.213517807 seconds)
    (83/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.199879739 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.139971443 seconds)
    (85/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.15426051 seconds)
    (86/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.138641861 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.087785177 seconds)
    (88/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.076277349 seconds)
    (89/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.139967968 seconds)
    (90/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.086397426 seconds)
    (91/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.189768716 seconds)
    (92/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.063554358 seconds)
    (93/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.063971939 seconds)
    (94/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070826908 seconds)
    (95/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.073917394 seconds)
    (96/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.166335573 seconds)
    (97/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.074871456 seconds)
    (98/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080851407 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.11792107 seconds)
    (100/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.063643662 seconds)
    (101/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.167156484 seconds)
    (102/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.140271079 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.063320444 seconds)
    (104/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.065608076 seconds)
    (105/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.069662731 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091113489 seconds)
    (107/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.062514827 seconds)
    (108/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.062225006 seconds)
    (109/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.144797906 seconds)
    (110/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.137111505 seconds)
    (111/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.062793413 seconds)
    (112/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.062364709 seconds)
    (113/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.090503652 seconds)
    (114/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.080262273 seconds)
    (115/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.072368212 seconds)
    (116/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067093113 seconds)
    (117/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.070761832 seconds)
    (118/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072958288 seconds)
    (119/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.076311662 seconds)
    (120/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.075096662 seconds)
    (121/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.065452933 seconds)
    (122/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.066489841 seconds)
    (123/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.087125587 seconds)
    (124/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072089777 seconds)
    (125/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074278502 seconds)
    (126/309) benchmarking ("sort", BigInt, false)...
    done (took 0.238753269 seconds)
    (127/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072508284 seconds)
    (128/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.064223149 seconds)
    (129/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.070030966 seconds)
    (130/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.075365385 seconds)
    (131/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.063901393 seconds)
    (132/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.153069299 seconds)
    (133/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.165401117 seconds)
    (134/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.064182096 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.117804384 seconds)
    (136/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.161341691 seconds)
    (137/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.063382638 seconds)
    (138/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.069171661 seconds)
    (139/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.062849259 seconds)
    (140/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.1364483 seconds)
    (141/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.164329084 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.062659015 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.119904708 seconds)
    (144/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.072826965 seconds)
    (145/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.166223367 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.086608267 seconds)
    (147/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.073476527 seconds)
    (148/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.064858982 seconds)
    (149/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.130918112 seconds)
    (150/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074729181 seconds)
    (151/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.070896865 seconds)
    (152/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.069281408 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.119324701 seconds)
    (154/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.184549409 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.123646859 seconds)
    (156/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.070920684 seconds)
    (157/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072263409 seconds)
    (158/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.134663059 seconds)
    (159/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.160493405 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.093953053 seconds)
    (161/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.062417944 seconds)
    (162/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.165716205 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.123714782 seconds)
    (164/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.198738217 seconds)
    (165/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.0617813 seconds)
    (166/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.06155079 seconds)
    (167/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.085943336 seconds)
    (168/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.154782261 seconds)
    (169/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.063931585 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.078369494 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.062624951 seconds)
    (172/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.06961684 seconds)
    (173/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.202200392 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.076412754 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.088381712 seconds)
    (176/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.070795168 seconds)
    (177/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.063709936 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.140537728 seconds)
    (179/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.217944075 seconds)
    (180/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.063721192 seconds)
    (181/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.063672906 seconds)
    (182/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.062254536 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.062581 seconds)
    (184/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.138488694 seconds)
    (185/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.063641277 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.08503361 seconds)
    (187/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.064415047 seconds)
    (188/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.241386601 seconds)
    (189/309) benchmarking ("sort", Int8, false)...
    done (took 0.173737278 seconds)
    (190/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.063908531 seconds)
    (191/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.162054732 seconds)
    (192/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.072414799 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.063791958 seconds)
    (194/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.064769371 seconds)
    (195/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.075847179 seconds)
    (196/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.063151479 seconds)
    (197/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.06341929 seconds)
    (198/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.063765264 seconds)
    (199/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.065962194 seconds)
    (200/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.083747609 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.062940612 seconds)
    (202/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.062452908 seconds)
    (203/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.062239288 seconds)
    (204/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.06193905 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.117558346 seconds)
    (206/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.064179936 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.070860416 seconds)
    (208/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.065457282 seconds)
    (209/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.187611142 seconds)
    (210/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.062877759 seconds)
    (211/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.062799256 seconds)
    (212/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.064278571 seconds)
    (213/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.144998406 seconds)
    (214/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.066931988 seconds)
    (215/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.063274216 seconds)
    (216/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.136233653 seconds)
    (217/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.070318624 seconds)
    (218/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.06300703 seconds)
    (219/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.063952973 seconds)
    (220/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.064049021 seconds)
    (221/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.062546044 seconds)
    (222/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.063836348 seconds)
    (223/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.062346587 seconds)
    (224/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.06389409 seconds)
    (225/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.064333998 seconds)
    (226/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.159887775 seconds)
    (227/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074346434 seconds)
    (228/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074580594 seconds)
    (229/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.062662398 seconds)
    (230/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.137756247 seconds)
    (231/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.173830068 seconds)
    (232/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.091596374 seconds)
    (233/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.06770593 seconds)
    (234/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.063730414 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.138571828 seconds)
    (236/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.064592728 seconds)
    (237/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.062734388 seconds)
    (238/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071086872 seconds)
    (239/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.06338064 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.11083297 seconds)
    (241/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.069780086 seconds)
    (242/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.071462131 seconds)
    (243/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.062119298 seconds)
    (244/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.063114934 seconds)
    (245/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.118959545 seconds)
    (246/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.070993624 seconds)
    (247/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.062901423 seconds)
    (248/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.063654418 seconds)
    (249/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.062459329 seconds)
    (250/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.069531141 seconds)
    (251/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.064240921 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.083447188 seconds)
    (253/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.063744178 seconds)
    (254/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.062637511 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.083790319 seconds)
    (256/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.063466617 seconds)
    (257/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.088592116 seconds)
    (258/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.063430786 seconds)
    (259/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.061972609 seconds)
    (260/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.061927985 seconds)
    (261/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.062949407 seconds)
    (262/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.064039939 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.089572197 seconds)
    (264/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.062624674 seconds)
    (265/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.063818041 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.130020642 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.105829836 seconds)
    (268/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.067294821 seconds)
    (269/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.062397724 seconds)
    (270/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.063401791 seconds)
    (271/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071099669 seconds)
    (272/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.136777911 seconds)
    (273/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.06204385 seconds)
    (274/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.063514989 seconds)
    (275/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.06227392 seconds)
    (276/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.089440353 seconds)
    (277/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.07017141 seconds)
    (278/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.072068169 seconds)
    (279/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.064039641 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.092423777 seconds)
    (281/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.063735272 seconds)
    (282/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.061925196 seconds)
    (283/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.065104572 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.128339864 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.086607513 seconds)
    (286/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.091634762 seconds)
    (287/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.062663883 seconds)
    (288/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.063037542 seconds)
    (289/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.062105128 seconds)
    (290/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.063284584 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.062294342 seconds)
    (292/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.071005781 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073534382 seconds)
    (294/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.061410772 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.062072807 seconds)
    (296/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.061771194 seconds)
    (297/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.06905636 seconds)
    (298/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.062101764 seconds)
    (299/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.063574199 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.069503438 seconds)
    (301/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.064627702 seconds)
    (302/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.061629594 seconds)
    (303/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.063469972 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.062403591 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.062417169 seconds)
    (306/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.129593959 seconds)
    (307/309) benchmarking ("sort", Float32, false)...
    done (took 0.130286553 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.062539845 seconds)
    (309/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.06207906 seconds)
  done (took 32.146819581 seconds)
done (took 33.752136629 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084753096 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.087578425 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.071531391 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.083677342 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079050437 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.09395677 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071035337 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.076359583 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.07814214 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.076953514 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077105122 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.069940629 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.072194986 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.071973935 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.070340719 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086355182 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077420368 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.071675432 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.071502053 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.062292226 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.071775447 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.06352018 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.062520314 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069471368 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.07436893 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.07035335 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.07241945 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.072010023 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.063285725 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.063007416 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.067502829 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.071763863 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065976901 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.07625718 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072289247 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.071567651 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.073163475 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075848867 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.06291865 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.063595619 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073819738 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.063161215 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.071520264 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.069313403 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.067655155 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.069716307 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.071475729 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.075279201 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.086200132 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067073517 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073427609 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.073817159 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.0747189 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.068261976 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068055699 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.071346391 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.069209554 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.086435607 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.071778789 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067390064 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.072311116 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.071874742 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.069912663 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.070997381 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.071242649 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.073681193 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.07621479 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.069587211 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073718615 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070252857 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.062436241 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.071146962 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.067172512 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.063051962 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074593051 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075845383 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.061870551 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.066976543 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071203711 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071067318 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.06245819 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067343063 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.062015124 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.067532437 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066612 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069424995 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068045135 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.069978628 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.062439335 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.071495588 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070088835 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.070951965 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.062479817 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076079512 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.063213961 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.068889046 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.063288508 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.062814799 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.061947154 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.06788342 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.062452011 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066831994 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.071884628 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.061758906 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.068054591 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.076205434 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.063172539 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070611158 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.062285454 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.062473667 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.07465511 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073098722 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.062697074 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06682886 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.062630877 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.067811802 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.062631301 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.06256243 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.062764897 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.062592215 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.066796515 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.062699454 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067347359 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.068363654 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076432626 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.062504254 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067758487 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067156841 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063130838 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.06942099 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063018492 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.062696915 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.062351035 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.076824808 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067284166 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.062699484 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.068126766 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066940482 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.071079552 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.061816462 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.07174402 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069164042 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.206510135 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070157832 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.062445715 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074774809 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067481725 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067305875 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.06256187 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.062766383 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.062190033 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.062663933 seconds)
done (took 12.438796104 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.064280521 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.105276473 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.07193648 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.080518469 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.07542091 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.063844734 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.068702735 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.08202712 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.066904976 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.083063862 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.084471199 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.083888055 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.090762228 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.062713533 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.063287427 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.064536953 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.062942573 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.070262718 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.079817632 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.084603387 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.093063979 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.062919475 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.073066806 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.079151234 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.074640511 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.080669419 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.064826759 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.064233188 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.066013642 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.081531531 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.087217267 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.062875765 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.063976227 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.078893889 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.078071507 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.072300936 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.063776412 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.068071026 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.064361072 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.063240247 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.064682845 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.078377133 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.067754865 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.07077002 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.064261559 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.064117606 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.064470106 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.067343795 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.076724019 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.067443126 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.07101386 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.0762473 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.065775063 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.063410942 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.062016236 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.068758267 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.063235908 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.063937129 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.063731959 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.063681278 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.06333959 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.065224556 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.064147898 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.063856703 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.066972668 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.067282691 seconds)
  done (took 6.330697633 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.081926905 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.092411044 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.0804392 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.080465957 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.063521838 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.063723614 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.063641337 seconds)
  done (took 2.219376862 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.065432274 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.077143056 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080184268 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080460266 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.072954229 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.082045815 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.064204988 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.093691624 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.062915719 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.076233353 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.109907061 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.081224262 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067820795 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.07534342 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.064056467 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.071978948 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.063633307 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.071816611 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.0724756 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080221878 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067982449 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.090651025 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.077316088 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.064132366 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.084939446 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.069212242 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.063365392 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.063738775 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064927161 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.065125219 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064847993 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.10264159 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.068535384 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075580173 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065327262 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.063940698 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.070110142 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067345957 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.067338006 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.073006488 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.07016547 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.065578749 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.06319721 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065171094 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.066625539 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.067888054 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.062975168 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.065418059 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.065405339 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.075995654 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.06257855 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.068612404 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.067261005 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.069220006 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069567386 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068778237 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.071803341 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.065862458 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.075991973 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.071869895 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065020456 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.073607979 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.072811045 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.070139949 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.072764729 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.068576966 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.068776451 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.069811949 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.065269444 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.065854734 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.065229832 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.072709673 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.063522116 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.06587443 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.067529701 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.065450869 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.068205042 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.080482135 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.080943246 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.076734851 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.065599818 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.065180984 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.068026605 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.080322683 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069514024 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064930398 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067215737 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.062706684 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.068021295 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.065481743 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.069489733 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.065388115 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.07259771 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.066512189 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068006311 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.07302975 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.063376601 seconds)
  done (took 8.533756869 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.067515754 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.065188483 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.066485126 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.064983089 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.065067892 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.065211358 seconds)
  done (took 2.125077406 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.088367474 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.065065227 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.078252802 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.065041474 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.099342045 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.072492789 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.072841854 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073692646 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.077784542 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.077301481 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.072396203 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.07525645 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.071882588 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.066818232 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.071778347 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.065898801 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.072331041 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.068321257 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.075918527 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.066843142 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.078128023 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.066692957 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.066904229 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.076794682 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.067719553 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.065544088 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.064742418 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.076814278 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.076183505 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.07681207 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.066256436 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.06846116 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.072396518 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.07372348 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.072751969 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.072194961 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.064697319 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.070836838 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066990893 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.067976302 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.074763959 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.067158278 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.067679592 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.070700113 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.073568612 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.071912037 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.070778442 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.068341962 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.072442122 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.070375923 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.070158627 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.065785787 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.067803986 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.070725813 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072404287 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073985648 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.070647251 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.072224206 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.066636194 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072459707 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.064921052 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.068015441 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073489848 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.068005996 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.070660676 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.070563119 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.072442659 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.066760105 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.066902287 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.064682371 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.07061931 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.064924719 seconds)
  done (took 6.81080591 seconds)
done (took 27.700891437 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.991131131 seconds)
  done (took 2.659591607 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.564154302 seconds)
  done (took 2.271049165 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.691209744 seconds)
  done (took 8.398527913 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.291169972 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.334980808 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.711914959 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.128390907 seconds)
  done (took 3.20203278 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.703158923 seconds)
  done (took 2.422196015 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.233738361 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.221646042 seconds)
  done (took 2.173670936 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.347723107 seconds)
  done (took 2.062101957 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.076711117 seconds)
  done (took 2.786314745 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.230230959 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.158500275 seconds)
  done (took 2.107149048 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.453847518 seconds)
  done (took 2.17141062 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.325228443 seconds)
  done (took 6.047256722 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.235231945 seconds)
  done (took 1.989150934 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.231344879 seconds)
  done (took 1.94872624 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.731593184 seconds)
  done (took 3.442060201 seconds)
done (took 45.405071603 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081665916 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.082836494 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.082463786 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079258998 seconds)
  done (took 2.008831501 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.072281056 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.067934193 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.071528831 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.07180352 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.069990605 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.070880847 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.070824313 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.067526034 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.069296924 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.067837114 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.066135883 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.067339197 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.070500114 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.067383613 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.070272114 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.072171465 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.067470623 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.067621735 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.070523721 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.067328691 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.070331394 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.067281057 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.065588355 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.066549698 seconds)
  done (took 3.367688374 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.07632793 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.069943267 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.072766123 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.06940712 seconds)
  done (took 2.015018965 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.074986774 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.08411223 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.085867922 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.090457195 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.07397947 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.074522396 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.082545135 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.083888646 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.062888875 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.086519656 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.065275889 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.063951713 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.064113918 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.084648377 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.082234904 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.060503752 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.062919177 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.074451441 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.073620561 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.076432916 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.064871667 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.062891264 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.07389094 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.07396539 seconds)
  done (took 3.50727386 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078672525 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.062718768 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077815255 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.089965208 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.091667 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.062836929 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.079004805 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092257303 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.139142424 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.062838233 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.068714304 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.063212287 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.104448452 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.063049265 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.079816779 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.109382047 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.112908939 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.066902601 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096647036 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.063494828 seconds)
  done (took 3.397079365 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.07550358 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.066879547 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.06737572 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.06258272 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.074260345 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.070507376 seconds)
  done (took 2.15174695 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.066003442 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.065630261 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.064700337 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.06407075 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.069498871 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.064648334 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.063263766 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.065014076 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.064836655 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.064102691 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.064235828 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.063187309 seconds)
  done (took 2.505963819 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.159497533 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.066986073 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068401011 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066327124 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.069029086 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.063369897 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.078932272 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.065694139 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.083524732 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.064011176 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.064293493 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.066704404 seconds)
  done (took 2.643984971 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099488682 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129571871 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095188459 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.071084681 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169769208 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093000477 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.089005573 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.121338644 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091655994 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.067333159 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.092158402 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134492691 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094735129 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.097537722 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080680914 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124102989 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.109227484 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086926144 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111696319 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080749595 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.068930959 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132296667 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.068630274 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.0919996 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101118414 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.096383004 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108665252 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131589631 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082861285 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.088288764 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081078801 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.073159667 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.103962017 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.083361669 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.096136977 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092037275 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09674844 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084016886 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.084623604 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118781132 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152606625 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099270224 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099199324 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133179212 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077623208 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.107408358 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079999056 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098274977 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103515136 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092673291 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074364019 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090889655 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.105972136 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101445032 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.080908543 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080519287 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.117132874 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.097812118 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095760422 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078970941 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106145074 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.086188402 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107287582 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269065771 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139892543 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101045539 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135273987 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122904581 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094524889 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.088671391 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.090413112 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074916831 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109663808 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097367747 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135625961 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108807432 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09945901 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.096588275 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081364589 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107382902 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113790312 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093232723 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093055861 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145285302 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107942246 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089414067 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090470854 seconds)
    (88/481) benchmarking "5d"...
    done (took 0.145845456 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.070362768 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14738608 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08812655 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119833861 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096187425 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137144043 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090617734 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.082454596 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104863736 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102539453 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.0884997 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101950653 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083354712 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112561597 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092332197 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100295131 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.080838904 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090447744 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085957225 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.096353348 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.074000987 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103175876 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115131784 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113122079 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.074132387 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105996322 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085256361 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.076550318 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092226408 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138108718 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082761382 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.074415224 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149873483 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.092864754 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.117503949 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110525597 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.083283647 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.267402778 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134713807 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092382974 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089082378 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075844804 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154003763 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07491262 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118328812 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080646869 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101997908 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105253273 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130872618 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138528165 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095178342 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077317723 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09111841 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 0.106787957 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086302539 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08506494 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07562168 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.108002798 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125140478 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.099742648 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079979763 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.091753419 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.068348243 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113415922 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075709124 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08476501 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095945559 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.08749388 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.088793932 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142228818 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.083781681 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107166723 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097136946 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.066767557 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091010475 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152305236 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082544157 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.111341561 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116920448 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083158163 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.067535661 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.095760554 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.07252316 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108515024 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.092584453 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106866374 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077969749 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107330801 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.067836116 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073476543 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128525058 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10105294 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088538412 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.13216001 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104514964 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.088953695 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.104208531 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.097206658 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096557117 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102075852 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.26125106 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106852793 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.073878656 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129421626 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091571075 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.077200925 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086886551 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079148091 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.077707112 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099281599 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114285517 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088244264 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101425109 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101741199 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08963596 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.109146154 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089169844 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078854724 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131016675 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075565988 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.074080869 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087461259 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.105892042 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087803844 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.133396342 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.079220318 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135324654 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091983473 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080772416 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11462259 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.068271697 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.069234011 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.081227937 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091768838 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115614096 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078212328 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077202596 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117650274 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131852561 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097883402 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10278517 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.068094507 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090249178 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135517175 seconds)
    (233/481) benchmarking "4d"...
    done (took 0.113981587 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080914876 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109703406 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084164002 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129837283 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096276421 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120119665 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105950437 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110355244 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.091328845 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.080326741 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.072848403 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087363592 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11085214 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08563781 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081328295 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.067496139 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073647481 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092793673 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090325202 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112214387 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087421938 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135570936 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.072480548 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101226835 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.259949269 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107889165 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09000615 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095118238 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.091628423 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091701155 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091748974 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092557083 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.073070499 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126411969 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102832545 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078059394 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088289432 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094382931 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105856287 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108443623 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110499625 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093239441 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10713146 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122786341 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098194796 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081784778 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083667164 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.093164071 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.084507043 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081092457 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.104002968 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111764032 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098018563 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108740755 seconds)
    (288/481) benchmarking "3d"...
    done (took 0.094487045 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 0.093095041 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106530661 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093087819 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088336549 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.118476396 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152094185 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.102978504 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.10438416 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084987744 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106372855 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105550618 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113531896 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.110906799 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108899259 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.070663569 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.074597468 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.069841116 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106435387 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078480901 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117481885 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076363205 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10663488 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09733163 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079768337 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.066363117 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101201513 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09308613 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.081511111 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123315539 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.113399255 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.072681765 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09037373 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106820049 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082992044 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124038319 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.102525515 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101753875 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.071886375 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090600359 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.073645367 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.261665827 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.101766589 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.077935297 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.076184799 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.06947047 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106971794 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083568284 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109331208 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088811094 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102127828 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119817744 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13097632 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086682581 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096384893 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11798641 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11343037 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.081850424 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112617348 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133760547 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.120741074 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.080462609 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.083989481 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105652004 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106354252 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101935134 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076108011 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079145534 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108339751 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113968739 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.067883857 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084398259 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.069987522 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.084066527 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112390722 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095302737 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082200765 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117596631 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074450434 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1076155 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095649084 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122720502 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122246027 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144274638 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096901957 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085288353 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076714847 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124068766 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.071184934 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118373944 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11278064 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087957979 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.067919419 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083244656 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.095523902 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 0.626655908 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108697221 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.075281092 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135244687 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086837962 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115335544 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084503289 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.118266112 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089662943 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101772172 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091493693 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283878769 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08141914 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110315472 seconds)
    (397/481) benchmarking "6d"...
    done (took 0.176610562 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111801181 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.107983717 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074266629 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.085404626 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.073327932 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.079085801 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.080913155 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086584195 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107950043 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.084457206 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105795741 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.079370385 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.106480434 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091382257 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08807283 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.09927676 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080616151 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13706255 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086974558 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12225572 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106326641 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078331292 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073839347 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.087518539 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.100857759 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081438169 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094293247 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.078125906 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.075993156 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152229475 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101128627 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084940556 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102692546 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.092081542 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.086836637 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091904245 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117431423 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110225488 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07298055 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.087503989 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103761295 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078729436 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.07475177 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096684277 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.069135696 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08951315 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099228591 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09601126 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090079114 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.102301866 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.07809402 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087101494 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109597394 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085251335 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.076773553 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076430894 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.076211794 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.076166918 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10301177 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108450343 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113972116 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109024317 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091116667 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094606393 seconds)
    (462/481) benchmarking "2d"...
    done (took 0.078507252 seconds)
    (463/481) benchmarking "7d"...
    done (took 0.224082723 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.2353551 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097445431 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.105456679 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.076032033 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.131595831 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088648153 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089303605 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096815932 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100811607 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151747592 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074216538 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109535476 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094244058 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109476982 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087550369 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10565719 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095694336 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09294838 seconds)
  done (took 50.52872838 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.092028053 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.147290669 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.153329715 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.077720661 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.09120857 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.115411657 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204788195 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188170571 seconds)
  done (took 2.914695338 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.066098671 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.079781644 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.101426857 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.080433383 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.064646732 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.064953989 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.204864967 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.07936621 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.063831263 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.101185264 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.074304877 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.06623127 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.419664941 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.063688453 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.064327278 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.073987847 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.064607635 seconds)
  done (took 3.555840401 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.366824028 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.599829972 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.338880818 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073560785 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.978417941 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.087061395 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.321303026 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.134971623 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.076887019 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.559012315 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.371626877 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.127394213 seconds)
  done (took 18.876391718 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.073338259 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071990389 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.076272605 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.07594807 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071358989 seconds)
  done (took 2.197353122 seconds)
done (took 101.39476183 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079495263 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.165010709 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.065948564 seconds)
  done (took 2.098088827 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.082072002 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.079062353 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.078856923 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.077127346 seconds)
  done (took 2.162190508 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.072120988 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.074253372 seconds)
  done (took 1.982843906 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.244942788 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.164001866 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.091435533 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.081413091 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078327205 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078738444 seconds)
  done (took 2.083768467 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.070860873 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.069621874 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.07038142 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.070105092 seconds)
  done (took 2.111543888 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.065973354 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.064380411 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.066505877 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.068843336 seconds)
  done (took 2.099503904 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.082056125 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.082547172 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.076097869 seconds)
  done (took 2.075715669 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.094191118 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.095162454 seconds)
  done (took 2.023053444 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.07855284 seconds)
  done (took 1.913578393 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.088048655 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.096458048 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.151963307 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.111406033 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.151572958 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.135063658 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.076061422 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.07756401 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.07165365 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.070714228 seconds)
  done (took 2.865412202 seconds)
done (took 23.831970805 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077466334 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.365436232 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.357347861 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084114843 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669520872 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.354367876 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.996411558 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09014205 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.098283066 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066690835 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083022572 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.646601513 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.987175141 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.328193306 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.973689408 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.327472257 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.647477032 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065753405 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.065178861 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06645742 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.980778799 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.065185395 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066584544 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.066018996 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.684519483 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371248869 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067322932 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.32698787 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.065558818 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06884602 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354407851 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067711868 seconds)
  done (took 16.341870277 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.069192474 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.119999163 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.070507983 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.081853166 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.06890661 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.067541246 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.068888163 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.066493862 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.107398903 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066364167 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08381527 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06567887 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.070562237 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068352165 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086993919 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067282373 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068087169 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067594287 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066467677 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070908761 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085347214 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066291037 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067552015 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067329964 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067367085 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079895178 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068352118 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.066351534 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067604837 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069604157 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070683785 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068670711 seconds)
  done (took 4.201478415 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119514133 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125792047 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.071327355 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.105714215 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.118033909 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068461324 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.148538834 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.090708685 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112645966 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067304073 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083677373 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.066094687 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101798093 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068475507 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087953403 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067058953 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068478766 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067438111 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066818323 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067751761 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085799677 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06669482 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068016002 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067633417 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068013304 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082058171 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068188582 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.066536441 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067005099 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06961114 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071126125 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068788765 seconds)
  done (took 4.476247344 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.068315264 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.070351103 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.078029151 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.079200738 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.064607527 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.067694345 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.068913545 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.0649857 seconds)
  done (took 2.417638907 seconds)
done (took 29.292109726 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.076451739 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.065424058 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.069351768 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.085451084 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.07118754 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.068635386 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.062242415 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.072177282 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.069898041 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.069299762 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.07030468 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.064095423 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.067902185 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.062966561 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.070212931 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.064711013 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.070960461 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.068598953 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.069790883 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.070263916 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.066951909 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.070049282 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.07232029 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.069572229 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.06975844 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.069350391 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.073651246 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.069918038 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.06487631 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.067841481 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.067150685 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.075912224 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.071216502 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.071682547 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.064333442 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.064265326 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.069072966 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.066791855 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.070945327 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.073910657 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.066254384 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.073711764 seconds)
  done (took 4.732336518 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.082958657 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.087037998 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.081094997 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080015223 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.096860295 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.079259765 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.084711753 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.076528085 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.075110125 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.083855797 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.07100268 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.078054447 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.076227797 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.070052539 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.074449011 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.072148805 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.077146491 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.072241777 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075758357 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.076000014 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.084493164 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.069922173 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.077122283 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.076859262 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.072041927 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.077739345 seconds)
  done (took 3.896345436 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.071426579 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.082126751 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.089529548 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.147453481 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.10974483 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077050837 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.078484462 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092132335 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.09498174 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.065705215 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.069082491 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.09034914 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089995344 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.072309037 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.106260559 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.082353737 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081233538 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.067680302 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.072599999 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.094649112 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.085976064 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.083426713 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092370542 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.082309808 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.064546299 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.067621477 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071567319 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.078839646 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072091647 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076467513 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.069558268 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.068193994 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.065671409 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.076120694 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.069296936 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.064108221 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089273211 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076694184 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078602668 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.107850842 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.073844234 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.066076934 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093119104 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.126035777 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.064688202 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.068227866 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.068116473 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076878733 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.065709601 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09316932 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079353472 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.064611317 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.065299818 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066071527 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066306315 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080491321 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.066733674 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.067115921 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076093701 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.071133347 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.08665232 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070037288 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08415621 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.064893174 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075359464 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.065706891 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.066276212 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.063413477 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.095906862 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07142621 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.113575358 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.065530966 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.063845461 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076334462 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075019545 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.071053689 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.064391707 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082617218 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.075525103 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.068296742 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076381481 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.067634715 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.067359737 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.096199822 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.064766654 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.064012343 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.063418979 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.068080623 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.067568805 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.065347578 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.078432717 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.064197236 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.067657386 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.079506417 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.064356786 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.065246621 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.068251154 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.067176959 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.064008588 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078335399 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.068538158 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.066003878 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.07615377 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.065611264 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.067619091 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078392144 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.071885601 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.064278072 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.067169867 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.068142949 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.066519582 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068617601 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.067777372 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.067142844 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.071910123 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.072271099 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.070270216 seconds)
  done (took 10.718998842 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.160678293 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.151241641 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.066626984 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.144060751 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.073495642 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.070768316 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.144674193 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.084971927 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.065815268 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.06658924 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.065279353 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.095009803 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.090568476 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.102707124 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.070971475 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.065573242 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.08916031 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.097789551 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.147974827 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142690171 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.08921264 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.072382845 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.068178803 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.067051938 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.066761442 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.073905708 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.083363999 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.074532001 seconds)
  done (took 4.489519886 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.075640743 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.090278397 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.069383084 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.07642568 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.084926981 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.065824566 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.067631814 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.067572405 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.079972101 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.075000178 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066255626 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.070261414 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.069435272 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.068671865 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.066426755 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.071735692 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.071676694 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.064752605 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.069419602 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.070922972 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.075559719 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.090646902 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.070071755 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.065508411 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.068017282 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.065318504 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.074434361 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.077543317 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.065044289 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.080530863 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.063433544 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.069703041 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.079428432 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.066156899 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.064884909 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.065915643 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.066010384 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.065798201 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.065759811 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.064095437 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.064155319 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.070279252 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.063969384 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.073393657 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.078869989 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.072632545 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.067263798 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.068329534 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.068082004 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.062975295 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.068074981 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.067820859 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.067684467 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.07277391 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.069131595 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.068223237 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069209119 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.091419209 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.071163563 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.065234442 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064864077 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.064327549 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.067736637 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.07535801 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.082541434 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.068069023 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.064428922 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.065576304 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.071287931 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.079295436 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.065112749 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070172358 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.062930558 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.065984599 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.067738327 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.067877796 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.066226267 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.064088059 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.064957693 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.06573023 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.065495536 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.064988744 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.065115673 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.067658602 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.06379626 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.064206532 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.065949122 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.067245823 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.073924698 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.064558265 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.06911267 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.066402107 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.063914894 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.067927169 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.070733508 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.068046115 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.078394528 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.076310138 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.065875956 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.064167437 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.07821093 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.06786839 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.064988196 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.072023051 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.070101794 seconds)
  done (took 9.212709631 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.089439603 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.067451671 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.081955955 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.088762941 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.075606812 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.070580403 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076574209 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.067032591 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.081734196 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.064451396 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.074182276 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.064615067 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076941993 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076209491 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.067383309 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.0762136 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.068289842 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082958576 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.080024018 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.064219419 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.074434328 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.077852262 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.077456151 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.079730097 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.079439616 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.080692632 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.077322285 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.068747037 seconds)
  done (took 4.023696294 seconds)
done (took 38.922031871 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.937775198 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.092015539 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.924122445 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.112322455 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.059862157 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.946074432 seconds)
  (7/12) benchmarking "nbody"...
  done (took 3.068932487 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.919873208 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.116355112 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.969900144 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.250658537 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.451264213 seconds)
done (took 67.762378278 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.947689255 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 2.085497333 seconds)
    (2/2) benchmarking "String"...
    done (took 2.191213576 seconds)
  done (took 6.131088664 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.19953568 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.727243181 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.18758104 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.922984622 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.923454447 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.354196909 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.703383589 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.371843058 seconds)
  done (took 32.048060302 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.174604214 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.152256076 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.645258497 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.674977771 seconds)
  done (took 16.545127221 seconds)
done (took 66.816272021 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.958653757 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.918926728 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 7.008019506 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.945025618 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.928171175 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.919564109 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.920397636 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.921117135 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.921262315 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.00873458 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.91884838 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.929385472 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.919944868 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.924270566 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.452997765 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.972438547 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.942967039 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.933908282 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.931262888 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.936215765 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.927096088 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.918643874 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.40090331 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 2.081494934 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.54817622 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.151828571 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.443322159 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.32742157 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.929701458 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.917434542 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 7.123841542 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.323618858 seconds)
  done (took 209.258058698 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.922891108 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.963507435 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 4.04675809 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.96688253 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.384792423 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.102496561 seconds)
    (7/36) benchmarking "scal!"...
    done (took 3.021323069 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.411244055 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.926451275 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.925865627 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.053107109 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.924862914 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.060429488 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.920421849 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.962844702 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.930105775 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.162693617 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.083757444 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.967414677 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.086404278 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.950391352 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.902097657 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.85230056 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.038652374 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.931502991 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.942686673 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.929332479 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.935675582 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.106499094 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.139900926 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.947076098 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.967324856 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.125059147 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.787980851 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.931002464 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.944526524 seconds)
  done (took 175.113930708 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.126597386 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.927459881 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.920114501 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.976178046 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.043124188 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.920385991 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.598583328 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.924578719 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.694789198 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.917556201 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.918327425 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.917287819 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.92191338 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.930666964 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 4.011062666 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.916217358 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.932110096 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.918834456 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.94220499 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.917226903 seconds)
    (20/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.916351448 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.918757391 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.917265669 seconds)
    (23/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.91962577 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.917155649 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.91835449 seconds)
    (26/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.921804051 seconds)
    (27/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.917445676 seconds)
    (28/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.34241365 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.165830489 seconds)
    (30/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.912003546 seconds)
    (31/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.915780653 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.461876465 seconds)
    (33/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.929588141 seconds)
    (34/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 22.570969217 seconds)
    (35/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.909951757 seconds)
    (36/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 2.006012065 seconds)
    (37/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.965348428 seconds)
    (38/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.047207474 seconds)
    (39/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.914533891 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.132999736 seconds)
    (41/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.98949229 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.910090808 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.915089279 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.979512834 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.922210232 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.913564947 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.914738356 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.919044838 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.980043287 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.174867105 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.910615263 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.035555754 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.418276317 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.91439006 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.913777907 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.91275119 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.534138717 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.913311321 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.917247717 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.919802198 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.918505035 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.912902621 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.913196852 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.303701404 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.982140735 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 22.090689792 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.278077135 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.920590901 seconds)
    (69/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.916312126 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.720960903 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.131177814 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.899311686 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.896694544 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.897691905 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.898385856 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.895544725 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.899031154 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.019115397 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.901607606 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 5.026998045 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.976625979 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.01485615 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.894310696 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.904787576 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.721182591 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.963525382 seconds)
    (87/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.889128635 seconds)
    (88/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.929803762 seconds)
    (89/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.728835765 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.892273581 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.264898169 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.681467596 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.891362021 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.889772029 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.902493318 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.888030498 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.891274877 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.895054163 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.971123057 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.887238647 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.012291093 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.628817389 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.152224392 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.890150263 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.891023059 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.900489407 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.973444422 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.00804432 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.894808895 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.96567669 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.896654691 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.89421097 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.98398341 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.888896799 seconds)
  done (took 417.232992628 seconds)
done (took 805.646269282 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.469792584 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.436820982 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.537603061 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.457793177 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.426999824 seconds)
  done (took 14.152306142 seconds)
done (took 15.980411904 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.907985205 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.896765268 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.950586291 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.974509387 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.905568149 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.911680007 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.976553062 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.913457854 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.941852383 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.947582101 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.97636335 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.976347843 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.912224542 seconds)
  done (took 27.015526033 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.902190187 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.048180575 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.137130019 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.932990724 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.902312121 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.129045232 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.956775246 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.032850288 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.042832816 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.125878596 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.138007511 seconds)
  done (took 24.174069055 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.903790139 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.046868407 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.137914387 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.941458412 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.90211691 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.128573121 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.963750713 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.04097632 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.048043343 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.133285006 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.139278836 seconds)
  done (took 24.220613049 seconds)
done (took 77.235152872 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.897308588 seconds)
  done (took 3.722480025 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.923382165 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.060990512 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.895312627 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.894861021 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.89605363 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.899606279 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.893283299 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.8963369 seconds)
  done (took 17.185779724 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.894195521 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.894831861 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.893672147 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.895256412 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.896088565 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.895264671 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.896221187 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.894678483 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.893554152 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.894705555 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.894796935 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.895488203 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.89522271 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.895791972 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.894388871 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.89577214 seconds)
  done (took 32.145671974 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.901101726 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.895012242 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.895088112 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.895524856 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.89520351 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.895142775 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.899365612 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.894128106 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.896497724 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.896290273 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.896162216 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.89786536 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.894531678 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.895810776 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.89501846 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.895916895 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.899279168 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.894552501 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.899725012 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.895041064 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.895461404 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.898223232 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.894390786 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.894623516 seconds)
  done (took 47.336683331 seconds)
done (took 102.226516021 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.651221777 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.659178297 seconds)
  done (took 10.136235007 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.89482633 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.896695366 seconds)
  done (took 5.620881664 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.895035286 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.895918119 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.89482636 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.8968462 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.894759868 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.895107199 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.896293632 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.895653652 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.894430163 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.895212113 seconds)
  done (took 20.779184272 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.894930239 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.895369512 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.895496829 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.898974156 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.895493124 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.894996328 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.895414622 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.895092379 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.897636621 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.895062084 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.895164502 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.894956116 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.89639876 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.896165554 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.894762212 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.895306674 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.895777283 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.895556729 seconds)
  done (took 35.946674194 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.896878755 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.895986282 seconds)
  done (took 5.618631042 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.896278932 seconds)
    (2/7) benchmarking "second"...
    done (took 1.895304913 seconds)
    (3/7) benchmarking "month"...
    done (took 1.896550799 seconds)
    (4/7) benchmarking "year"...
    done (took 1.89544228 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.895641157 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.896261418 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.895609711 seconds)
  done (took 15.095446731 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.89608168 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.063339555 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.122127626 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.744317391 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.898659537 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.898615681 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.216601769 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.899216695 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.899814513 seconds)
  done (took 21.465564061 seconds)
done (took 116.489197416 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.716140481 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.894805284 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.167061515 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.948688316 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.92413917 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.1909369 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.936138128 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.16503418 seconds)
done (took 43.770804422 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.920062004 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.89355489 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.917239447 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.918957094 seconds)
  done (took 22.555984937 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.896983378 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.217817793 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.916923347 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.676505288 seconds)
  done (took 22.551648218 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.278736777 seconds)
    (2/2) benchmarking "read"...
    done (took 2.269804356 seconds)
  done (took 6.37972581 seconds)
done (took 60.237305239 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.896018383 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.897731582 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.897145223 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.896645435 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.896940536 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.896465312 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.897840917 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.898021431 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.8976357 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.897450651 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.899014521 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.896410131 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.897294228 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.896974373 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.896615875 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.897509008 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.899467138 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.89798669 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.898021201 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.897231658 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.896676138 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.897233578 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.900363445 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.897835644 seconds)
  done (took 47.367964399 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.899326363 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.901027052 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.899592004 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.898190894 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.898214112 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.898446868 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.89758546 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.901002402 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.898229545 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.897656364 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.899387194 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.898465683 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.8994772 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.898580248 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.898282901 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.898736713 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.899461259 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.900205704 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.900717073 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.899164899 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.898721951 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.900438348 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.898973761 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.900313907 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.899443867 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.898636378 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.898869436 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.900482117 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.898956936 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.899977429 seconds)
  done (took 58.804652091 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.899423344 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.900409718 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.900183528 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.899788597 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.900110837 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.901072813 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.900387659 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.89982519 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.901022649 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.899319669 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.899558198 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.899510317 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.90025031 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.901656501 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.900610247 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.900887818 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.9005232 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.902453717 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.903924981 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.900934764 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.901200697 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.900767071 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.900881205 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.900417659 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.901572924 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.901500784 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.901483553 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.901772848 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.901137495 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.9014528 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.901368322 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.900174034 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.900551902 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.902091357 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.903362972 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.900275907 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.900913597 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.9012035 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.902193193 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.905186595 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.902314734 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.902095204 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.900899757 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.901669836 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.901887675 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.905686174 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.902114711 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.901428932 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.900771971 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.901430664 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.904772189 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.901893368 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.902180654 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.902570326 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.902515504 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.905867218 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.901920361 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.902046312 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.902923697 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.902234916 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.904765315 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.90234275 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.902835248 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.90414901 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.903133997 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.903984372 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.905118839 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.902478737 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.902614987 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.903109701 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.904472556 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.905053874 seconds)
  done (took 138.766355394 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.904540213 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.904375966 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.902856009 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.906844878 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.904257493 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.902816539 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.904056014 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.904712313 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.906361537 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.904626152 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.904066463 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.904435639 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.903277774 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.904172057 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.905186426 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.90394584 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.903344579 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.90433933 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.903852447 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.907057534 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.904158027 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.903496812 seconds)
  done (took 43.7300492 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.904712926 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.906055114 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.905460476 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.903677819 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.904848078 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.904790645 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.904288195 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.909413465 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.905055882 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.904652462 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.904467543 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.904173051 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.907865326 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.905212106 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.904711584 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.904915154 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.90455389 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.906497539 seconds)
  done (took 36.129607089 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.905175484 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.906426898 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.90501627 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.907571295 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.905513652 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.905445815 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.907156465 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.905539515 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.905551289 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.908638333 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.906202171 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.906858147 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.905450962 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.908631996 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.908854457 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.906240439 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.906129177 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.90522064 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.905891978 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.909821433 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.906194702 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.905729895 seconds)
  done (took 43.77773658 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.904824098 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.908164894 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.905127762 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.906051404 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.906087168 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.90680829 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.909220135 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.909906168 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.906079456 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.906759805 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.907095096 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.906761626 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.909016213 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.907335445 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.906316228 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.90676415 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.907133364 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.910266361 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.909678925 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.907606711 seconds)
  done (took 39.982739976 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.908620367 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.913499244 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.90746168 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.906821013 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.907799338 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.90807778 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.908157705 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.91080178 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.907232039 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.908002882 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.907932853 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.907952615 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.910635625 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.90918555 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.909023212 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.908978562 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.912537682 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.914169351 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.908803562 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.909786889 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.908790579 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.908921964 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.911240655 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.907238325 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.907846084 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.909010633 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.907944526 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.908154016 seconds)
  done (took 55.292219584 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.907817619 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.908261985 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.907519249 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.912214041 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.91169223 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.908157902 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.908576262 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.908939957 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.909108111 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.911089288 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.90827563 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.908839289 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.908208709 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.908842874 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.910173423 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.908734118 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.908125095 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.908937675 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.907579977 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.910403158 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.911149539 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.908548209 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.909641411 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.908214151 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.909737304 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.911976413 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.909218963 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.910400181 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.908922651 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.910211566 seconds)
  done (took 59.11988778 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.929774287 seconds)
    (2/2) benchmarking "in"...
    done (took 1.930575676 seconds)
  done (took 5.700395962 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.910300415 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.9133485 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.909670346 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.90956419 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.911061523 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.909955421 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.910828234 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.913124281 seconds)
  done (took 17.127529758 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.911042365 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.914234408 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.910882793 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.91426933 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.911925095 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.918839305 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.912835196 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.915184173 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.915331542 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.911068057 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.914752308 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.914056605 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.918504683 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.916226798 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.911888541 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.911621935 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.912866427 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.91366303 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.913707846 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.911411977 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.914693419 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.912602479 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.912993385 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.915985804 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.917075272 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.913402589 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.919561415 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.913307567 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.913355201 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.916021399 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.920521841 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.912589298 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.913046119 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.913577265 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.914662301 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.912611746 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.918394442 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.913826086 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.91391842 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.918806796 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.915621261 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.914437314 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.915830674 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.920698111 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.914504804 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.916186542 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.913050868 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.91398522 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.913172591 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.91665101 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.922417377 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.914901837 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.913584329 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.91360951 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.916796542 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.916926872 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.914517341 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.915040288 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.923009553 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.919384424 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.919409043 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.930901187 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.921303377 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.914196397 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.914738881 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.92069916 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.935842973 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.916202707 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.915959391 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.913790064 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.923177637 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.917640653 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.913548078 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.914502462 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.925265205 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.921801583 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.918724897 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.91476967 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.913464202 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.915369414 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.915370189 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.91953744 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.916517976 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.915912943 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.925067427 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.935964968 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.919077956 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.915353421 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.916846166 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.914057016 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.918916735 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.917261805 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.917068103 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.914217122 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.917209185 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.917601775 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.914903156 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.916831472 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.915126936 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.924171382 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.916908937 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.916404344 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.919921604 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.923226053 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.915095891 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.916260268 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.917065248 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.921984641 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.925134262 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.916877668 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.917354054 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.916886571 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.92150431 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.921274126 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.916706515 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.919364743 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.924682253 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.926086254 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.922544704 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.919398188 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.920778585 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.919462684 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.925642751 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.937961778 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.917432675 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.921202081 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.921516578 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.928579713 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.924247472 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.917624915 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.920585996 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.918009836 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.917122371 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.922383451 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.917756657 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.918849698 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.917862307 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.918781195 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.921434997 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.918642879 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.919161425 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.919481736 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.921410039 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.919608798 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.924341665 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.919452608 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.921208071 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.925872607 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.920592547 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.922706485 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.918846382 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.921778064 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.920821684 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.92041583 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.920550371 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.919931438 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.919725168 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.921002985 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.922063252 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.922447842 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.919873445 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.920183491 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.922488419 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.92072909 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.921165917 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.920203513 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.921279013 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.920668595 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.92172147 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.920384701 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.92589066 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.92049861 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.924814948 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.919798108 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.920038389 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.924233846 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.920538826 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.920011777 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.92293595 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.930320088 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.923828612 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.928931647 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.920215425 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.927607802 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.921102306 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.923511494 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.921144574 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.922742868 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.922274681 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.921202373 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.920989799 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.92644881 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.939988478 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.930385546 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.923229061 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.922153893 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.925725114 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.923824248 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.926527213 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.921590871 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.923127851 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.924174471 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.922506435 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.922546606 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.921920329 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.925188753 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.922607636 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.922511779 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.925936871 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.922813779 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.922136615 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.924436022 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.923283326 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.924245894 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.921763103 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.922404852 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.922558118 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.923182728 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.929477221 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.925064309 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.922622712 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.922783712 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.927281966 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.92285747 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.923022073 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.92343548 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.927862409 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.925650915 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.923599318 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.929155767 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.923585351 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.921238683 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.922248216 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.922242251 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.925039071 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.922158964 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.925906762 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.930342184 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.926950835 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.922839772 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.927562818 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.922888091 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.926706598 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.924381928 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.92459817 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.924361616 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.92461074 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.924231289 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.924369141 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.929982288 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.924133002 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.92517276 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.923826739 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.926481132 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.925295145 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.926249601 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.924839942 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.927629115 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.93416598 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.929090189 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.926092971 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.927171412 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.927129229 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.926483182 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.928314467 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.926085702 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.936236651 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.934145074 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.928049027 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.925073128 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.925232565 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.927102784 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.92495642 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.926407899 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.931685539 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.926970865 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.926346221 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.928861631 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.926060054 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.925817121 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.9316088 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.926586553 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.928870684 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.927209477 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.928434759 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.925391724 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.924791478 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.927320023 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.92643179 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.93015198 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.929688968 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.926116835 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.927066045 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.925805413 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.936500323 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.928208227 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.926467294 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.933189953 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.927700396 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.926046896 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.928345662 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.925846769 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.928261861 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.928266563 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.926950368 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.930970888 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.927478249 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.930247145 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.936491297 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.93058513 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.934769939 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.931886104 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.936107312 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.929229255 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.928419708 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.930164585 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.930289852 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.934464822 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.927212906 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.926846282 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.937515105 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.928014695 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.926663056 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.930785937 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.927072231 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.931898647 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.928632343 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.928698584 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.931775106 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.930719504 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.927525846 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.930997422 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.927511787 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.927672263 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.929063797 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.930115671 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.93161381 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.927926797 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.92813308 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.929648754 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.929383287 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.929504084 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.92864998 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.927802046 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.92776124 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.935945339 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.932835039 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.92866172 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.932294693 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.928177241 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.937150404 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.935538292 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.929623032 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.929481045 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.928613666 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.929450934 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.928434451 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.931721042 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.929761338 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.93083374 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.930252686 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.939441531 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.93969506 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.932332188 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.932272597 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.930525637 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.930937217 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.942003939 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.950918829 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.930014614 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.931781392 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.933538258 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.939525652 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.932882474 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.934993735 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.933348521 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.938160235 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.932672272 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.928705969 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.933023101 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.942065662 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.930515678 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.934782532 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.930247329 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.935480544 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.931415547 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.930737275 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.930663904 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.934517481 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.930517089 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.940487545 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.930945236 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.930101828 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.931914974 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.93104358 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.931576162 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.930503187 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.933435649 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.934498498 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.932187963 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.931605549 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.933661105 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.936228264 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.935275054 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.935590136 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.940386542 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.932394882 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.933008092 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.934126917 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.932965215 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.934545496 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.933894193 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.931939405 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.939242258 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.93263246 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.932949441 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.935643302 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.940352286 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.934414785 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.935211217 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.933047863 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.937667102 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.932939076 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.933400064 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.936767236 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.940576162 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.936251685 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.942651027 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.940432421 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.940050198 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.932570319 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.938595493 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.939462856 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.93319164 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.934970625 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.933575486 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.934580839 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.934770209 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.934384017 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.934768429 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.933845881 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.936902327 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.932410892 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.933762136 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.935225685 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.93567932 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.935506854 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.935703249 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.938138365 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.933621915 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.935090766 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.932880758 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.934929264 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.935004209 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.935764267 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.935197222 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.933927254 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.937373777 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.936767621 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.937880656 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.941198407 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.934780594 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.937097065 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.935497644 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.936122515 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.936025976 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.935226842 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.934051898 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.938048899 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.941177779 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.935779971 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.936204512 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.935371688 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.937854723 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.935566162 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.937198897 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.937811573 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.934409546 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.94291714 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.936158193 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.935985513 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.93533703 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.934321407 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.939942277 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.937075596 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.939336307 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.936365588 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.936496116 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.935204379 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.939175018 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.942423494 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.94387931 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.938384424 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.943049206 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.941244958 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.938342925 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.937626362 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.935771531 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.936739059 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.937316044 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.941592 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.938821001 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.939122538 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.936800722 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.938492969 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.937411923 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.940567553 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.938896538 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.937523896 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.939395934 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.944369842 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.945556721 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.937897035 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.938195074 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.93754717 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.940197073 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.945550379 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.939062099 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.938368012 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.937586538 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.939045661 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.939045151 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.949693442 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.945015994 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.942270606 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.939061885 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.941817455 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.955079047 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.940931693 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.945916823 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.966163484 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.940042764 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.938316072 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.939529931 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.938403888 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.937997479 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.940356952 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.93899196 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.947687715 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.939732692 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.938288228 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.946561596 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.939071599 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.939047783 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.939125091 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.938042557 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.944218179 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.938651459 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.946877814 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.93930131 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.938499229 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.938868617 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.940056375 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.942432909 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.938247063 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.938622586 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.940791998 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.938828111 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.93991492 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.947442067 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.940149503 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.941373939 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.950608315 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.948786312 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.941680924 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.939784679 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.941083163 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.944673978 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.945716218 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.940452177 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.942343589 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.947150369 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.943758169 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.946265133 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.942373501 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.940444511 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.941714666 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.940317652 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.940186944 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.952254015 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.950729863 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.940563841 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.940457083 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.945396628 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.945028445 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.948021663 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.946755295 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.94085971 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.941699793 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.940870555 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.940599899 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.941005869 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.940762324 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.944211715 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.947961353 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.941834327 seconds)
  done (took 1151.510995208 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.940702008 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.941825993 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.944635006 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.943270718 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.941131906 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.941365026 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.941685762 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.941917333 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.941944514 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.941159957 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.942018573 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.941385705 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.942705888 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.941563218 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.943020797 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.941871384 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.942389695 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.942626895 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.94679279 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.942314706 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.942822097 seconds)
  done (took 42.657776709 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.942959931 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.944061313 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.941798233 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.943390225 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.942876708 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.94362779 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.943950097 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.942930909 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.942195014 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.942418686 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.942740235 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.945929262 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.944861721 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.943598511 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.943783998 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.942885126 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.944098291 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.941683292 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.943229249 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.943249233 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.943011454 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.943748282 seconds)
  done (took 44.624098958 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.94450429 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.945249426 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.945027774 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.943691711 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.945184191 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.944663495 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.942723999 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.944590803 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.944468155 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.945430784 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.951594491 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.950517447 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.944274106 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.946219666 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.944448301 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.945625786 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.092523774 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.94502653 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.944686367 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.946211255 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.945114152 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.950708325 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.944414549 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.944689196 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.945519741 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.945600738 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.945230316 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.94672323 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.944329236 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.946714987 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.949727028 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.945637748 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.947789476 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.949343908 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.946551744 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.947922376 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.950755861 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.946700009 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.945939092 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.947616285 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.954573919 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.965751441 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.946199939 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.946915398 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.953583356 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.945923801 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.947055596 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.949745518 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.953051971 seconds)
  done (took 97.429589377 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.949503029 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.945055308 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.945899454 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.948343819 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.945440003 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.946590474 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.946120592 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.946805836 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.947107498 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.946946611 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.947234758 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.947184082 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.947576673 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.947550598 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.945722427 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.947117337 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.948029669 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.947761953 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.948149747 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.947077886 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.947886757 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.946386565 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.947279909 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.947759152 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.947271753 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.94678538 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.947810361 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.948269263 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.947974281 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.9477924 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.948715739 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.948326852 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.947652953 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.947363501 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.948204813 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.948115243 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.946946454 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.947976966 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.947876344 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.948340924 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.949927015 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.947769887 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.94904081 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.950681007 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.949211845 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.948674789 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.95030328 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.948243534 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.948836472 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.949207456 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.949067067 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.948378125 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.947922076 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.949218564 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.948892621 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.948842806 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.950724625 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.950428525 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.948932102 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.949038285 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.949595773 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.950435177 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.952034916 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.949538764 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.950693466 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.948778869 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.950752968 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.949760766 seconds)
  done (took 134.35680729 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.950790524 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.950796939 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.951042141 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.950995218 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.950713149 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.951649478 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.951159941 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.950678861 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.953775138 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.950405033 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.95197766 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.95090179 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.950537099 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.951340399 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.952232095 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.950447271 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.951487943 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.95163336 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.952526414 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.951769691 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.951132646 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.951203728 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.951934669 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.95163749 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.95393184 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.951547056 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.951040539 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.951825307 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.95236456 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.951819849 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.952723392 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.952353294 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.952120576 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.952614313 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.951549879 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.951308506 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.95241036 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.952313362 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.951110347 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.953104133 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.951876296 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.951696588 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.952703093 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.950630323 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.950793715 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.952258752 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.952234043 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.952538435 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.952291449 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.952914399 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.952526358 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.953091363 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.952435998 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.953159893 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.953323954 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.95346058 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.952696481 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.952135951 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.952882989 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.952793439 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.953983564 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.952515623 seconds)
  done (took 122.901614412 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.954222931 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.952942337 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.952434637 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.953032914 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.954311992 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.952950941 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.953249258 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.956059847 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.953160792 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.954167491 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.953555225 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.952416756 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.954332584 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.953837333 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.953790175 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.954372833 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.954598678 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.954068477 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.954407412 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.954913395 seconds)
  done (took 40.957435788 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.95381627 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.955090739 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.954189923 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.953410385 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.952998613 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.953435115 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.953505392 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.955221761 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.953625438 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.954912345 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.954321074 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.95391299 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.954263551 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.955397985 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.954856623 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.954221011 seconds)
  done (took 33.148741629 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.955397335 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.953780705 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.954690942 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.953478338 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.954167392 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.954897954 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.954077304 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.955660817 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.955818366 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.955829033 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.956527611 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.955046981 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.956162331 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.956546478 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.954647285 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.954519324 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.953747828 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.953523342 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.956294832 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.957220167 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.957103648 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.957033801 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.956799227 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.956071823 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.956989984 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.956753288 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.956306839 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.956407038 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.956225377 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.956361388 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.957069744 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.95969081 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.956138778 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.957502426 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.957274349 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.955845626 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.956329352 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.95630279 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.95499366 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.955158401 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.957063262 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.956840954 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.957639849 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.95559278 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.955697017 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.958112293 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.957264813 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.957751237 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.956013144 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.956316719 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.957426241 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.957807953 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.956440551 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.957381061 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.9573257 seconds)
  done (took 109.471860867 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.956945145 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.958371959 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.956675838 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.957759695 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.956489024 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.958070642 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.95622021 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.957041185 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.957544784 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.957928146 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.958312103 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.958267905 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.958725383 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.958725115 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.958535095 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.959004404 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.95838914 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.958345901 seconds)
  done (took 37.126544167 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.959766939 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.958961952 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.959819759 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.958375153 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.958645059 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.958829832 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.959201174 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.958146841 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.959450019 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.958045072 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.959487476 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.958932569 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.95861537 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.958391814 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.958611634 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.957961476 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.958111901 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.96171928 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.958525041 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.958529889 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.958833748 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.959257068 seconds)
  done (took 44.981928004 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.958011571 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.958980029 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.973106863 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.97826789 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.978859185 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.990063533 seconds)
  done (took 13.723507473 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.959450618 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.959937065 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.961334381 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.961575752 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.959284873 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.959698367 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.960343376 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.961014714 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.961087515 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.962059232 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.960449869 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.961000551 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.960301754 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.961938416 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.961141408 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.961001251 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.961441537 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.96099603 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.96209054 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.961790901 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.961424944 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.959972575 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.96074458 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.961864243 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.961374275 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.96025069 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.961283234 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.961438743 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.961680806 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.960288641 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.960245431 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.961231677 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.961113872 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.964861199 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.961621343 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.961718083 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.962273591 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.962128478 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.962917571 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.962242715 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.962418354 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.9621358 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.962434848 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.96135397 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.96240215 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.962382802 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.962951559 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.961670453 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.964223755 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.963741532 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.962971292 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.961963589 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.960975069 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.962460086 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.963271502 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.963365656 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.962868959 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.961909942 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.962541516 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.962594228 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.963100214 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.962014473 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.963578907 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.963482101 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.965907467 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.963072378 seconds)
  done (took 131.369689245 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.962256385 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.963834561 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.963387012 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.962356625 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.965013383 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.964734265 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.963277597 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.963410535 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.963176315 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.963874969 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.96292424 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.963684547 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.967162555 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.964191255 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.964636618 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.963772931 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.964101313 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.963560538 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.963080961 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.962978146 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.962511756 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.963847466 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.964704914 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.964439159 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.963616935 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.962808367 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.963871906 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.966891114 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.964496118 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.964644241 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.964042247 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.964689986 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.96524371 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.963458181 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.964580311 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.964001291 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.965401021 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.963266371 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.963333877 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.963647756 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.963458296 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.96436951 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.964961604 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.967416578 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.96453293 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.965341243 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.966211766 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.965131005 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.964847894 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.964946408 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.965967123 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.967972554 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.966684526 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.966378684 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.966587466 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.966006792 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.965884999 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.965696214 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.968668467 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.965354397 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.966584633 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.966727267 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.965730635 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.966698393 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.966632502 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.966281605 seconds)
  done (took 131.566570437 seconds)
done (took 2683.459733421 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 7.023151465 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.206968549 seconds)
  done (took 16.122259125 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.140282396 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.092391643 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.979095212 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 7.005265681 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.973015854 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 7.002202682 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.985852484 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.974152065 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.979089346 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.979287983 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.979067074 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.161979699 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 7.035754027 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.974151691 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.979319115 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.071170387 seconds)
  done (took 54.216064992 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.986035551 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.984096076 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.99503031 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.984144558 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.985003844 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 2.002219754 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 2.015289853 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.989471478 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 2.04525261 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.998058253 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.109265871 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.994409814 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.982275459 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.052777805 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.993863682 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.999879828 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.080062466 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.061937677 seconds)
  done (took 38.162466218 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.063212638 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.991700361 seconds)
  done (took 10.966162707 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 7.01212037 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 7.000850703 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 7.0063132 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.993101018 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.998809984 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 7.004753666 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 7.009523066 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 7.017966579 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.984995118 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 7.010445205 seconds)
  done (took 71.945501613 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.987095188 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.98323749 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.984744605 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.98038169 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.979013181 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.97825466 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.980785346 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.977454505 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.677759144 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 2.021667978 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.991880622 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.99100653 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.9811852 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.983222811 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.977998464 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 2.00583442 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.122810386 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.97837449 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.978101949 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.986503456 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.984082154 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 2.033752087 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.997640366 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.984405023 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 2.01374994 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.674240927 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.994343137 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.987452312 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.089441211 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.979773362 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.980231915 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.189466065 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.986659146 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.446185441 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.264848274 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.986605575 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.989554012 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.993093888 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.978646831 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.095205971 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.982987005 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.987482103 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.980007041 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.237998413 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.080700157 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 2.029193644 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.319849413 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.984737436 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.9816732 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 2.01748629 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.985126736 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.984501584 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.99953373 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.504542918 seconds)
  done (took 139.178962994 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.981925097 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.326730739 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.147544147 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.984229633 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.264599684 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.18382114 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.979404602 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.02685908 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.982364483 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.212028007 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.234855932 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.085322607 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.982270386 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.9829451 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.979915958 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.978872281 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.135952514 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.049669628 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.98142295 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.979437595 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.009031522 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.222628854 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.102151127 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.982440587 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 2.005815567 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.191905638 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.099554059 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.086973465 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.761582934 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.981806708 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.04335229 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.985858381 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.980862603 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.977688185 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.136697218 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.07553361 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.061384068 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.981294759 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.98094399 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.980081017 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.637597362 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.183147709 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.07344117 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.110722794 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.233687795 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.184577917 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.760003797 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.981301454 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.744086565 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.142497208 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.209852365 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.216053369 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.101179247 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.98556129 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.240876927 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.980853886 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.981455604 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.22949776 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.201413197 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.081627392 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.986252211 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.983578992 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.980543524 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.2197722 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.98273465 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.07505958 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.985251416 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.981436351 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.079349114 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.080207131 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.213309647 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.190980698 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.010800523 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.321391521 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.484857999 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.231665664 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.046940622 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.230224602 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.985000137 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.979228311 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.061044418 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.79923305 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.239265087 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.225121103 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.228352611 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.015895673 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.71655575 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.985468481 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.209463066 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.203932309 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.242906722 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.230664362 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.220942159 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.299332148 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.98499842 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.983970218 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.211884316 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.105866083 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.985381155 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.332529354 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.219274278 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.539806101 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.0115385 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.288860479 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.115625934 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.986222402 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.612047553 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.986079242 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.214426384 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.026760633 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.987193076 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.986278904 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.201954345 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.96886492 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.986272954 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.855305002 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.049169428 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.985750729 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.217716922 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.989010322 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.254479591 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.986560425 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.219230309 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.169981712 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.015224021 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.158514845 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.232889924 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.988312789 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.230561763 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.232586387 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.099949383 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.260815971 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.869839748 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.985817563 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.275132843 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.986487787 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.98748797 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.158394964 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.989707105 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.132548281 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.988949591 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.28082334 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.005418894 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.218989888 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.989416272 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.241746045 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.016747157 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.037096239 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.986421824 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.111608665 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.989291893 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.809458292 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.146411772 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.990863505 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.986191966 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.530743562 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.987907252 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.142180475 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.218328523 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.006011626 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.060243051 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.650053211 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.987821603 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.069268089 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.007078913 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.369848981 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.990096789 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.239897663 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.988359539 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.98907516 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.988331801 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.224004007 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.222226421 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.990460812 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.986265371 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.893592871 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.990345939 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.988256149 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.172350663 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.333225372 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.987998206 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.190049136 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.989801719 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.115248898 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.991504685 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.054935447 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.320549531 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.98751864 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.988239841 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.989794801 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.990851532 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.988286241 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.198069868 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.014578695 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.519269365 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.124486699 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.266350704 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.295311895 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.233396119 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.032628607 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.992134518 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.241020946 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.990132689 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.049465148 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.990902388 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.009489675 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.222831882 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.993989384 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.248263675 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.264004703 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.862370576 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.036694725 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.993101907 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.990581176 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.990425891 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.136967347 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.076832703 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.991699418 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.989759248 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.104950314 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.11184897 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.197720106 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.99484881 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.07204128 seconds)
  done (took 929.778636321 seconds)
done (took 1262.265459157 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.990518656 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.989303281 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.992742166 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.992097381 seconds)
  done (took 29.882608229 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.993987972 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.992032962 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.993100798 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.993967297 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.994139976 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.99399715 seconds)
  done (took 13.880497487 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.084264152 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.991575771 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.992137524 seconds)
  done (took 21.987244044 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 2.067347397 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.41098395 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.134354849 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.437564782 seconds)
  done (took 10.969240479 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.993120597 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.994090084 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.99316108 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.994804971 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.994754104 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.99594646 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.994894397 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.994429072 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.996958615 seconds)
  done (took 19.873378696 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.723968178 seconds)
done (took 103.236679788 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.127375538 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.335311826 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.916225146 seconds)
    (4/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.649026798 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.126185488 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 2.056909975 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.126024614 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.763190525 seconds)
    (9/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.996660032 seconds)
    (10/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.121680964 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.230462821 seconds)
    (12/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.383979237 seconds)
    (13/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.07599961 seconds)
    (14/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.376520853 seconds)
    (15/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.299999885 seconds)
    (16/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.158762871 seconds)
    (17/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 2.007148275 seconds)
    (18/309) benchmarking ("sort", Float64, false)...
    done (took 5.720046111 seconds)
    (19/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.991454737 seconds)
    (20/309) benchmarking ("map", abs, Float32, false)...
    done (took 3.594882647 seconds)
    (21/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.157528099 seconds)
    (22/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 2.014213438 seconds)
    (23/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.12696218 seconds)
    (24/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 2.015602137 seconds)
    (25/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.992157285 seconds)
    (26/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.472973767 seconds)
    (27/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.055779036 seconds)
    (28/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.992793064 seconds)
    (29/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.259945016 seconds)
    (30/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.905341892 seconds)
    (31/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.080045311 seconds)
    (32/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.304290556 seconds)
    (33/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.33984246 seconds)
    (34/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.088494207 seconds)
    (35/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.375909001 seconds)
    (36/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.386593405 seconds)
    (37/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.994557426 seconds)
    (38/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.164126263 seconds)
    (39/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.544015336 seconds)
    (40/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.102403183 seconds)
    (41/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.550104833 seconds)
    (42/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.675432711 seconds)
    (43/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.419036378 seconds)
    (44/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.081262615 seconds)
    (45/309) benchmarking ("sort", Bool, false)...
    done (took 2.210871963 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.356022678 seconds)
    (47/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.152584817 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.134949844 seconds)
    (49/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.99696381 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 7.012562218 seconds)
    (51/309) benchmarking ("sort", Int64, false)...
    done (took 5.736832935 seconds)
    (52/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.258007841 seconds)
    (53/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.556138899 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.377739081 seconds)
    (55/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.255277663 seconds)
    (56/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 2.020717393 seconds)
    (57/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.151753878 seconds)
    (58/309) benchmarking ("perf_sum", Int64, true)...
    done (took 2.016694615 seconds)
    (59/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.302184794 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.13169261 seconds)
    (61/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.082508561 seconds)
    (62/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.303801008 seconds)
    (63/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.475026638 seconds)
    (64/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.46022104 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.38763974 seconds)
    (66/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.995319959 seconds)
    (67/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.248473201 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.942909738 seconds)
    (69/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.120578669 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 2.034354781 seconds)
    (71/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.998368759 seconds)
    (72/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.825116323 seconds)
    (73/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.881228717 seconds)
    (74/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 2.011153493 seconds)
    (75/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.461534312 seconds)
    (76/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.219186647 seconds)
    (77/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.999618443 seconds)
    (78/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.204501558 seconds)
    (79/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 2.013168046 seconds)
    (80/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.828212619 seconds)
    (81/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.90214786 seconds)
    (82/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.084700259 seconds)
    (83/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.753557924 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.132297155 seconds)
    (85/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.143901786 seconds)
    (86/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.284804606 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.019998671 seconds)
    (88/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.999624547 seconds)
    (89/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.232092349 seconds)
    (90/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.000297199 seconds)
    (91/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 8.531851639 seconds)
    (92/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 7.001121556 seconds)
    (93/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 7.028425507 seconds)
    (94/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 3.801804189 seconds)
    (95/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.39001072 seconds)
    (96/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.273692111 seconds)
    (97/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.005060368 seconds)
    (98/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.834418862 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 7.007244028 seconds)
    (100/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 7.011715934 seconds)
    (101/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.204307011 seconds)
    (102/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.000016998 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.375007646 seconds)
    (104/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.826409913 seconds)
    (105/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 2.111984546 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.61503328 seconds)
    (107/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.76218267 seconds)
    (108/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 2.000459428 seconds)
    (109/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.202102302 seconds)
    (110/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.074803494 seconds)
    (111/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.377762347 seconds)
    (112/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.261681413 seconds)
    (113/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 2.011329663 seconds)
    (114/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.695672378 seconds)
    (115/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.50452499 seconds)
    (116/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.152323963 seconds)
    (117/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.135128836 seconds)
    (118/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 2.009789877 seconds)
    (119/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.489913363 seconds)
    (120/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 7.005320596 seconds)
    (121/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 7.011995471 seconds)
    (122/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.082398785 seconds)
    (123/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 7.000554378 seconds)
    (124/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 2.030652102 seconds)
    (125/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.306875384 seconds)
    (126/309) benchmarking ("sort", BigInt, false)...
    done (took 7.000136369 seconds)
    (127/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 2.026063482 seconds)
    (128/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.413523038 seconds)
    (129/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.314430997 seconds)
    (130/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.131757906 seconds)
    (131/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.103032465 seconds)
    (132/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.105630577 seconds)
    (133/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 7.003618555 seconds)
    (134/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.283200426 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.636614011 seconds)
    (136/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.29513876 seconds)
    (137/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.121561471 seconds)
    (138/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 2.009662712 seconds)
    (139/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.645042335 seconds)
    (140/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.391195329 seconds)
    (141/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.217718332 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.402142278 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.126768751 seconds)
    (144/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 2.02967122 seconds)
    (145/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.103243717 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.912369256 seconds)
    (147/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.261956853 seconds)
    (148/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.081357517 seconds)
    (149/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 7.004671717 seconds)
    (150/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.25157033 seconds)
    (151/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 2.024937683 seconds)
    (152/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.266034745 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.107165756 seconds)
    (154/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.318028714 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.136843525 seconds)
    (156/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 2.025107122 seconds)
    (157/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 2.021629634 seconds)
    (158/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.079693926 seconds)
    (159/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 7.004584542 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.624666234 seconds)
    (161/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 7.008502175 seconds)
    (162/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 7.046911913 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.098047113 seconds)
    (164/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.999949258 seconds)
    (165/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 4.089185572 seconds)
    (166/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.206703627 seconds)
    (167/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 2.022972395 seconds)
    (168/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.109507255 seconds)
    (169/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.81961232 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.402914955 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.342202668 seconds)
    (172/309) benchmarking ("perf_sum", Int8, true)...
    done (took 2.005419214 seconds)
    (173/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.338474362 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.309345075 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.681152224 seconds)
    (176/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.677660025 seconds)
    (177/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.632107757 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 7.000650648 seconds)
    (179/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 7.006433658 seconds)
    (180/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.325330687 seconds)
    (181/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.333589475 seconds)
    (182/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.498327547 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.322534343 seconds)
    (184/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.286320348 seconds)
    (185/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.199418175 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.177370991 seconds)
    (187/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.414394193 seconds)
    (188/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.18361468 seconds)
    (189/309) benchmarking ("sort", Int8, false)...
    done (took 4.876912902 seconds)
    (190/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.120152275 seconds)
    (191/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.909345402 seconds)
    (192/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 2.08040761 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.242408282 seconds)
    (194/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 7.002746828 seconds)
    (195/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.48894086 seconds)
    (196/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.206791345 seconds)
    (197/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.145777347 seconds)
    (198/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.142555981 seconds)
    (199/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.083128989 seconds)
    (200/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.920860571 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.309209268 seconds)
    (202/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.216010746 seconds)
    (203/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.157117956 seconds)
    (204/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.081380083 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.801318959 seconds)
    (206/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.337088899 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.08148289 seconds)
    (208/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.504437988 seconds)
    (209/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.336538971 seconds)
    (210/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.330015193 seconds)
    (211/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.261855668 seconds)
    (212/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.246883217 seconds)
    (213/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 7.004682988 seconds)
    (214/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.069964801 seconds)
    (215/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.402776418 seconds)
    (216/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.149908072 seconds)
    (217/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.240382931 seconds)
    (218/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.331870219 seconds)
    (219/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.153190186 seconds)
    (220/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.93392238 seconds)
    (221/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.90369244 seconds)
    (222/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.299984882 seconds)
    (223/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.220135806 seconds)
    (224/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 7.025638301 seconds)
    (225/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.249702453 seconds)
    (226/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.089180564 seconds)
    (227/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.658180613 seconds)
    (228/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.325975283 seconds)
    (229/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.184520474 seconds)
    (230/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 7.006825576 seconds)
    (231/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 7.010791503 seconds)
    (232/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 2.029871562 seconds)
    (233/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.134167088 seconds)
    (234/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.112137321 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 7.00461332 seconds)
    (236/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.309100034 seconds)
    (237/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.457798757 seconds)
    (238/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 2.025401905 seconds)
    (239/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.182736697 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.135556174 seconds)
    (241/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.094790704 seconds)
    (242/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.15846871 seconds)
    (243/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.296724953 seconds)
    (244/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 7.005164323 seconds)
    (245/309) benchmarking ("sort", BigFloat, false)...
    done (took 7.018974922 seconds)
    (246/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 2.027169183 seconds)
    (247/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 7.006418058 seconds)
    (248/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 7.019694448 seconds)
    (249/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.280750099 seconds)
    (250/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 2.021942886 seconds)
    (251/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.005245909 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.403258373 seconds)
    (253/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.117663716 seconds)
    (254/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.323493226 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.910584402 seconds)
    (256/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.986614256 seconds)
    (257/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.804661263 seconds)
    (258/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.450762294 seconds)
    (259/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.246506756 seconds)
    (260/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.084519365 seconds)
    (261/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.704265297 seconds)
    (262/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.148936349 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.834205248 seconds)
    (264/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.182536337 seconds)
    (265/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 7.106883752 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.132204005 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.130917013 seconds)
    (268/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 2.096384097 seconds)
    (269/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.405003796 seconds)
    (270/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 7.004375719 seconds)
    (271/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 2.040064345 seconds)
    (272/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.111292187 seconds)
    (273/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.27752635 seconds)
    (274/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.084247604 seconds)
    (275/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.088099277 seconds)
    (276/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 7.009176097 seconds)
    (277/309) benchmarking ("perf_sum", Int64, false)...
    done (took 2.042553882 seconds)
    (278/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 2.030506658 seconds)
    (279/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.007576962 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 4.738590981 seconds)
    (281/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.221008309 seconds)
    (282/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.209329564 seconds)
    (283/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 7.01175238 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 2.044988348 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.915152553 seconds)
    (286/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 2.052074543 seconds)
    (287/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.635862914 seconds)
    (288/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.647483545 seconds)
    (289/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.3356902 seconds)
    (290/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.298249907 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.320581138 seconds)
    (292/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 2.032028439 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.8542276 seconds)
    (294/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.278163427 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.39966727 seconds)
    (296/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.159148088 seconds)
    (297/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 2.018465165 seconds)
    (298/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.326685481 seconds)
    (299/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.440683978 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 2.032801369 seconds)
    (301/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.004941757 seconds)
    (302/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 4.240422138 seconds)
    (303/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.306929227 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.307092417 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.366135744 seconds)
    (306/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 7.010037193 seconds)
    (307/309) benchmarking ("sort", Float32, false)...
    done (took 5.757150086 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.224649067 seconds)
    (309/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.415794105 seconds)
  done (took 1053.930966485 seconds)
done (took 1055.920908808 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 2.033340993 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.02858807 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 2.00973034 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 2.030747487 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.121717843 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 2.054838652 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 2.022791191 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 2.012632864 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 2.05940312 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 2.060066822 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 2.008157631 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 2.049296239 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 2.010789564 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 2.009208178 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 2.010250037 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.025065401 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.318714966 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 2.037617226 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 2.026471033 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 2.022085916 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 2.026590701 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 2.005431146 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 2.05726769 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 2.049141558 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 2.013255678 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 2.013371761 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 2.012757267 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 2.03047874 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.120429456 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 2.011920623 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 2.012984928 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 2.020963607 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.317475259 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 2.033462222 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 2.004282469 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 2.026262628 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 2.022223625 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 2.01983997 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 2.011954181 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 2.041072771 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.462680661 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 2.01109805 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 2.010271048 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 2.008604651 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 2.00833664 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 2.016380802 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 2.007472233 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 2.015223356 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.022486823 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.023069479 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.458387383 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 2.027110686 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 2.010673685 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 2.008463391 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 2.020424488 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 2.007710793 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 2.012200833 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.025541317 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 2.028153235 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.023333957 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.305006824 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 2.041261338 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 2.011283335 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 2.021815569 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 2.013407992 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.490873837 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 2.005759705 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 2.013198458 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.461941681 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 2.015728543 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.490789667 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 2.018517543 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 2.008449684 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 2.018017335 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 2.035586531 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.31062759 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 2.028221889 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 2.000317041 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 2.009503296 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.999322353 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 2.014733284 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.018779023 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 2.00463174 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 2.001270727 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.018319815 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 2.045309527 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 2.015776767 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.998231499 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 2.010017152 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 2.01845672 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 2.006704789 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 2.013622759 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.998901598 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.993221606 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 2.008739284 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.999762558 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 2.002452203 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.999798023 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.99885686 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 2.007081076 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.447582485 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.02111194 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.991880543 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.991639577 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.993523219 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 2.008997871 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.452803112 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.996132484 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 2.015117418 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 2.042425799 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.994549534 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.293449903 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 2.020390708 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.009961487 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 2.003413294 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.995599522 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.989507793 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.287677698 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.466560246 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 2.007789131 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.994551082 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.984581133 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.004421553 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.990096162 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.984004483 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.303489401 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 2.015917703 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.003065252 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.109958175 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 2.00142686 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 2.0227784 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.982988894 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.988467366 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 2.029879602 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.002303756 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 2.022767533 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.985027299 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.001214819 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 2.000310575 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.980045996 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 2.000704467 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.996771518 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.984901336 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.991430838 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.982160535 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 2.031535947 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.996672806 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.996136185 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 2.001374269 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.103325559 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.983185309 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.280165877 seconds)
done (took 314.212497129 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.055304112 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.981342719 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.093158212 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.974317696 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.066453875 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.046889808 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.974446487 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.974016921 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.974003589 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.472012868 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.972924938 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.978014565 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.969543322 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.973516184 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.041303458 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.973619665 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.976090714 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.428097685 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.975197938 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.052188084 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.971645412 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.972800523 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.974144543 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.500102099 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.969258139 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.973032263 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.05901751 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.97112481 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.416905388 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.970424408 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.972311597 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.438081884 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.06041552 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.999033902 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.977637076 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.973439749 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.058832952 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.979383392 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.037269226 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.034931326 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.08613267 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 2.001246943 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.967742623 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.965475938 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.968906105 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.967526663 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.966832027 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.998941975 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.965624445 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.973572056 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.409787807 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.969991266 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.971961054 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.968398894 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.969294803 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 2.001025819 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.964797497 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.966378177 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.045519976 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.965325407 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.034640887 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.461173032 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.48136151 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.964693192 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.963689542 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.966579684 seconds)
  done (took 192.133229614 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.033882902 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.039275232 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.030247237 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.971877416 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.013284044 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.03368791 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.969728879 seconds)
  done (took 15.986757226 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.971136911 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.963061098 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 2.015867859 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.018963443 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.962242119 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.141976762 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.976118955 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.97121563 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.989054433 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.961970589 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.626586663 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 2.011821282 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.972134369 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.961414176 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.977469318 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 2.018415505 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.963138708 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.963224545 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.077933908 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.113644094 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.964568646 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.967152367 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.985512349 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.971031908 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.964022468 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.961511157 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.960673251 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.968246531 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.960900226 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.960059708 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.960441402 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 2.011250946 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.961246496 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.958928871 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.960230989 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.960839068 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.959893322 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.962133429 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.957707694 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.958782327 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.960832705 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.95628266 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.959163974 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.957141795 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.959298782 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.980674539 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.955109119 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.955880339 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.955554416 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.95717285 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.984745569 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.956464051 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.956933074 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.96183861 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.998632844 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.965466001 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.958335632 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.958182189 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.955400557 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.959050979 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.960559366 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.102992376 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 2.00692676 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.954950064 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.0045075 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.112335184 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.954120803 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.955533424 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.954144492 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.045054252 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.956097345 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.00220971 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.953662913 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.068280292 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.955852929 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.137611757 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.975728376 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.957588141 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.957806706 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.95396411 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.961501402 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.951935601 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.955086421 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.968320734 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.961141138 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.957990381 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.958300589 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.957594636 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.964797318 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.953157687 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 2.002774104 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.954612721 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.954340128 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.095835975 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.954174075 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.070492748 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.983825611 seconds)
  done (took 214.694064717 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.961332054 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.960820781 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.957655978 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.969853534 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.956715031 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.956785643 seconds)
  done (took 13.644896504 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.957297987 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.958791875 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.953123866 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.955612966 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.955385464 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.956502063 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.955869755 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.957247426 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.960671721 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.953459468 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.956005911 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.957098651 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.955814977 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.957230638 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.955097683 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.956013722 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.955904342 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.954911051 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.95472895 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.956310278 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.160544395 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.95918176 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.956667064 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.960828241 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.959434694 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.954886239 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.966023087 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.958121667 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.956225504 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.963563889 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.959437204 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.956699612 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.958534411 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.963221239 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.960321509 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.960371952 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.958083982 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.957340672 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.956858719 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.954894701 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.954399216 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.957191613 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.953519828 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.959548819 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.958296834 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.964786671 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.961514556 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.967503293 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.955981676 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.956734184 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.954577722 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.952456974 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.954544281 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.955476549 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.962598526 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.961030029 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.95998306 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.954984725 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.955680603 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.960438736 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.957904219 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.954164098 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.957216025 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.960405117 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.9647838 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.955596415 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.959401137 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.958232848 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.954707318 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.955171133 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.954107062 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.952326888 seconds)
  done (took 144.034855347 seconds)
done (took 582.417841544 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.796905816 seconds)
  done (took 9.678018831 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.227801566 seconds)
  done (took 9.187060992 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.856643932 seconds)
  done (took 10.815282602 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 7.042826011 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 7.065252921 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 7.03789915 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 7.036352449 seconds)
  done (took 30.153052985 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.277636422 seconds)
  done (took 9.235067869 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 7.044489834 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 7.027867892 seconds)
  done (took 16.09263973 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.1520251 seconds)
  done (took 9.109094996 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.414865685 seconds)
  done (took 9.385554192 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 7.033763686 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 7.039303183 seconds)
  done (took 16.053278429 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 7.03722946 seconds)
  done (took 8.992963418 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.341768472 seconds)
  done (took 10.375292222 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 7.047546556 seconds)
  done (took 9.046105926 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.089594601 seconds)
  done (took 9.044354901 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.131363781 seconds)
  done (took 9.085348175 seconds)
done (took 168.136503037 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 7.037554123 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 7.024845335 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 7.026772954 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 7.024589807 seconds)
  done (took 30.06593554 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 2.066536704 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 2.06413077 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 2.071838126 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 2.063463249 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 2.052794772 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 2.05558227 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 2.063851887 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 2.064018054 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 2.053782167 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 2.060390028 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 2.063034591 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 2.060949237 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 2.060896934 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 2.070035382 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 2.072631477 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 2.059237594 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 2.062870195 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 2.062047521 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 2.05340934 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 2.071077951 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 2.062369605 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 2.062019698 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 2.028981567 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 2.029432837 seconds)
  done (took 51.389529753 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.218861028 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.097118916 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.180544842 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.080009733 seconds)
  done (took 10.527194422 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 2.026626498 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 2.091571491 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 2.080203783 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 2.077606747 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.081527414 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.131122226 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 2.080513894 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.166407677 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.156302038 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.161625592 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 2.035575688 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 2.049967375 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 2.05289611 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 2.076738369 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.134142894 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 2.028619178 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 2.029470476 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.143610125 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 2.092239066 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.214288702 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 2.028002641 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 2.083212086 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.080888312 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 2.081955358 seconds)
  done (took 52.136643366 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 2.028331694 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 2.03729814 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 2.036893234 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 2.029826866 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 2.032591672 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 2.030874035 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 2.037192749 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 2.03126311 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 2.050912576 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 2.033151896 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 2.029152149 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 2.029759704 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 2.035164446 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 2.030175615 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 2.030335804 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 2.042237329 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 2.04382342 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 2.029430391 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 2.03338168 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 2.037711828 seconds)
  done (took 42.644217258 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 7.027035156 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.8736138 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.373925197 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.279690711 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 7.028029838 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 7.025863161 seconds)
  done (took 32.560535965 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 2.042272706 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 2.035722775 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 2.029135728 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.087524418 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.169037872 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 2.034130065 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 2.030899272 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 2.040846485 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.077273469 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.09293632 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.050212057 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 2.060386979 seconds)
  done (took 26.705094496 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 7.029712196 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 7.028178217 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 7.027535715 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 2.040032901 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 2.041376556 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 2.040681627 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 2.035808515 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 7.026618852 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 2.041005014 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 2.046796691 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 2.036827902 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 2.040079398 seconds)
  done (took 46.392455339 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.738204267 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.10121923 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.027118109 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.902907993 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.475114576 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.573508361 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.917850565 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.666737106 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.504706153 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.964603292 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.239135904 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 7.036071389 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.118641536 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 2.03539657 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.305094657 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.386693006 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.220496411 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.279272812 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.877945247 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.071354196 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.239529337 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.238845636 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.317440709 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.03515418 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.037367043 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 7.07437192 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.653700527 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.773921046 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.071661775 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.539270905 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.289315861 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.986748592 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.092689753 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 7.03702822 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 2.049737496 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.039145418 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.040525632 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.308786535 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 7.066076464 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.164953351 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.110322256 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.284374288 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.039667851 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.455988761 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.74687599 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.318743689 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.141364832 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.035177565 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.038321126 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.036228912 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.963435993 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.118850779 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 2.040847067 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.042269124 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.735972416 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.037533579 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.113454616 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.03975649 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.239663198 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.847355666 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.726663672 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 7.036895814 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.040177652 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.587327663 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.107571673 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.156257355 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.792406979 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.412218104 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.449619601 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.133899242 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 2.037944699 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.038537917 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.365992154 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.011003606 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.72443434 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.081954515 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.17440921 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 2.051414982 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.679796754 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340760845 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.441918878 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.590212863 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.959524073 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.296676285 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.990896115 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.01151754 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.257120427 seconds)
    (88/481) benchmarking "5d"...
    done (took 3.869239899 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.964515222 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.239848046 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.062387303 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039786383 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.302694845 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.783169601 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.147977279 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 2.051855521 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.471178094 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.055010576 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.041020844 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.038864427 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.251684895 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.612658975 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.078027779 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.154630529 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.049962456 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.116587124 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.963637818 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 2.04666493 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 2.042177427 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.939673709 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.042798366 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.035442183 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.075494106 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.906721188 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.083967219 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.973405973 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.038859372 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.112307418 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.073754936 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.985067141 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.276649555 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.323040302 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.676616008 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.0560854 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.161817548 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.409495649 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.253790917 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.039549885 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.248589435 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.575522081 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.421591304 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.073750283 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.322059108 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.087089119 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.320196784 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.458600426 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.110300696 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.798049903 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.660405056 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.254845586 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.049403194 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 7.038524844 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.037902098 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.041834822 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.97135644 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.687826998 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.385966605 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.194740745 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.250495204 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.547706975 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 5.016355718 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 7.035903161 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.339653281 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.174835048 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.034468921 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.683300111 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.617474364 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.831115309 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.064227249 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353147846 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.421015701 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 4.007410717 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.051830893 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.114454036 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.055312938 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 7.041408472 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.399703543 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.394459301 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 2.04020201 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 2.040743382 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.991010031 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.0458968 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 2.039672162 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.575670748 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.010458497 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.043082285 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 2.050413652 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.913660321 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.114641889 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 2.043714736 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.04263794 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.582499817 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.541153396 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 2.045847397 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.710563941 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 7.075738593 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.111089811 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.30831714 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.382965823 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.16064575 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.73843558 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.429921878 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.143651468 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.74046047 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.969330576 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.040844886 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.979337105 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.043059526 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.045845101 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.044424954 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.227870586 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.314185288 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336729874 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.489193222 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.097494902 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.243998153 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.742597761 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.996108642 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.044354288 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.047008781 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 2.043939115 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.043813337 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.55918607 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.33259902 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.113236446 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.072302518 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.046176512 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.171654939 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 2.054317168 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.97044909 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.045864484 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.044693911 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.649367582 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.073515804 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.998918934 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.344606565 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.899363136 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.169011629 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.085661961 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.052469215 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.045154224 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.735762539 seconds)
    (233/481) benchmarking "4d"...
    done (took 3.086751351 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.969092395 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.652187222 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.08390448 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.785249844 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.53422535 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.597379044 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348922916 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.351600014 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.360911494 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 2.107849984 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.255679195 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.126137502 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.100889724 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.129270416 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.97923558 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.966415564 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.691014586 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.367516416 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.31218209 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.049361921 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.261989458 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.732291715 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.275256534 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.072612268 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 7.044586668 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326420782 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.016361006 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.058282768 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.551916115 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.154713014 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.12413905 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.049092565 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.995366106 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.361450861 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.077166565 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.745301982 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.058880642 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.396372293 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.651064822 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.118782824 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.40481983 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.256580349 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.047660003 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.391570199 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.425254296 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.08899408 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.050050723 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.038915403 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.256549704 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.625511631 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.902724958 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.046793131 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.374559911 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.338620448 seconds)
    (288/481) benchmarking "3d"...
    done (took 2.941172586 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 2.045939173 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.378220123 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307800566 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.041954543 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.395807415 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.385032935 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.138280344 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.1004755 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.273630479 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.904860895 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34953044 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.594011273 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.542498383 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.052435021 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.971551445 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.745234993 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.249789814 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.051341181 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.013220064 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.242519331 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.272896196 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.728348225 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.266807552 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.289789935 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 2.059057246 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.314073744 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.116525208 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.147919049 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.351030024 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.450407068 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.285706726 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.273639161 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.59030412 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.262033172 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.490369427 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.203740149 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 7.049648515 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.252976504 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.264479879 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.2610452 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.405197176 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.212223496 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.756649549 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 2.05447386 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.254703299 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349178997 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.10455578 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.407607644 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.212455527 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.132442649 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.056701866 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.11275491 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.054205057 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.057184302 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.41196083 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.571391826 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 2.062847876 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.127826058 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.13698687 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.567042424 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.049596988 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.055108004 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.31283467 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394447385 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.373630211 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.029964749 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.048489863 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.052655694 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.176396939 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.97459091 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.05465464 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.319290046 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 2.053216156 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.63359924 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.201744293 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.062914272 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.348091876 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.431223332 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.895423719 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.0198256 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.057015228 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.253047792 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.331572159 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.403452858 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.170634817 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.320591415 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.367600516 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.074316265 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.418122307 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.285079426 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.052818004 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.928742907 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.054076625 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.180570397 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 7.248237416 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.320268357 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.552823412 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.747339652 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.321709118 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.899600059 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.054922381 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.808032113 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326695902 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.319124751 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.098538095 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.117986143 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.057674115 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.669693371 seconds)
    (397/481) benchmarking "6d"...
    done (took 3.779396937 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.187114128 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.919456879 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.976323194 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 7.166510222 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.27101618 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.295265552 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.76199261 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.058373446 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.326470148 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355382008 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.320903106 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.099067026 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.961696824 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.266691323 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.054910295 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 7.063351531 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.327819143 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.254832184 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.290489926 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.055815799 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.060310003 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.861160271 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.979897295 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.05201796 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.108184986 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.282343816 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.074973191 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.568315301 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.754636863 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.317662488 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.094758002 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.056785157 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.321634 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.572811004 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.611806363 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.057207215 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.254999475 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 7.0768762 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.34524327 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.055235741 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.665890455 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.364276078 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 2.054042326 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.760059291 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.303502432 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.321869324 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.982157566 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.059550091 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.267183682 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.918470063 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.051151579 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.053045526 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.666641968 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.289426496 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.789514343 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.610566284 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 2.051856932 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 2.054769247 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.661624752 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.09062868 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.679746912 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.084600132 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.071911681 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.570820503 seconds)
    (462/481) benchmarking "2d"...
    done (took 2.746087291 seconds)
    (463/481) benchmarking "7d"...
    done (took 2.343493912 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.296534658 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.760187214 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.65414704 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.055828912 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 7.052257081 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.056844565 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.972707672 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404454564 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.23902458 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.320356654 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.077760562 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.667577772 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.087471886 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.416487746 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.162284087 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391959296 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.092878936 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.575923199 seconds)
  done (took 1747.421149974 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.050110729 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.095487879 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 7.098589891 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 7.074392482 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 7.050692607 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.043658029 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.067116248 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.050573151 seconds)
  done (took 58.500350249 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 7.040407086 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.048257794 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 2.04109163 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 7.037647064 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.043723211 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 7.049936858 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.192085941 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 7.061105211 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.028541102 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 2.03556426 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 7.029777768 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 7.023845287 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.308560969 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.040511936 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 7.022499797 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.018223348 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.022775489 seconds)
  done (took 77.012061424 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 7.021580926 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.270771938 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.076108926 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.017274426 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.968600594 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.029314576 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.995662324 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.07437568 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.020319947 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.256362735 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.318132373 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.04938112 seconds)
  done (took 92.039608614 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 2.02358683 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 2.018684239 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 2.019307293 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 2.019249217 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 2.01940542 seconds)
  done (took 12.049071049 seconds)
done (took 2281.4690064 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.406838143 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.077735748 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.115969601 seconds)
  done (took 6.135425775 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.165490444 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.212005196 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.324555959 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.084745034 seconds)
  done (took 10.736618792 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.328435721 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.420036908 seconds)
  done (took 6.691083402 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.383254315 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.023829327 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.393350344 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 7.020437083 seconds)
    (2/3) benchmarking "Float64"...
    done (took 7.021187469 seconds)
    (3/3) benchmarking "Float16"...
    done (took 7.020415067 seconds)
  done (took 23.011833689 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 2.020749126 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 2.020622991 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 2.021970475 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 2.021305793 seconds)
  done (took 10.029276333 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 7.018683578 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.736561751 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 7.021238521 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.029206974 seconds)
  done (took 21.748700954 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.168676055 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.13574428 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.164186559 seconds)
  done (took 8.412005649 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.161828895 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.858237315 seconds)
  done (took 6.96374207 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.168632649 seconds)
  done (took 4.112771464 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.048458183 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.291785963 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.515995727 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.539049532 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.660299683 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.826002588 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.335813681 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.26165923 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.420484945 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.450474859 seconds)
  done (took 26.295716559 seconds)
done (took 140.287599304 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.369532241 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.02983127 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.222592535 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.383309917 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.245043634 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.222351072 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.23731362 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.37579959 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.050826742 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.040768875 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.383821322 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.239700403 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.182782303 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.034448144 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.193172873 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.034697704 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.240876586 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.378903563 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.062656129 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.302742972 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.24652157 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.031577705 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.225105257 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.038563715 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.240541762 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.172703704 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.573349755 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.03173227 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.214801241 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.579871198 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.170734569 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.456308285 seconds)
  done (took 173.158495643 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.023245373 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.019305741 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.019573494 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.02348019 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.535134241 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.019704012 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.021351406 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.018683365 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.468542165 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.455683536 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.019102753 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.516619621 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.01954287 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.012646343 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.013686073 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.009417196 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.630900485 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.009819557 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.005005118 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.006285351 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.006617276 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.338272227 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.00629721 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.339371983 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.616338986 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.99836983 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.996365664 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.997509217 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.996205273 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.995968263 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.995587164 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.995488838 seconds)
  done (took 214.079428 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.998309237 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.994778381 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.997296104 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.995327887 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.998274814 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.995124068 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.996130083 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.99748751 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.821104599 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.807515947 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.994918294 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.995774298 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.002106156 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.993445896 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.99112302 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.987615553 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.986293791 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.987580354 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.985920297 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.986116053 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.985782756 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.66907801 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.985214591 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.671606164 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.985001973 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.988765464 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.988042876 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.987424757 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.98421083 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.983814741 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.982781458 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.979091291 seconds)
  done (took 224.631041859 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.224087143 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.984390483 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.982130302 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.978474646 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.987441636 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.984972091 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.962692826 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.232473396 seconds)
  done (took 20.249161264 seconds)
done (took 634.079265692 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.353733889 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.176832592 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.167643648 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.008647819 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.266754473 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.0556131 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.00426502 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.072028075 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.849043346 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.080702357 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.642999832 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.024781349 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.741297303 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.031214392 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.131314073 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.063925665 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.575760208 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.670803859 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.149688507 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.081864079 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.192978845 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.927741449 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.084258325 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.879981165 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.658862327 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.96848043 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.040957355 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.580255678 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.016919781 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.169156237 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.687316839 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.314886947 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.020859784 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.008109138 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.059075378 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.039538688 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.239358167 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.014817307 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.133525839 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.718776145 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.07760083 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.747943952 seconds)
  done (took 107.640379918 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.996285292 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.993115351 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.992429111 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.991677387 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.00109447 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.992678452 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.992362216 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.994152344 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.993647468 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.994184643 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.993940383 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.001796501 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.994610029 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.001294114 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.994555583 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.995134283 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.995780715 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.004074434 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.994401023 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.994578484 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.994151598 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.994388306 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.991144664 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.995057614 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.994563674 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.994553535 seconds)
  done (took 53.80432718 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.988952941 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.159139992 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.234015954 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.007962462 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.991294646 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.995634329 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.007522425 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.996634917 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.99313597 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.993262595 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.095350188 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.993201779 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.010378593 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.235170544 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.006997365 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.990702167 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.990884659 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.991545641 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.168139599 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.004649457 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.010012201 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.995374878 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.010014981 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.005638249 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.992741501 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.991563313 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.994996408 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.434167342 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.001640884 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.095387433 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.035886293 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.015360169 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.377602728 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.247196692 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.045017819 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.999567182 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.990526299 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.104782613 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.996907044 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.992296073 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.009669078 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.996181673 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.238814405 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.524639832 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.004759886 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.991385096 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.447110322 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.111772158 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.034258417 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.002489389 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.244737305 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.007995411 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.993827356 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.994204743 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.029417751 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.003190225 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.99463378 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.312689486 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.006949477 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.011001806 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.99679299 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.993111796 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.174379824 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.00183607 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.161877252 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.001177109 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.99946837 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.994164159 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.240829269 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.008937941 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.542884551 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.006965853 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.994651108 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.09750757 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.170285894 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.472857595 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.004390564 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.175769847 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.394422796 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.017388557 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.001548727 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.423016495 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.021021901 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.00184486 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.9950143 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.994942256 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.993689506 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.038080133 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.011194948 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.447821102 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.529423611 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.332169235 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.019078912 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.007843128 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.994793412 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.315103329 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.002880598 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.994399532 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.232487412 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.541005111 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.008512956 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.002145296 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.513337228 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.009333815 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.013983333 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.00720644 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.247361882 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.009713359 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.0403498 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.996134293 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.002452693 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.998052425 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.014483226 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.003001709 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.996780087 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.502245386 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.116316638 seconds)
  done (took 246.896752103 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.995573256 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.991894486 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.995175397 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.991715231 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.99263429 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.997870347 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.99473012 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.993970815 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.996057396 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.994669205 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.993746767 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.995358129 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.997488795 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.996819853 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.045516398 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.997637994 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.60035334 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.994494382 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.99565101 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.994564988 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.638152799 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.000512645 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.995013734 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.993877834 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.997733585 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.995824618 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.997927482 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.048893927 seconds)
  done (took 171.146480479 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.997784954 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.11177048 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.010689609 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.026328486 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.001342295 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.998328266 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.096938395 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.009752533 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.003406934 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.99803348 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.00024954 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.060290262 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.005597469 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.095778458 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.024535955 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.103412356 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.096582195 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.999517509 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.999050089 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.998778208 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.025479378 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.007214119 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.058004026 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.119561099 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.012587812 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.112477987 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.012842163 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.998824887 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.998970537 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.111115014 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.012108026 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.058367323 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.023856638 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.014214213 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.114604843 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.110925417 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.099869778 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.098078324 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.000492243 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.999926168 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.999752086 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.00060492 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.110383694 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.01409449 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.00081502 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.116482819 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.013136173 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.001497058 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.99937624 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.999446055 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.012725839 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.017157507 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.064749833 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.125937093 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.030294725 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.022287028 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.09760458 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.129999698 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.000439719 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.097218973 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.003890206 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.111072661 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.014602168 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.000016086 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.999886174 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.004318476 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.02895539 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.102459998 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.100801535 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.004408959 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.096862579 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.032388539 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.005098379 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.999322123 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.001443745 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.112484228 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.11132507 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.033553085 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.03511423 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.026621507 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.00920656 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.000191494 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.002048591 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.017261317 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.005271307 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.113792079 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.112473386 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.003122662 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.001601683 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.002924792 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.00212209 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.02496229 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.120934175 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.032100115 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.104327792 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.065087126 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.070896367 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.011602423 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.017187102 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.010670502 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.065556613 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.010729992 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.01311194 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.311753333 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.06179161 seconds)
  done (took 216.422047682 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.396151868 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.043972964 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.05838504 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.32952632 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.357324314 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.96446871 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.045627891 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.051956718 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.092758318 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.274700607 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.119493877 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.06845816 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.035378597 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.024713934 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.049454207 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.084830544 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.05913694 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.400773736 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.24914107 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.51905722 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.036773684 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.310054318 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.367288978 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.61886582 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.097003603 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.488043869 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.64847968 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.213453484 seconds)
  done (took 66.937894926 seconds)
done (took 864.758807521 seconds)
SAVING RESULT...
DONE!
