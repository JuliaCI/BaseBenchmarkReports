cset: moving following pidspec: 8648
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.305432622 seconds)
loading group "string"... done (took 0.595678617 seconds)
loading group "linalg"... done (took 7.178865139 seconds)
loading group "parallel"... done (took 0.165030809 seconds)
loading group "find"... done (took 1.116966906 seconds)
loading group "tuple"... done (took 1.980691495 seconds)
loading group "dates"... done (took 1.264613733 seconds)
loading group "micro"... done (took 0.234567836 seconds)
loading group "io"... done (took 0.95839584 seconds)
loading group "scalar"... done (took 38.38234392 seconds)
loading group "sparse"... done (took 12.428798334 seconds)
loading group "broadcast"... done (took 0.965258537 seconds)
loading group "union"... done (took 13.064523369 seconds)
loading group "simd"... done (took 4.424618791 seconds)
loading group "random"... done (took 8.938967617 seconds)
loading group "problem"... done (took 1.955501126 seconds)
loading group "array"... done (took 21.207006486 seconds)
loading group "misc"... done (took 1.924933979 seconds)
loading group "sort"... done (took 3.20025678 seconds)
loading group "collection"... done (took 17.941266559 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.529482983 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.140578274 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.116011158 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.137400366 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.183556802 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.130936741 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.144196308 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.08398895 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.038413075 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.161002802 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.138023262 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.477360521 seconds)
done (took 5.040718407 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.242960486 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.085403047 seconds)
    (2/2) benchmarking "String"...
    done (took 0.095466822 seconds)
  done (took 0.890383707 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065093733 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.125426909 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.079961259 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067204184 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066696736 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.080715405 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066356164 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065294108 seconds)
  done (took 1.260317594 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073482643 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067610273 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.083536404 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.066839401 seconds)
  done (took 1.001159963 seconds)
done (took 4.180999206 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.895355529 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.245625449 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.188955198 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.452811176 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.147134851 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.187945798 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.730689548 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.360016391 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.209100163 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099741509 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.10344854 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.377322235 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.105991187 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.743951469 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.07444028 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.104846466 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.174085749 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.481693792 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.080967083 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081999774 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.103421401 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.144791402 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.101109367 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.076653135 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.168550142 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.068845097 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.147126591 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.095326577 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.067715692 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.242325366 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.189714113 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.760291079 seconds)
  done (took 10.757293784 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.098936043 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.115828701 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068083702 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.13902776 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.099790682 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.085449001 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070120369 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.082628271 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.091068906 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.157726318 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113972971 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.104617365 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.08133726 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068779074 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.0994162 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.209757205 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.105593385 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.083878319 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.085810538 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075366112 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121578389 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.081642359 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.093156801 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.07694651 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.151110789 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.194834083 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112557343 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.11035816 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068608584 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.07904888 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.131268687 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.141021227 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06518983 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080673881 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.137600021 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.110059508 seconds)
  done (took 4.519167156 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.029867665 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.160224079 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090766681 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.151533525 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.084905192 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.108882575 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.082856235 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098604137 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.246761669 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.081508396 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.459856853 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128652076 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.101456879 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067898789 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.083440211 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.110088982 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.083920752 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.519606245 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.146237782 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.10171262 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.103601363 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.088963331 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.070029325 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.712224919 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068505937 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065949865 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084592351 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.059250786 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.145563442 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067682651 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.215493929 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.089237207 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087992596 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102172895 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.198219054 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09446478 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.123469252 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.065947625 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.081767327 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.168941163 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065744991 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.07285094 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.08347001 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.087650066 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120049424 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.118913438 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.068541264 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.082502103 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.18121201 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066861171 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.099073238 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.889302055 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.167369955 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.08015166 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068113472 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.288766728 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.084526363 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084374871 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064163946 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.264365375 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.157458525 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067548902 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.083381691 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06630566 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.067978927 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.739263013 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.069532897 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.137313482 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071680771 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076881914 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.085562386 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067029412 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088887892 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072315903 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.100952709 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066690484 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.067612146 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.08296006 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065548201 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.083728587 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.085043038 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.080074985 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.204237746 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.067714645 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066175822 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.081678662 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085633116 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112306753 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.06960159 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.081572942 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099823539 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.080214492 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067904969 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.083937907 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.102878894 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083839866 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084889404 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.086252258 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.127551376 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067990307 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.128273722 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.081489696 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.098631523 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.090949275 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113490377 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.078603794 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083981188 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.153400267 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065112631 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064426362 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084163229 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065666583 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.08334236 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069288194 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.096082626 seconds)
  done (took 22.005258149 seconds)
done (took 39.020994936 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.290835551 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.090629034 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.091200816 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074655164 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.090452551 seconds)
  done (took 1.42286033 seconds)
done (took 2.180875479 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119983936 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116783407 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063732056 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112583985 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062879968 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.117160142 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.113732432 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080847277 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118435728 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064009713 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112652536 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064595657 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063208938 seconds)
  done (took 1.994763801 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082682782 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084540684 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085280432 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081487822 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077914806 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082242132 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079499937 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104252727 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080193764 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087951458 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063552237 seconds)
  done (took 1.664390949 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081770317 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083629149 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085347163 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080809649 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078799508 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08176214 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080024314 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10196567 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080613004 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089082211 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063311462 seconds)
  done (took 1.6645283 seconds)
done (took 6.071770587 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077958534 seconds)
  done (took 0.828060678 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.696578647 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.635478693 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.082808816 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.135821139 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.228093163 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.158339191 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.456447968 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.113113646 seconds)
  done (took 10.433714241 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.089654646 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.085177598 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.083575468 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.086095076 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069279828 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.087609793 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072230771 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071250156 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.084217902 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071679082 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.085454464 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069791512 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.086076746 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072363919 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071041927 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.083476194 seconds)
  done (took 2.0917891 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093272422 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.093513333 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.090440998 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075491034 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.088868975 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072134347 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.092053614 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074258501 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.086810086 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072033007 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090921631 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074363899 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.08788907 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065817687 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.090472357 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076188182 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087577894 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075329578 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.09095728 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075906515 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.090638758 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065565226 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088507226 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.077156103 seconds)
  done (took 2.842034478 seconds)
done (took 16.953823539 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.13187026 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.07723172 seconds)
  done (took 0.970973235 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081446652 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.096959961 seconds)
  done (took 0.947635897 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082173899 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.081025983 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.088444049 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.092467459 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081531746 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.066670917 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.101975657 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066755775 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.081351325 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.06609429 seconds)
  done (took 1.578078253 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068858937 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.092945033 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070698598 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.097490542 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074357406 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.080916628 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073499489 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.084872352 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.07873322 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.080337503 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.073331545 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.101246033 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.074238561 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.102545077 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.075287763 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085864521 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.090176482 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069555445 seconds)
  done (took 2.246271088 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065936674 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067460259 seconds)
  done (took 0.905983276 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067338617 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064230894 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083669484 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068579878 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.080946742 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064513052 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.081126469 seconds)
  done (took 1.281779691 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.401787051 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.108862628 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.246297855 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.089411958 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.105997734 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.267920435 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.085590095 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073454196 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.090640715 seconds)
  done (took 2.282318429 seconds)
done (took 10.983766013 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.07931961 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086553472 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111884896 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.421014851 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106015479 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066563164 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.142498566 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.205698556 seconds)
done (took 1.997957998 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.12526645 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.610806955 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.400256035 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.212457589 seconds)
  done (took 1.999029057 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.371884121 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.091665068 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.075832741 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068160272 seconds)
  done (took 1.389908493 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066506503 seconds)
    (2/2) benchmarking "read"...
    done (took 0.0695364 seconds)
  done (took 0.920124523 seconds)
done (took 5.211168538 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.08690415 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083019161 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063868677 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066185083 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.080970671 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065820073 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.067179132 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.08161944 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064271432 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066922244 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.083115117 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.071275501 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.084516493 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0690148 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065271175 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081821757 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06787951 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065698698 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081614897 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066349522 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067953976 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.081565303 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.06600388 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065603207 seconds)
  done (took 2.561736208 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085175502 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.083483358 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072665366 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088888777 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071344673 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.08905325 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.073965775 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068428378 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.089867335 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070638467 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088598033 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072321938 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.086780022 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072568658 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086641836 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.073134349 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.089830902 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068553726 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074985594 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.089029159 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073821406 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084685343 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.073438062 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090056075 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071962074 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088215895 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.071329373 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.085389323 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073781921 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.089185694 seconds)
  done (took 3.184288601 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070556539 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064034201 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081741238 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072364857 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065500143 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.08403766 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065866517 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.082524283 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.066473382 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.066301441 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.083431135 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.065522587 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.066204971 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.083317861 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066412618 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.085505581 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.082594843 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.066138023 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.082186551 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066326438 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068823223 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.081980049 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.066095273 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.082687794 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065313707 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065085839 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.082640328 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065575158 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.067275953 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.082391364 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.069156563 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.069317404 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.081355245 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072164224 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.08604788 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065437483 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.069674488 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.082046131 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066268692 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.065231799 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.082129653 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.066170979 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.065375741 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.089080696 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.066258601 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.084640171 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.066373866 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.066781741 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.083126 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.069028168 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.082033741 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.065771009 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.068092581 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.083871649 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069853995 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.065266237 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.083159882 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.065717744 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.083073472 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065922344 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.065336416 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.08176748 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.068313536 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.066363438 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.098079901 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072739484 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.082101105 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.068474682 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.066964406 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.085044506 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067963475 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.079629892 seconds)
  done (took 6.082014285 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.11607806 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090471718 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082667375 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066079217 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079308853 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064409185 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067906438 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08112867 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066388689 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08727635 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064836083 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065254673 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082726502 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07808022 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080465837 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06578772 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085874935 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062402283 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064387007 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.08459721 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064843651 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.083715177 seconds)
  done (took 2.474495178 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.185679569 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.087695252 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.1091908 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090617 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.08551289 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073453466 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.086370707 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070325799 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070406021 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085842962 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06946999 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086098079 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068782074 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084719822 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068371803 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084719003 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070692907 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084753077 seconds)
  done (took 2.350937082 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078190804 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066312548 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.106321008 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06614211 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.083759127 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070135204 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087799637 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075032366 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085398792 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067536824 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.091529617 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069783808 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.086514067 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067387648 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068895057 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082762274 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069483093 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083183585 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075139524 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088026429 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071730659 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091502943 seconds)
  done (took 2.523486725 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080604984 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068167608 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.100745392 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085516333 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063402919 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065273786 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.088889527 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066745287 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.088273982 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068390521 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066378434 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.080841725 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.071780939 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.083195399 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.071368317 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083420523 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068918079 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066381127 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086681944 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063275473 seconds)
  done (took 2.309395498 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086501444 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084141182 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067797426 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093356645 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068347587 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.085778576 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078317545 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.085953921 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069789829 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.110417423 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070527085 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.086666832 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078353663 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.091537297 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069966922 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094112548 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077114646 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094476086 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069306675 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.087692055 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.226823848 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069855685 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.094756731 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069469307 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.086423782 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069783051 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069331635 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091999503 seconds)
  done (took 3.225472422 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066432518 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066729958 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.08205783 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065681372 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065657666 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.082661858 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065939114 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065558633 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.085518022 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06595766 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.068232066 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.084902878 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069007019 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.085173456 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068770613 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.068400619 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085119075 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065987934 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065972176 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083751774 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.069062428 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068114175 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.085317644 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066597383 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082798935 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.06851667 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066022738 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.082770581 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068771102 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066312066 seconds)
  done (took 2.978329405 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076357429 seconds)
    (2/2) benchmarking "in"...
    done (took 0.092136231 seconds)
  done (took 0.968958033 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064335784 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080773966 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080538157 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071069324 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087177997 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067237371 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.091144206 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070453523 seconds)
  done (took 1.410140405 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082725259 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077662536 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084938272 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.077973308 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.094044455 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084509319 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.157702969 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086676622 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075940493 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.084969105 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.083195994 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067928311 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.092207501 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069224422 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.091804504 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075144624 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.066431818 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.091643462 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.072376259 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.08459513 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070977012 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09501749 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071609053 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.065434719 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.087696389 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.078471795 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.097395831 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.070137589 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089724702 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.076130028 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074637023 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.080264554 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.069343214 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.087209191 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066727506 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.095830103 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084765259 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089388067 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078073018 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069818931 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.096604932 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063648042 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.091015104 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.075738046 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096692857 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.069678686 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.069789381 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.082004915 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.067145004 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.087951463 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.064108298 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069381087 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.080746623 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076121952 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.088837024 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079547564 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.070151218 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.087669355 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.07204761 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.089626099 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075456866 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.088011422 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071220527 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.068603146 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.096068856 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.074070925 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09545501 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.064018973 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062476513 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.084258103 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.079503363 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109274695 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.075237994 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.086897292 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07014011 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.083791941 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072891747 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070471708 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091598303 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.075054082 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.086442873 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074814881 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093183291 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069643655 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070697391 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.094043815 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.068133331 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.088300761 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.067257562 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102951918 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.0675484 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.084460279 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066708159 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.079740759 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.089526497 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.069116496 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.083476955 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075838404 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.063023392 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.086666823 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069852751 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087035516 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079918121 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091238527 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.075042348 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.095543523 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.077153919 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068807258 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.089650099 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.066052143 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087259821 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.0683301 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.075748895 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.080905747 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07185715 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.086536393 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.069806658 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.094255793 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.067472448 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.069552301 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093824011 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074877699 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.085021069 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.065744521 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071748657 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.086313563 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07225119 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.094414172 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.06766467 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063551743 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.081696345 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.073171953 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.085690059 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072035903 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.09092926 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072094811 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063521467 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.084132384 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.074014952 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.095607774 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069861693 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069239594 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.093022299 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070332305 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.08576389 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075731472 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.088633375 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.06818338 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074896862 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.087134437 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064459824 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090170668 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071378995 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067400569 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.09038039 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072919806 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.089471527 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.070518433 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084647231 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074385435 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069641356 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.085533918 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069172286 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.085104849 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079460868 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070457668 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.08150837 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.066206278 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.093766864 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.067188172 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.068150011 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.086686049 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071683504 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.087545757 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.067318528 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.068416437 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.088130597 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079950825 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.091049305 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070095215 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.091941536 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080375758 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.086380487 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071461069 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.068777041 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087249642 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.070533775 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.096251857 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074715658 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091215314 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071560426 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.066021171 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093411647 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07682468 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.086071397 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.067168031 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067899086 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.090603228 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074401878 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.090157517 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.070516376 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084456756 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069764326 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07185409 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.088953861 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.069256142 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.08557583 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073253254 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.08598094 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.075802221 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069940893 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.097581253 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072067617 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.082406524 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073289908 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084502647 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.075099883 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.06365507 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.083821162 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.068732774 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.087563319 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.068846605 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.072246313 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.081062766 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076080097 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094134298 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069288506 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.068597814 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.086764073 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075536724 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.08806193 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073202268 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072119813 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.093226924 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079386194 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.086275404 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.072444233 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.097275138 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.069867749 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062838857 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.092346013 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067855738 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.086207227 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067824915 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066811759 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090099643 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.078331912 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.094092842 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.063658305 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.089198498 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.068412595 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067882015 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.082255553 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.074501345 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.089282758 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.07036353 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075902538 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08844899 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.070298932 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090118077 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.069237368 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069243297 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.088748906 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071871748 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.087320338 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.072291447 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067872446 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.090628018 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.068979328 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.084732983 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.071571081 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.069643644 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.087225583 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075240951 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.086751643 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069816518 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.088846161 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.069900736 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069520362 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.08775218 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.068645016 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089420698 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070336802 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069458997 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.089196439 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.06494201 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093822592 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.0696509 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076137785 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.087397672 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.066677489 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.091496623 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.07122097 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.07387457 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.088099765 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.070433651 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.08822402 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.069002157 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.089301458 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076318866 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067003154 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.097620508 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076765973 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087898072 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.072133966 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.086807499 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.070893214 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.068359261 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.088453749 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.070366899 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069169199 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.087197193 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.074112492 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.089588712 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069575851 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069763719 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.088887204 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069146302 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.088547885 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063947681 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067933682 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.086966228 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.06909738 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096881877 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.070215371 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.086372208 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.068533019 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069931881 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.086603357 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.066220966 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.094897241 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.078650499 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.087858729 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076683814 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.085094152 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.07057189 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079953782 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.081307476 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067785499 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.084555614 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.06673965 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076507858 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.087875694 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.07845319 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.086887863 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.06852764 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.066080008 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.087402925 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.068285528 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062937139 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.085657024 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072775392 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.086361601 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069130386 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.068653014 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.091058653 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070068372 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096769066 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.069444058 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.088284243 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.070061918 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.066636554 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.086581487 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068587001 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.089389048 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.070576807 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067104977 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.084467778 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068655986 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069900412 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.08936513 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.069236359 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.088655501 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076370802 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087091473 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.072713374 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072289561 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.085027719 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.072350795 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.086816356 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.069746538 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.06831317 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.091332137 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073124991 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088440956 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.078570504 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.086402556 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07039232 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069242839 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.085423219 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.069020171 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.068712323 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.087795728 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.069660358 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.088111835 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077337038 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.085162282 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.072772846 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068907842 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.087653287 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.076133307 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.088056783 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.072856482 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.094187141 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.069609381 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.071103245 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.095360934 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.072823439 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09038639 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071065048 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070150099 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094663111 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.068476102 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.094179512 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069881258 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.087856288 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.071263572 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.067389303 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087128112 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.069013624 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067713843 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.09229729 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067993272 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.084960546 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066621993 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.082717808 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.070376849 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072059951 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094877246 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071927522 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090714185 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064977644 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066202513 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.08884031 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067476306 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.089347249 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072775664 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074309147 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.090558113 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069657324 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.086078436 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.079177435 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09326323 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.07300528 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067770186 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.090960004 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.070990191 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.089288358 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.070032822 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.06925233 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08876054 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073504544 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.089035742 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.06874598 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075824539 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.091433138 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070310949 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.088798282 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.070328973 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.069534837 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.083112267 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.070355457 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.089374679 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074337946 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068770161 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085126714 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077959925 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.082848005 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.06777995 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088610617 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067015458 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071703293 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.080356748 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.069036067 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086063678 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068586755 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062117661 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.084247452 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06515421 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.086727207 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066937658 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062602585 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094942377 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075725265 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.088289813 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067376273 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065963101 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.08076777 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063166971 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.084151025 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069006294 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.06876254 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.095776168 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066332368 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.084846712 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064362532 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068679603 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091297516 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.072188624 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.085405092 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064649174 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.068296519 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.091850351 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075035921 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08702563 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.069565259 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070985316 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.088164997 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065511186 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088168187 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064798051 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.088698375 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079727877 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067273059 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086035727 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073223674 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092838177 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068259019 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.080395326 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.06773964 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069789685 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.086008561 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068925365 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.085883286 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082102729 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088201343 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066674345 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066050744 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.088546374 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067616903 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.092681017 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068613678 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067848154 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.090685858 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068897626 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.093327284 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070451759 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092558499 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071006654 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.088747365 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.066625208 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067676009 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.0837351 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066898552 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.087321524 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.070224483 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072063025 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.092608403 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066547611 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096371402 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076929716 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.08746005 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.06531705 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066414855 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.084773463 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062885115 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.086360853 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065953787 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066141674 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.083246424 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.06670027 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.086647139 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073932861 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068170108 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.088344017 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.069937712 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.081859232 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.071776468 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.07212937 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088822127 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.066166186 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.068595686 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.089546261 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.074190837 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091871088 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.067798496 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.08977509 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.071451831 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069912151 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.083982505 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.076009299 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067934197 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.09158133 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068360218 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088229809 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.070368957 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090653692 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074320131 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069846183 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.09036377 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.078623987 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.09057021 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.066791196 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.065523587 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.094155329 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.067271001 seconds)
  done (took 47.485037746 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.107199418 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082745381 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062762969 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080952616 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075474659 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083014443 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062520737 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063779455 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081842128 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066326985 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.081030313 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063547787 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.089940242 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086543 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093782431 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067253113 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08174629 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064315483 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.080850435 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064643987 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.08984542 seconds)
  done (took 2.477598978 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075589773 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.089740232 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074168062 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.095669181 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068224288 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.089938894 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073365428 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089889619 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095599524 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068733126 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.0958261 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071444689 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.086415226 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.068425181 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086316545 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071766736 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.09540529 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.0690728 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.090268708 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074266748 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090535739 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073468034 seconds)
  done (took 2.638470758 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067969079 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.06706745 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086805956 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062814883 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066187806 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.080469776 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070289139 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.083232678 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069985957 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065199547 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.084469027 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.074973862 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.086729027 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062406985 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067817137 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.084088716 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.134290339 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.072389061 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.067556249 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.089613285 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.064263504 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.08985906 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064714947 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.064237492 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.086789639 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.072687722 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.088869984 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.067080688 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067597698 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.087183092 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.068893643 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.085141945 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.070221563 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069153953 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.086562803 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.068421707 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.068252012 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.087720786 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.064628616 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.085239925 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069843911 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.064441898 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.088510766 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070405229 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.066807896 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.086182198 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.070477588 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.087244806 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.064201875 seconds)
  done (took 4.570606143 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.084921104 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.131071322 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.08783373 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090923337 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.101541429 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.092794848 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071172355 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.111700042 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064301513 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.084617856 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.083279785 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.103673484 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.085785379 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.072003761 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.088099725 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067011356 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067479836 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084421801 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070755066 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084880003 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070579865 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.091844291 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.100295666 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.08146936 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089392872 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066872708 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.084704913 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071894937 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.097637974 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.072321214 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.089103138 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072672597 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.100188953 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072343053 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084732837 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.069804396 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.102154641 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.06689353 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.08863199 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.06506866 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.08752698 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.07193759 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.092333598 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.084271603 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086023002 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071821934 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.086249693 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06422744 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.098698467 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.069338318 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.093640963 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.099938514 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071550284 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085673529 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071201989 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.100555839 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067638902 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.083462643 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070295727 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.098184684 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064648167 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089114781 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080864211 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.087471822 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.07445632 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.100089061 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072755276 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089736507 seconds)
  done (took 6.657314271 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075569998 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.092120863 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080873598 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101234957 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09366515 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.076050053 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.094577199 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075871855 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.094933876 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080700265 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.095103409 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115693595 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071029814 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.097121308 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075976097 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.095492173 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.076128443 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.095835766 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075597373 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.095909922 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.094866764 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.084057932 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.094599405 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.103331458 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.10574198 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.090362748 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.076039994 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.094452077 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08348781 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.096228351 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.106066382 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075350568 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.094370014 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.102801043 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.088163349 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.094877662 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068303934 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09429353 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075727963 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.094960577 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.071094293 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103827156 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07501896 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.090848633 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075796754 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.095133787 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.102227793 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.087214256 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.09815503 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.09975226 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.076661587 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103522976 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075732229 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.096223917 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.102463733 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.10918946 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102882209 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.102396412 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07563448 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.103853468 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.102729704 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.109557947 seconds)
  done (took 6.496264617 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087762291 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09474352 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098077234 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.06285371 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065378689 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090779339 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065843978 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.083570311 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076260659 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094221791 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078272884 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089064565 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073875628 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097528579 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.089185081 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07427852 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088889212 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071586174 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094486463 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070881077 seconds)
  done (took 2.506498828 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076477876 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103213581 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068728132 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071919419 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.090466706 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072647446 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.089138179 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070134927 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087229937 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070517319 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096521876 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077567199 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086590336 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073123938 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.096224609 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073511975 seconds)
  done (took 2.165929526 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.078742823 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.096837909 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.082014508 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.087214112 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065824945 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.083795414 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.067667064 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062936478 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.083007561 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.08132382 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.087434205 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.069779909 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.086234654 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06630019 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063802862 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.089319592 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063750861 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.084192526 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.067697692 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.101155729 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.078282144 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.084230051 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067794836 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.068587731 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.087170406 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.07222703 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.087134757 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065020974 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.084710287 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.068378303 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085915191 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.074633807 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.08280699 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.066040646 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065460971 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083490434 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067533337 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.087586189 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070149691 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.066227088 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084726047 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067831274 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085816398 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068608422 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.082186151 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.067993339 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063574959 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.092921727 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065603163 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.086773536 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067503887 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.088028121 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.068864075 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.076765105 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.09047022 seconds)
  done (took 5.105124697 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080582556 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070492477 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.08197585 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065411074 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089615699 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068868649 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069965238 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.08904364 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06878174 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084375543 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069244653 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088552061 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069419455 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070940407 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087679699 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07073978 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.082278108 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069431569 seconds)
  done (took 2.245070721 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072821159 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066889782 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094004306 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067743828 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.086192877 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070506236 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063400418 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.085649357 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066027126 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086381401 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067429281 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070017794 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085120162 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069597652 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085764819 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067263376 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068855636 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084589898 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068205444 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.081806634 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070077467 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065765137 seconds)
  done (took 2.513133908 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.072930834 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.093898776 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.162429827 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.107968132 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.08330861 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.100412695 seconds)
  done (took 1.490373648 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092483849 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099157541 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068880016 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108543028 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075973811 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08841709 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069721056 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08773494 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077720846 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103118142 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071226047 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099923685 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099403389 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080137358 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096887162 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077043508 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091054606 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070737347 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08998568 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108785113 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071848528 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098653232 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071357495 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090909093 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071033333 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098726762 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079733399 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104839619 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090969359 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079921852 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096506331 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071021712 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099693109 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104678624 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072711941 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099732713 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071194942 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109680326 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076132316 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099353391 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070109986 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097300849 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099113066 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076003772 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099629852 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07136368 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096163587 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069996601 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090495262 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115225975 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076895057 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09886583 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096294678 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079677348 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097943946 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113982505 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082883329 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096707956 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094543631 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082728616 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097967121 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073883903 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097761641 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102017184 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074662695 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096080599 seconds)
  done (took 6.738626565 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084890936 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106153724 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069446121 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102401514 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096947742 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06961433 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087745794 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069416951 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088303863 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069017273 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129546093 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069958191 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097034084 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09847713 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070269027 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090028053 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071553399 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099565494 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071117499 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115618672 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09040116 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079204066 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099740911 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099331962 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084521152 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097629938 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071505355 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091499063 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071209728 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091266199 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076290383 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092333428 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099545686 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070590158 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099406248 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072240761 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090939973 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076492311 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091196786 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076877018 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0998674 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110217853 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071851965 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090780894 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084238051 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091857201 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070816503 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091537473 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071036202 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091100586 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083807882 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106237392 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104724753 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099930997 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07162297 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091367487 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071767226 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091323424 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072498216 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096978706 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079546077 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090909749 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115652482 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071757131 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090853912 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079146899 seconds)
  done (took 6.648731217 seconds)
done (took 130.591501247 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.211431092 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.201232957 seconds)
  done (took 1.285368483 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069873183 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.096183963 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.098576794 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.140021202 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.087159382 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.107146933 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.119619284 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.079156639 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066630682 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.087179605 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067710523 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.088631733 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.170005969 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.067234943 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.086920841 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069754154 seconds)
  done (took 2.386518085 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102944686 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.198526275 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109954178 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065544551 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099895211 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079640011 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.085866101 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.077180026 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.094848473 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.06650928 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.09783523 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.07619272 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065687185 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096421776 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.07470759 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.097752405 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065238424 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.097928781 seconds)
  done (took 2.538235534 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.104657072 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.149386726 seconds)
  done (took 1.135318548 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.203909928 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.123605635 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.203026819 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.414561655 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.206650444 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.279338946 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.174911071 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.173737475 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.158809569 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.169632002 seconds)
  done (took 2.98977587 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099620825 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.171024108 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.311895689 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.138850718 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.086685003 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.116235205 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.140622231 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.108633448 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081996258 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.100039882 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081365593 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098086483 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.117556027 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076065751 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.074916979 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.098756627 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.121646423 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074836369 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.096448905 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076225689 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117993917 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067870822 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.095675214 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074716283 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.097299179 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.078546111 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.066195783 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.086600854 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075635287 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.096218131 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.080033733 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.117591559 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.098522686 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.132113259 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.081641816 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.131101507 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.098517687 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072850111 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.095595241 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072465075 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.098380151 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077827678 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.10435329 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.096891561 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.066572222 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.07704774 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.086861543 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.067300086 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.099867978 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.078042942 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.100004261 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079031653 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.129172134 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.098139337 seconds)
  done (took 6.245676712 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.756915485 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.110694823 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09542118 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.81796611 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089671226 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106674144 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.728069689 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.122035737 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.214756181 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.782612523 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.090093063 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.102680296 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.185564925 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.240850524 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.906775166 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.292004405 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.652046469 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.105706937 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.109758069 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.135301597 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.142208114 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.18445073 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.15565653 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.442327419 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.07613782 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.095421262 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.139304131 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.098448646 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.143737197 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.087710282 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.096333059 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.159858806 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.232545378 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.157022873 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.100352045 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072373465 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096005993 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.152815984 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.250945392 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.174963649 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.163626249 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070166426 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.09556206 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.145349258 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.13589849 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069857565 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.144563139 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.178963774 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.153191781 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.075985573 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.099529012 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.147522128 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.142963838 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.147947184 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.105422174 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.277389457 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.290104241 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093658912 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100867402 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.108256615 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.243195014 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084007919 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.204909593 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.14371488 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.171885399 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.095405183 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.73569323 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.149394431 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.095391768 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.076098074 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.12295608 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099311671 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.143690953 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.14941341 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.373442315 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.146747956 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.075508316 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094401245 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.213443222 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.109135067 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074051585 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.145646566 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.099540466 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.102929895 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.170261667 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.147427465 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.152062905 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.216029645 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.146453375 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.16592779 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.076999947 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128276268 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.097792358 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.194583159 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.177058811 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.143836161 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.214066432 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.141247097 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.14684035 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.152035519 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099995493 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.155589165 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.12277517 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.082499025 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.143062002 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.198707829 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.127203548 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084576118 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.098639388 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.143900268 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.130433586 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087688704 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.167628136 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.155045374 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.463034724 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.151278794 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.093033464 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.089562176 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.141696736 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.166519651 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.079208587 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.241725758 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101200043 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.173349978 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.125096223 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.070702103 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123797787 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.144829311 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.080302751 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128126518 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.165956142 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.080517804 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.2182337 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.195930701 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.079435991 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.22064279 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.165051034 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07852976 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.153552947 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124338469 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.150234443 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101221299 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.144494272 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.0777438 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.779327271 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.146805977 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.125957401 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.074241154 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.179883744 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09344058 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084827815 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.108914094 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070114636 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.755055619 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084520842 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.104347698 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.106369981 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.077954872 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.126692029 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.141202409 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.104412937 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.14420741 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.187006315 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10067722 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.123571366 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.085056733 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.14383612 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.101378576 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.107683049 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.086820129 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.107586421 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.125932904 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.07596955 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.10806222 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.152193618 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.145739258 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.199055176 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.547781133 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.07136913 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.108242359 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.206173638 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073252009 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.270171632 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139364978 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.202589555 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.1459393 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.081538019 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.287899984 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.147890463 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.184000331 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.110444103 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.156940666 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071102965 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.141571481 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.146034524 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.096805353 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077036684 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.143993194 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.171570134 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.149261494 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.937126146 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072073798 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.206070117 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.069050269 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.175375733 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.078818271 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100406193 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.252559377 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.095545081 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.151176781 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.147452915 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097402458 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.086133966 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.68464836 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.108955732 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.143433495 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099259611 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.176638747 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.168702371 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.14262071 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.14365137 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.077399148 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.165503122 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.192271299 seconds)
  done (took 41.360129279 seconds)
done (took 58.825038805 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.263492744 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.183356037 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.243304214 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.145749651 seconds)
  done (took 1.815325027 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.144777613 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.105268417 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.117357591 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.088151987 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.103463815 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.089492898 seconds)
  done (took 1.54912072 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.40602181 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.267824811 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.232038547 seconds)
  done (took 1.812595173 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.268062148 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.217076644 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.452983037 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.298735029 seconds)
  done (took 2.27726162 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.177885754 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.113763425 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.06718915 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.106558321 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.158970779 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.254784338 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.128503114 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.189555652 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078898159 seconds)
  done (took 2.230647057 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.198740838 seconds)
done (took 10.798286866 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.148863284 seconds)
    (2/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.273997668 seconds)
    (3/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.179216148 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.132334965 seconds)
    (5/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.219173251 seconds)
    (6/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.243483314 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.108907194 seconds)
    (8/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.222511238 seconds)
    (9/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.172262244 seconds)
    (10/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.19817348 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.151710304 seconds)
    (12/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.194256615 seconds)
    (13/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.198577482 seconds)
    (14/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.105622933 seconds)
    (15/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.190162979 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.105882632 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.166193271 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074651333 seconds)
    (19/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.162129053 seconds)
    (20/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.271521212 seconds)
    (21/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.224475714 seconds)
    (22/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.205171927 seconds)
    (23/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.108155642 seconds)
    (24/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.180960592 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.114704671 seconds)
    (26/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.171984005 seconds)
    (27/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.10223214 seconds)
    (28/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.188013436 seconds)
    (29/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.139771008 seconds)
    (30/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.183546434 seconds)
    (31/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.205021706 seconds)
    (32/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.16797057 seconds)
    (33/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.084262416 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.154273432 seconds)
    (35/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.115512958 seconds)
    (36/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.180449863 seconds)
    (37/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.095969745 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.098476896 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.116327552 seconds)
    (40/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.098178882 seconds)
    (41/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.099421938 seconds)
    (42/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.073369473 seconds)
    (43/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.161823517 seconds)
    (44/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.18021919 seconds)
    (45/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.094818498 seconds)
    (46/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.195796599 seconds)
    (47/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.215845497 seconds)
    (48/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.126889287 seconds)
    (49/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.079359836 seconds)
    (50/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.184122377 seconds)
    (51/309) benchmarking ("sort", Int8, false)...
    done (took 0.170154024 seconds)
    (52/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.055246477 seconds)
    (53/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.102190779 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.119973656 seconds)
    (55/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.05439301 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.099682964 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.113448593 seconds)
    (58/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.116909092 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.114461348 seconds)
    (60/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.138430181 seconds)
    (61/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.133570837 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.070170759 seconds)
    (63/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.125714039 seconds)
    (64/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.078582865 seconds)
    (65/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.075371213 seconds)
    (66/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.106199346 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.15129298 seconds)
    (68/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.193160934 seconds)
    (69/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.212633118 seconds)
    (70/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.07572389 seconds)
    (71/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.134507927 seconds)
    (72/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.075155836 seconds)
    (73/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.099287123 seconds)
    (74/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.077042968 seconds)
    (75/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.055883602 seconds)
    (76/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.14675191 seconds)
    (77/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.054421144 seconds)
    (78/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.092176304 seconds)
    (79/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.079744178 seconds)
    (80/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.081820702 seconds)
    (81/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.105667202 seconds)
    (82/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.078172985 seconds)
    (83/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.202823946 seconds)
    (84/309) benchmarking ("sort", Int64, false)...
    done (took 0.069997552 seconds)
    (85/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.087698104 seconds)
    (86/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.10401593 seconds)
    (87/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.102727679 seconds)
    (88/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.070444472 seconds)
    (89/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.065141445 seconds)
    (90/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.198665746 seconds)
    (91/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.079360939 seconds)
    (92/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.105923614 seconds)
    (93/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.072489113 seconds)
    (94/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.112399338 seconds)
    (95/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.167131608 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.121975083 seconds)
    (97/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.075312946 seconds)
    (98/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.075136295 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.090807295 seconds)
    (100/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.072012946 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.116821973 seconds)
    (102/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075003997 seconds)
    (103/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.169214225 seconds)
    (104/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.089931046 seconds)
    (105/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.052505391 seconds)
    (106/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071673428 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.15014326 seconds)
    (108/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.169676883 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.143125317 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.115200218 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.077939915 seconds)
    (112/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.074281392 seconds)
    (113/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.178742075 seconds)
    (114/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.097800727 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.14590696 seconds)
    (116/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.088262523 seconds)
    (117/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.160318454 seconds)
    (118/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.074945278 seconds)
    (119/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.052293075 seconds)
    (120/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.053245832 seconds)
    (121/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.095938864 seconds)
    (122/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.053639209 seconds)
    (123/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.162096896 seconds)
    (124/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.052188646 seconds)
    (125/309) benchmarking ("sort", Bool, false)...
    done (took 0.161298126 seconds)
    (126/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.07133857 seconds)
    (127/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.100158045 seconds)
    (128/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.070898399 seconds)
    (129/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.118585998 seconds)
    (130/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.104118847 seconds)
    (131/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.116507669 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.092186997 seconds)
    (133/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.075674297 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.091821953 seconds)
    (135/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.140023375 seconds)
    (136/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.078280558 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.074434586 seconds)
    (138/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.102317634 seconds)
    (139/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.151818016 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.118995234 seconds)
    (141/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.05340456 seconds)
    (142/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.062136782 seconds)
    (143/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.078020413 seconds)
    (144/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.076628443 seconds)
    (145/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.165170874 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.090763532 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.10141423 seconds)
    (148/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.069493261 seconds)
    (149/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.075506454 seconds)
    (150/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.094856804 seconds)
    (151/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.074166853 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.139071112 seconds)
    (153/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.068928506 seconds)
    (154/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.095949388 seconds)
    (155/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.077722415 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.067791383 seconds)
    (157/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.099613708 seconds)
    (158/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.076175309 seconds)
    (159/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.100047112 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.09530053 seconds)
    (161/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075230413 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.090396179 seconds)
    (163/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.053363277 seconds)
    (164/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.054804777 seconds)
    (165/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.159547278 seconds)
    (166/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.077549419 seconds)
    (167/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.08876011 seconds)
    (168/309) benchmarking ("sort", Float64, false)...
    done (took 0.127392701 seconds)
    (169/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.129584281 seconds)
    (170/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.068199658 seconds)
    (171/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.064652133 seconds)
    (172/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.076153173 seconds)
    (173/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.078919345 seconds)
    (174/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.105962636 seconds)
    (175/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082078865 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.11816067 seconds)
    (177/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.072166436 seconds)
    (178/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.096755659 seconds)
    (179/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071558725 seconds)
    (180/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.073317975 seconds)
    (181/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.089671445 seconds)
    (182/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.055303976 seconds)
    (183/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.052533079 seconds)
    (184/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.100850725 seconds)
    (185/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.171001463 seconds)
    (186/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.053103668 seconds)
    (187/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.076984214 seconds)
    (188/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.091232862 seconds)
    (189/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.067806473 seconds)
    (190/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.104005906 seconds)
    (191/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.11138077 seconds)
    (192/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.053944743 seconds)
    (193/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.141099722 seconds)
    (194/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.073453856 seconds)
    (195/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.066965509 seconds)
    (196/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.079532655 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.079385908 seconds)
    (198/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.162542741 seconds)
    (199/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.142906431 seconds)
    (200/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.078095264 seconds)
    (201/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.107239876 seconds)
    (202/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.117965739 seconds)
    (203/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.072872148 seconds)
    (204/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.292762407 seconds)
    (205/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.09217744 seconds)
    (206/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.069249528 seconds)
    (207/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.053489072 seconds)
    (208/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.178102931 seconds)
    (209/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.100007824 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.098448474 seconds)
    (211/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.098141416 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.078643223 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.076452164 seconds)
    (214/309) benchmarking ("sort", Float32, false)...
    done (took 0.155428179 seconds)
    (215/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.065177344 seconds)
    (216/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.165309344 seconds)
    (217/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.053746366 seconds)
    (218/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070664202 seconds)
    (219/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.078045201 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.068873929 seconds)
    (221/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.066748373 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.10337093 seconds)
    (223/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.074991311 seconds)
    (224/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.090750844 seconds)
    (225/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.072155224 seconds)
    (226/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.068115735 seconds)
    (227/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.207391534 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.068340717 seconds)
    (229/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.116498905 seconds)
    (230/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.053466263 seconds)
    (231/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.051489375 seconds)
    (232/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.075698262 seconds)
    (233/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.054711483 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.120959756 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.140639142 seconds)
    (236/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.075213041 seconds)
    (237/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.072622256 seconds)
    (238/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.054747506 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.091077702 seconds)
    (240/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.067889554 seconds)
    (241/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080413468 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.091071682 seconds)
    (243/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.054124875 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.156664432 seconds)
    (245/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.053880566 seconds)
    (246/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.055276198 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.092732855 seconds)
    (248/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.072560411 seconds)
    (249/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.066479322 seconds)
    (250/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.111843006 seconds)
    (251/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.062279072 seconds)
    (252/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.165946174 seconds)
    (253/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069510175 seconds)
    (254/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.077190068 seconds)
    (255/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.069084802 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.068974322 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.092269841 seconds)
    (258/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.070563833 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.149144461 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.09664646 seconds)
    (261/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.053307083 seconds)
    (262/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.077019542 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.076058686 seconds)
    (264/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.109161528 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.076863363 seconds)
    (266/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.05414133 seconds)
    (267/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.195107982 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.068537655 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.09276778 seconds)
    (270/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.110450768 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.11650009 seconds)
    (272/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.077126213 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.144794828 seconds)
    (274/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.070357453 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.127562058 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.068973232 seconds)
    (277/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075508563 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.160576283 seconds)
    (279/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.063679996 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.114721805 seconds)
    (281/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.069595823 seconds)
    (282/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.05388094 seconds)
    (283/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.079298708 seconds)
    (284/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.054532055 seconds)
    (285/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.072294866 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.10019714 seconds)
    (287/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.068902024 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.089764342 seconds)
    (289/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.074866463 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.067805386 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.116510421 seconds)
    (292/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.070424088 seconds)
    (293/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.053811591 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.100843694 seconds)
    (295/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.056094585 seconds)
    (296/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.054912162 seconds)
    (297/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.078413132 seconds)
    (298/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.100704197 seconds)
    (299/309) benchmarking ("sort", BigInt, false)...
    done (took 0.216145475 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.100842721 seconds)
    (301/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.056540918 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.068782606 seconds)
    (303/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.082068462 seconds)
    (304/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.054150496 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.117353316 seconds)
    (306/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.090618575 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.074546734 seconds)
    (308/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.06902776 seconds)
    (309/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.096151836 seconds)
  done (took 34.036365251 seconds)
done (took 34.959816434 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083423756 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.119558724 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.078440226 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.120410111 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.0847567 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.105129778 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076686928 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.081832606 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.108529745 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.085364233 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.106984375 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.057685009 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.101543021 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078055551 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.102036343 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096681104 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.106032821 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075970162 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.076145218 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.091606493 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.077405557 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.092040067 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.070037403 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.058573452 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.105088406 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.076416794 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.074539342 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.101937391 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068733475 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.091998388 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071597663 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075244695 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.092108705 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.082430335 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.099392382 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.07692931 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.078501307 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.103726343 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.070383449 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.092223701 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076700735 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.069055378 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.099538649 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.076294669 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.074213732 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.098326468 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.07706517 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.107046219 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096495961 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094551128 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.077068675 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.103983778 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.080170863 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.075241796 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.096820664 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.077170078 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.097169687 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096304083 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.101933475 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070461371 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074516007 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.100228182 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074071624 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.100520896 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.07704301 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.079918871 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.103606114 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.07478297 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.101578902 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.07381845 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.068770742 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.100779922 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.07193845 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.067632052 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.103679013 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.080411552 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.091409356 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.074449589 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.075545647 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.098929582 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.06789565 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094074615 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.07011313 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.074883753 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094555524 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057274459 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.072449822 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.098235773 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067655378 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.076478853 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.099087623 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.075620794 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.092936186 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079821919 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068532895 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.097542135 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068978205 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068511351 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.094426349 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.072547856 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068040724 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095058509 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.077840915 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.093311789 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.074188308 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.082879085 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.092830015 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074838027 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.091846202 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067760627 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.084093566 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.103217656 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.068660111 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095108805 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067556131 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.07613713 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.091992165 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.068454677 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.068106429 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.092241822 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.074981405 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068328134 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095202904 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.076093859 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.105818678 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.068188263 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.07205886 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094829981 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.068458933 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074097485 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.092991656 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.068819381 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.093545862 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.065976526 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071601644 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.092442347 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.075748018 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069763028 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.099460523 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.07031219 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.101995909 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.073176545 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.073879601 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.097988358 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.067868824 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.061358495 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095758421 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070616235 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.069778432 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.09257105 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.070339244 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.068602408 seconds)
done (took 13.681354238 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067216956 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.171346508 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.128783829 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.098566198 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.113331133 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.069206728 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.103125304 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.105135135 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.092651064 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.128915384 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088443681 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.109934933 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.115437236 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.091124179 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068891355 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.073112047 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.094705735 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.092680026 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.129952144 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087577382 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.141063343 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.090070835 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.123041843 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.093702958 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.116190464 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.09732674 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.093614637 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.072830863 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.071546459 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.130693516 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.113319885 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071995023 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068876033 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.129060526 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.121264509 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.088536205 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.092742244 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.087092907 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.092885883 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.069019958 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.119760879 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.103363695 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.10917897 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.082839255 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.099298837 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.071266753 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.09217709 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.088806794 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.11775744 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.081624444 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.113835516 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.136404204 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069889381 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.107064419 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.065501125 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.112961206 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.106664132 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.071247243 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069343517 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.095815722 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.068346571 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.072251094 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.116738477 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.118242764 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.07294 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.110163925 seconds)
  done (took 7.426918447 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085726965 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.119449989 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.0876378 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.111184504 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068517133 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068918507 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.094164899 seconds)
  done (took 1.613647571 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068464518 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.089860253 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.115911904 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.091883126 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.113241584 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.090636632 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.103855204 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069795165 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.11244417 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070867374 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.091226264 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.133845642 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.071138353 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.102293617 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.094635094 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.094309409 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094433923 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.094206054 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072683066 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.119609336 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07261531 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.115181867 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.071462634 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.06999412 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.110070191 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069910274 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.144182878 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074369413 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.094977282 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.072898556 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067578017 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.145871818 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.109064815 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.08055831 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069304606 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.110339673 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.084602831 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092897641 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.087054794 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.099662262 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.084241121 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069873136 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.095797468 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068254701 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.074789681 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.106271916 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.071215356 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.094962396 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072422991 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089983348 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.095364329 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.085145945 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.094491239 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.074666332 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.070761199 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.10100014 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.080281815 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.095528053 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.091356757 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071604103 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.112937571 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084506078 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.108213281 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085535874 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.096035425 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.084271228 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.109536557 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072743103 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071154023 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.098283003 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087397785 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.092346305 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071122454 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.081541578 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.096447415 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094278924 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.119139577 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071419803 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.105671688 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070498796 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070057944 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.095560671 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.094263696 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.097516765 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069976544 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.074168763 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.098097027 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067670771 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068773512 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.098789085 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068404175 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.09592406 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.072725088 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070075831 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.097032291 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.087780457 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.07092198 seconds)
  done (took 9.618843682 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069283775 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068561864 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.094584737 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068684411 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068715046 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.093430749 seconds)
  done (took 1.4614683 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.098467603 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.094636358 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.083593648 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.097834196 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.107536139 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.107084868 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.08297161 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.107872577 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.085384149 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.105401939 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.083273223 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.109866136 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091245729 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.101856381 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085283444 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.099964505 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086088753 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.104907725 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.083098308 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.102119084 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.091100731 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.10142343 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076961324 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.111493313 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.073779009 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.07538929 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.104069646 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.08109706 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.103881178 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.083501799 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.098053014 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071552794 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.09617841 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.083382806 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.107332082 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.073483029 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09776845 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.072366403 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.1025349 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.07112552 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.108020958 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074040873 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.078518451 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.096832397 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.108400877 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074154303 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.072061318 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102183779 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.082120042 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.096487377 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.07248336 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.098805761 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071832788 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.097421586 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.073759743 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.108347584 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074672426 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.109414715 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.075617489 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074448262 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.097177073 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.07264506 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.107449289 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071542041 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.106149688 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.072048487 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096600481 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074112928 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098795674 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.073612491 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.072186786 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.094669009 seconds)
  done (took 7.468910491 seconds)
done (took 28.566228112 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.665027773 seconds)
  done (took 1.646786361 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.799157992 seconds)
  done (took 1.790379571 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.763787311 seconds)
  done (took 16.765725388 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.632074465 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.774700049 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.817303149 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.133722675 seconds)
  done (took 3.351707617 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.912829809 seconds)
  done (took 1.932677194 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.237088689 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.227571366 seconds)
  done (took 1.462822635 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.757311916 seconds)
  done (took 1.764489101 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.296605172 seconds)
  done (took 2.294223887 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.32303787 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.182726787 seconds)
  done (took 1.513108411 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.527248004 seconds)
  done (took 1.534288047 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.9192408 seconds)
  done (took 7.931843804 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.232985546 seconds)
  done (took 1.249101907 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.271213499 seconds)
  done (took 1.280671754 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.32644057 seconds)
  done (took 4.337652392 seconds)
done (took 49.853111823 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079584247 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.082402433 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.105752355 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079479153 seconds)
  done (took 1.34589305 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.080002076 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.074747705 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.104173555 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.07524342 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.105709337 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.076847172 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.103617859 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.079701082 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.07533775 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.102713985 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.076307853 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.100443297 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.078578072 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.102768615 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.074167884 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.078272868 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.104831562 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.076353461 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.10419624 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.075667637 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.072314978 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.101769942 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.078591689 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.098188614 seconds)
  done (took 3.118430625 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079473096 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073872494 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.099898017 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073296457 seconds)
  done (took 1.336701508 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078490518 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.118202623 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089874489 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078055631 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.117781749 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.111613961 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.070266286 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069586664 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.095807242 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.078379119 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.093081812 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.099229115 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.112508843 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078645166 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.104462028 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.067045317 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.069389437 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.112129527 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078569818 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.102734592 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070603402 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.07989078 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.092325783 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.091504576 seconds)
  done (took 3.17633417 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077349829 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.129798754 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.080023061 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.11681391 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093287358 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.0912616 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.077872595 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.119080764 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.127201841 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.092632998 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.071386033 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066845538 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.099870727 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.067956836 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.077860767 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.136764274 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.138169252 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.069325478 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.123849766 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.066055974 seconds)
  done (took 2.947273422 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075100294 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070979204 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.09197572 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.071072794 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077677975 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.099196661 seconds)
  done (took 1.507843941 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068323736 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068443126 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.09275521 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066875436 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072523171 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.093076804 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066583256 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068437163 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.094115789 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.070299823 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.06793394 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.092969155 seconds)
  done (took 1.938572713 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.389594999 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.094196171 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069669042 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.091074694 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072875913 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.093181158 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082802573 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069675015 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.117799868 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069533233 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.096190703 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071579027 seconds)
  done (took 2.34082749 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269548478 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080381501 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.339943404 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174993032 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145861475 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161530483 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108962476 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145454794 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.20416163 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143979561 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208253973 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233989898 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137361022 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170294216 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117105482 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.135696234 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190228235 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224454897 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134057215 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201821851 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20922199 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158561979 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183554345 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12964882 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136068925 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152481357 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.073388596 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107670682 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234850872 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163145113 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203975497 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139435156 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097130972 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2341514 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23102333 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200223986 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167168474 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08882089 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.164049535 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.17227697 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.259801666 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115777214 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195990055 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135800837 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108024744 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17598953 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149750886 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.151420628 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.138977065 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116825595 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177008636 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242238862 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.16815633 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114665948 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139862117 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143412288 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.147558311 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107415017 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.278132031 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203253761 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165145168 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.09934562 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130374954 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193502293 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162762179 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.143745329 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.156055779 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12202141 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169109993 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.214523541 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148714481 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17381682 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.183744665 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116477651 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149878172 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17316073 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161325861 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234864722 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159463041 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.076475422 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156980369 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133579558 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109159198 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.145206193 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104993993 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241769148 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103073185 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.142884041 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14309598 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13867316 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139331646 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19730867 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206679787 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132846717 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.067228928 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131820227 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.150994617 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175932896 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114876409 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136446152 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149456416 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.105115267 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169528443 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.076774632 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155833006 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.105942667 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15391868 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164479234 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.102787614 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159256787 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103958101 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.131588877 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165016418 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224125122 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116893976 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083835989 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229113621 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158611544 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.133458551 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177887089 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.215763185 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.102779831 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130351938 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210111107 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248413789 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091173893 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225783098 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136608184 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110965707 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.089147145 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156443698 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141369805 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.150777906 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109715811 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.157863746 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230715751 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.076193721 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123313523 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168625697 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109547468 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082306282 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142433306 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12988788 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.122541597 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.102017528 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.1358924 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19782982 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158297179 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136598939 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155386572 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126761345 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202111389 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116462267 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.13325891 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131682817 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.071508103 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.167347843 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220545524 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080913524 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228611633 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.15616608 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13358058 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150609513 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110527781 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170890746 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080131947 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.0981758 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17646027 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139684033 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138266396 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.186109327 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132201917 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.156704052 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.152922214 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193028035 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165060981 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.16604477 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134028443 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088628012 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141796355 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181297458 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.074069012 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.122803052 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.084305234 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132116139 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124041761 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08364928 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199399137 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157171857 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128567573 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141939701 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099304115 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.207864345 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.07859864 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160867966 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.175219338 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095866548 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.213429397 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188586798 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193304269 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101562969 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209586185 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.07382084 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102505783 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.092037381 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.186008489 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085128169 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111498389 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14829748 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182104821 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159902619 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196325313 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113957608 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150341441 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.216848687 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071404116 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.147120512 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180389539 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180728902 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.133658236 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113612474 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.101695107 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.204057552 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137905578 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248668163 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145242146 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155730947 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182666213 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.132851158 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108122207 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106731851 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197950605 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135867662 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.182586318 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128227817 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115176617 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13918931 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.082525627 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131763771 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157451811 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148614974 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190997835 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.146082604 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161977843 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104752249 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146994879 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154507258 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152374945 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.065846 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149707575 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224128687 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122158908 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148753136 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186786439 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107608141 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.156763304 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244124223 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180876849 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113367181 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138115169 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157791822 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160409633 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148709252 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17170385 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140103288 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165973268 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139678719 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.113604511 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089097674 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12635901 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135454675 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.096852015 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.167920092 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.147926681 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095398873 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189300995 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140811878 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113391696 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148428977 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.126438296 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.091729727 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126195979 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237534727 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151943566 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237886785 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.12860585 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.180883184 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229870433 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076165546 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107181397 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.108975929 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172558866 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085773659 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192701567 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.100359845 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133701396 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155208864 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173642493 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123610801 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069159243 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138745814 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191824196 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113363291 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125688452 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.134422367 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223920507 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.105131333 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107749505 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155619493 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134331666 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104557274 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234447072 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.089145522 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099643729 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103096225 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081830136 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184583836 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191610847 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.109956753 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.132800471 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146066253 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177238103 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162617414 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131619026 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101272298 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145049824 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211063733 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162760124 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.093080164 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143808118 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190429614 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195682544 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138598437 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.12762063 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240667589 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192546968 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.224919695 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.117993034 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149936364 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120161956 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140875977 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20385802 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084149342 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231868221 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112023728 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170681011 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136891151 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122924811 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163358747 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.130295585 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090255851 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210860515 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153219373 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132526114 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08364149 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151073854 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158378253 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139306997 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.104653608 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176568798 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.074773754 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19955968 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208182516 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11283607 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138266696 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099208862 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112366316 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142327155 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1376844 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11682712 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.125602299 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240139521 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.122724153 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187550279 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205198769 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148647806 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173180975 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131044065 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.667015852 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.079442372 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217997452 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152764032 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245205688 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130113645 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153033542 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144208012 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158314529 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181549053 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136622089 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.208779055 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16796345 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.152022146 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107859968 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133357313 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143183551 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.09430194 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138303192 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145857936 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14668661 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.130651337 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.153586547 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156977123 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.111873115 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097476698 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222729569 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148797876 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175810874 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.200900848 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085839891 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151728876 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200819206 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08113764 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.181068105 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195444332 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140804284 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130551317 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.083527379 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.137771508 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242457011 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.103272628 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201841792 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158129974 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143765609 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145404383 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.177605208 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168583684 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140893014 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162441322 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12776006 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.14629975 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15232178 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08761924 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.108498063 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138716655 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146030261 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.102837975 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133014456 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.15041277 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191779916 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.101478614 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099468571 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13310066 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175660468 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242023948 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.117315888 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112125879 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152186497 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145528348 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.149006351 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161083415 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.084525958 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113787739 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.113991573 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.11971211 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.145013277 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146981416 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135111859 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142433519 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207242196 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.114352128 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.258775917 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099559716 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138714702 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.071218525 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.109214226 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126346608 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10113504 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137784022 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129473194 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239383893 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.099861225 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.120983545 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122513574 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073900701 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113472227 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163446023 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142085986 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155599674 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128594999 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.065957515 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141126789 seconds)
  done (took 72.751698746 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.144779482 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.121556746 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.132201726 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.191285468 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.160256125 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.256495631 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.198796902 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.242995369 seconds)
  done (took 2.548034075 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070700906 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.118757458 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103062591 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.117092723 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091359364 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069478361 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.296774729 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.110961708 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067087076 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.114990273 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.120753072 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.092977971 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.472782808 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065519416 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.095478699 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.086811228 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068101875 seconds)
  done (took 3.258716596 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.433452322 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.661498414 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.454797234 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073763902 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.053393318 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.108343701 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.679175249 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.167026689 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.092829628 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.447003946 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.731061657 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.156652689 seconds)
  done (took 18.160503465 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075613038 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070010857 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.111921142 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084493442 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.100921969 seconds)
  done (took 1.549546117 seconds)
done (took 116.981318824 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080996621 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.348998928 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053712227 seconds)
  done (took 1.542639025 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.084033871 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085382935 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.111904524 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.084033503 seconds)
  done (took 1.477633548 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.075615612 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077339877 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.112825456 seconds)
  done (took 1.372423309 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.281697016 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.167556493 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.088110443 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084123391 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077865507 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.107407319 seconds)
  done (took 1.383330288 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074792992 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075959735 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.101550323 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076629989 seconds)
  done (took 1.435555273 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077125538 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.054507076 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056146041 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.085401341 seconds)
  done (took 1.387006707 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.090719947 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.107793001 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080931069 seconds)
  done (took 1.38339585 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.109140798 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.114380565 seconds)
  done (took 1.332428713 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082953316 seconds)
  done (took 1.192386722 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.096688393 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.139994398 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.157405935 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.139355067 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.167301515 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.138986667 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.114511143 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.088031912 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.105671983 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.117104124 seconds)
  done (took 2.376141975 seconds)
done (took 16.605968446 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079422874 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.48900438 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360961701 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.118717725 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668927013 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356296665 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.006678599 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.120808095 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121684463 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.096143139 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084253547 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.676940506 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.004522584 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.445857821 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.993033188 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.416659484 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.678491914 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06827956 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094608441 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069019405 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.963305698 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095460707 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068127618 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069156935 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.678283437 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371668928 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095970493 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.416764006 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068013301 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097625076 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355937739 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096334645 seconds)
  done (took 16.423318029 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071381385 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.146539624 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073942863 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084350481 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.099042934 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069764722 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.099515802 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.07010499 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.154525267 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067994146 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112864278 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068057168 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.099609409 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069032141 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087620895 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.095923526 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069333572 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.096261648 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068207318 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.0684566 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.114114594 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067743323 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.09541874 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068652008 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068422261 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107636625 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06956476 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068125927 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095807958 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071160582 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099012961 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069161275 seconds)
  done (took 3.879021324 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11593015 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.153765764 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074637228 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.130223023 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11342678 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.098036417 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.170883752 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093376465 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.15695582 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067847214 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11221087 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067792646 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.129505383 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068713613 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.115603222 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068649672 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069059012 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09704986 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068560401 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095999885 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087641407 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094887059 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069338959 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068851444 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.095918059 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081455009 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095751908 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068543541 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069318229 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098021877 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071759332 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095921508 seconds)
  done (took 4.190646573 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072529986 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075840114 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.110822631 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083809499 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.098615511 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.074723264 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075144544 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.099274803 seconds)
  done (took 1.805472182 seconds)
done (took 27.403575628 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079742107 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071264654 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.101761568 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081214323 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.101738945 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.081493389 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069127292 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.103256152 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.077050077 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072994215 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.103662187 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068244907 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.099177276 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.06773559 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074391054 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.096170826 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080222228 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.09928688 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079841293 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079826166 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.09842943 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076702343 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.101784548 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079389876 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.107676972 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.080074113 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.082538769 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.101889018 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069708082 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.098236017 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077229781 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084134021 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.097009236 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080183866 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.095680923 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068484348 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.067843285 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.095499702 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080209556 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.10193059 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070772301 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.102631604 seconds)
  done (took 4.714896474 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.089334538 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092789047 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.115497526 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.067389644 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.099513218 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065416841 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.116924496 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.065442473 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059587959 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.11650198 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056312008 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059098766 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.091623551 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054389229 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059580752 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.05691896 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.089220111 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.057187452 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059297546 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.088051047 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057954818 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054678344 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.087806614 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063094855 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056316005 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.088782057 seconds)
  done (took 3.090128391 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076469803 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083825252 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.115616993 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127946319 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.133266803 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077635253 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.106549909 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.088204423 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.114461236 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067202001 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071599104 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.124519458 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087672921 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.102654528 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068140888 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.116086284 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.092171747 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069705906 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.102955022 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090604678 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.112757878 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.078856226 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.120742379 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.082226176 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067448241 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099319553 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072658281 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.109615662 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073741778 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077104009 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.102691003 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072814159 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.098174411 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078935454 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.100499454 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.070284612 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089472211 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.105821835 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079076184 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.097600281 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.072112734 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068595751 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.117353412 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.112872483 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.097096417 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075068829 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.104335965 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.078392568 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.06772543 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.115201765 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077320269 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.097351084 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.073256176 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068400877 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.097982099 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084400124 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.072371298 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.103362698 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079741749 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.101192257 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.083733442 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073507495 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.114878764 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069975743 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.106262148 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069767363 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070018864 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.096423469 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.091733757 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.09806107 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.109523736 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.098016037 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069583138 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077146623 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.104705196 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074185789 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.096925555 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083678742 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077669847 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.100800132 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077011047 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.099716247 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.07193856 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.088025506 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.100334575 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069810138 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068810323 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.103898204 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070961761 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.097989843 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081680343 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068853941 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.099750103 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085711403 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.096898871 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069724365 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074557216 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.102410425 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067556734 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.109342552 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073456469 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.097689648 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077486153 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067914577 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.100243191 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077993388 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.101695916 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.068046665 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072748641 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.103159627 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069293894 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069022977 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.099441157 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069959987 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.106605122 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.07387958 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072780004 seconds)
  done (took 11.472972457 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.194064509 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.187651109 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.07111582 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.180491264 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.07681984 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.10904928 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.183425662 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.096319942 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.097878314 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069441217 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069116413 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.133232326 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.12600832 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.106417828 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.107875641 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068543313 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.115000149 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.10444559 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.18269869 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.177267109 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.117332856 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076770457 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069928197 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.098932912 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070514103 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078582246 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.11454621 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.104093236 seconds)
  done (took 4.334456703 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082494677 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.130813865 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073934567 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089198792 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.119998523 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068729544 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.102712155 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070034075 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.109915557 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.080157557 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.097564236 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074843987 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074362303 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.107062773 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.06902692 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.10800569 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.078772056 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069786755 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.099845238 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073521969 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.107309668 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.081116144 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.100411635 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067969097 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074811877 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.09709256 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064826369 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.113528512 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068274688 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.119087853 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066872878 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074258523 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.111259322 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069300254 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.097757914 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.072187524 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.071195376 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.101062165 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.071412495 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068412702 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.097518885 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.06011065 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.069327694 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.111503832 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.077309026 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.091296941 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.076685788 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.074485933 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.103486335 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066541778 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.100919301 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071809827 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070845905 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.105719081 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073104767 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.07281934 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.102113468 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.066339763 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.105324833 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.07138797 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064579542 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.095949325 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073580754 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.06669399 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.104914875 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.073516926 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.096311832 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.07197271 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.073474912 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.104732044 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071291279 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070620533 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.095417909 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070574392 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.102735029 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.073597232 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.07220968 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.097535934 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068812414 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068381483 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.084613729 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.06827695 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054175702 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.101149497 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067578118 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067209525 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.100367042 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.074510069 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.1105828 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.0703443 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.103459093 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069574524 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067248881 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.100600007 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.064247842 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.07072712 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.113462333 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.114284262 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069504844 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066708786 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.112378559 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.073368388 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067765838 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.086906865 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075170503 seconds)
  done (took 9.965135345 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.097407544 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092982353 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.099538471 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08384021 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.125518852 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.093096634 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.106013119 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075882292 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070093668 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.114470809 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.06869523 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.106148964 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.06931828 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077029624 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.126591137 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075730107 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.100006581 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077052111 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072646736 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.13737744 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083099859 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.112246814 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.081654826 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.098582547 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.073687418 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080843716 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.126528261 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.080297928 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.107764601 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.085652168 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.079993272 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.125644492 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.086550764 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.101444931 seconds)
  done (took 4.351163332 seconds)
done (took 39.050769083 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.201533981 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.427769401 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.202094638 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.19275164 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.245733116 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.22934756 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.209519739 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.215833248 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.457811618 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.203438348 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.437216138 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.912178528 seconds)
done (took 59.082773358 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.275084627 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.342595644 seconds)
    (2/2) benchmarking "String"...
    done (took 1.495522664 seconds)
  done (took 3.994242309 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.637285781 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.130168579 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.465521454 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.207915318 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.205493481 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.522923576 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.910841525 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.062897266 seconds)
  done (took 27.650989039 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.205700131 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.58728068 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.828207273 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.824045618 seconds)
  done (took 18.588188647 seconds)
done (took 60.294494969 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.218268163 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.249960719 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.217394516 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.185618395 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.311210588 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.242393732 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.267083156 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.252430378 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.204851584 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.187295824 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.233526365 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.201766477 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.219181986 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.25639934 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.209140061 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.208001025 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.286682055 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.812054159 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.600732962 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.217414052 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.243863594 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.214924864 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.203100347 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.204668056 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.221921579 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.20551898 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.201645833 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.224440591 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.65601542 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.20476248 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.207952861 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.457758327 seconds)
  done (took 189.973902515 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.20626986 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.241599907 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.314017431 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.248400944 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.681158484 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.40542857 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.31851913 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.748477109 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.224423079 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.227726396 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.545619232 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.205695897 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.61107867 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.169916037 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.213806391 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.311873117 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.503671278 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.538680765 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.225129086 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.482247469 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.234656475 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.469639174 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.368153598 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.453331244 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.256108861 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.27079953 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.229896096 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.244038296 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.396437937 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.418765152 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.228297742 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.246067254 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.823821821 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.064253861 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.225829724 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.218652507 seconds)
  done (took 150.72120596 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.487954812 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.207393706 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.208565423 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.208016123 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.240845354 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.207355435 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.790504204 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.787324984 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.754316451 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.582611961 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.271145922 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.500884928 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.210111659 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.303955453 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.22107016 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.210058103 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.207770937 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.221245619 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.233288449 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.210156054 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.208404716 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.760812362 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.217905354 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.786224518 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.214060354 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.209469667 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.239518938 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.599285651 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.2064305 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.242904126 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.532915162 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.254327733 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.208593816 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.564310262 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.593235354 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.318784534 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.210410046 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.240049751 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.209079014 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.482545466 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.208647162 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.207471331 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.21044445 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.213068345 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.806651107 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.20655448 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.791747758 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.213584311 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.136294339 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.209072417 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.211371092 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.979370607 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.704271583 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.20939507 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.21075533 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.212558512 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.209552009 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.211052186 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.244317392 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.837794158 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.314853357 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.211843609 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.216781344 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.244918449 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.210491434 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.532942042 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.210487647 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.204228031 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.269322799 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.323540343 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.764931813 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.210343035 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.305359956 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.330748569 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.2128405 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.215332276 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.215158233 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.21339938 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.319336616 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.209936851 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.634867641 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.210792803 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.218729416 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.212899463 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.272045833 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.307075257 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.208532167 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.547198593 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.211606589 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.211592753 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.939892005 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.209330762 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.305354609 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.209136014 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.212681905 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.211700324 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.634191533 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.796017206 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.438456372 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.214879522 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.033869902 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.217111154 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.647221003 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.757241452 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.866120739 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.215872821 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.320715323 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.215188277 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.214197075 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.212003282 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.243036976 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.213822273 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.27592561 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.21115502 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.611150051 seconds)
  done (took 348.465526239 seconds)
done (took 691.795887655 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.928929091 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.912290154 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.01950642 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.907126159 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.884538559 seconds)
  done (took 10.806141963 seconds)
done (took 11.958989702 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.406734935 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.403198277 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.27800534 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.410953794 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.247103372 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.42765466 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.387299064 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.235780945 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.318875581 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.297190618 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.319974257 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.266980318 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.243867964 seconds)
  done (took 18.396616669 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.52884662 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.513780684 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.274661113 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.516327237 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.250603894 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.523868249 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.403570859 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.415491673 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.402598329 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.224290567 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.225315897 seconds)
  done (took 16.435558528 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.52425061 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.513838297 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.27884014 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.530179611 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.253290277 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.530815194 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.407983738 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.420619869 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.404482565 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.223927964 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.225900969 seconds)
  done (took 16.469859977 seconds)
done (took 52.457372703 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.222766527 seconds)
  done (took 2.378241982 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.25670724 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.428373808 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.239913647 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.225959586 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.223834947 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.22283696 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.225272329 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.22306631 seconds)
  done (took 11.20228815 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.218351286 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.21926969 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.221048163 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.218738639 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.220227008 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.220799414 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.220682306 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.22093628 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.218770929 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.222887985 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.220037935 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.219857186 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.222085012 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.221841709 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.220920332 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.22028398 seconds)
  done (took 20.68507045 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.221751835 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.218734261 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.220225621 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.220152354 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.218772469 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.219408874 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.221041066 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.220164667 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.220331707 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.220434733 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.220694307 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.220164882 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.223253973 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.220617823 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.221549883 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.223525186 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.221327193 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.220752034 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.225227059 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.221923376 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.222424001 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.220881175 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.222483548 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.223187798 seconds)
  done (took 30.470016472 seconds)
done (took 65.892870798 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.419464622 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.007456665 seconds)
  done (took 9.584969324 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.223975363 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.225245164 seconds)
  done (took 3.610309092 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.226129804 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.223883882 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.225402333 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.225858205 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.223169139 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.224766025 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.223942725 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.227022396 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.2246438 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.223967311 seconds)
  done (took 13.408384557 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.226369079 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.224186409 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.222249225 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.224397655 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.222918045 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.222288474 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.22421056 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.22556122 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.224969646 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.22204622 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.224962201 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.222271258 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.223655904 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.223653023 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.226500345 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.222150211 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.221954588 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.224852146 seconds)
  done (took 23.189171506 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.223911533 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.225153618 seconds)
  done (took 3.609471341 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.222486433 seconds)
    (2/7) benchmarking "second"...
    done (took 1.22230376 seconds)
    (3/7) benchmarking "month"...
    done (took 1.224778532 seconds)
    (4/7) benchmarking "year"...
    done (took 1.223917547 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.223073022 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.222097125 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.223412022 seconds)
  done (took 9.722489769 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.227404287 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.400725387 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.484494746 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.815535898 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.224228787 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.230632256 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.088412681 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.229668274 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.233210145 seconds)
  done (took 14.094687983 seconds)
done (took 78.379670604 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.265388684 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.220388112 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.08625728 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.235592413 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.236530196 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.562992479 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.257365329 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.340814136 seconds)
done (took 37.367336367 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.227604289 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.940860372 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.975282614 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.217992111 seconds)
  done (took 11.295057543 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.213476472 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.191077054 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.219657992 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.27300507 seconds)
  done (took 18.055115473 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.870020077 seconds)
    (2/2) benchmarking "read"...
    done (took 1.553390448 seconds)
  done (took 4.583241364 seconds)
done (took 41.323406273 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.226041487 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.225849393 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.224187093 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.225812318 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.223246491 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.226110583 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.227876366 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.22292456 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.22288784 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.227063356 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.229086542 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.225775834 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.226479951 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226911562 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.224794021 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.223330158 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.227208371 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.225155345 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.224222384 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.225063669 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.228118523 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.224731833 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.226411846 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.223628932 seconds)
  done (took 30.573342055 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.227963675 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.224894305 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.228207571 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.228482124 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.224771506 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.226682168 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.226614102 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.226361798 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.227314006 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.22870442 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.226796178 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.226570311 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.231376342 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.225330582 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.228236563 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.226112931 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.227998364 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224265404 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228280298 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.226073625 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.226617789 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.226188162 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.226029489 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.22736694 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.224645362 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.225920021 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.225932817 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.226051228 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.229089134 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.226386551 seconds)
  done (took 37.968398313 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.236322887 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.239034247 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.228752765 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.229312728 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.227672062 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.225425814 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.228063718 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.227187466 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.227386685 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.228577085 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.228026385 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.228692778 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.227011188 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.228630276 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.230429042 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.229160881 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.229063058 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.228917226 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.229625012 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.226791379 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.229441969 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.228181856 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.229039326 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.230658946 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.232703329 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.231461899 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.232122305 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.230677928 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.230924789 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.231080598 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.232574914 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.231617815 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.231417671 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.22991667 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.231984331 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.23242926 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.236009449 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.240623852 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.233744117 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.231046628 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.232935064 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.232330757 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.232220919 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.232623213 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.234244466 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.23168756 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.23301138 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.233495197 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.234823658 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.232761109 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.234699262 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.233475362 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.233985239 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.232350182 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.232738808 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.23057952 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.234150792 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.23371381 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.233374511 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.234673759 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.233347587 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.233087183 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.233548817 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.234044731 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.234950079 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.233943998 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.233211991 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.234732167 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.232752297 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.236267701 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.23439512 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.234276813 seconds)
  done (took 89.861299569 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.23376487 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.231700325 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.231727746 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.231310536 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.231188894 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.2333281 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.230197119 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.235526994 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.232002712 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.231942033 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.232270983 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.230442922 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229787929 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.235009313 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.233603566 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.231840435 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.235701979 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.232117354 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.23524316 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.237062551 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.234717207 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.232986683 seconds)
  done (took 28.29200647 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.236174507 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.233925248 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.234078136 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.23614254 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.234955923 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.236026801 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.236303814 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.237461303 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.237757053 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.234984988 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.23286938 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.235397361 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.232596368 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.233564355 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.23388584 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.233303165 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.236034143 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.23361746 seconds)
  done (took 23.398708943 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.231940417 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.233560655 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.235726777 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.232650691 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.233230626 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.236515702 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.233454442 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.23533974 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.23577744 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.231956857 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.236302681 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.23662655 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.236009779 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.233223661 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.236472563 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.23225431 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.236776062 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232409052 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.23652211 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.231907002 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.235279574 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.236500676 seconds)
  done (took 28.330719548 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.237603876 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.236453712 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.235122645 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.2355902 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.233529178 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.235987607 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.236387209 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.233156525 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.237568605 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.23616506 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.235056548 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.236019982 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.237089081 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.234248425 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.232801088 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.23553309 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.237667226 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.233550799 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.237154765 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.235076067 seconds)
  done (took 25.883074588 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.23944012 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.23821804 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.240490428 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.23912423 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.238912751 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.241231662 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.240583308 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.240167274 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.238508728 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.238960532 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.238699275 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.241189507 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.24119135 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.240965483 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.238705095 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.239988001 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.239988263 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.240302785 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.240134516 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.240791627 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.239472501 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.239848711 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.241476242 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.241159955 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.239676716 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.240638077 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.239794056 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.240293745 seconds)
  done (took 35.893333797 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.240594075 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.238256791 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.235778901 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.235901704 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.237599802 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.23897279 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.238625367 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.236657285 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.240803863 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.236860038 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.24163476 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.241320798 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.242067054 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.241564529 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.240455852 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.241864157 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.24158902 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.240624083 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.237273862 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.237884096 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.241191928 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.240968375 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.241954766 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.238413512 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.239261012 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.242751386 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.238761642 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.238354344 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.241991237 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.23811146 seconds)
  done (took 38.359595499 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.260408947 seconds)
    (2/2) benchmarking "in"...
    done (took 1.260969188 seconds)
  done (took 3.696381864 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.238847741 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.24066039 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.242808242 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.240126001 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.239348787 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.241711579 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.241875375 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.239104649 seconds)
  done (took 11.100067952 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.242545329 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.242738275 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.241243819 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.239160736 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.242718811 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.246687689 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.2556512 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.256924798 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.244908082 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.245406829 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.251633466 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.254515463 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.249003028 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.246659558 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.244017515 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.2485989 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.243395387 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.243087127 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.242746899 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.243682761 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.242737996 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.248950296 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.248583596 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.24021289 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.246640096 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.258249753 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.253021774 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.242725085 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.245036028 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.251998593 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.247276658 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.240543969 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.242605256 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.244957721 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.2450908 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.2436556 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.25821268 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.263304904 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.255392114 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.242405924 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.244415178 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.239232409 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.247022554 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.250773533 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.249420442 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.244810962 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.244901668 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.242081923 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.247003294 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.250898694 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.253787948 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.24844095 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.241345554 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.253969493 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.249074271 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.25614812 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.261529295 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.253057661 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.259633477 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.2616921 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.264290904 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.259356787 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.250268065 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.2450345 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.258500864 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.273576702 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.256786772 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.25957634 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.243734825 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.24416171 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.258667091 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.2646507 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.257687896 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.246309012 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.248949634 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.247756433 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.25030249 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.2469968 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.259237816 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.269973171 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.247241116 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.24856045 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.258162059 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.273305307 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.248807598 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.247223082 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.248269879 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.247613021 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.251297756 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.262541093 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.266848577 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.248594559 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.249281846 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.250389699 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.254118444 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.247805955 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.248046248 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.251025692 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.246531941 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.247248191 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.248636895 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.255189504 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.263215673 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.248160402 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.247992882 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.260193746 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.247387587 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.25048135 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.262496355 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.248719035 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.249031093 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.252161658 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.260973011 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.246349489 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.256406428 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.262063651 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.2477495 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.253874546 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.248718421 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.248072151 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.261652604 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.283948966 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.248435922 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.248046171 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.255232425 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.260570119 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.250338303 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.256995883 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.249928198 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.247503368 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.244726509 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.250594808 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.249359468 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.254484379 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.249546057 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.254249953 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.246723645 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.248741478 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.247656859 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.254658945 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.255641511 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.255404336 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.254300188 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.254281104 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.250769346 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.255751122 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.260498259 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.254259887 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.255292336 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.254549806 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.244909904 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.250814964 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.254885588 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.253684659 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.25250136 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.250440045 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.254140583 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.253272774 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.252074967 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.250744966 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.250149933 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.253998537 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.259217299 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.254666356 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.260983956 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.253845653 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.250187526 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.252093283 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.249300128 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.254811243 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.252022472 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.253691252 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.258912351 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.26227314 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.251661921 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.252552683 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.259386291 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.250903946 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.247774697 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.253338248 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.261001312 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.266596563 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.252483539 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.263545924 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.252901867 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.25393571 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.252833461 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.255013118 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.254489597 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.250265364 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.259335609 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.259915692 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.272212772 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.262468653 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.257707563 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.258664547 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.258315973 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.258458747 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.263339232 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.253609321 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.253172053 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.253462691 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.253879202 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.249821587 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.257808849 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.254053479 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.254758104 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.254296197 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.248917356 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.253308781 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.252544775 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.256325603 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.260624769 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.251687151 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.253558088 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.25189298 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.255725569 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.253454473 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.25686228 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.257681072 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.256745816 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.25782538 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.268479311 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.250779439 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.259173616 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.25819673 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.257740602 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.254928481 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.25349936 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.265561657 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.260534567 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.264308229 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.269853742 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.26243852 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.266886663 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.272382619 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.254812402 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.262264426 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.255285544 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.253832821 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.261622672 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.267114377 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.257630169 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.25481222 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.257199484 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.255257485 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.259945633 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.26941785 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.254295599 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.257670792 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.256957537 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.262323961 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.251497231 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.262624983 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.258233233 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.25983369 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.261958249 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.253308097 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.253973762 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.260646417 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.258610017 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.256344562 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.257836851 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.264184178 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.268370953 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.266704913 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.259382258 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.263500605 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.260760731 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.263060786 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.26012748 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.25728474 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.25880229 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.274944882 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.263604759 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.267445138 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.258833124 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.257057145 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.266099927 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.256698313 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.260908883 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.260545844 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.260169735 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.260880499 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.255832894 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.253767674 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.261905931 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.258223688 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.262832264 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.257742701 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.261445782 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.25411504 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.259859111 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.259012208 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.258555936 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.259288059 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.261483248 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.257944598 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.260945248 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.264654872 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.258617823 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.263607196 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.272808693 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.278652359 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.26425671 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.258873498 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.263589609 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.260420249 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.26212698 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.256853118 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.264586597 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.267285343 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.263215433 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.275054966 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.26334375 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.271621219 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.257807198 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.26594879 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.271153573 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.25388394 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.259979831 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.26460178 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.258811276 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.271591385 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.27560885 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.265793505 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.263756623 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.260912889 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.262570637 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.261184337 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.261493247 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.261702026 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.260585925 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.275535935 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.280481566 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.268667805 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.267276148 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.259591937 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.26090985 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.260227901 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.264125527 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.2642497 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.259234722 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.260735914 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.267915511 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.262576573 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.260637494 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.261349871 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.257657837 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.258634327 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.2626626 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.270778038 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.28225792 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.265974375 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.262480797 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.274311811 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.262212307 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.275759163 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.279553555 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.267015865 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.262767816 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.263045723 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.267486289 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.264473276 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.266450137 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.261950817 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.265822482 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.265029972 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.261070935 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.267596057 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.265672733 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.263157323 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.269693019 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.279140986 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.288324682 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.264918846 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.269095223 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.258468784 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.265874377 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.270073886 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.262973591 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.264825726 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.268285126 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.279332495 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.27065135 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.270566343 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.267918093 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.270262704 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.265330502 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.265886987 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.260030277 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.266244881 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.267055592 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.267915436 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.2653782 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.271855218 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.263303838 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.267792878 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.270758571 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.269168902 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.280488343 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.264081812 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.267627793 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.26265094 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.263359214 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.26831497 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.266528519 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.261868704 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.269851455 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.263513623 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.269423126 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.274538304 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.273995133 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.267498082 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.265603196 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.265650668 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.270312892 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.270927791 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.267327737 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.266737383 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.267512304 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.269365989 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.266738728 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.270895855 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.266530722 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.264147709 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.26845073 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.266388517 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.265858017 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.271912242 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.264446556 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.264423309 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.263782689 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.262373645 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.267266212 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.266209443 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.282597085 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.270503493 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.279138104 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.280993831 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.27054476 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.265129382 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.274280535 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.277327303 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.265459406 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.269374339 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.266594073 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.266638162 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.271336361 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.275101152 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.266493661 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.276724914 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.268421362 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.268104351 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.279168945 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.288139189 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.26258323 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.271122304 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.274608838 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.273369928 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.265176892 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.268723554 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.271337453 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.276748585 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.284173001 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.265296644 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.268183818 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.267624117 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.268277592 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.272819251 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.266535347 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.268743348 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.265806422 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.273084171 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.268937687 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.259959774 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.264081403 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.268520209 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.269801898 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.272934523 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.276891232 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.263207213 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.273109772 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.270071661 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.272317938 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.267253052 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.269244025 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.261187013 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.266067521 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.272980335 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.26500158 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.274346327 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.273121807 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.272597964 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.27344217 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.272378148 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.270540891 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.274604881 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.283576471 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.27501949 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.262906159 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.268280105 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.273085223 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.270935517 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.26622897 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.270015187 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.272395502 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.276714486 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.267195009 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.268708307 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.27151633 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.277749262 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.292983149 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.286079959 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.273502115 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.273183374 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.276172286 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.267718504 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.268833906 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.269013442 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.27636484 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.275868039 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.28080762 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.270174662 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.278924779 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.289739863 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.275632125 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.272434741 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.273227668 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.283639708 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.276804147 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.269957487 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.271147574 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.277530348 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.291891909 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.268091571 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.284339167 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.308542896 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.287263049 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.275925394 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.270865011 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.271059263 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.272005352 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.27762718 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.268323103 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.270929419 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.274171991 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.270234282 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.274417255 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.282473787 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.275323165 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.272766314 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.269322499 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.276387931 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.278422007 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.270139958 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.272503212 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.271663156 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.274125992 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.273489164 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.27358298 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.272107037 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.293360855 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.284185431 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.272480673 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.269385924 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.266459041 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.280428709 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.273164988 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.287350652 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.281693388 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.271496208 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.269495585 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.272160905 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.272431968 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.268516049 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.276987134 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.277190212 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.273490025 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.270757091 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.290365786 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.278548999 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.281803079 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.272083925 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.273507007 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.272229342 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.27808881 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.275820019 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.272882784 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.279827711 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.276626736 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.280418556 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.273712405 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.275784285 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.279407385 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.283711452 seconds)
  done (took 753.621964643 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.272502287 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.273772963 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.273024684 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.27387809 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.272444038 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.273682105 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.272474818 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.273724014 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.270423004 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.272756107 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.273196857 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.271435212 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.268887301 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.274105621 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.273911248 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.273744977 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.271507268 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.274490484 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.27367231 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.273686148 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.272087948 seconds)
  done (took 27.937634601 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.270689843 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.274440708 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.274560481 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.277414153 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.274634773 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.275229463 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.274606013 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.276578339 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.276826202 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.274390405 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.276810344 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.276496583 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.271883608 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.273872443 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.270445877 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.276178623 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.275857087 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.274372314 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.276786093 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.276183131 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.275451424 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.273512062 seconds)
  done (took 29.255569786 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.272424162 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.277604506 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.279477329 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.271258618 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.277426266 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.272155258 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.278991808 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.275614037 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.275139928 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.281053536 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.277744439 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.279261228 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.289538186 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.283040499 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.280529726 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.278938954 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.422784536 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.276889738 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.278655165 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.278910448 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.276380856 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.287398823 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.268413545 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.277279106 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.280187535 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.27691528 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.276435791 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.276341693 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.278001402 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.280050453 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.282486664 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.271446998 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.278953373 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.278107158 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.280706641 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.284367128 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.280927757 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.276401682 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.271727417 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.27323774 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.285415722 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.299500178 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.274757286 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.288241468 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.273171913 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.274911599 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.28601096 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.281466819 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.273535337 seconds)
  done (took 64.012235678 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.278172972 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.277763925 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.279889919 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.279415797 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.279712299 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.27800997 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.278953972 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.280422246 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.276656008 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.27749366 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.276557912 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.280387155 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.28045433 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.281867037 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.278388923 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.27972221 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.281910028 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.279105135 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.27933256 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.282955091 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.27875289 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.279810907 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.281189279 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.279743947 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.281827977 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.279079378 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.278391942 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.282930278 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.278964404 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.279370441 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.284270221 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.282327906 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.283564684 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.281230847 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.281230407 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.282555432 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.284751639 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.28027605 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.281480528 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.280551259 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.282257028 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.281609126 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.281382801 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.283955859 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.277229322 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.279955664 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.278988519 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.279996217 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.280007649 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.281717904 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.28089632 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.279936397 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.283658939 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.28061785 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.283560707 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.281851136 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.280855653 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.28246765 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.280807911 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.28249735 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.28166296 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.280483255 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.279535238 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.284396347 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.283202363 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.279658283 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.278708961 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.279886907 seconds)
  done (took 88.294731954 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.284067955 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.282361632 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.282893373 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.28290714 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.281926874 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.285302556 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.282019211 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.283291848 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.28175872 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.283665195 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.282892077 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.282240919 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.28003512 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.281715919 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.279259193 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.28264228 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.284486854 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.282944953 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.284704422 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.283188996 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.277818954 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.283006557 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.280043818 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.284842761 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.284235762 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.282048163 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.28246372 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.282239057 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.279130688 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.280991908 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.28684375 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.285182708 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.281546248 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.280308906 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.284765236 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.28404305 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.284736828 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.282743007 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.283359123 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.281118713 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.283906389 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.281454725 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.284017448 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.28408535 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.28543245 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.283260573 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.283550724 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.283239227 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.284222101 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.285736198 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.285827242 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.287826611 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.282068477 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.284841665 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.283619273 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.285221876 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.285751757 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.285918209 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.285894091 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.282542566 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.284882819 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.287635959 seconds)
  done (took 80.78376742 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.283765672 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.288760092 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.28035814 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.282439111 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.286301846 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.283593218 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.285056355 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.283511696 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.286076086 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.283152081 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.282399828 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.281404799 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.279681377 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.279777775 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.279324204 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.281962208 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.281208359 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.277493386 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.283200561 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.282365668 seconds)
  done (took 26.870191822 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.282331696 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.286392258 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.2791997 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.284587914 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.285791246 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.280715691 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.285141823 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.28727313 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.283842188 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.289151711 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.288792973 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.286897831 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.285412492 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.286950066 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.288050465 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.285597036 seconds)
  done (took 21.777347613 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.285656892 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.284993471 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.283578565 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.288050065 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.281390735 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.288549746 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.290699843 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.287772194 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.279754973 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.288163964 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.289186859 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.28387851 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.287492798 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.286752798 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.278903513 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.285200098 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.284008338 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.283273263 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.288772857 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.284438905 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.285805268 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.284988145 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.287070948 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.288212635 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.28767489 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.287283938 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.28433902 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.285609507 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.283838224 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.289704751 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.281971757 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.285453333 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.281840353 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.285497142 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.286395761 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.285586132 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.287164 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.287346666 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.284648971 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.287530711 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.28925051 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.286071171 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.287613203 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.283797823 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.284280084 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.286499528 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.289173307 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.285100435 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.28568233 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.282419034 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.291564245 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.287671844 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.28882644 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.289506089 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.290363966 seconds)
  done (took 71.955461609 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.287291293 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.288998471 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.289193308 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.293745233 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.288210419 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.287803826 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.290180163 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.291336484 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.290868298 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.29352858 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.290025732 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.291712078 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.288099186 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.289672885 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.291334676 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.287663736 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.289626668 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.291075561 seconds)
  done (took 24.436886652 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.286856002 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.2857865 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.29073431 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.289508235 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.290827646 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.291315901 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.28317255 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.292212038 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.29016941 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.29087958 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.28848758 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.294541567 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.291110013 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.287969464 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.288749876 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.289690414 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.290680251 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.292569032 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.287431836 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.288976523 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.293995747 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.289758836 seconds)
  done (took 29.600420844 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.291438168 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.294447852 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.31535369 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.337917653 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.326615892 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.294674706 seconds)
  done (took 9.087765182 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293000786 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296609484 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.291025267 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295924736 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292470957 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290644589 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28669357 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287835643 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290850704 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29247186 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290800982 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286911815 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289905942 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291476021 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292871805 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292389831 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286860604 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290169821 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294108633 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29259206 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2912942 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289439348 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290457247 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290931588 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290074816 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291170503 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29135712 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291526345 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291675124 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293846422 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294376547 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289135905 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289784411 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290611919 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294037945 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291221883 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291587127 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290429667 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296255774 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289273108 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.292586892 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293387405 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293255373 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29278108 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291575685 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29598015 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292363438 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293258607 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291954579 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288958539 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29472624 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292166286 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29503773 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293802563 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295822577 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297396682 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29117814 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293459717 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296287929 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290992897 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292113321 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290729173 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291417377 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295518161 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292938741 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289421521 seconds)
  done (took 86.499236077 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290100458 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.286862591 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289915636 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289405905 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292565123 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291008927 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289369528 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292976445 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290602454 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291085054 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292799855 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290250314 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293157361 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28961475 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289538664 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292178353 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292442105 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292052626 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29050873 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293449689 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290728283 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29592381 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295697029 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289767716 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293445869 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294715576 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292916622 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287240755 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291694954 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291712962 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291918852 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293132232 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293214966 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.293806446 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29339027 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292609009 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293321733 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29450888 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292152128 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296185268 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29243704 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291375214 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295357392 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293815741 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29187058 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295376648 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296568236 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293491656 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295877205 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293475961 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291320996 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295292302 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289877155 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290009273 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291613526 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295013203 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290492679 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296928004 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292919665 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29416164 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290907562 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294258869 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295570412 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294383033 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295883196 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292617523 seconds)
  done (took 86.536845008 seconds)
done (took 1755.186884713 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.296558582 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.283625892 seconds)
  done (took 13.808470513 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.460811423 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.412038935 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.298159027 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.302617406 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.296864053 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.293220049 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.298079897 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.297364711 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.301163595 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.297808056 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.298186718 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.487664998 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.382984372 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.292418354 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.29922569 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.391803605 seconds)
  done (took 42.645533488 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.330102531 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.306879699 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.424310626 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.326994358 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.331291367 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.497553504 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.361663641 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.309340905 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.482092935 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.343417006 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.961306566 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.326524383 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.304882085 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.474598796 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.317779374 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.501407178 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.565200006 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.96215495 seconds)
  done (took 30.356911853 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.785442887 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.310013205 seconds)
  done (took 9.325173299 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.328002729 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.330273881 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.308154785 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.321077471 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.315280717 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.347298644 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.322236602 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.34955286 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.343280123 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.367253053 seconds)
  done (took 64.574383793 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.323095279 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.309265804 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.308278512 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.301905182 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.296699014 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.293932305 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.302800531 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.305049823 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.28732808 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.442899174 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.32070429 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.312698021 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.307421545 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.302643971 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.300475511 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.344776356 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.448387894 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.298254211 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.303333833 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.314406554 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.304471529 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.403881078 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.349203923 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.305743366 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.445861651 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.296428157 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.313667332 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.310483766 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.423056778 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.304678485 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.302197177 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.30615566 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.308075919 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.889555862 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.827431845 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.313697365 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.342955002 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.319100609 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.300032785 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.430745533 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.304817012 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.311977897 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.308894063 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.789211012 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.467228554 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.419786469 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.647124588 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.303824269 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.303295881 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.371532018 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.306732145 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.306655125 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.335656083 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.075119831 seconds)
  done (took 110.709504164 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.300673356 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.79501033 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.470399435 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.323190639 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.193930871 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.090172204 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.300121914 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.611558208 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.305095746 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.296322277 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.588938957 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.845867086 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.310034453 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.362524127 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.690955852 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.302445387 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.3004197 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.212553397 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.30533423 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.296961727 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.728467326 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.315495609 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.313036144 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.36668801 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.336490208 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.812700247 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.892979025 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.819580895 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.305173157 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.299931683 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.809766706 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.300883624 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.306361372 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.300574434 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.583909473 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.692759368 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.650400088 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.303074202 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.316665961 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.297677423 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.322850963 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.784077025 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.662420743 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.311738079 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.299488248 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.78751485 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.299015637 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.305001664 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.302573125 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.51109449 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.020660529 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.299082918 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.874132993 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.300881156 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.646570353 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.374738968 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.302426897 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.811051112 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.306865674 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.476650921 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.306626438 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.299822672 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.311120151 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.302092375 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.299347075 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.665261584 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.660942909 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.300859457 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.666312337 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.790170644 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.302138721 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.860298478 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.176970594 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.322786287 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.362628859 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.30334504 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.990288289 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.811607091 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.310625511 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.30123827 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.653889801 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.301867114 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.590017435 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.317527314 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.304342859 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.732032239 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.3207561 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.356907796 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.317464499 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.300327733 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.073325495 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.303180663 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.583112978 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.324610877 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.303396479 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.299390358 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.320631167 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.299488587 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.317323093 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.30501212 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.859380893 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.309592278 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.453384524 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.322714442 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.305051676 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.301475319 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.304376355 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.301211418 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.530074057 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.880619488 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.305660147 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.300765565 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.309380706 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.321447915 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.60457372 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.304878138 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.629119846 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.307996631 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.303086575 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.317086655 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.146685812 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.329908618 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.305442044 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.307765568 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.173233892 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.514373269 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.323319474 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.321409764 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.307086511 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.324744356 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.766270779 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.304106419 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.35805302 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.306901477 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.034895512 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.340531315 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.343088789 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.672471808 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.304664052 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.303608615 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.303471828 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.30542048 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.616930553 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.58898486 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.577537398 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.32382148 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.304278011 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.006944499 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.307353079 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.45635384 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.323834338 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.349415783 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.507031536 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.466907557 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.305697638 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.87003797 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.307539636 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.527635765 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.305384348 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.630919629 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.821502216 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.301862741 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.313551943 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.038749099 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.963971496 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.118324151 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.307827759 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.58808547 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.306111023 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.770022508 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.306344775 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.305855442 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.883880065 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.312779866 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.306802091 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.304971879 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.30559157 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.369375423 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.48195924 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.03250972 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.307577499 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.788613532 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.358814988 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.314012003 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.306433612 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.308451268 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.661511928 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.31737336 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.309470785 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.342176714 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.310114761 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.311905844 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.797801543 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.215846074 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.310383872 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.465898258 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.969499468 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.307202516 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.308642261 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.983919383 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.507018046 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.880220876 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.354134362 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.63901257 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.309598035 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.35128957 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.119485766 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.381643014 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.806595128 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.306914176 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.315860107 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.921838311 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.310357376 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.372506304 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.315550371 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.303579725 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.864775638 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.307718441 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.309849722 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.777397458 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.308915749 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.580568441 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.308436037 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.33824837 seconds)
  done (took 1107.140676527 seconds)
done (took 1379.790203997 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.307830155 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.316275086 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.299515329 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.310144264 seconds)
  done (took 26.48172077 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.314532989 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.313623646 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.313478287 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.313157118 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.31616201 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.313203884 seconds)
  done (took 9.134842097 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.580559192 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.315718498 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.314544259 seconds)
  done (took 19.456802775 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.548038148 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.631209195 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.715077301 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.658661561 seconds)
  done (took 10.802726159 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.314863856 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.312946778 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.312252914 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.316066607 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.315091348 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.314231729 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.314477025 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.316601704 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.316520396 seconds)
  done (took 13.080739776 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.508102506 seconds)
done (took 85.713086695 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.265479347 seconds)
    (2/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.316400676 seconds)
    (3/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.578145599 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.436965829 seconds)
    (5/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.794321419 seconds)
    (6/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.292073774 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.205464669 seconds)
    (8/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.33681299 seconds)
    (9/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.428550179 seconds)
    (10/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.696261383 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.363598761 seconds)
    (12/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.314674983 seconds)
    (13/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.145608718 seconds)
    (14/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.596117246 seconds)
    (15/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.856182152 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.352461677 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.281043398 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.334083095 seconds)
    (19/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.294308063 seconds)
    (20/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.509974454 seconds)
    (21/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.908906323 seconds)
    (22/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.295068594 seconds)
    (23/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.311280559 seconds)
    (24/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.113621936 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.776692105 seconds)
    (26/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.335679059 seconds)
    (27/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.415399953 seconds)
    (28/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.605655435 seconds)
    (29/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.410650783 seconds)
    (30/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.032540806 seconds)
    (31/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.316089331 seconds)
    (32/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.994061497 seconds)
    (33/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.420016535 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.300497303 seconds)
    (35/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.319828055 seconds)
    (36/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.365489492 seconds)
    (37/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.122282341 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.082025688 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.831876769 seconds)
    (40/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.32762112 seconds)
    (41/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.314047941 seconds)
    (42/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.452290927 seconds)
    (43/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.24221427 seconds)
    (44/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.454331578 seconds)
    (45/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.318614741 seconds)
    (46/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.295905014 seconds)
    (47/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.319232627 seconds)
    (48/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.713111944 seconds)
    (49/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.393651578 seconds)
    (50/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.417862746 seconds)
    (51/309) benchmarking ("sort", Int8, false)...
    done (took 4.370714784 seconds)
    (52/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.640593382 seconds)
    (53/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.365984967 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.38052244 seconds)
    (55/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.424215587 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.421372736 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.301086922 seconds)
    (58/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.33836619 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.56938929 seconds)
    (60/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 4.064410304 seconds)
    (61/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.19698373 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.37022331 seconds)
    (63/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.190203492 seconds)
    (64/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.419779563 seconds)
    (65/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.818450927 seconds)
    (66/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.709874827 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.407161135 seconds)
    (68/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.189919492 seconds)
    (69/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.881135832 seconds)
    (70/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.335380608 seconds)
    (71/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.727359815 seconds)
    (72/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.842206964 seconds)
    (73/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.335553715 seconds)
    (74/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.335219304 seconds)
    (75/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.320350959 seconds)
    (76/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.313747581 seconds)
    (77/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.275753532 seconds)
    (78/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.346683115 seconds)
    (79/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.322855864 seconds)
    (80/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.323428796 seconds)
    (81/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.395624779 seconds)
    (82/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.392237401 seconds)
    (83/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.745259435 seconds)
    (84/309) benchmarking ("sort", Int64, false)...
    done (took 5.558687436 seconds)
    (85/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.646669166 seconds)
    (86/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.528628304 seconds)
    (87/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.33498118 seconds)
    (88/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.394511641 seconds)
    (89/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.294915751 seconds)
    (90/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.207360297 seconds)
    (91/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.312285979 seconds)
    (92/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.340553715 seconds)
    (93/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.380384785 seconds)
    (94/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.457813533 seconds)
    (95/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.269708599 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.844929561 seconds)
    (97/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.818675548 seconds)
    (98/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.786581389 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.94521756 seconds)
    (100/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.57311095 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.981981657 seconds)
    (102/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.335932134 seconds)
    (103/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.313923994 seconds)
    (104/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.381549348 seconds)
    (105/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.309511296 seconds)
    (106/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.3942567 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.413295636 seconds)
    (108/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.661074406 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.338306369 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.534614517 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.99301697 seconds)
    (112/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.744003078 seconds)
    (113/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.312698885 seconds)
    (114/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.337426665 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.314691554 seconds)
    (116/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.413390586 seconds)
    (117/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.806702269 seconds)
    (118/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.75174033 seconds)
    (119/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.952808372 seconds)
    (120/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.970855617 seconds)
    (121/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.323918583 seconds)
    (122/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.307746227 seconds)
    (123/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.970403957 seconds)
    (124/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.810236068 seconds)
    (125/309) benchmarking ("sort", Bool, false)...
    done (took 1.843287122 seconds)
    (126/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.414431312 seconds)
    (127/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.335591598 seconds)
    (128/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.437180418 seconds)
    (129/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.591593932 seconds)
    (130/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.988286463 seconds)
    (131/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.331169109 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.765171962 seconds)
    (133/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.417991947 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.537681992 seconds)
    (135/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.165791387 seconds)
    (136/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.32473983 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.164003514 seconds)
    (138/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.319523265 seconds)
    (139/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.317018351 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.59023171 seconds)
    (141/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.511938144 seconds)
    (142/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.857680295 seconds)
    (143/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.737486006 seconds)
    (144/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.340874512 seconds)
    (145/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.719027502 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.095536639 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.693147101 seconds)
    (148/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.332702228 seconds)
    (149/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.415995342 seconds)
    (150/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.439073897 seconds)
    (151/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.34203706 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.312457107 seconds)
    (153/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.423510912 seconds)
    (154/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.378230394 seconds)
    (155/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.435294297 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.13698179 seconds)
    (157/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.340639659 seconds)
    (158/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.342483278 seconds)
    (159/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.335109278 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.360083947 seconds)
    (161/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.339521706 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.984116937 seconds)
    (163/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.990868165 seconds)
    (164/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.306186785 seconds)
    (165/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.318532432 seconds)
    (166/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.415515984 seconds)
    (167/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.8272719 seconds)
    (168/309) benchmarking ("sort", Float64, false)...
    done (took 5.675588193 seconds)
    (169/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.693200553 seconds)
    (170/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.32390425 seconds)
    (171/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.614486405 seconds)
    (172/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.616361654 seconds)
    (173/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.318929947 seconds)
    (174/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.792404877 seconds)
    (175/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.996649411 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.198315845 seconds)
    (177/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.151150051 seconds)
    (178/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.323689236 seconds)
    (179/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.336739086 seconds)
    (180/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.342272599 seconds)
    (181/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.184795176 seconds)
    (182/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.340292608 seconds)
    (183/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.994458164 seconds)
    (184/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.36187189 seconds)
    (185/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.885144796 seconds)
    (186/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.318780201 seconds)
    (187/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.341482466 seconds)
    (188/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.348365914 seconds)
    (189/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.318413114 seconds)
    (190/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.059790719 seconds)
    (191/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.860721103 seconds)
    (192/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.572833788 seconds)
    (193/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.384136446 seconds)
    (194/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.370539515 seconds)
    (195/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.390784283 seconds)
    (196/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.509830695 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.306735313 seconds)
    (198/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.320749991 seconds)
    (199/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.716583341 seconds)
    (200/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.831218948 seconds)
    (201/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.620717191 seconds)
    (202/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.33185375 seconds)
    (203/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.030532824 seconds)
    (204/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.028720452 seconds)
    (205/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.318098299 seconds)
    (206/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.387535796 seconds)
    (207/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.83207563 seconds)
    (208/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.316622251 seconds)
    (209/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.344302828 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.898051495 seconds)
    (211/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.445302991 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.859210537 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.527633772 seconds)
    (214/309) benchmarking ("sort", Float32, false)...
    done (took 5.375199224 seconds)
    (215/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.720603136 seconds)
    (216/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.954066719 seconds)
    (217/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.954391179 seconds)
    (218/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.380969578 seconds)
    (219/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.969057289 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.248833018 seconds)
    (221/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.232164087 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.756502058 seconds)
    (223/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.366507264 seconds)
    (224/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.140655674 seconds)
    (225/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.019242714 seconds)
    (226/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.359341303 seconds)
    (227/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.321471026 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.107616259 seconds)
    (229/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.329872038 seconds)
    (230/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.012592438 seconds)
    (231/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.601781501 seconds)
    (232/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.045804711 seconds)
    (233/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.3046418 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.834264497 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.320009634 seconds)
    (236/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.963345896 seconds)
    (237/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.15492264 seconds)
    (238/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.306637282 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.297303302 seconds)
    (240/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.200489491 seconds)
    (241/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.055605455 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.781772348 seconds)
    (243/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.751855334 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.426551282 seconds)
    (245/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.647474248 seconds)
    (246/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.982647818 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.762866292 seconds)
    (248/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.352504631 seconds)
    (249/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.408627498 seconds)
    (250/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.674352431 seconds)
    (251/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.721891403 seconds)
    (252/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.323772031 seconds)
    (253/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.383190485 seconds)
    (254/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.380633541 seconds)
    (255/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.575638356 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.282904639 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.042037148 seconds)
    (258/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.405101339 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.342991221 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.367909523 seconds)
    (261/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.305549729 seconds)
    (262/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.762954027 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.347538436 seconds)
    (264/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.910738515 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.704355143 seconds)
    (266/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.801087776 seconds)
    (267/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.321000302 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.966083983 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.308687524 seconds)
    (270/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.721141288 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.997385507 seconds)
    (272/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.347150075 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.396460565 seconds)
    (274/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.370343418 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.370413834 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.710615483 seconds)
    (277/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.374317979 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.430077895 seconds)
    (279/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.034348734 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.571136141 seconds)
    (281/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.342519418 seconds)
    (282/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.528389176 seconds)
    (283/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.730416673 seconds)
    (284/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.805154716 seconds)
    (285/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.338482191 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.405256352 seconds)
    (287/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.851132356 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.404066665 seconds)
    (289/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.428323398 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.434042001 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.523869869 seconds)
    (292/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.324695665 seconds)
    (293/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.646127307 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.540482338 seconds)
    (295/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.385154533 seconds)
    (296/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.900070989 seconds)
    (297/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.209060057 seconds)
    (298/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.515134132 seconds)
    (299/309) benchmarking ("sort", BigInt, false)...
    done (took 6.323712398 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.383216628 seconds)
    (301/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.357921115 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.781197003 seconds)
    (303/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.508516147 seconds)
    (304/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.267870986 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.406147254 seconds)
    (306/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.717718755 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.349494192 seconds)
    (308/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.384690263 seconds)
    (309/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.427170203 seconds)
  done (took 933.259900157 seconds)
done (took 934.514098768 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.354365656 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.345585951 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.330033888 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.352549749 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.44288004 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.361046316 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.343556253 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.334594572 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.379627978 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.380580753 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.329945927 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.359531722 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.331856247 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.330608931 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.330896698 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.345299659 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.415171463 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.331602083 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.349475182 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.34171289 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.349009705 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.331099806 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.381252021 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.359082792 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.335716059 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.334879907 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.334297621 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.350915731 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.442994496 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.333610984 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.335819991 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.343645313 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.413736887 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.332888826 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.328302364 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.351175126 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.345194239 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.341637873 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.337306673 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.36548114 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.853131992 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.332106547 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.333638413 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.334178118 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.335083836 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.338632108 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.334311431 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.339103336 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.345894102 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.346100871 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.844726607 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.347798943 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.337183352 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.337401894 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.343997677 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.333650496 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.33909505 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.350808787 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.352231479 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.350412242 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.447651439 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.346735843 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.336944246 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.349921762 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.340793714 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.881640292 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.331167231 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.339421506 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.855260265 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.340207533 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.883644037 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.342810656 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.336408578 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.348944819 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.366517342 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.498802361 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.340060503 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.336794642 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.343068586 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.335037222 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.344892209 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.350630976 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.340720688 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.338299783 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.349993711 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.365849587 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.346000682 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.337435629 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.344886747 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.353790142 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.342483388 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.347922761 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.340470909 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.332740888 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.347458378 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.338928135 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.340811378 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.338163345 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.34257228 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.348158465 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.855461459 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.353485131 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.333179843 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.333484553 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.335070961 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.349393163 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.854414811 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.336819475 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.358459745 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.384959078 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.340267201 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.459727642 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.340788624 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.352520882 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.347279077 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.342819624 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.332622186 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.414775649 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.85123946 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.352367657 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.338527048 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.334649521 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.353365451 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.340727535 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.33554769 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.427202164 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.339020239 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.350734836 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.45726421 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.348853715 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.369260517 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.335171725 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.342165451 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.370559381 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.351623606 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.368229214 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.341276628 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.35228417 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.353399086 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.335474546 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.348044351 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.349695571 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.33957474 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.345066407 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.334803681 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.367375809 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.350749165 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.349844325 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.359277702 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.458406996 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.337455451 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.418471136 seconds)
done (took 226.965756253 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.401558146 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.335346692 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.43142334 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.336636863 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.440358972 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.442603023 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.33438798 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.334199085 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.333240684 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.718440713 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.334186998 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.33545146 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.337482854 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.333365896 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.421939306 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.336343603 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.333044094 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.681999515 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.337612065 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.412699086 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.337244457 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.335704552 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.336495652 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.71974013 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.336404949 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.336710997 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.4134754 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.337509186 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.685902441 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.340069868 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.336538364 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.686872569 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.432046499 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.355208693 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.347641637 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.343039037 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.444917867 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.358551838 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.422517636 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.422491847 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.434660446 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.376306958 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.335426527 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.340498268 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.339561843 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.339836597 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.335149693 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.366225292 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.336592778 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.336852382 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.684995631 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.348519374 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.346781664 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.336278852 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.33678055 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.358529507 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.337084523 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.337498488 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.435378371 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.340654981 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.407262892 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.723762569 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.722883858 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.338493577 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.336132729 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.338868683 seconds)
  done (took 148.842805591 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.408054935 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.414851234 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.459160171 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.341583249 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.390276592 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.461574865 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.342758894 seconds)
  done (took 11.090766212 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.347855029 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.340587387 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.391251999 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.392801152 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.341835561 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.491277824 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.339917026 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.352486605 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.33696726 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.395101769 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.342357523 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.340160707 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.347237558 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.34311915 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.391380616 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.355039242 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.458019583 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.342403702 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.34165837 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.499500334 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.338549393 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.349383603 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.395006574 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.355805799 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.342645893 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.349724575 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.909990289 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.341291242 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.338348279 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.340695246 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.339352672 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.380868017 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.342427431 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.344241239 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.34025486 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.459336719 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.341655013 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.339997868 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.341244271 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.34067762 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.341530952 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.341390098 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.342961873 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.339923216 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.341668209 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.367387484 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.342164546 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.341415106 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.341936031 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.342507473 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.394743132 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.341842945 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.339498633 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.338557228 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.400452898 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.349507694 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.342058619 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.340260845 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.342979223 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.339924061 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.501648881 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.392150744 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.341704722 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.392679092 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.342103797 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.342421726 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.342526365 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.343393884 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.400522276 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.342947804 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.392591658 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.339551973 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.500462239 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.368896666 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.343667183 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.348200627 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.348001945 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.343268954 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.338488323 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.351522038 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.340803838 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.347843138 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.353017858 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.340373465 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.341547337 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.448983965 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.453964507 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.341822316 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.359132935 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.353369938 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.342126803 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.399812093 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.344146936 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.341737787 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.399001635 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.462773773 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.39897195 seconds)
  done (took 154.157840258 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.351627638 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.352729465 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.3472409 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.362255385 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.346621863 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.346162385 seconds)
  done (took 9.383759733 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.348600197 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.346353517 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.345205374 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.343664293 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.345668396 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.346528091 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.344915072 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.349704257 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.350633353 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.345527324 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.345235344 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.346541188 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.347491581 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.345878558 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.345300869 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.345343303 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.346567848 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.343219093 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.345178625 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.346005904 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.452542496 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.345412804 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.346592231 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.3499591 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.351575571 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.346187491 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.356348298 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.346641847 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.34652698 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.35636644 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.349309893 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.348412306 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.351112087 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.35630525 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.351372579 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.350621024 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.350707063 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.348798051 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.346206025 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.348884555 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.348858476 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.347146831 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.347169358 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.34907655 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.353858458 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.355256317 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.352932208 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.358881035 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.347925006 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.349604876 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.349879685 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.34798471 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.348738391 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.349975748 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.35543304 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.355707322 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.354702756 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.348743926 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.348449458 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.352637092 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.350291714 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.350748327 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.352571329 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.352779476 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.346316832 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.350602615 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.354019036 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.354510087 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.349847526 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.34883275 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.35120444 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.346495927 seconds)
  done (took 99.534920228 seconds)
done (took 424.278727937 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.363014874 seconds)
  done (took 7.644889481 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.510860067 seconds)
  done (took 7.794846766 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.590004299 seconds)
  done (took 22.87821132 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.393119955 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.434479185 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.347868749 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.351320155 seconds)
  done (took 26.80899173 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.672317548 seconds)
  done (took 7.954867947 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.341863966 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.350902757 seconds)
  done (took 13.981111889 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.510095395 seconds)
  done (took 7.793493499 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.829736159 seconds)
  done (took 8.117655273 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.363165047 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.35819348 seconds)
  done (took 14.272456329 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.328052414 seconds)
  done (took 7.612269022 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.589387605 seconds)
  done (took 8.87281349 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.344571706 seconds)
  done (took 7.629228727 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.398708739 seconds)
  done (took 7.68053256 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.78082626 seconds)
  done (took 10.063131048 seconds)
done (took 160.386868613 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.344790784 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.344301285 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.3467951 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.346878561 seconds)
  done (took 26.666103729 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.384248299 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.382379416 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.384874386 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.39454668 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.386582799 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.383904708 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.376226484 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.376038329 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.394410547 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.385421612 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.385354347 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.385498517 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.383342669 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.376101212 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.387021522 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.392397478 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.394827091 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.385989124 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.375755524 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.385785785 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.351321749 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.395438473 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.386215356 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.351890928 seconds)
  done (took 34.470488241 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.548058335 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.423966451 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.506779103 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.404822085 seconds)
  done (took 7.167522672 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.400936904 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.405069139 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.415892735 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.455304007 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.48139069 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.421564686 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.377970357 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.372839315 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.359325793 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.404632046 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.479590012 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.421132031 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.488536338 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.35093078 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.533941772 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.351495445 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.351812329 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.403765537 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.455671636 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.469226715 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.35240931 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.403220848 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.40757848 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.421248811 seconds)
  done (took 35.27124961 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.351384832 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.359648078 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.358118293 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.351941518 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.351817699 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.352523638 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.358758548 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.353054243 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.373706416 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.353159844 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.351573468 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.351932202 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.350916848 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.351103118 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.351061964 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.364231947 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.365087852 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.351846151 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.354852399 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.359067792 seconds)
  done (took 28.403244177 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.349070027 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.201774226 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.699884156 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.6039224 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.348611435 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.351203914 seconds)
  done (took 27.841336994 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.43393489 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.568688148 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.356177663 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.753863055 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.828786996 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.356575605 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.356320039 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.608010035 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.949855265 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.97483252 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.420915358 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.427126871 seconds)
  done (took 20.325502849 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.362499427 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.350999803 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.357464005 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.367135754 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.414730626 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.360263676 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.36332945 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.348914661 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.41963113 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.41995039 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.359953354 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.418304288 seconds)
  done (took 37.831565323 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.437140545 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.402512594 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.447676602 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.215083402 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.764159396 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.560901964 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.26382198 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.796154035 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.354335648 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.623594957 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364559063 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.440062441 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.606895873 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.350396462 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.351743793 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.445435169 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.576218822 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902828524 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353834999 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.680808216 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376976259 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.350556126 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.902101555 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.382156725 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.562427695 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.483748371 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.610618266 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.351888334 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.661025509 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.362713757 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361186331 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.350796312 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.623492123 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.058023384 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.443339886 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36141376 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.241172014 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.064771134 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.339990077 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.711559901 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.363987734 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.353160595 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361198338 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.350866229 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.284392301 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.365292306 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.810533683 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.357614339 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.061354432 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.351744448 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.361045941 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.446160359 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.354114813 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.168871241 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.560620162 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.352824862 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.349336077 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.360570412 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.925764461 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.191209035 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.353610162 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.30666599 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.522230996 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.698995009 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.015225935 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.454168645 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.355617771 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.35596468 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.298493252 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.763911924 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.372267551 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496622006 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.37349862 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.045300218 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.159925918 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.365581817 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.294922128 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943193759 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.357369765 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.288767643 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.582552314 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353333465 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.29228939 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.296128721 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.287692023 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.153199072 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366292512 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.807371874 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.363947177 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.801415233 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.366618372 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372391789 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377034193 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.578770578 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.240479273 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.354448705 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.360976179 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497023247 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374386031 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.803642473 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.299085287 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.357403284 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.609635139 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.565874044 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.363322179 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.453103939 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.57247146 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.358558326 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.370473717 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.36264855 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.365757191 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.982870616 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.366793383 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.117056542 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369734856 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.353833383 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.199513453 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371399893 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.455400892 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.354190508 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.619974693 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.230598904 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.360191301 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.43796458 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.363310765 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.35497334 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.804469409 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.876271763 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.355346088 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.357807306 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.36142342 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.367164708 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.355636851 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.354614781 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.353432428 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366983881 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.358653489 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.58161408 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.366109291 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.632738202 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.290576522 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49924028 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.492069393 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.580668706 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.627475925 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.356429472 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.616412924 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361180154 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.362100926 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.369673218 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375658411 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454502787 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378469091 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.371269665 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.614723999 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.360463801 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.35992007 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.808484478 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.849030034 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356861301 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.362898187 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.310965721 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.988786508 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344443977 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.362604035 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.251664968 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.37110925 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.421647556 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.362651132 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.368122522 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.382885939 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.3503659 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.362622397 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.369189821 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.582672046 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.369295091 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.730980257 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.438956599 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.571214782 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.992062502 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.371901048 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.292680816 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.068796537 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.052057724 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.358247914 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.293523617 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.357547825 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36662744 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.369233493 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.685006631 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.98999656 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.360651527 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.722702381 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.366828367 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.368973988 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.363820048 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359080176 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.361001457 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.37739063 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.363398178 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.372836733 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.50263777 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.373856455 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.293398732 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.362895315 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.364928504 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.359068875 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.359824107 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392061651 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.725039022 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.873686847 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.620665801 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.226902822 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.37144576 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.850845233 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.395824624 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.358991625 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.360633623 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364272134 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.363345012 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368818091 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.371587424 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.743460568 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.075831294 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931490634 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.178545775 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939283959 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386299563 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.362904893 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.363754269 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.816428076 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.295741357 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.927783281 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.570231949 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.816654279 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.355195295 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.576981002 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.638129332 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.200023246 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.37192105 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.590817713 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379276022 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.373254469 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.373784415 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.573719786 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396314821 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.374688251 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.304171919 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.832413016 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.615388456 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.365667935 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.439905491 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.81695391 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.367954832 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.36404155 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.363851654 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.807275885 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.550765149 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.075744777 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.572424774 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.376635703 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.369984108 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.871288644 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.367181104 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.59311609 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.029023962 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.364709444 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.59886262 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.303765904 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.373917937 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.373280415 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.363725329 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.858586544 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.361315578 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.619259748 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.373336543 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.297923997 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.376142948 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946572 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.21948319 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.369772999 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363721383 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.214113467 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.384556142 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.681625247 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.366110844 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.344422417 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370173724 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.298551195 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.298976267 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.057482526 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.368955713 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349172055 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925167514 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.482035649 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.512628998 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.392972816 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.213030229 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.622000468 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.377860348 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.999129583 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.592498395 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.332465127 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387496734 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.465996684 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.38113745 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.352978344 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.364471786 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.60083075 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.312857857 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.590521769 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.488264752 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.270977469 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.365640493 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.578757472 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.365291748 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.365015148 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.629928457 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.075738357 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.375748807 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.178202487 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392990823 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.365133547 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.316410804 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.53584795 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.375743786 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445103768 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.378326829 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.377749646 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.377332067 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.557038734 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37716131 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.368241162 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.380091724 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459059557 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.310599583 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.352875263 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.370848246 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.008001527 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.191434417 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.007061979 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.380689328 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.366510275 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374486516 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.310693228 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.516080835 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.597251953 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.639916546 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.492679375 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.585360721 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388189902 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.383863002 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.380768209 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.582146195 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.6427445 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.267851621 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368077677 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.384743743 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.368123063 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.380139014 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.579909135 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93715294 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007254172 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483221425 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.382069312 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.821435754 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.641955049 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.36841416 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.367919612 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.966895522 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.387192548 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.825186325 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.373517718 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37266375 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.516308347 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.37887067 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.084744719 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.379067818 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.528545369 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.143402462 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.824945415 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.628147337 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.91171901 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.380089275 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.010897014 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.134559545 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.636447292 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.437597738 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.379870281 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.480997615 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.515883186 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.383280218 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.368711322 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.370397035 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.218592767 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.081574902 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.380358144 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.013189123 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.636663251 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.368956364 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.368401113 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393448195 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.380103581 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.594634692 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.199042148 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.598979246 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.380087528 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.376570395 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.187635971 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.012287197 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.383765365 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.313495047 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.373862254 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.632899514 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.607392471 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.39417758 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.822600997 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.081236128 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010929768 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.349976183 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392084431 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.383080273 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.140524315 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.013480028 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.367023042 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948334604 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.942623885 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.376743164 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.647258082 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.376298193 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.379180892 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.649753671 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.375554976 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.378800444 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.385059288 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.009478954 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.220270314 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.38855406 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.791545107 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.311271477 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.718047103 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.090016307 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.319690667 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.382066839 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.575825725 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.374812901 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500070565 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.384684903 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.371217232 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371738789 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.108616455 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.684284909 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.378698874 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.378223874 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.367796325 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.384837485 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384205141 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.630333375 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375605824 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.091753332 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.726446929 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.6307784 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.373996799 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.361379625 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.377874521 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374900832 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.410927925 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.613660841 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.700006076 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009482361 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.392314709 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.386798082 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.377145941 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.591554708 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.586955736 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.374948692 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.403826108 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390456123 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.391628501 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.279797335 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.914643624 seconds)
  done (took 1622.143714905 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.381745121 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.418329507 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.393895881 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.480543954 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.406767782 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.466663473 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.413317029 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.494425169 seconds)
  done (took 52.769248365 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.385092856 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.602147934 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.410244153 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.384159011 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.386264263 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.385249131 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.856774025 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.393946073 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.387203345 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.387112882 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.376858661 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.392316438 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.050458445 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.386513019 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.381172551 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.374483244 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.385881912 seconds)
  done (took 66.247841658 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.382228468 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.935394877 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.403313966 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.381454136 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.953792219 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.394297402 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.830908256 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.447761834 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.412896704 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.404526293 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.037898687 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.404800328 seconds)
  done (took 81.305466413 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.387985147 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.385357635 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.386191136 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.386409617 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.386035168 seconds)
  done (took 8.248078219 seconds)
done (took 2049.978245914 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.628395547 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.161772515 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.089110155 seconds)
  done (took 5.567490775 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.527115646 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.576436488 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.718567787 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.714772219 seconds)
  done (took 7.852058191 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.655326903 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.761475883 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.563064069 seconds)
  done (took 6.296125394 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.983193213 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.379663591 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.466971983 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.378094443 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.376738444 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.378656579 seconds)
  done (took 20.449659782 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.379933905 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.382810055 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.382303478 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.383571785 seconds)
  done (took 6.848603596 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.361446438 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.151479132 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.363891038 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.38438601 seconds)
  done (took 18.577590196 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.127199969 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.140371553 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.125330826 seconds)
  done (took 7.710253646 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.382478389 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.220093315 seconds)
  done (took 9.919289934 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.690193726 seconds)
  done (took 3.00679897 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.510819647 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.65046795 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.514908006 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.491180779 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.538122112 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.886665718 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.244629218 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.75997809 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.475266395 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.981497056 seconds)
  done (took 30.371148455 seconds)
done (took 130.373495732 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.587165705 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.786518905 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.582910033 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.603201225 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.6134194 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.584242403 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.658615558 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.566149162 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.067157902 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.05387391 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.614153409 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.61432184 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.829186353 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.785793855 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.827376292 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.778199739 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.617875848 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.618803417 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.253198294 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.389270873 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.659929384 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.194737892 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.42896568 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.213427351 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.616256923 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.535892423 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.778497917 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.777918768 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.392206689 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.793413052 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.536855054 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.381719165 seconds)
  done (took 199.060443639 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.384100795 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.383316546 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.382902693 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.39799846 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.407528614 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.384665985 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.417796757 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.387633511 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.393959927 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.383348816 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.382957081 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.400226099 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.38351144 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.384210102 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.384845556 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.383130416 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.388723757 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.38370831 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.399702097 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.40064306 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.382383564 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.415371094 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.384580126 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.384156344 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.399784624 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.401036447 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.383756829 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.394624525 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.400078754 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.386716325 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.386200637 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.384116031 seconds)
  done (took 205.83777911 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.39971647 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.383895762 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.385011939 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.389773768 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.383439118 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.387199164 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.385719155 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.402212681 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.393084862 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.386417446 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.390802909 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.384781323 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.38543363 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.385433297 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.388409484 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.384879599 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.384415537 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.387039361 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.38506877 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.401912585 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.384666963 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.396565049 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.401951618 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.385121099 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.402950941 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.387651014 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.384997543 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.385460977 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.385753693 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.386430534 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.38631362 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.385603756 seconds)
  done (took 205.769840207 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.587573528 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.390827085 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.391184598 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.348468256 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.390870762 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.39056176 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.389175995 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.589725734 seconds)
  done (took 14.80049153 seconds)
done (took 626.787812306 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.829507373 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.537379491 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.60167951 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.413550859 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.261644957 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.415517922 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.413115417 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.596494753 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.349136309 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.603019909 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.755994011 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.411535664 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.899395945 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.40973882 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.680750456 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.513097915 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.312890178 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.429527027 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.750118657 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.034014807 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.683930162 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.970891652 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.595704287 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.347651541 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.911758805 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.975168169 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.165081675 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.307781311 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.411430219 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.749822884 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.171937852 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.429912847 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.481636986 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.461095461 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.512741175 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.494948327 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.405731702 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.459389657 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.601244849 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.727960174 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.024310539 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.158206066 seconds)
  done (took 95.590883644 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.382024618 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.380970865 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.380067238 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.381078286 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.382979499 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.381712869 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.380532313 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.380566906 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.381288818 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.381521412 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.380380197 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.382388803 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.381119744 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.382251363 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.380802535 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.38169138 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.381941785 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.384804605 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.382329225 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.381173247 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.382973003 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.381735567 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.383377216 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.382825753 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.382925357 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.382858277 seconds)
  done (took 37.255788022 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.396298586 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.648334952 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.843002874 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.404054858 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.396880958 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.40117065 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.483765655 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.396219897 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.400655759 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.400927735 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.561782339 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.399193366 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.437112337 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.850241035 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.401022269 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.396747352 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.405355285 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.399085122 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.655672107 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.408285033 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.486220619 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.396918237 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.485110903 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.409124413 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.401957023 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.399088889 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.403121626 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.901806309 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.401312178 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.56222346 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.294265473 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.485784203 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.850752859 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.855868589 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.29539071 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.4015072 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.397406029 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.574187946 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.402310868 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.400476535 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.486924578 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.400376965 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.85569599 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.047272369 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.419239552 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.39790234 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.925916716 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.572730174 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.677517427 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.407909861 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.87826223 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.403527831 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.398634688 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.401541731 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.678321921 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.407577149 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.400654674 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.952591177 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.406065369 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.487412747 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.398974576 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.402118921 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.663783474 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.401915609 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.650835948 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.403505382 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.409976812 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.402891364 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.854494649 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.403456458 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.062318502 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.424047388 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.403241566 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.567252539 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.655490454 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.963207433 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.408573199 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.670529784 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.868450404 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.489751837 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.40857032 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.895030499 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.4945421 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.408155326 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.405108744 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.404602809 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.403978026 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.445634637 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.489527886 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.995832626 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.063200754 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.976893489 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.493916349 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.417657848 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.406482867 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.958887068 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.422385992 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.404403405 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.858443283 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.069077055 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.421039205 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.412093844 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.051317925 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.427105901 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.49274132 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.412609315 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.862730457 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.407431788 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.447997288 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.404032286 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.413726837 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.41011989 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.494093235 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.409696242 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.404431744 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.046628368 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.596399048 seconds)
  done (took 184.469636169 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.418332531 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.401298721 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.410694956 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.39961374 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.400088757 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.406381912 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.401101623 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.400739294 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.405339539 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.400347409 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.401989491 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.402488741 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.402233705 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.424034243 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.413207065 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.408910032 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.012092418 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.402502986 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.401601659 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.402145346 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.226340484 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.40564708 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.400667872 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.419766528 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.402064461 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.403612198 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.422208566 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.404819659 seconds)
  done (took 154.14024288 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.406172003 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.048133729 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.408304141 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.557428316 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.430131681 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.404129573 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.553640868 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.472673971 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.411004774 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.404761932 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.405100933 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.751154152 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.407947517 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.982565897 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.624826837 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.554053172 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.984296686 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.407513195 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.405031734 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.40565984 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.557969974 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.416930513 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.751196153 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.049531799 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.408156354 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.049642482 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.396482124 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.408687444 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.409585736 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.05154065 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.406666221 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.749271584 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.495624242 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.476378628 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.05085988 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.988860317 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.98712815 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.571293639 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.410493502 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.405384588 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.406799211 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.396432829 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.049270928 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.410290231 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.410756737 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.042059844 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.427777658 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.410379352 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.417653663 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.406688097 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.477440751 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.477703854 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.754941171 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.05459641 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.494674594 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.428647247 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.557003383 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.787529481 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.412212326 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.989230659 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.395559382 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.049454735 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.412333469 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.39769602 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.408067644 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.413075186 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.575927075 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.563888508 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.993879478 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.412185443 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.990457963 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.577336265 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.408115558 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.408254863 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.411041658 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.048539421 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.991002851 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.577023116 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.561419237 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.63131752 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.39857414 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.412320004 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.397793845 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.498047244 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.409090544 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.047845928 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.99328637 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.411632148 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.411403348 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.41198587 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.411011147 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.612828206 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.051357079 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.499555856 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.982635721 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.771295556 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.754465049 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.411705045 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.476778755 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.410267605 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.757069597 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.413180496 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.475475875 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.85115056 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.756099159 seconds)
  done (took 169.474110119 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.676406456 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.694661972 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.509786209 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.533988626 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.974764561 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.010513307 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.695526338 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.546316648 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.527919349 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.671232712 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.675116291 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.50165222 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.611127137 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.495378387 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.153180469 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.487820152 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.511141381 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.541752118 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.530381828 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.489854094 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.077614904 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.726065852 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.599756756 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.669115869 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.514132117 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.25257787 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.986511139 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.935916069 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.593813474 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.780932247 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.965849154 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.604018297 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.443016285 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.129386604 seconds)
  done (took 68.462350694 seconds)
done (took 710.716051588 seconds)
SAVING RESULT...
DONE!
