cset: moving following pidspec: 2606
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.382803009 seconds)
loading group "string"... done (took 0.504835287 seconds)
loading group "linalg"... done (took 8.509850086 seconds)
loading group "parallel"... done (took 0.173033989 seconds)
loading group "find"... done (took 1.271533671 seconds)
loading group "tuple"... done (took 2.034998469 seconds)
loading group "dates"... done (took 1.339944473 seconds)
loading group "micro"... done (took 0.206015965 seconds)
loading group "io"... done (took 0.575748664 seconds)
loading group "scalar"... done (took 41.206913945 seconds)
loading group "sparse"... done (took 12.752487319 seconds)
loading group "broadcast"... done (took 1.038868147 seconds)
loading group "union"... done (took 13.939443937 seconds)
loading group "simd"... done (took 4.82604836 seconds)
loading group "random"... done (took 9.683142736 seconds)
loading group "problem"... done (took 2.076996083 seconds)
loading group "array"... done (took 23.250444886 seconds)
loading group "misc"... done (took 1.068589583 seconds)
loading group "sort"... done (took 3.518296148 seconds)
loading group "collection"... done (took 20.698362658 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.574397519 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.132167197 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.144114219 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.172058927 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.200737519 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.136622777 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.153096654 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.457807806 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.992777626 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.201605285 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.139261664 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.498152725 seconds)
done (took 5.559476529 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.225485167 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082291015 seconds)
    (2/2) benchmarking "String"...
    done (took 0.12536881 seconds)
  done (took 0.910388137 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.073003263 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.171158134 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.091370395 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.108131342 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.107084698 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.090326972 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.107675352 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.107094246 seconds)
  done (took 1.488189805 seconds)
done (took 3.410375691 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.748162042 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.860130248 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.47833451 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.120576261 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.153357061 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.126621751 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.299758345 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.144432593 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.117493045 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.111575364 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.173062983 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.345755205 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.475794423 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.918844743 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.092002101 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.124516555 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.078397134 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.699012278 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.078223687 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.114866362 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.505054144 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.104775942 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.112813248 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.125631693 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.203534844 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.113575834 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.178082754 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.104841202 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.667583547 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.099162757 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.180569026 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.094700146 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.157159571 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.209749596 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.091835762 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.089191794 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.675640168 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.187479194 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.107375908 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.091105958 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.676331848 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.075987176 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.195974648 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.105271691 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.106592047 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.18523028 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.098129563 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.091798033 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.080355175 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.100759531 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.154033741 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.45748773 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.103606924 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.139645635 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.092142592 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.69395079 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.091020439 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.152165348 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.121299226 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.106206371 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.080175083 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.103790111 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.156416259 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.097429829 seconds)
  done (took 19.372297905 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.113495319 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.136336868 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.09052406 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136684439 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.135947299 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.094168449 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.080726597 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.073960519 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121653302 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.179081739 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.13569111 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.139802603 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.072138271 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.092402995 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.09776518 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.245712591 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.119398417 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.101476675 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.094463937 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.086417741 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.135655006 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.090955277 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.105290528 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.106175887 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.164559826 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.200774158 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.106603251 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.120726434 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.089855787 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.096274363 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.138570821 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.157744102 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.073000769 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.090192914 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.176958591 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.10279336 seconds)
  done (took 5.022402197 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.190937233 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.098463617 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.198021977 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.156068946 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.076830364 seconds)
    (6/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.170104462 seconds)
    (7/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.148300686 seconds)
    (8/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.159710439 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114313039 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.258352054 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.233675588 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.160702676 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12535216 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.112735191 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075377856 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.092926679 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.076021475 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.694908504 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.165044614 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.143563151 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.120572592 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.1001663 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.078567104 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.370721616 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.08247373 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.095687853 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082536747 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.08630916 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165140529 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080127384 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.211499259 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.096927681 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.106035663 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128455109 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.19138215 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.124583842 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.078421268 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.129883914 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081639069 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.094763302 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.194070988 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.084457912 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.092579519 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.09966872 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131860152 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.130312307 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.0943065 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.087299464 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.241689545 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.078986655 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.111925441 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.00525602 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.21098646 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.092150622 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.093217655 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.332960514 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.0962175 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.09900714 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077066836 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.283031682 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.115738524 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.094925907 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.07495022 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099596297 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.075664748 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.383921214 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100476937 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.019527667 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.079569409 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.151683078 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096838098 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100426654 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08262844 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080374247 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.115482109 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.075463937 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.095503779 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.074286644 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.093621814 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.079742685 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.111874115 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.094605147 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.07995081 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.074780819 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.160206499 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.113987322 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.09655083 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.122209809 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.080528816 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.09228362 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.123712713 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07780867 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.078572717 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.137768243 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099956725 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.111315096 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.07921276 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.139153384 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.092890813 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.1623158 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.092480138 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.102800912 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.097396279 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125105871 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.114812247 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076355724 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.097870581 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.074036446 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.09327597 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.142801142 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.091307323 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.077131767 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.095766347 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.089412635 seconds)
  done (took 23.03051623 seconds)
done (took 48.129260706 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.377686769 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.10682248 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.107005085 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.107217837 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.105100568 seconds)
  done (took 1.583773405 seconds)
done (took 2.340076411 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.312429984 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.192229309 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083020997 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.168130241 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.100382287 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.174108802 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.15869904 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.114236281 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.183689001 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.096823643 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.16169192 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.096573597 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.083867626 seconds)
  done (took 2.706438001 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088541904 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113223477 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.076457434 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086568657 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088008538 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086609192 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.10277222 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107211878 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103231613 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080478398 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088793596 seconds)
  done (took 1.775962235 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087278041 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.094607312 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094095921 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08674481 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089036766 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086532236 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103245342 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.096996079 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.1050792 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08196085 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087959094 seconds)
  done (took 1.763352453 seconds)
done (took 6.992205314 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.078805229 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.507409829 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.09861008 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.168569697 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.323973125 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.192194734 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.615702494 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.130671023 seconds)
  done (took 16.06211861 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.106718478 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.093359406 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.07568951 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.110426888 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.075847153 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.095472902 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.075947522 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.093882173 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.076402799 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.078147755 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.091357597 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.074650898 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.091140521 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.079774736 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.095222746 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.077274468 seconds)
  done (took 2.208353795 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.111983261 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.109975394 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.098641563 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.083387453 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.096949744 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.079580093 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.099303191 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.08027788 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.094257331 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.079398915 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.100701409 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.083381973 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.098090516 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.078054139 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.098397029 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.10176965 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.078780917 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.099295784 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.081485284 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.098611403 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.083417379 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096048182 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.081850327 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.099800197 seconds)
  done (took 3.073077125 seconds)
done (took 22.096947856 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.1587707 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.08044084 seconds)
  done (took 0.996586601 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.097220837 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.113528536 seconds)
  done (took 0.975445823 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.101334145 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.092312654 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.13011377 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.093004803 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.09342207 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.076548899 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.125262262 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.093681419 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.076616111 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.077025966 seconds)
  done (took 1.724391509 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.080340193 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.080914116 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.101008514 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.113288256 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.087817798 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094136492 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.080503941 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.096826411 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.081783742 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.091395552 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.08361506 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.112748584 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.099675138 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.096687323 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.096902458 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.081657527 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.101354521 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.097353769 seconds)
  done (took 2.444273345 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.076119911 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.078790208 seconds)
  done (took 0.919247545 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.07812753 seconds)
    (2/7) benchmarking "second"...
    done (took 0.074747168 seconds)
    (3/7) benchmarking "month"...
    done (took 0.094595988 seconds)
    (4/7) benchmarking "year"...
    done (took 0.095497423 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.074325137 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.074331694 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.091403668 seconds)
  done (took 1.350088161 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.461688224 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.177429931 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.316955537 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.108805676 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.128417303 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.337626429 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.127914547 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.10773734 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.107787743 seconds)
  done (took 2.680522224 seconds)
done (took 11.852689331 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.086437671 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.128581469 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.469551531 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.110635737 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.073605311 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.140574155 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.246476404 seconds)
done (took 2.022889814 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.332675706 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.117577192 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084237157 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.074068473 seconds)
  done (took 1.375562002 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.074677007 seconds)
    (2/2) benchmarking "read"...
    done (took 0.081024198 seconds)
  done (took 0.929026093 seconds)
done (took 3.078925978 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074125307 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.122754071 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.073306376 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.07161829 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.093366112 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.071884464 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.089881427 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.073388417 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.073893725 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.091516273 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.073982956 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.09032634 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073563826 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071392591 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087306018 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.074709914 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090718336 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.07135852 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.190985063 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087500619 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.071308968 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.090309436 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.071067331 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.071229203 seconds)
  done (took 2.857338669 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099745423 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.092827133 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.080696853 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.095940313 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.077587327 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.096796894 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.080262441 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.091181374 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.080105589 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.093166401 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077663795 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.093963705 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.076576258 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.095002125 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076588012 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.095194223 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.081388596 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090981173 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077435708 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.095364231 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.079469645 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090920203 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.078541143 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095365029 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.078593804 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.0943139 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.076529767 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.091024318 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.0800089 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.09453639 seconds)
  done (took 3.384398364 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.080132179 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.07121344 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.088946799 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.082406767 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.088638561 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.077163464 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.0884276 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.072406049 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.07673919 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.088428844 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.077301851 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.089323823 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.071462757 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.077086524 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.092661812 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.079205797 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.106988839 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.072336063 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.088608467 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.076390186 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.094445839 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.071804507 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.074937884 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.089560799 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.071566646 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.088464924 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.07173647 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.071941559 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.089925864 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.07219417 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.093588717 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.078283459 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.072856937 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.101908781 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.078432145 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.088564552 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.07973967 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.089372687 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.07608543 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.07172094 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.090124709 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.071939873 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.089404349 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.083035512 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.092385152 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.074228157 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.072519144 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.09329654 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.076174257 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.095802257 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.071279178 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.071828965 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.094991486 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.076776183 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.093997471 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.072061767 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.090017797 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.071465193 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.0767434 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.089126503 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.071086009 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.088725347 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.077934293 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.089902586 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.095185579 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.100448083 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.07199576 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.07668237 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.093599752 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.079600147 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.093719885 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.089987114 seconds)
  done (took 6.728798793 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.076850584 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100380533 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.073389212 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.073543231 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087991362 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.072984233 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.097176751 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072670023 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091001635 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.089799833 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089354625 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074207805 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091479605 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07611332 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072900591 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.090996016 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.083445685 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087381372 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.072663682 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.0932519 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072420118 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.095541618 seconds)
  done (took 2.621598662 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.215164834 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100181941 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.135762718 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091473244 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.110133141 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.109012516 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.080128941 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098229684 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080139509 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099543145 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082433073 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0961706 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109942613 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081944055 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098706363 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083824021 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096904692 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.083668619 seconds)
  done (took 2.638623422 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.087401374 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.092705177 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.099261726 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092135919 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.076568897 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.094771765 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081215556 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108069258 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.077719762 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.092502978 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.085217868 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094379392 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.077556394 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093375699 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077242805 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.092793858 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.076635307 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075117082 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101970461 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098098959 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.080196853 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103175051 seconds)
  done (took 2.74661755 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091594937 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095148546 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.09613109 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.095996236 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.074258074 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.094268147 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.082604063 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.092241892 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.085482287 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.094798926 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07613005 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.093865734 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.084383698 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093290291 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.082345394 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092436602 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077838415 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092907172 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077115268 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.074676731 seconds)
  done (took 2.53287229 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.117056588 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10686857 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.0904419 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118387915 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092379889 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107828165 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118353776 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.089823864 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10765585 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.102253125 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106828103 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.09030022 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117893823 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.1141676 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.089713607 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.1181162 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.118329215 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100485822 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107362783 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.089737324 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.121125504 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107228786 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101281762 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.106529461 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.089571109 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.107048968 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.090756386 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113669308 seconds)
  done (took 3.730956446 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074015794 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074839253 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.090770842 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.072339621 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.07156345 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.089952608 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.072677834 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.090120501 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074799432 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072920131 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.091944317 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.075034638 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.092414829 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.074486057 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074609207 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.091839786 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07525134 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.090803696 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071924861 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072419736 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.092215178 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074879323 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.092014641 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072146091 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072865357 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.09230473 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072390577 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.089452308 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07426787 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07139376 seconds)
  done (took 3.188083192 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.082508981 seconds)
    (2/2) benchmarking "in"...
    done (took 0.097920201 seconds)
  done (took 0.973788739 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.072902805 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108850284 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.072184635 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.078362814 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.098057185 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.075717506 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.102378729 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099287258 seconds)
  done (took 1.502493046 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.099392856 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.113168189 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082628056 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.105018115 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.094320426 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.11102439 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.156712849 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.081803991 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.101424193 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.076474941 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.112697298 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.075894386 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.084411635 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099839614 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.085015982 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.107757389 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.077296413 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.103904365 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.083342461 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.096125652 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082038752 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108862056 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08653165 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.101331168 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.078691456 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.105205943 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.089375193 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.104695595 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.080493783 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.105542948 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.083923357 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.08768762 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.080595565 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.099758467 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.077711015 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.110706278 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09392489 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.098970793 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.08583513 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099603255 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085578009 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.092469246 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087021798 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.101032268 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088717339 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.099646387 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.08328971 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.093066621 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.077116964 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.097753958 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.074544226 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.080157025 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.087666874 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085507684 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.102947636 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112146324 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.077981551 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.080543436 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.098086336 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.0788901 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.100399804 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.080686134 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103642071 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.08005961 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103492845 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.084687686 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.101608532 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.075191121 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.08868797 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.076860611 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.102913611 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.100071279 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.104686488 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.081793984 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100061008 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.07718961 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.098677241 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082767001 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.101410657 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.08710526 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.098228155 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083772072 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.103870305 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.079645214 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.097556576 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.082769848 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.077459424 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.098180651 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.077139359 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114249588 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.078863667 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.094383384 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.077213131 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.105074924 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.081667539 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.097504407 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.077881341 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10311969 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.070196113 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.09912358 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.082345498 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100930209 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.088615353 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098692953 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.082861592 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.102588197 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.086502248 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.0991714 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.079626263 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.071869644 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100582232 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.078880787 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.102435488 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.070601461 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.098823354 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.081193132 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.099427365 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.086491973 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.096871623 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.082207812 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103466059 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.087258802 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.096028309 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.07210938 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.080332281 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.098646412 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085697439 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.106215022 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.078821025 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.093153799 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.075000554 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.102134419 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.080563811 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.10071356 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.081458381 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.099021059 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.071052154 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.094362339 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.082007087 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.105266388 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.079363179 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.100743312 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.085405786 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.101833547 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.079328241 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.103917666 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.078963919 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.076385504 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.103170767 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.080404825 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.092821837 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086567156 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.098463716 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.078340844 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.099209343 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085696465 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.099315526 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.082200808 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.096043528 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.081569017 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099797355 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.076130386 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10033665 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.078493334 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.106774111 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.079937976 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.074723882 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.091421102 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.082955383 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.095316847 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.080684601 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.095085937 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.081019011 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.100597361 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.077629611 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.079369988 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.097698591 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.093882207 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107480232 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.082553031 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.102400723 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.087783615 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.098216111 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.082817552 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.097825358 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08267263 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.100658055 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.086079184 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.101980143 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.081956113 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.098867456 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.073344928 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.101255488 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086862958 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.094343093 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.07759088 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.076240912 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.09944132 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.088016678 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.098958929 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.082736769 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096898479 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083062176 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10495058 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.080898191 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.099653638 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.077250159 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.099649293 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.085873927 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.081848803 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102141249 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.106801735 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.082116878 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.074718186 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104649821 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.078579876 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.103296705 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.075249174 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.095013123 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.077385501 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.100368371 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.079601153 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.098022403 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.06971826 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085702586 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105478079 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.081279347 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.094025975 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.081261136 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.107866731 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.079411935 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102152552 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.081418664 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.102435209 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094743181 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.095755289 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.081589699 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.10670659 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.081768903 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.088744944 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.084086254 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.097308119 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.075752379 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.097535021 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.079275262 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08193855 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109652275 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.081965295 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.088486037 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.080241623 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.096544952 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.077857382 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.094306436 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.086891498 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.099079019 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.081297319 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108656561 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083007501 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.100321459 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.083162165 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.09879071 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.082826563 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.100329196 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08211046 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.081430054 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.098548682 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.076476351 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.098886137 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.077338507 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.095264338 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.079827284 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.099622254 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.082534114 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.100259256 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.081134065 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103616126 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.081491513 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.100971671 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.098592907 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.096028559 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.076803957 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.10004629 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083759884 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.098890138 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.080274191 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.093554636 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086708034 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.099130266 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087320282 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.098614099 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.073613402 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.081733271 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.099019604 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.082842279 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.101070721 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.082973827 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.098099043 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.080614818 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.099674502 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09072216 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.095568685 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.087433206 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10236512 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083520293 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.099949358 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.082724569 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.098503451 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.078380337 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.080554684 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.10260287 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.082077213 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.099837369 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.083225014 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.101355874 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.080762887 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.097757054 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.083441454 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.101298831 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.082966224 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.089376596 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.078267617 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.076560133 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.10120742 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.084771503 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.101586007 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.079672227 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.097654091 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083143902 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.099278056 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.074050048 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.103034362 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.083525474 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.101337338 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090438896 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.095196825 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.081726101 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110099057 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.071546464 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.078478964 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.096399576 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.078331833 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105664081 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.082810286 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.104785197 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.081775687 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.095302687 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.074547556 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.101026519 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.079573371 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.071138289 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.096759077 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084617998 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.098108814 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.079470773 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.100961851 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.08443221 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101193874 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086026831 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.099436269 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.081648445 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.100788498 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.073898826 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.078096219 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.096897046 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.081586083 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.101602011 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.077796031 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.092234865 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.081571999 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.099509548 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.082673433 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.0796661 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.10010802 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.086061625 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100084686 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.081000202 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106542297 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.071774028 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.099832073 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.081489083 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.099420182 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.077537243 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.100905109 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.083419604 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.1018292 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.086777249 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.100681781 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084623968 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082171293 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.097748062 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.081303502 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.100057715 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.083015994 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.096542298 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.084106851 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106451061 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.079335888 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.101534682 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083156809 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.097597982 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.083791342 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.101597247 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.083014139 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084288735 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.102262102 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.082142856 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.103912113 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.082267494 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.101739996 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084027493 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.099104073 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.085590171 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.095687879 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.088478957 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.1016742 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.083404368 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.099476779 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.078910085 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100032195 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.080624123 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.080163623 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.104989937 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.083181633 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.09679834 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.078415238 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.096859558 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.082355626 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105593067 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.08793152 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.101035165 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.083473815 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.095271 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.075055116 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102394061 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.078872156 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.080458463 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.103414729 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.086320379 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.100953693 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.079402568 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.099094005 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.087325136 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.104732405 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.084646853 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.097196783 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.08458942 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.101871881 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.081782336 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.098997625 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.081994975 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102725005 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.084191763 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.099092824 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.078168286 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109831358 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.087348149 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102982418 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.080367216 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.103517371 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.082490086 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.075459922 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102722794 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.084333598 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.103094241 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.082290215 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101034236 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.091507408 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.096777325 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.081398388 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105909244 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.080690513 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.104918976 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.077035087 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.100525102 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.083487594 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101902926 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.077089262 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.096068491 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.078528199 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.082512253 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.096965651 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.076181492 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111352936 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.086924115 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.101621333 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.080763832 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098640691 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.076275587 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.095175693 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.078424743 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102292468 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.081903398 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.106956225 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.078267413 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.07719221 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.094923953 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.081463326 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.101710088 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.084176991 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.093158531 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.076616754 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.077215975 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.101764031 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.107334719 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080688379 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.082740594 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.102915975 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.081976373 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.098275602 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086989771 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.092562959 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.083251029 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112026797 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.08406049 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103157669 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.084403079 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107283048 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.084138181 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.095194159 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.08527744 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.101434919 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.083447249 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.101995931 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.084381065 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115481919 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083593509 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.097519564 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.081679417 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.100274449 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.078221818 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.10824426 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084562504 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.102030528 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.084304964 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.07976954 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103398984 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087175039 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.103998906 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.082404301 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.101584003 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.079360441 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101434422 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.080261342 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.099122882 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.084172923 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103221393 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082398064 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.103534266 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.078657264 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111097991 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.088619284 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.102801927 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.074047658 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.078013741 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.097570548 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.077452345 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.102505403 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.075849669 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.098196373 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.080253741 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.079788913 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.104278593 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.084859687 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.102304206 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084112931 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.101418858 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.072862287 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.105370604 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.083130585 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.1031564 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.074682364 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.101073304 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.084413525 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.104774313 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088008648 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.099093782 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.083188637 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.080377172 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104996527 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.076991099 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.104902022 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081340187 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.100301718 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.078846407 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101002673 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.083765285 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.102283402 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083880197 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103535395 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.082689979 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.085786198 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105074179 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.074543436 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.094090382 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.085289544 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.098176187 seconds)
  done (took 54.880302207 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12235619 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102964493 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072409375 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092936151 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118853524 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077976293 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072971129 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.097031576 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.077114138 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106500533 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.073199951 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.092676575 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11477486 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.100433504 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116511447 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10649403 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07326382 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.096293582 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073790104 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.095961403 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.093592949 seconds)
  done (took 2.82228296 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.098120831 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.110462046 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088998068 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.114260657 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103874073 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.091501166 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.108693606 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111032367 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.094993093 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105535684 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.113442909 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091222802 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.104866597 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.104661054 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086201438 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107836869 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.094963736 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104026351 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.110373766 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.089071739 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107926779 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.109599236 seconds)
  done (took 3.098571746 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.086941493 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.081154431 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.105881373 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.072689736 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.10088735 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.072997096 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.10650303 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.076573036 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.10386294 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.083178915 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.080008439 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.10097211 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.085986088 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.092640059 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.080116505 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.094013967 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.085873686 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.080911455 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.101938396 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.075154168 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.121241862 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.095244116 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.076848418 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.079682026 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.110529121 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.081720958 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.100876235 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.082165499 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.097708779 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.082112366 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.09399568 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.08418783 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103825361 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.080057153 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.078949921 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.100450023 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.082029932 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.094567011 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.078249514 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.103507971 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.077760897 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.082155869 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.107355574 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.07720227 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.094825131 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.083853852 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.100999891 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.07263454 seconds)
  done (took 5.139006797 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.113100298 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.128947355 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.101536365 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.13969398 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.117145461 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.091916492 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.101809904 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.139312966 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.076071066 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.100204959 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.098446986 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.116320888 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.101355148 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.0884878 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.104431607 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.081884847 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.10214808 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.077056753 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.106064216 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.077827458 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.106025851 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.084520655 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.116467413 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.113504153 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.085469026 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100799903 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.077209318 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.106343153 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.111751114 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.08801836 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.10715238 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.088769267 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.115464442 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.098342889 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.078099302 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.103239614 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.09843099 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.102056593 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.083174038 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.09555884 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.083512011 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.106062356 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.103922839 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.098418389 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.101406559 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.083335433 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.101023609 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.074643337 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.112089118 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.104371586 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.091857701 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.114986497 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.085598346 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.10187704 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.106771914 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.097210539 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.101792482 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.081025969 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.104768681 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.114886401 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.075694141 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106104443 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.094360176 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.103550607 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.090262449 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.114653331 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.102305151 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.085478956 seconds)
  done (took 7.757119184 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.109907395 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.106108063 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099003891 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117376256 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105987664 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.08810853 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105430189 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.086920668 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.106964759 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113810613 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.086971454 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.153738459 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.103055527 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.092590991 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.106374033 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.087111811 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.105466981 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086864257 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.106554948 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086840052 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.106643625 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.118676108 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.087712215 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.118483028 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.118168314 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.084540366 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106780894 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.086747721 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118432439 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.106378899 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099251017 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.10646804 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.106299648 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.09807896 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.118839186 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.105813633 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.081607256 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.106243328 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.088245936 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.10667745 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.083695551 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.11836344 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.086002782 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.103821226 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106252144 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.087308314 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.117348101 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.119743039 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.09371805 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113246722 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.085927367 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.117713904 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.107101824 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.087851711 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.118155298 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.126687675 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117870027 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.097778413 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.106794725 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.117718323 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.098115211 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.126087088 seconds)
  done (took 7.320916338 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.110018459 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.113462632 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.118004115 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.074141208 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.095924936 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.08695171 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.095055192 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.076280109 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.113071995 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094808948 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115523307 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106515725 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08968986 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115780952 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.106238375 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090532354 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.104802228 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086159486 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113496808 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.106217965 seconds)
  done (took 2.873311474 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.086660098 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.119411971 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.079441152 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.105593013 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.082003213 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.105554239 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.080963064 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101944728 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080271576 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100344391 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.092840182 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.111303174 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079450318 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105751104 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.110700258 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.086860509 seconds)
  done (took 2.389693986 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.099083073 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119293152 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.124255629 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.083540685 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.07656522 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.102963797 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.081307826 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.09513387 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.075062784 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.106806986 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085219628 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.103968535 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.082158939 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.096228374 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.079970014 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.08428716 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.095205284 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082537668 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.10129976 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.102847937 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.104280813 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.080337308 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.102679555 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.07951255 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.102304152 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.084020577 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.105755039 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.075087595 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.098494735 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.080877995 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.10211413 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.086206837 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.096471212 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.083269451 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.097290971 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.077330157 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.101319123 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.082384351 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.103899807 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.08216791 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.097359831 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.081659738 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.081309307 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.100786279 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.073727516 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.10267427 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.07470969 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.105181388 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.080521361 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.101763012 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.081885216 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.106900268 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.086280622 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.109620577 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088879728 seconds)
  done (took 5.942672201 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093765461 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102635751 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084402698 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.096744624 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082114582 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.086212098 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104258 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.080115458 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101416832 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.076065839 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.101185291 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.083195882 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10177199 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.083580486 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.101143463 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08319151 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.093376667 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.081266533 seconds)
  done (took 2.502751219 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.084397198 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07900217 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.106341571 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.078711205 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.09904887 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.080938872 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094453548 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.077980368 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097077676 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.079459805 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078945195 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.101625016 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077161102 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.100883139 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.078950619 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098939038 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.081234594 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075553821 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099516737 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074974099 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100998446 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077172469 seconds)
  done (took 2.792029874 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.096119526 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.129876161 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.093507641 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.140998042 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.0823834 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.104965664 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.091537486 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.104300967 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.120539455 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.082886651 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.081326029 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.104276814 seconds)
  done (took 2.102034447 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103294314 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136119934 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.079434272 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102786844 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093449983 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105721564 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083123175 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105915911 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116577409 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096463806 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104514801 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118857329 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096857715 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117316584 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112459946 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092427946 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105493319 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103868755 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080712915 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126026874 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083827227 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118424245 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104063462 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084256673 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104488746 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095651577 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119491655 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11741702 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104131624 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098923259 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113774075 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08356987 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11805215 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118152804 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08238493 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11891388 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103918603 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127825076 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09466601 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116156892 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.081466406 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113608532 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118258671 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091455116 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118561355 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105196098 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091239028 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104295805 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084368805 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132694444 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114030105 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117032318 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093672906 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118719752 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117725705 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133382553 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119101494 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096062458 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113244359 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118657603 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096004788 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113642767 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116127719 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119365758 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093109126 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116429908 seconds)
  done (took 7.898810866 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119590255 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.102741795 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084147059 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120853422 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116782839 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084569061 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105970257 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08340754 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10573175 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080626609 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.150889303 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106692095 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115653692 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095522115 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105960272 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10443636 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084891361 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115996435 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080699701 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132911551 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105064621 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116588875 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095751318 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116830588 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117737457 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093687522 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106479937 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104303431 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085096581 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104847856 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092982282 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104500188 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116763331 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.081352507 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115864288 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084869152 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106049707 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091143495 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106084085 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113714412 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096182086 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128200114 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105102266 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084953617 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119147653 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105085551 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085536136 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101544689 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085259654 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102203565 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097661325 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119595225 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118046548 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116392352 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085320604 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105620492 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084698994 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106110811 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083947697 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114252145 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115389267 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084356199 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134148989 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105541083 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085151196 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117020611 seconds)
  done (took 7.719532041 seconds)
done (took 148.918763223 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.098279908 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.1357945 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.094708921 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.16398699 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.081431706 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.134999356 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.114606908 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.115555401 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.080225207 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.078993058 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.102164032 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.08381242 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.167464365 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.080517679 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.101032625 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.083792908 seconds)
  done (took 2.59035747 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.176552168 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.281195307 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.100086554 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.10764532 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.086499984 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.10402902 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.085726207 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.107722442 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.08270165 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.112790731 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.082741055 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.103606324 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.091287214 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.103645768 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.082756952 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.102606878 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.092078522 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.102944622 seconds)
  done (took 2.887097853 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.111365769 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.145556887 seconds)
  done (took 1.134345169 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.117040349 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.180974926 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.292427235 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.13239764 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.367625152 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.123274843 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.155946701 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.100862661 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.197577428 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.125327061 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.125495511 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.086315222 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.13405342 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.113754753 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.090214931 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.107082708 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.112386826 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.11031392 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.087098001 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.109321968 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.13276466 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.087329213 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.112981497 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.088880852 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.182937281 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.122621866 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.107692008 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.087736306 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.107922862 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.087646656 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.112292231 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.100087439 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.12237804 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.16249886 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.113264792 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.157940413 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.114847368 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.085305927 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.10884987 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.084845183 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.112754013 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.112763424 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.100734735 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.106547741 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.08759194 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.113944272 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.087485522 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.107358244 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.093496811 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.116898191 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.115164624 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.091729922 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.17795129 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.094801447 seconds)
  done (took 7.545096311 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.78040899 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.14714621 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.084500501 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.888289178 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110250128 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121007145 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.784901917 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.106262314 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.226898202 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.799139388 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.098547419 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.121494742 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.225889642 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.247684222 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.138225876 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.308755483 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.688599494 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.097498749 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.134838081 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.144206041 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.091867004 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.133365786 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.123845331 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.445362824 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.087770766 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.105842602 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.091197439 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.116861941 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.155402127 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.084488017 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.109411709 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.174115444 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.260120313 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.199497987 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.087201742 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.104010688 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.084813778 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.163830547 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262524425 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.212576639 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.148380653 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102947368 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.08396158 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.117131817 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.125835301 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.081789371 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.156397814 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.167932013 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.187314889 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.089763513 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.116948148 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.093212073 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.116737148 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.15772936 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.082442239 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.33112803 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.335432932 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.083481243 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115442242 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.123074564 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.236585359 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.106583617 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.197933904 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.133390034 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.21079695 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.084964665 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.772922782 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.162823156 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.083691747 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.114660942 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.090003785 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.112224484 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.116877443 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.14202631 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.386545378 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120867615 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.087166663 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107371395 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.202773994 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.106305502 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.084539749 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.157760581 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.108782589 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.092356549 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122506133 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.1186521 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.166511832 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.242991633 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.119313486 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.093153921 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.111244345 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.096813444 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.108354361 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.211885537 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.215491629 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.155465321 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.206359996 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.118267513 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.16056122 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.161937778 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116691356 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.167523872 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.092100913 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122593063 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11836953 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.189502961 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.138213958 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.107924714 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.090738073 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.113753084 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.140227203 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.088212647 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.113505483 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.164796944 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.483802493 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.162430256 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.103557664 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.089112635 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115389505 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.157231167 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092435544 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.259412651 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092823421 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.184869857 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.091486059 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.103581722 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.095960287 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.157260618 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120190097 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120358839 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.096838484 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.115251496 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.246634979 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.21668366 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098478768 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.235840194 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.174930022 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.093225022 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.167116222 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.115890852 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.16467783 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.115331399 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095977516 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108851881 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.755166219 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.12135674 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.113888758 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.089655404 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.192723761 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.084077333 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.108967277 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.084198586 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.103816528 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.767865724 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.109717915 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.083253238 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.107380917 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093196378 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.115136532 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.091523843 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.112160969 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.157417938 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.227232394 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.095031096 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.114123926 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.084099079 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.15537216 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.109906963 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.085056236 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.107013683 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.08609984 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.114682599 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.089161342 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.109242781 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168083331 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.154077721 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.217043421 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.552255649 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.106434839 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.085130632 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.228609876 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.083972176 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.303730226 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115305613 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.201270663 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.160157591 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.104568824 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.332263925 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.162861155 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.192185449 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.088351776 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.16685971 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.103416734 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.092248219 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.155352447 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.107457876 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.091343116 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.174978884 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.099562795 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.1211207 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.137498236 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.085606604 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.222600205 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.104229152 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.166584285 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.088046767 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116772583 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.303734813 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.085120464 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.124265935 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.156678348 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.088903133 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.107640818 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.698316397 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.107357739 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.095150145 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114647244 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.196472532 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.182637791 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.093277169 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.114719237 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095498978 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.179114469 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.208910148 seconds)
  done (took 42.641771396 seconds)
done (took 57.675940362 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.301030581 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.253083105 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.249646225 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.210778897 seconds)
  done (took 1.989536596 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.171802945 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.122666927 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.140696707 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.103810711 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.126114688 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.104019184 seconds)
  done (took 1.673633904 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.421913596 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.351400659 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.323505656 seconds)
  done (took 2.003202132 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.24199613 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.263464352 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.314752344 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.393381869 seconds)
  done (took 2.220523099 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.198155219 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.097497801 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.119134634 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.110189698 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.163357567 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.192059521 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.113705947 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.144049638 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.126041267 seconds)
  done (took 2.218582381 seconds)
done (took 11.012994233 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.24974953 seconds)
    (2/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.275160387 seconds)
    (3/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.149308179 seconds)
    (4/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.099660812 seconds)
    (5/286) benchmarking ("sort", Float32, true)...
    done (took 0.234553788 seconds)
    (6/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.113699484 seconds)
    (7/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.195717691 seconds)
    (8/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.0989038 seconds)
    (9/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.120481398 seconds)
    (10/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.09074342 seconds)
    (11/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.121547652 seconds)
    (12/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.098308995 seconds)
    (13/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.119716659 seconds)
    (14/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.143979589 seconds)
    (15/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.261295119 seconds)
    (16/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.21884509 seconds)
    (17/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.155502926 seconds)
    (18/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.137912287 seconds)
    (19/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.254972421 seconds)
    (20/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.227121267 seconds)
    (21/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.121696422 seconds)
    (22/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.071084326 seconds)
    (23/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.151294143 seconds)
    (24/286) benchmarking ("sort", Int8, true)...
    done (took 0.224629688 seconds)
    (25/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.155265294 seconds)
    (26/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.22508246 seconds)
    (27/286) benchmarking ("sort", Int64, true)...
    done (took 0.229952867 seconds)
    (28/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.094734787 seconds)
    (29/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.117401053 seconds)
    (30/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.102158517 seconds)
    (31/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.110855442 seconds)
    (32/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.19608593 seconds)
    (33/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.116106531 seconds)
    (34/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.113559595 seconds)
    (35/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.204733993 seconds)
    (36/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.092501495 seconds)
    (37/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.114596861 seconds)
    (38/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.097137169 seconds)
    (39/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.133883215 seconds)
    (40/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.14211593 seconds)
    (41/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.104324616 seconds)
    (42/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.144569394 seconds)
    (43/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.093498325 seconds)
    (44/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.220703919 seconds)
    (45/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.20557675 seconds)
    (46/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.193543184 seconds)
    (47/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.080544907 seconds)
    (48/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.172587342 seconds)
    (49/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.08191711 seconds)
    (50/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.108152285 seconds)
    (51/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.10697753 seconds)
    (52/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.161847853 seconds)
    (53/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.198536356 seconds)
    (54/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.08832101 seconds)
    (55/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.122246913 seconds)
    (56/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.189402756 seconds)
    (57/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.201525312 seconds)
    (58/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.166690847 seconds)
    (59/286) benchmarking ("sort", Float64, false)...
    done (took 0.167817149 seconds)
    (60/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.225732684 seconds)
    (61/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.147384769 seconds)
    (62/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.099105187 seconds)
    (63/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.152066992 seconds)
    (64/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.082849618 seconds)
    (65/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.094998955 seconds)
    (66/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.06999178 seconds)
    (67/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.070394095 seconds)
    (68/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.135055851 seconds)
    (69/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.087610342 seconds)
    (70/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.172760672 seconds)
    (71/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.138672456 seconds)
    (72/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.137360555 seconds)
    (73/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.078504006 seconds)
    (74/286) benchmarking ("sort", Int64, false)...
    done (took 0.082190735 seconds)
    (75/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.113079702 seconds)
    (76/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.088550965 seconds)
    (77/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.094121987 seconds)
    (78/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.087383331 seconds)
    (79/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.17860308 seconds)
    (80/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.097632461 seconds)
    (81/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.132136843 seconds)
    (82/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.198258521 seconds)
    (83/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.094837437 seconds)
    (84/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.111943822 seconds)
    (85/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.089844266 seconds)
    (86/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.111524711 seconds)
    (87/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.153107485 seconds)
    (88/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.143765782 seconds)
    (89/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.135588508 seconds)
    (90/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.166535808 seconds)
    (91/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.199098224 seconds)
    (92/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.135298487 seconds)
    (93/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.193468347 seconds)
    (94/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.090826726 seconds)
    (95/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.13154354 seconds)
    (96/286) benchmarking ("sort", BigInt, true)...
    done (took 0.240624937 seconds)
    (97/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.115443304 seconds)
    (98/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.189934479 seconds)
    (99/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.111990585 seconds)
    (100/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.096225322 seconds)
    (101/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.185218103 seconds)
    (102/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.078906252 seconds)
    (103/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.096686256 seconds)
    (104/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.070915446 seconds)
    (105/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.10238031 seconds)
    (106/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.094369273 seconds)
    (107/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.112808006 seconds)
    (108/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.090438985 seconds)
    (109/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.178543595 seconds)
    (110/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.078966347 seconds)
    (111/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.11968656 seconds)
    (112/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.134053139 seconds)
    (113/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.121705302 seconds)
    (114/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.071432708 seconds)
    (115/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.094174376 seconds)
    (116/286) benchmarking ("sort", Bool, false)...
    done (took 0.180364576 seconds)
    (117/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.095660791 seconds)
    (118/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.121915872 seconds)
    (119/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.071847371 seconds)
    (120/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.135417366 seconds)
    (121/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.164584545 seconds)
    (122/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.111738638 seconds)
    (123/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.102663253 seconds)
    (124/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.114154927 seconds)
    (125/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.089116851 seconds)
    (126/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.11796308 seconds)
    (127/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.132122159 seconds)
    (128/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.070620283 seconds)
    (129/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.178074661 seconds)
    (130/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.083436204 seconds)
    (131/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.112463416 seconds)
    (132/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.076961812 seconds)
    (133/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.118798162 seconds)
    (134/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.122770954 seconds)
    (135/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.070615051 seconds)
    (136/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.106386163 seconds)
    (137/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.091130165 seconds)
    (138/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.114056527 seconds)
    (139/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.088963986 seconds)
    (140/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.095827002 seconds)
    (141/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.193329857 seconds)
    (142/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.074150533 seconds)
    (143/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.134055132 seconds)
    (144/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.072402641 seconds)
    (145/286) benchmarking ("sort", Float32, false)...
    done (took 0.170134445 seconds)
    (146/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.09145892 seconds)
    (147/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.110538353 seconds)
    (148/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.145072424 seconds)
    (149/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.11700344 seconds)
    (150/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.147253835 seconds)
    (151/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.146424341 seconds)
    (152/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.119175639 seconds)
    (153/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.088341282 seconds)
    (154/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.184412226 seconds)
    (155/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.182025199 seconds)
    (156/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.079487492 seconds)
    (157/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.097906471 seconds)
    (158/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.088086841 seconds)
    (159/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.193879666 seconds)
    (160/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.074513274 seconds)
    (161/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.095932942 seconds)
    (162/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.097339614 seconds)
    (163/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.120911074 seconds)
    (164/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.083175316 seconds)
    (165/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.191746515 seconds)
    (166/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.185486972 seconds)
    (167/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.098567726 seconds)
    (168/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.097064118 seconds)
    (169/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.093071259 seconds)
    (170/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.18374754 seconds)
    (171/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.097941831 seconds)
    (172/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.106353687 seconds)
    (173/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.076865665 seconds)
    (174/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.110337832 seconds)
    (175/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.095422937 seconds)
    (176/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.111470835 seconds)
    (177/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.176993944 seconds)
    (178/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.09140347 seconds)
    (179/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.086217871 seconds)
    (180/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.094549215 seconds)
    (181/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.097406241 seconds)
    (182/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.188485709 seconds)
    (183/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.112480332 seconds)
    (184/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.074003054 seconds)
    (185/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.082525906 seconds)
    (186/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.099426012 seconds)
    (187/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.090743006 seconds)
    (188/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.109189967 seconds)
    (189/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.072369739 seconds)
    (190/286) benchmarking ("sort", Bool, true)...
    done (took 0.22590924 seconds)
    (191/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.182455496 seconds)
    (192/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.091735525 seconds)
    (193/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.109922274 seconds)
    (194/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.161304723 seconds)
    (195/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.086435761 seconds)
    (196/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.071264747 seconds)
    (197/286) benchmarking ("sort", Float64, true)...
    done (took 0.232413708 seconds)
    (198/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.0966216 seconds)
    (199/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.098464024 seconds)
    (200/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.120662661 seconds)
    (201/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.107986127 seconds)
    (202/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.122498693 seconds)
    (203/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.089774309 seconds)
    (204/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.094612337 seconds)
    (205/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.075236793 seconds)
    (206/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.112405664 seconds)
    (207/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.073092905 seconds)
    (208/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.096167991 seconds)
    (209/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.075583391 seconds)
    (210/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.071008301 seconds)
    (211/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.112770468 seconds)
    (212/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.08468912 seconds)
    (213/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.112685586 seconds)
    (214/286) benchmarking ("sort", BigInt, false)...
    done (took 0.222999833 seconds)
    (215/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.074166285 seconds)
    (216/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.095363481 seconds)
    (217/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.085384607 seconds)
    (218/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.107109911 seconds)
    (219/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.086194377 seconds)
    (220/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.122395748 seconds)
    (221/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.071706477 seconds)
    (222/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.095515987 seconds)
    (223/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.153293125 seconds)
    (224/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.109854434 seconds)
    (225/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.091225709 seconds)
    (226/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.099123755 seconds)
    (227/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.113711188 seconds)
    (228/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.146522035 seconds)
    (229/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.090167649 seconds)
    (230/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.117230067 seconds)
    (231/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.072267404 seconds)
    (232/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.112161123 seconds)
    (233/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.08164792 seconds)
    (234/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.098044873 seconds)
    (235/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.096867816 seconds)
    (236/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.111138445 seconds)
    (237/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.089525654 seconds)
    (238/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.113046821 seconds)
    (239/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.108333695 seconds)
    (240/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.107546288 seconds)
    (241/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.10772827 seconds)
    (242/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.115143558 seconds)
    (243/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.089648822 seconds)
    (244/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.098968143 seconds)
    (245/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.091042533 seconds)
    (246/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.098233256 seconds)
    (247/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.214623427 seconds)
    (248/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.113357997 seconds)
    (249/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.114459422 seconds)
    (250/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.087688676 seconds)
    (251/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.121547146 seconds)
    (252/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.164332576 seconds)
    (253/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.119841408 seconds)
    (254/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.089301594 seconds)
    (255/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.114550418 seconds)
    (256/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.080407719 seconds)
    (257/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.108099896 seconds)
    (258/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.074379661 seconds)
    (259/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.109632897 seconds)
    (260/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.088337047 seconds)
    (261/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.121157396 seconds)
    (262/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.080877546 seconds)
    (263/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.109218994 seconds)
    (264/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.095976975 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.092856499 seconds)
    (266/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.111009326 seconds)
    (267/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.084603522 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.107991671 seconds)
    (269/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.090437216 seconds)
    (270/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.121091674 seconds)
    (271/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.100724756 seconds)
    (272/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.104327939 seconds)
    (273/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.072628343 seconds)
    (274/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.095177694 seconds)
    (275/286) benchmarking ("sort", Int8, false)...
    done (took 0.187717782 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.085877533 seconds)
    (277/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.168680653 seconds)
    (278/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.088542846 seconds)
    (279/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.113403963 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.109595536 seconds)
    (281/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.090995724 seconds)
    (282/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.161718488 seconds)
    (283/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.073262747 seconds)
    (284/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.076700742 seconds)
    (285/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.109774704 seconds)
    (286/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.165496123 seconds)
  done (took 36.248465518 seconds)
done (took 37.166836199 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.096624769 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.149224934 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.094940878 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.137469635 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.096989078 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.123124803 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.09246253 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.119122591 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.096352434 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.121517919 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.095238357 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.101891173 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.094513538 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.116989263 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.094638256 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.138576327 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.096475888 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.113516589 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.086662012 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.109631532 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.08640131 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.110235293 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.08781788 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.100697353 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.094922868 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.116352965 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.089781756 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.117904089 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087036808 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.108646069 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.085135529 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.113854314 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.084570712 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.096011327 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.112726012 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.086522642 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.118034436 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.092477745 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.111737631 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.087890748 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.115216139 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.08604856 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.113499199 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.092121851 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.110633659 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.086192229 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.111058515 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.09724665 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.138917102 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.087394869 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.116182713 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.093581444 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.118248907 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.090466756 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.084089353 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.110968316 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.086425161 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.138479256 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.086130098 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.111276692 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.090627325 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.115609445 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.084854391 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.110368806 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.086559634 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.118560308 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.095191957 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.110013554 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.093106468 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.113812027 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.081564716 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.110814597 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.084955045 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.084611632 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.11642177 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.094339944 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.104866745 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.087306921 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.113608884 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.088444399 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.109826187 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.084612106 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.087510221 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.110899031 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.085014571 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.101990542 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.084902468 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.112836397 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.086357992 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.109822267 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.089128946 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.112801635 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.087715147 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.118099839 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.086606641 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.111762669 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.087641472 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.086588926 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.112149982 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.085673759 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.106103021 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.084741093 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.115117095 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.083955217 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.111623609 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.095664303 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.108910267 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.088995679 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.085759546 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.109814123 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.12261827 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.093212995 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.08670426 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112627138 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.083930339 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.114915951 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.084596101 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.107915288 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.084535358 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.110975554 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.088199467 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.110915411 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085374015 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.113168588 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.096597206 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.082015572 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.109743037 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.085618896 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.110969194 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.106424227 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.111452185 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.084698541 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.11001197 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.081454526 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.084562415 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.109146873 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.090022651 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.10905805 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.085713773 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.110799601 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.086986351 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.112793739 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.087447146 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.111279001 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.084209951 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.10457555 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089714551 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085050995 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.111769102 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087694308 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.110484917 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.082960154 seconds)
done (took 16.252780399 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.093768399 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184594065 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.144230542 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.14666376 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.118846996 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.127884324 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122038234 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.116900006 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.119875847 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.14018757 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.143388798 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.108578336 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148236498 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.094514326 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.12745119 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.117559496 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.092475217 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.128093389 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.151253173 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.113261977 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.142369064 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.118456551 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.114374893 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.137591069 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.117295872 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.123054891 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.122071082 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.093613604 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.121126575 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.125570154 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.108976109 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.121428003 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.096118761 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.130452103 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.100966678 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.118025073 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.129057178 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.089915762 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.118992931 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.093565018 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.132433605 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.128836575 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.091293707 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.12571804 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.093512285 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.122322669 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.093871969 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.116975392 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.094110307 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.113182468 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.098020956 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.140270115 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.119529617 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.095807992 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.120626204 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.093828873 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120972812 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.120763049 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.09608098 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.120958173 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.094135231 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.121501589 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.099057898 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.1341012 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.117983439 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.095711107 seconds)
  done (took 8.728016051 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.108088656 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.144676359 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.100471434 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.125761241 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.121810229 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.083087401 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.082667459 seconds)
  done (took 1.742208182 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.084535832 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.137586308 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.11562736 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.14068564 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.107794495 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.143328677 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124678013 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.084652397 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.132958594 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.093638856 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.136162929 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162262403 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.084923082 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.120706939 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.117536572 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.108596961 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118965356 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.108251385 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092929607 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.140621053 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.113786563 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.105714155 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.121916701 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.085699293 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.132282225 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.086219197 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.174211435 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11992608 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.083873477 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.089824204 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113749798 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.178568411 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105883863 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.118952552 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.082158062 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.136598005 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.129774397 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088886996 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.131925477 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.089075579 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.12998261 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.091045381 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115727441 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.089706692 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.11622291 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.098606776 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.119578699 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.092933413 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.115069183 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.112419952 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.120553703 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.130353906 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.086244896 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.088443227 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.120049112 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.090509387 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.122836383 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.089345812 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.136064748 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.116458088 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.11086107 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.134801862 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.105596278 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.136285492 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126678303 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.106613975 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.130057756 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.089090004 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117609288 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.091886924 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.137198721 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.087610638 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.120372455 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099556061 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118433098 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112162391 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.13677284 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090934334 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.123464378 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.088947056 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.11290938 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.086463982 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.13700709 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.08898238 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112606167 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102934519 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.121667165 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.089826835 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.114555794 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.131784737 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.089347874 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.121316365 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.094390921 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.113177881 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.100540488 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.138303379 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.120282971 seconds)
  done (took 11.949708028 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.086978442 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.086178566 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.116646209 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.087588324 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.111990001 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.08689727 seconds)
  done (took 1.556561018 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.115634891 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.114338659 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.100320386 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.118153901 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.127640858 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.134770789 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.135181504 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.095727761 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.131309478 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.099500547 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.134421034 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.110168006 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.139522477 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.117878619 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.108617103 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.118976315 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.109544263 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.115535739 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.099246513 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115412043 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.10252891 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.117551671 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.089180638 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132820731 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.093864741 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.119684025 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.09230173 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.125796697 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.099375321 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.121015306 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.117746693 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.093928697 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.119226988 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.095644534 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.135739401 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.092197163 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114434253 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.094631033 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.119500995 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.093258435 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.137200175 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.092129567 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.124540217 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.095978576 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.12151184 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.092722595 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.121395199 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.092250025 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.135163275 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.100375022 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.121282677 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.092567497 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118183555 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.095338804 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.118586226 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121581506 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.09517604 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.135660171 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.092780686 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.119769116 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.089378732 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.120225616 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.096084799 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.119371481 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.094587358 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.121146455 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.092881296 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.115185489 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.089285871 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.11728364 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.09497416 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.115931715 seconds)
  done (took 8.991093248 seconds)
done (took 33.939782463 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.662056464 seconds)
  done (took 1.641170304 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.81220667 seconds)
  done (took 1.793345631 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.943321826 seconds)
  done (took 17.94922014 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.459501708 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.54903076 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.957506709 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.158570574 seconds)
  done (took 3.105634473 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.945053207 seconds)
  done (took 1.948153279 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.290602002 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.231857276 seconds)
  done (took 1.508737532 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.800482064 seconds)
  done (took 1.797112353 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.488652311 seconds)
  done (took 2.479923737 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.334710654 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.169768156 seconds)
  done (took 1.507786551 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.55605304 seconds)
  done (took 1.559030484 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.751924632 seconds)
  done (took 15.756376067 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.236521182 seconds)
  done (took 1.248404588 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.289874102 seconds)
  done (took 1.290201622 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.468324079 seconds)
  done (took 4.466196424 seconds)
done (took 59.038940788 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.095355204 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.098395227 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.123603528 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.096474978 seconds)
  done (took 1.407246696 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.100173192 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.118913737 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.095792355 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.117307339 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.100642485 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.11924699 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.092038167 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.161547999 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.092937374 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.120694916 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.093836052 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.11829051 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.09418776 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.118867952 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.091406255 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.120274914 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.096216674 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.118173171 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.094076703 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.119109548 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.090791392 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.119694492 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.095960394 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.117576295 seconds)
  done (took 3.614326799 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.095028396 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.090654523 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.116726054 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.089311604 seconds)
  done (took 1.399925335 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.098793418 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131074499 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.105116524 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.124052276 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.106190104 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.131476932 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.088699888 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.113375593 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.090120784 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.124666861 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090056797 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.134725811 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.104887171 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.109972361 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.100166722 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.110645638 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.085697783 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.131362692 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.09787715 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.125161587 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.08826945 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.123677484 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.095815734 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.127951995 seconds)
  done (took 3.652165051 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.168353948 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.126735521 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.13610584 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.093890865 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.162426516 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.1142306 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.112448063 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.137469248 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087470288 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.124585524 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.090953253 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.166186282 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.096461961 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.116268384 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.088138102 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.119688701 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.097231024 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.123443914 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.089850159 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.126158943 seconds)
  done (took 3.388069828 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.095138933 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.088736783 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.110134447 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.087617593 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.121517841 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.090988989 seconds)
  done (took 1.609415387 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.085448932 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.084132149 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.110220895 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.084126167 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.114012283 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.083793628 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.08383891 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.109396979 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.08406592 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.109409903 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.084460405 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.083572114 seconds)
  done (took 2.130663506 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.371150245 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.112395999 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.090199829 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.112089266 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.092812884 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.113462586 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.100463805 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.113566277 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.116521127 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.113611982 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.08672495 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.116672393 seconds)
  done (took 2.554490226 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203163188 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093430886 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257102539 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.341903963 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151116183 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161174764 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.271709309 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15765507 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.179317794 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133484175 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18926211 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12645747 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149232554 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173293962 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136217484 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.172389858 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170618707 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196302807 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117181115 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22449352 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159214995 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161187 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17243441 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119833947 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134223315 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154426983 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.090017628 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124635545 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16854429 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165620276 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169657344 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145125554 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108983954 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221332451 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207009719 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174109732 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.297132511 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127973532 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.186418481 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.178325671 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21978223 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136189458 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189849984 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150632511 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126044065 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176888061 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125642626 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.176346814 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.127468015 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137273839 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179009287 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172326479 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.17414691 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133162335 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.296724364 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141624771 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.114937786 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17715803 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17986179 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184514633 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162441895 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.117988081 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179760769 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174100884 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173998725 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.141041064 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.162435896 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094369363 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169394757 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188233316 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172178403 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160130805 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.2087073 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102725096 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158675984 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164291204 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149015777 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173646578 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156262523 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.091425954 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145614344 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133476999 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098157341 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.183309239 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.092743291 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196498726 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130676548 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.185369496 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198352406 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153131391 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156537916 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15829502 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160586486 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115521958 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.115314403 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142220578 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.128751566 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152651563 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128415761 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152574796 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11195677 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.12325566 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14874266 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.09349388 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156025051 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.13125616 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161037859 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132294253 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.124258748 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160682372 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14622058 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.125533846 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164608065 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179623205 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129752294 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127726033 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187097598 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125083591 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.130236532 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170459123 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.180437109 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.160888937 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106485943 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191096466 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187576687 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110061003 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18215658 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136021451 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128914509 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.118211268 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153874736 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151743748 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.153111395 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099365436 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.148258742 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18548699 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.12442728 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104958612 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169098362 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123399405 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096835111 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137883097 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131487748 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.10964449 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.143621379 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.132443602 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152005743 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128179306 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149966792 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153556056 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138410631 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186731655 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13004558 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.154216866 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11643849 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.116012298 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.173297763 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180121938 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098097053 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191106573 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.161828325 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21707755 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161242458 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100503982 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172562797 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124967422 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.089455332 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161676433 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157148246 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158112779 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.17611937 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18868227 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.160200467 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.148873468 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14581503 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162477001 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.168507859 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151478425 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.113170449 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158011121 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161790227 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.11931457 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.092902819 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.123088431 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111482823 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126355122 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100901096 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201923442 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130623918 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.209520594 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155588702 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110769569 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175547677 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.123545512 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159526804 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.168242645 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108393397 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.177652335 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173887016 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161771396 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138791159 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171079944 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.089917035 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120278486 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.129875174 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132251528 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128716767 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131108534 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110989379 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176435271 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168281476 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145590479 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220741287 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134723763 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186235684 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.119568785 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.160568164 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164741061 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125747049 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.177551741 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126945001 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.128194509 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171532447 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138072235 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182737129 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157101449 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164092599 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193169884 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.153346732 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126827023 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118330527 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159603724 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136691986 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161594793 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114379274 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131932289 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150282123 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.102745032 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121735312 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175583395 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140390699 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175140996 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.152572138 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167848408 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094520117 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137517427 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156916841 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140781486 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.085524136 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16449549 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180550515 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140959623 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154447587 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169368873 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098921998 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.301818054 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207135126 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177825085 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104435298 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138619041 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156856698 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154726175 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159853175 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14556441 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140475641 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174454133 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155177745 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.137879574 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103669516 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143876552 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144966875 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.119583957 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.128994895 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.148355848 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.110935673 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203864982 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110717842 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15535189 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1604154 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.143629046 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.116359082 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139920092 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194780506 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154266863 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1729668 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.149929963 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.132812305 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21983898 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.093466093 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125547149 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.095277041 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173563633 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129074665 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128592584 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.206304839 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192534913 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154700798 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162553722 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10614069 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.11796859 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153945925 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11853477 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220051852 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110991256 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.130582439 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184540503 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.14664348 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099323146 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158143969 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.28357792 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138693803 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168143283 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.085224702 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.272640597 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11896003 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098949809 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155392521 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164664502 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.1337748 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.153980188 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156245229 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139995735 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155630084 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104839922 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.20960703 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19835661 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165774257 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1699709 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.138046873 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125927694 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157799154 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170590678 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139964059 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.140206287 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129597101 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176664778 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.181629292 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.129495574 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158904784 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158333626 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154606546 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168326627 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101124219 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219381075 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100128545 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161416154 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136581125 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09195551 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153180119 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.180235032 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128534684 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171001823 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153167326 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100995635 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123161301 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147041413 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125599136 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137489416 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.124568369 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174042491 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.093197087 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158910643 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175742397 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098357169 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15055239 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140682592 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133557547 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110940245 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142792167 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13137598 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.13778498 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174537109 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.127391036 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171610721 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17375914 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159143547 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154247444 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11183058 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.662967734 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.095960718 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176064623 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14300597 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179054631 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143999209 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161877447 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15639377 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116833536 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163694715 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145382328 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.217396809 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16224831 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.153910036 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099839278 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14155344 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138951286 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.099468435 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14654581 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159123145 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107748148 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.13314132 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.152378229 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139056238 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.112228615 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134769535 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179392724 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114128078 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204877366 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146241349 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133602247 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162257579 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168809949 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127193154 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.15497898 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13771982 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138122472 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147545368 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.126971006 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.102459815 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175483171 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.092508681 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155588176 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156554846 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157834725 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160683021 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.101260233 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15515804 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138702233 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156913391 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09815844 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.149671568 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153830498 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101133447 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.123711971 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150431517 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156282425 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.12489551 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122982818 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.142398871 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170369027 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.122991116 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100503913 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.306289437 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125301884 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183952674 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.147075525 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132097736 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111371408 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151891092 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.149293716 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155521238 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.096827012 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128823098 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.127283336 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.150209811 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.147587915 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153837277 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180993903 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156347718 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194144786 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.103355494 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.262914707 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13599698 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150293021 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.098601842 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.126622164 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110105716 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130205467 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139514269 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18553178 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173380523 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.147977752 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.111740293 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124371321 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.095769588 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131208763 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155607094 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121027093 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154465112 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140468864 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.086701741 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140246626 seconds)
  done (took 73.480456882 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.141862998 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.127670771 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.14454038 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.191413928 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.161960275 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.238883876 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.201689067 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.221698362 seconds)
  done (took 2.525097951 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.096342578 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.154027997 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.136251667 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.121835825 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.088438556 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.326568886 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.133881914 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.120610978 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.11565194 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.133126951 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.112841581 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.527635648 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.125552493 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.118181958 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.084250121 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.110577696 seconds)
  done (took 3.594164826 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.136122329 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.521217661 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.889237669 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.223412519 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.216841901 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.16880589 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.707635905 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.176702427 seconds)
  done (took 12.137361431 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.117753583 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.108386138 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.158480349 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.166142685 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.11510723 seconds)
  done (took 1.768892074 seconds)
done (took 114.25472359 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.092477883 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.09424615 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.120151292 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.095804538 seconds)
  done (took 1.490878726 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.10568428 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.082142822 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.10719107 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075993475 seconds)
  done (took 1.47397303 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.411651087 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.07579419 seconds)
  done (took 1.622448901 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.111699951 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.130313507 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103188814 seconds)
  done (took 1.456211301 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.099185558 seconds)
  done (took 1.206432225 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.093673794 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.095848478 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.136857368 seconds)
  done (took 1.431910964 seconds)
done (took 9.785616523 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.10820545 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.427192277 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.382431812 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.134468017 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.690121833 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.405280533 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.00251543 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.151991671 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.163326273 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.086690485 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.132074355 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.667609884 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.054409735 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.337977846 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.040048153 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.339317766 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.698804063 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.090524027 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121772662 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.088356537 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.011089575 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.086110978 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.117311725 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.090375409 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.69659495 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.392203396 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.115415214 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.352164007 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.115205045 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.093575842 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.374598893 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.116225064 seconds)
  done (took 16.778639778 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.093651398 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174254249 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.094877441 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117052483 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.091751961 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.116938376 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.097427559 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.129197005 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.177068095 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.087738731 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133321747 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.086862444 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.09309817 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.116538374 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.107888116 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.116183268 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.090874406 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.117642589 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094526704 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.117926914 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.10708523 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.114664877 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.089348609 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.117152256 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.087949367 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.099784159 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.116254975 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.100748584 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.116237989 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.093662609 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.118923825 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.088804606 seconds)
  done (took 4.611862871 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.137878349 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183841309 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.123606863 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.122205169 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.165057418 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.089467962 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.201004491 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.154185879 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180068025 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.0874715 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.134065647 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.087446782 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.151551971 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.088176296 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.136757595 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.087665867 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.118417192 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.090646732 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122894708 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.089700125 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.135465151 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.087908445 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.117722919 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.090018209 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.115025709 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.101575964 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.088053164 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.128592322 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.115189894 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.094424654 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.091517843 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.116539474 seconds)
  done (took 4.945069314 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.094809231 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.096419434 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.131602077 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.13287369 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.091075811 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.094480067 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.124074532 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.08987874 seconds)
  done (took 1.962116383 seconds)
done (took 29.403092158 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.104574411 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.093501914 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.128757185 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.099452933 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.125493846 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.101081814 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.114585393 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.098507031 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.127371683 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.096667221 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.103103668 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.115976381 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.089158107 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.114207364 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.100748096 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.119615367 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.102217649 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101425736 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.135493589 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.130291142 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.088604858 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.098655627 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.125529848 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.107729558 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.136976645 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.136284049 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.104883102 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.094776161 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.11723363 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.089248613 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.131001487 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.116366812 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.125234069 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104165646 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.120198355 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.092375194 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.087667074 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.118538413 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.103243206 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.12709902 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.093489571 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.126297413 seconds)
  done (took 5.748045836 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.114496229 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.159522179 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.094050892 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.117755174 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.088700407 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.155151481 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.121696082 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.117480986 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.087982727 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.141060701 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.114761608 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.117709708 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.088536563 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.117173281 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.087834937 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.088347077 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.139418134 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.140024129 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.118299694 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.14624759 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.163087765 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.118303242 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.152393157 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.112018323 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.158584039 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.158133561 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.110385392 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.153393729 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.144360365 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.088303484 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.147332284 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.119620569 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.123302745 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.087776474 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.156619329 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.128447537 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.151948654 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.157939214 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.126118892 seconds)
  done (took 6.031118571 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.096658877 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.101836374 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.137940516 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.181445082 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.124578299 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.125463392 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.099118238 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.136345762 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.10506615 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.116928878 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.090152381 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.147661695 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.107063236 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.125151852 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.089535095 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.102553897 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135967591 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.089530102 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.121831447 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.10750373 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.135256 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.099566059 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.129325741 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.098492221 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.117071565 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.095968447 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.120606127 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.102231645 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.121956229 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.095768492 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.12018263 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.093200435 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.120381993 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.09971752 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.092982875 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.123728302 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.138359326 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.096257274 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.09749666 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.118325609 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.099446685 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.121284018 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.109580859 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.155677193 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.087949988 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.125636791 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.094673382 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.125262811 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.087317463 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.134749059 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.098678108 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.117159457 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.102695859 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.116754199 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.087625465 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.131133543 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.089114517 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.091623009 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.125676716 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.094846138 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.136981383 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.093011619 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131886172 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.089282238 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.123427003 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.088561842 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.087133055 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.122487682 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.1400276 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.091776298 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.15626409 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.088669414 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.123102481 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.096229095 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.094084134 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.126515197 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.088694513 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.130849554 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.098531194 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.122112742 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.098114397 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.120208883 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.093163859 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.105346281 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.132166918 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.123486681 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.094264035 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.122380493 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.092928103 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.088736418 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131462345 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.090916907 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.121236589 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.104591192 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.118327255 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.091992216 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.123597611 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.094220312 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.087827108 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13058423 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.092980791 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.117176611 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.098692374 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.118642404 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.092083005 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.126566388 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.092612667 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.117854933 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.093906335 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.123421422 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.08794978 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.091331106 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.120908635 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.09064505 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.130560227 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.095527092 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.119908068 seconds)
  done (took 14.09566755 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.231076907 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.21227167 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.188394098 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.29558802 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.109012073 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.144735809 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.209911841 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.162254679 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.088717859 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.15712748 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.175390066 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.182981203 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.173653768 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.183451531 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.169978964 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.088861065 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.136462383 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.138920757 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.211488649 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.291654528 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.138091889 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.103239193 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.159040421 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.157856733 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.107606226 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.134154123 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.143776486 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.109797684 seconds)
  done (took 5.734915292 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.105324018 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.154401497 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.096310169 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.143566077 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.145425486 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.089928446 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.093762648 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.119925119 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.101778705 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.133557612 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.090323827 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.125669199 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.094637209 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.128652892 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.08879031 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.127909102 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.0988715 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.12786803 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.091915173 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.121394786 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.101892173 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.136021772 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.093617006 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.121233871 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.105192398 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.12107103 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.091194765 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.139501274 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.127483585 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.114261834 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.114781247 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.097638263 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.132150876 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.089079784 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.090467534 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.120574237 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.091764052 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.120960545 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.0899479 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.085873433 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.117852938 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.079771078 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.120764236 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.104812526 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.125405354 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.086059774 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.123869527 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.093486248 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.125538574 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.085717228 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.09075297 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.120421745 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.09303187 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129564255 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.092527334 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.124844772 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.092366923 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.121226174 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.09717031 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.121458045 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085569506 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.089484727 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.124768179 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.093117602 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.126707043 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.09422486 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.119575975 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.091099402 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.123657874 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.095815802 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.090663565 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.12705675 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.085344132 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.12011287 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.098864317 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.127208572 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.093244406 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.120014964 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.092389134 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.087972354 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.106477964 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.088365499 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.106237946 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.093295918 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.087760459 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.119824933 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.091697529 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.123594748 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.134384312 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.098451583 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.096238335 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.118607854 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.091883332 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.123996454 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.086504826 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.123095712 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.105600222 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.137737567 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.08789843 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.116644413 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.104621307 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.120672797 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.087787787 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.081474396 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.130465428 seconds)
  done (took 12.507626676 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.130289087 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.169055961 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.119637866 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.108033276 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.152765872 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.131285106 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.126741382 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.096949828 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.119118946 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.10840388 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.122839619 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.098218175 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.121110654 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.103261848 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.159615062 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.098952195 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.12012926 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.103395024 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.124923584 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.141764734 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.138572066 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.156850574 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.128642322 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.122760042 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.095192895 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.155517992 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.16252924 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.102789775 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.131875562 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.130251917 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.132994817 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.163144118 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.131156761 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.12408657 seconds)
  done (took 5.48013683 seconds)
done (took 50.709954686 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.231118133 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.418169281 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.200155542 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.20004211 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.249385774 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.20990097 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.218717044 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.394129585 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.882325812 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.200281621 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.200212618 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.199760539 seconds)
done (took 27.74101651 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.279528205 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.362614169 seconds)
    (2/2) benchmarking "String"...
    done (took 1.532562157 seconds)
  done (took 4.027007329 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.201725976 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.201173894 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.452323987 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.203535351 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.221593711 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.202886878 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.21460044 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.216138022 seconds)
  done (took 15.842698083 seconds)
done (took 25.484859344 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.243706954 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.39538861 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.469423077 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.216893113 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.207368366 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.205756601 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.205467293 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.235356374 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.200594258 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.208730797 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.20064413 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.45324497 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.21645754 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.573539343 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.202191623 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.223308673 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.218683265 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.436515161 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.207352993 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.24576497 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.203864993 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.187977703 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.204063058 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.219407857 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.205181818 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.20784305 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.266554059 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.200501039 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.388079475 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.232540152 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.238293807 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.201528161 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.201224242 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.202740198 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.307411626 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.232915228 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.371423535 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.203228731 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.192608857 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.204100666 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.378474258 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.582426164 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.199856495 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.204434321 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.206536511 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.241090493 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.196053551 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.893626797 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.205998639 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.219590736 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.262123046 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.580836479 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.203732924 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.200393553 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.210261959 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.415107642 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.216875195 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.214670188 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.232604406 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.227268055 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.199757146 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.198449686 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.264081929 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.20558801 seconds)
  done (took 143.330613784 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.200088674 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.206992113 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.206014201 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.268204551 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.206835671 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.206894233 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.199355105 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.201337027 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.206760024 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.205605024 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.205675124 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.201294479 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.206780501 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.175333224 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.1994708 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.223166327 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.206206519 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.206533784 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.217508884 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.201311695 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.203602656 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.206434826 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.217414673 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.200452231 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.235767047 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.2745826 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.219674026 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.226067671 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.204216493 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.200650177 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.23553892 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.251603752 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.773449771 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.058717726 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.211165456 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.210084807 seconds)
  done (took 80.2113378 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.20086243 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.200765917 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.201318262 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.201374408 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.202665304 seconds)
    (6/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.23088558 seconds)
    (7/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.200893177 seconds)
    (8/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.728864526 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.732879229 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.921601477 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.60927021 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.425517149 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.421818412 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.201679841 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.293426831 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.21544295 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.201733477 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.217567257 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.22933931 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.207879722 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.201227056 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.729930405 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.220173768 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.328714636 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.37170423 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.214965533 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.231223304 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.594309534 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.199549131 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.230224772 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.525819405 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.245091675 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.200679929 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.525759173 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.708607499 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.316208684 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.200488757 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.201493367 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.230371652 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.20004614 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.474534578 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.201450426 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.20056673 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.203758525 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.817021388 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.203879903 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.709373903 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.205955997 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.076165082 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.199444977 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.199604444 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.129824661 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.752119831 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.202472962 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.199594338 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.201948159 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.197409398 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.197876462 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.227993538 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.133875205 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.29169606 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.199554168 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.202348603 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.227288327 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.1990517 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.252707537 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.203641877 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.245663979 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.25652454 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.418946542 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.701728376 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.203133924 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.291733225 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.314942249 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.199001975 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.199761615 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.198115579 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.199723721 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.307010899 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.20032041 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.574158534 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.198264233 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.361381077 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.213469709 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.315339244 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.295137296 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.19975508 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.504876955 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.203352463 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.198716105 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.873046204 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.292868832 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.199096503 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.197841816 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.198807894 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.573251024 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.690659053 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.366668921 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.203736935 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.290154118 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.203981562 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.584113712 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.684063315 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.818259756 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.205208057 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.308882805 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.361142982 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.214232219 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.198231087 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.316285926 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.204695349 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.255426717 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.204759495 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.59232626 seconds)
  done (took 364.809113577 seconds)
done (took 589.483409226 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.850048658 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.8262738 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.931078732 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.8280357 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.785159947 seconds)
  done (took 10.350020627 seconds)
done (took 11.479947837 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.37214903 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.3707961 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.255268131 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.374152289 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.681111709 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.38772873 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.354988199 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.220253502 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.29658772 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.272647105 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.298743031 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.248399713 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.232224079 seconds)
  done (took 18.495219935 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.512703779 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.203778665 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.266883754 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.526599834 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.239307225 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.567793126 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.39892951 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.216270724 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.413353386 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.23190498 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.215510079 seconds)
  done (took 17.924430241 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.523440866 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.201831061 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.268756133 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.51320906 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.241581015 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.524474667 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.402986514 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.22441377 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.394419121 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.21601508 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.214974586 seconds)
  done (took 17.856941456 seconds)
done (took 55.406733841 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.240018162 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.364275013 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.22574857 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.213816941 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.209223925 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.209863804 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.215078431 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.210514908 seconds)
  done (took 11.022526367 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.20710605 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.206744652 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.206060556 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.209158089 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.206032594 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.2092629 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.207023435 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.210705105 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.20966603 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.209332542 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.207531834 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.207064154 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.207638174 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.209790863 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.209737169 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.209661284 seconds)
  done (took 20.465393848 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.208749263 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.208083666 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.207558128 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.207821917 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.206981918 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.208258966 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.20819404 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.20732861 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.208026865 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.207338609 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.207821716 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.207990483 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.207506655 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.207284878 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.208022947 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.208460083 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.20815071 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.20777304 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.212398998 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.208671151 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.208273847 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.208621169 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.209151669 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.209539874 seconds)
  done (took 30.13355893 seconds)
done (took 62.753239089 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.206782894 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.206076469 seconds)
  done (took 5.546460216 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.269187412 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.271232057 seconds)
  done (took 3.677134717 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.213068546 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.211186421 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.21284076 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.212229116 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.211709653 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.212973833 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.21123516 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.212419758 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.211821231 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.213834743 seconds)
  done (took 13.257769679 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.213415603 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.212597509 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.209302874 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.213122269 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.211986221 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.209619017 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.212310328 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.211536086 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.211677414 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.209310096 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.212558796 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.210553475 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.213382027 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.209699753 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.212321145 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.208893731 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.210544618 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.211146967 seconds)
  done (took 22.939623317 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.225648053 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.233559911 seconds)
  done (took 3.59470956 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.339685657 seconds)
    (2/7) benchmarking "second"...
    done (took 1.25266423 seconds)
    (3/7) benchmarking "month"...
    done (took 1.32031197 seconds)
    (4/7) benchmarking "year"...
    done (took 1.307166238 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.252237356 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.231681499 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.251954398 seconds)
  done (took 10.09162711 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.213852233 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.41742943 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.513119872 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.790096632 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.214406992 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.217503152 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.077971352 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.21672512 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.220262558 seconds)
  done (took 14.017620655 seconds)
done (took 74.259659592 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.207789344 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.224959297 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.213124428 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.238297447 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.546856506 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.240757911 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.21358207 seconds)
done (took 16.023059788 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.196634314 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.197815742 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.204748442 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.21188494 seconds)
  done (took 9.948318233 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.164996355 seconds)
    (2/2) benchmarking "read"...
    done (took 1.524917866 seconds)
  done (took 4.826938407 seconds)
done (took 15.912783811 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.214844566 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.213149575 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.215318435 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.213093343 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.215544365 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.213860593 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.212939408 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.215389597 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.215568785 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.215385716 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.2163092 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.215917499 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.215125996 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.212625255 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21375569 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.215532737 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215783456 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.214079826 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.212608317 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.213131919 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.213095446 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.216336057 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.213790917 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.21495116 seconds)
  done (took 30.286380152 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.217108794 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.214613551 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.216411175 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.217428774 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.215428415 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.215969793 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.216626152 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.213844279 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.217022096 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.217076546 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.214444227 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.214024007 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.215903801 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.213913868 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217251681 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.213537525 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.218452411 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.214516059 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.216225864 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.214231098 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.217164059 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.214452923 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.214665947 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.216311379 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.216089443 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.214882078 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.21887103 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.215049958 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.218097353 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.215336808 seconds)
  done (took 37.6138989 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.221763459 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.222805273 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.218787565 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.218117415 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.217531234 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.218327497 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.21707182 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.217974213 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.218007766 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.218457116 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.218327429 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.217731349 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.218532185 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.218023015 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.218219185 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.219184341 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.219201424 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.219831045 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.218438981 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.218612956 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.218760961 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.218683957 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.218116749 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.219579375 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.21819595 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.218762465 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.21901832 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.22024374 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.220090163 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.220642426 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.219626053 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.219555988 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.219225075 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.219227481 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.221052171 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.220946228 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.224479537 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.226389823 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.220067053 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.219186123 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.220335669 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.220347127 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.220459998 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.219362163 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.220547481 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.220663657 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.220135629 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.220078208 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.220146494 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.218971176 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.219163344 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.220577496 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.220826604 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.22012703 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.221118876 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.219642262 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.221377478 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.220549637 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.220631064 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.221182062 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.22091455 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.22101801 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.220408584 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.221455974 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.221499204 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.221560703 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.220674838 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.220761191 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.220583385 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.220574354 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.221650976 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.221841858 seconds)
  done (took 88.97886347 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.221159454 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.220617132 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.219344922 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.218999026 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.220660166 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.220902548 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.219547732 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221761345 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218472766 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.223336558 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222700209 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.21956413 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.220089834 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.22251361 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.221767388 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.219212358 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.222720355 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.219418168 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.223287342 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.222587339 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.222406241 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.221165712 seconds)
  done (took 28.006574667 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.222263106 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.225139552 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.220641364 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.226099647 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.222656229 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.223796991 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.222985079 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.223860777 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222413134 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.22268488 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.22211051 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223038595 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.223320238 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221761225 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.222120512 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.223830976 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.224199672 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.222635473 seconds)
  done (took 23.160806582 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.223653116 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.223492843 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.224636424 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.223161624 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.22193409 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.22519801 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.222558032 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.224902235 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.22440276 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.223374087 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.226269042 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.223819595 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.225262888 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.223303436 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226287644 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.223335065 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.224361811 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221366716 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.225751915 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.222752993 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.222633485 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.225346838 seconds)
  done (took 28.075308971 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.226037431 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.224886794 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.223696224 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.223732534 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.223145839 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.22590425 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.22604538 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.223562793 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.227983323 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.22595193 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.22366904 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.226117403 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.224691759 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.223791716 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.224579335 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.224628565 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.22565967 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.223928233 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.225712771 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.22356016 seconds)
  done (took 25.645763618 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.226805044 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.225891005 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.227556524 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.227729628 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.226685497 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.227433395 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.228079148 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.22770418 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.228215074 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.226581587 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.227819154 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.22801859 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.228198051 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.228208899 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.227596974 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.228602078 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.227418833 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.228679043 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.228640592 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.229787151 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.229641614 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.228341533 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.229310844 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.229824509 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.22943559 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.229314128 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.229916428 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.226830964 seconds)
  done (took 35.538135467 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.228210339 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.229151188 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.226389434 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.226650365 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.227764708 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.227323011 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.227605692 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.22924959 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.229553239 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.226376179 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.229439463 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.228262289 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.230731085 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.230225731 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.229842704 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.231362959 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.230689696 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.229141097 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.229398486 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227960178 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.230087283 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231261413 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.231481339 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.228256869 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227218231 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.231310033 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.227853892 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.229317585 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.230506252 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.229293087 seconds)
  done (took 38.024034612 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.275286888 seconds)
    (2/2) benchmarking "in"...
    done (took 1.276652902 seconds)
  done (took 3.705428742 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.227481142 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.230944208 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.230662342 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.229230967 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.228784777 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.231516181 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.232187796 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.228982016 seconds)
  done (took 10.993032102 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.231810004 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.232311332 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.230851191 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.232145327 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.231841991 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.232099792 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.239597429 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.248443701 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.232699015 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.232637949 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.237730296 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.238978086 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.234675521 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.233738905 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.232991498 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.235501238 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.232983512 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.230983397 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.2325636 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.233909072 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.232227764 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.236987255 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.235833092 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.231972905 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.234872564 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.243993368 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.237162572 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.234682853 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.234711501 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.237876033 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.233800353 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.231450992 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.23167167 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.232507467 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.23299412 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.23413108 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.243531232 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.254991933 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.241331902 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.233856756 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.234236139 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.230463917 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.238048326 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.236601546 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.23756273 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.235361697 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.235112129 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.232927553 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.23433507 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.238648406 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.238722202 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.235309959 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.232828779 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.238810955 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.237398982 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.242156856 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.251814877 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.239009477 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.243744265 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.24561636 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.247304112 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.243251869 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.23895299 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.23534682 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.24548892 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.25702981 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.243368415 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.248917473 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.23252352 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.233809738 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.241556624 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.246361082 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.25930455 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.234932654 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.235688901 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.227039313 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.227435712 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.227373605 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.23429917 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.247250855 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.226862781 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.227806384 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.236220936 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.240088687 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.221394953 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.219346694 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.2197172 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.218663815 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.22105394 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.230976874 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.239422509 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.213461556 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.212891111 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.214072836 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.21435468 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.214291624 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.212822999 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.214446722 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.211045601 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.214223741 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.209438289 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.213035516 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.217523175 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.210756866 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.209484905 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.215058509 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.210891503 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.213149547 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.212263 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.211251564 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.209659644 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.211074467 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.214814295 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.208402413 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.213164658 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.217222029 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.207677855 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.209775603 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.209111555 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.209365933 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.217435012 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.230157259 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.210394804 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.209709847 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.212836939 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.217839197 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.208407827 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.212215671 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.208938065 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.207798404 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.207175366 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.210905849 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.210997492 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.209998289 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.210570984 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.210120114 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.207009481 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.208953571 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.20957035 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.211258654 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.21095541 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.210946214 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.210782229 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.21278102 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.209221621 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.213020909 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.214684593 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.210447085 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.212477579 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.211575794 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.209689013 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.211679913 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.211561579 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.210372226 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.211333174 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.210693023 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.210781894 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.2120788 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.212342623 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.211787007 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.211880441 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.211982544 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.214480784 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.213034094 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.215120685 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.211947942 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.208509104 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.211388886 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.213149921 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.212136964 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.212237723 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.211128118 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.215203304 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.218125818 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.212701596 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.213656807 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.214185058 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.212594073 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.212477541 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.213380047 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.216434239 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.220677777 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.211088861 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.217891382 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.212120814 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.211455041 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.212769577 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.213040678 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.213028061 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.214353973 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.213610991 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.215724412 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.221452567 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.233367714 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.211358803 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.214236491 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.211672785 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.213999513 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.211463912 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.209442066 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.20948522 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.208631438 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.208624327 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.20979672 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.209955351 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.209235002 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.209341877 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.206794388 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.206687665 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.206234637 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.207196845 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.207232412 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.20843963 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.204137212 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.208762622 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.206166666 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.205236642 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.203062144 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.203446896 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.20586776 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.207097787 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.205958349 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.212523854 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.201510668 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.205009665 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.205667191 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.20285775 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.202487027 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.203921089 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.205771649 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.203529165 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.209875273 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.219583473 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.204809969 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.209537719 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.219923429 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.204135107 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.20608988 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.20466082 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.201548949 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.207750386 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.210271297 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.204510963 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.205735063 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.205175426 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.204633823 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.205447347 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.210194571 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.201717609 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.204996897 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.205829071 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.206022473 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.202778062 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.205350394 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.205476842 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.206258432 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.206920501 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.205980364 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.206358631 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.206410779 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.205292097 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.20641558 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.205801501 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.2080551 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.211335669 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.210694001 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.20543287 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.207622532 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.207863779 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.208977775 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.205912992 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.20610953 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.207440313 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.217150004 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.228414784 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.212191439 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.208070524 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.207681418 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.212008241 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.208833009 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.209900179 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.205122287 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.204684611 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.204952716 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.204715269 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.202782023 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.204619605 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.205112315 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.20645676 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.206630043 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.206453086 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.203964594 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.203099794 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.202721087 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.202705305 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.203751305 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.202834616 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.205725883 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.202995668 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.203472697 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.199819573 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.202967504 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.208762688 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.21853034 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.202257789 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.201622202 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.200890229 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.200213895 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.202394235 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.201517812 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.204326208 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.206390886 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.203853531 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.20997446 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.203690837 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.210576514 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.202227944 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.205537481 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.209280912 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.198952858 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.20129213 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.20314454 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.202845343 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.208048448 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.218279204 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.204641252 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.205065517 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.202694221 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.202294896 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.205276322 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.203706297 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.202549222 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.202332997 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.210277445 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.221623146 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.205768589 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.204651868 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.20203769 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.203039342 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.2038317 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.202345023 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.206225278 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.203398665 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.204453851 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.203551738 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.203657957 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.203525522 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.205323911 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.204963122 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.200936326 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.203998703 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.21108274 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.221834492 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.207431136 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.204894313 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.210306005 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.20414052 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.211216549 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.22117983 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.204951332 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.204373963 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.204426798 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.204761719 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.204767025 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.20635684 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.20456748 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.205790067 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.209122171 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.204308407 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.206106889 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.205731603 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.206524997 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.205507547 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.214784969 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.225031764 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.207880365 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.208948161 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.203122522 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.207253679 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.20892403 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.206784361 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.205065579 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.208918235 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.214808217 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.213443465 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.205510907 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.206155297 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.206512741 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.205647254 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.206547158 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.205842184 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.206593597 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.206603746 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.206148875 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.206774774 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.209802572 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.206606965 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.207470709 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.208771642 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.207633825 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.216090636 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.207363732 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.208263922 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.206295217 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.208105286 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.207067303 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.206938679 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.20820271 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.208466933 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.207855728 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.209554807 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.213918462 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.212909785 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.210331509 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.208019107 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.20787007 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.206259348 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.208342881 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.209280739 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.209493866 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.210614136 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.210589192 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.207631466 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.209146703 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.207969717 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.209831609 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.209021243 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.208813848 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.210963356 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.213965998 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.208849982 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.207293629 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.20811214 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.209258856 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.20783339 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.208849153 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.214841923 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.211922071 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.218119698 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.21700112 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.212129062 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.210367033 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.211446935 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.215594054 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.208517891 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.210736589 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.209610433 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.2105608 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.210045971 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.212227819 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.210069949 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.215808326 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.20977767 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.210039687 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.219296365 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.226746604 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.208419372 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.208447715 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.211682902 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.208330959 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.206669162 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.208769903 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.208468494 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.21622578 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.222208988 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.2055321 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.206201094 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.203338739 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.205330368 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.208675872 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.206761225 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.206013314 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.197685994 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.202783437 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.201144347 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.202214708 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.198866263 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.201088666 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.201575039 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.206183134 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.204424849 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.196897279 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.20045805 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.198644569 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.200246137 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.199210554 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.201625314 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.198774062 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.198722607 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.199677285 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.199155423 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.20060716 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.203393524 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.198640209 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.200234535 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.201242881 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.200660212 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.204576799 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.207086478 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.207384636 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.198834029 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.200289096 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.201260152 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.202120442 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.200351721 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.20081677 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.200074508 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.201998307 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.199872057 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.201254141 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.201231122 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.202794369 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.214900544 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.220295074 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.201464341 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.201347386 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.203702835 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.20238436 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.199729007 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.201571693 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.203616352 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.204008976 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.207170129 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.201428809 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.207574641 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.21889569 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.203065214 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.204961988 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.205099205 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.207596206 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.204832187 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.203305525 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.203293437 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.20758403 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.215725655 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.203332682 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.212021142 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.22797037 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.219850014 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.203296324 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.203103225 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.203147997 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.203835108 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.204388149 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.203512764 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.203898351 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.204747229 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.203216898 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.203441898 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.207615396 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.205498355 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.205279652 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.203719417 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.203245285 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.205162873 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.201636096 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.203951249 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.204149771 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.204080055 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.204857721 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.203172164 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.205514115 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.215901502 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.228585034 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.205247026 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.205591816 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.203290606 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.207483082 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.207382498 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.213595555 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.210920151 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.20574391 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.205142024 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.206776487 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.204644671 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.206114695 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.204451046 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.20607774 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.205157051 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.202727804 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.215339364 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.212608719 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.210795017 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.20485635 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.207510783 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.205932207 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.206408947 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.206812466 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.206965743 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.20692163 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.208199117 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.208561577 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.20703836 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.2069551 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.208505048 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.212001161 seconds)
  done (took 723.727278018 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.205757418 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.204407431 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.204212345 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.20393514 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.203833896 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.205169635 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.203904901 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.20371337 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.204513301 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.204671229 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.204218061 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.204481227 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.204483092 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.205313211 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.205010236 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.204984761 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.205105193 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.203745935 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.205100089 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.204953374 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.206606422 seconds)
  done (took 26.428007924 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.207469709 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.20592023 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.205314515 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.207987764 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.20532386 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.208238695 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.205370414 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.208430923 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.207744885 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.20545898 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.208893713 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.207948618 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.206015694 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.205356619 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.206375699 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.209071075 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.209800387 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.205760304 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.209531258 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.20733216 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.209089709 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.207054603 seconds)
  done (took 27.688736747 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.210126559 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.20957838 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.20971177 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.206411005 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.210689677 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.208002248 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.209930203 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.210748829 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.210260396 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.210293069 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.20912357 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.210309627 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.216601751 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.214579732 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.210500168 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.209643867 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.210713711 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.20989828 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.210517298 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.207695282 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.215456354 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.207841457 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.20869824 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.209747556 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.211208609 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.211934282 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.211236466 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.211240499 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.211361156 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.214538326 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.211863414 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.210938188 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.213937099 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.209584768 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.212281831 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.214241786 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.211798348 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.208620106 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.211813366 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.221414978 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.227723139 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.212225678 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.216208462 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.211030574 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.211299086 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.213603922 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.21664189 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.208911781 seconds)
  done (took 59.296021325 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.212067692 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.212105605 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.209955964 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.212677648 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.212572238 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.212587616 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.212954377 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.212805178 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.210190954 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.210143812 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.213491639 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.210918387 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.210462181 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.213904928 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.213118662 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.211500624 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.211164033 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.211265645 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.211785955 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.210189082 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.211140358 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.213757845 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.214259662 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.213239634 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.21271318 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.212107512 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.211061131 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.213971745 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.211693445 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.211154177 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.213731336 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.213487117 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.214720143 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.211590661 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.211832503 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.213784591 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.215002381 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.212343925 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.215176744 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.213247835 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.215495774 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.216752908 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.216832244 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.215689206 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.211878735 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.212150068 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.211760894 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.213848491 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.212274962 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.216535918 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.21525582 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.212637783 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.215914111 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.212822652 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.21586042 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.21575427 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.213849314 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.213657676 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.216363166 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.214157799 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.214013699 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.216260246 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.214387074 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.215993686 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.216103463 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.213438664 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.214662323 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.217532645 seconds)
  done (took 83.643032881 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.216934768 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.217123248 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.216114267 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.217668493 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.217383514 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.217103704 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.217215338 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.216547872 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.216869531 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.216503022 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.216739905 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.218039814 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.216482239 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.217601801 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.216497824 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.218151643 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.216028446 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.217479425 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.218471929 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.216790638 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.216694757 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.217933211 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.217919695 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.218267499 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.219049754 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.217501338 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.217372901 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.218110952 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.218915232 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.218031446 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.216839498 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.219061297 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.218622685 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.217742211 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.218922117 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.218243172 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.218440802 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.218540546 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.218742017 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.21926272 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.218190861 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.219107429 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.219040709 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.218896657 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.218514981 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.219671622 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.220393746 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.219416999 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.220702701 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.219582431 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.221115325 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.219977292 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.218600874 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.220317047 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.21986105 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.219531212 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.220105189 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.220788615 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.220311264 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.221106112 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.220187796 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.221185271 seconds)
  done (took 76.683389971 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.22089967 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.220390771 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.217960975 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.21783682 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.220972038 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.218587156 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.220128455 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.221302521 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.220660927 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.221537902 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221470773 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.217910379 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220005436 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222151861 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.218499625 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.219724248 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.218161068 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.219525171 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.221456565 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.218776264 seconds)
  done (took 25.539381073 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.218495911 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.222433457 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.218387123 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.218870167 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.222151066 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.219037176 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.221739243 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222413286 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.219704116 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.221105334 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.222869219 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.222488552 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.219490768 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.219519981 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.221980229 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.220104847 seconds)
  done (took 20.672685144 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.219840946 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.221735157 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.222176319 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.222987097 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.220398123 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.220677812 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.222507605 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.220265412 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.22000514 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.223356434 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.222046579 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.221757741 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.222231804 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.223216186 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.22020564 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.22442907 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.220593003 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.221041379 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.22422771 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.22441141 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.221397931 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.220726168 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.223927065 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.223623059 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.223135627 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.222656484 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.221329826 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.22103461 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.223298205 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.224961314 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.222058868 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.223065159 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.222519991 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.222512669 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.224639526 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.221998178 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.223629905 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.223684986 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.224617616 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.225420934 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.224816979 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.222112748 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.224448429 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.225070019 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.223680547 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.224729555 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.223138212 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.2215055 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.223822121 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.223040567 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.224983608 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.225800436 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.225245974 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.225090865 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.227935121 seconds)
  done (took 68.408354375 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.225531172 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.225738043 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.223318953 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.225296592 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.225619288 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.223477913 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.227614055 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.226514351 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.22297364 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.226222245 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.224339601 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.228731438 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.225234773 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.226227222 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.22340479 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.225607202 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.224276937 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.223376961 seconds)
  done (took 23.199699134 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.224857279 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.224255354 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.226935214 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.223893419 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.224139523 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.227557065 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.224257463 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.227037366 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.227072172 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.224197907 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224744284 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.226242376 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.227410473 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.227001681 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.225010015 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225369262 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.227648195 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.227942905 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.224756211 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.224600156 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.227863837 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.226695978 seconds)
  done (took 28.116643998 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.227570772 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.226926511 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.226795703 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.242965025 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.243180185 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.226854954 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.22791934 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.227665959 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.248465214 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.277646883 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.272075728 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.246506726 seconds)
  done (took 16.042321244 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.228077714 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.230688277 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.228599788 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.229834724 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.232098831 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.228885726 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.228389082 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.229416292 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.232195572 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.229301165 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.229716499 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.231618204 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.231912962 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.230141362 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.23356713 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.233229685 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.229542502 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.228807367 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.229604775 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.231664781 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.230650021 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.232670882 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.2307052 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.229315824 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.229930113 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.230094909 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.231942308 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.229306497 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.230843991 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.231467788 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.232527798 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.229162294 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.232582957 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.231208898 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.233111451 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.232681122 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.230855796 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.233720779 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.232951015 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.23176204 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.2333324 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.234146835 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.233357668 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.230941797 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.233014024 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.232087812 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.231917493 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.232079984 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.231675169 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.234131273 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.233108826 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.231665735 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.233997015 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.234066775 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.234303377 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.234354544 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.231857702 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.23186999 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.234694678 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.233047609 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.232839073 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.23451519 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.232186575 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.232444014 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.234257712 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.232606317 seconds)
  done (took 82.446573944 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.232866637 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.232007645 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.231713012 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.233556947 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.233080599 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.232711241 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.232550609 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.233136348 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.23277259 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.23331303 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.235933445 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.233251612 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.23269817 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.233474808 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.233273977 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.233102657 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.234977491 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.23404947 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.233746225 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.236105383 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.234778107 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.233184733 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.233473805 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.234032525 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.233970243 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.23727396 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.234292786 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.234059546 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.233881426 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.234132807 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.233807914 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.23413785 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.235231769 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.234466268 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.234784138 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.234814689 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.235394654 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.234849155 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.234860999 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.236550908 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.235428096 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.237038314 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.234595014 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.235097201 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.235970868 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.234893048 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.234974728 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.23505579 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.235289369 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.235507213 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.235399651 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.235840897 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.234731676 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.235080173 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.236376367 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.236196754 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.235211995 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.236379532 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.235997639 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.238334869 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.235467856 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.235444678 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.238919962 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.236973604 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.236413775 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.236355939 seconds)
  done (took 82.650138876 seconds)
done (took 1695.708665455 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.399612993 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.35380381 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.238270694 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.246874603 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.238173972 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.232336592 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.248713614 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.236757719 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.238062441 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.237894793 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.238189038 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.422635874 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.294722981 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.238748197 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.238757638 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.331268598 seconds)
  done (took 25.594012898 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.262636835 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.245030165 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.349397322 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.266935922 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.266622941 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.418022017 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.299475147 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.250515227 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.403941742 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.289899224 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.237915188 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.271607278 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.247075 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.240011905 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.267115575 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.416833381 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.479850797 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.247405951 seconds)
  done (took 27.620466557 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.655318324 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.243141549 seconds)
  done (took 5.062229349 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.263018553 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.245265553 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.246656578 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.244248806 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.237323992 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.243049115 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.244895111 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.241956656 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.239479047 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.366307444 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.25396315 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.255849841 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.26500594 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.246587717 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.243358246 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.280905994 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.420125929 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.243875372 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.244181607 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.251720643 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.246723205 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.327597719 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.291226031 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.249552106 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.36139533 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.246333167 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.255167918 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.252901182 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.380828927 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.244725383 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.245277272 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.247507691 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.24795524 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.105300696 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.762593411 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.245003551 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.269793379 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.256529702 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.243716161 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.385049633 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.249684163 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.253387252 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.240534351 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.741520398 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.393469573 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.364593728 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.255787079 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.256519248 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.2497734 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.306633314 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.252852293 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.249700908 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.28982556 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.015067855 seconds)
  done (took 80.427057584 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.248177793 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.240032193 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.41530176 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.266896504 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.240256842 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.247347987 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.240559525 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.509460133 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.245681693 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.252225323 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.556593881 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.768592051 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.262044468 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.280992531 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.08267605 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.288765644 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.240192441 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.241920406 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.258409358 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.244265152 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.773514896 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.248501822 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.249187927 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.500670346 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.278503073 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.723790318 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.246953042 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.248163536 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.250238761 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.243434767 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.729856882 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.273545688 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.303880052 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.243830508 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.493517054 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.600175029 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.575374358 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.248904547 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.269593291 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.247752334 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.261388964 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.716937699 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.579776473 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.243384233 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.259765334 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.723151567 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.244861907 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.251256501 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.250684975 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.487712806 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.244235752 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.244516641 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.243901181 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.250633277 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.244283748 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.310123339 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.324171096 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.720604422 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.243703929 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.256800817 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.245043473 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.245720296 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.253095682 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.244351934 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.244724239 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.583144636 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.420584845 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.252760107 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.582258444 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.726592503 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.266477908 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.793824176 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.260164978 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.269881031 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.255471651 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.244584294 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.25146172 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.718616189 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.26813442 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.244954512 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.567241372 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.249577638 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.56022439 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.266221965 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.266806799 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.815875409 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.254323613 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.250178649 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.245049403 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.251654545 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.252884418 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.248963004 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.505523574 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.283019835 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.246087215 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.246149897 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.295794223 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.25423585 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.246575856 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.249509333 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.799178345 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.270651683 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.246426047 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.247356357 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.246188144 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.25281558 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.247799061 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.247775314 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.505432339 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.253227257 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.254601997 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.249172273 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.247834173 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.249894784 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.490568038 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.252797073 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.537664044 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.249578077 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.247028356 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.258442372 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.247682329 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.300134763 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.248784119 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.250076858 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.153964422 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.54687019 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.270517075 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.25435156 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.247580182 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.252633906 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.254632001 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.254513148 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.270556713 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.249300944 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.9765053 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.287584289 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.273250952 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.248628577 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.250478223 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.248923994 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.254354539 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.252294133 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.533837555 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.509828142 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.399474978 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.251539738 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.248267769 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.960961355 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.310882779 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.428632166 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.27503408 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.249459778 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.491552041 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.457422808 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.251106011 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.249988778 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.252005532 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.505122844 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.254858316 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.548544233 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.758673067 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.265117808 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.252602547 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.981407968 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.971736918 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.25776311 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.251692486 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.566865381 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.266227399 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.251001292 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.250907054 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.251314039 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.250695442 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.254765885 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.254202498 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.251217597 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.250297297 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.384089695 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.438614717 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.275107194 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.257452218 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.728845753 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.265568301 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.250956141 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.267113319 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.25629918 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.252314753 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.344158375 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.258511634 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.286794912 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.253064414 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.261453318 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.793731006 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.251035786 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.259210711 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.440711178 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.913827619 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.26846497 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.252637274 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.25252457 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.131141959 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.753363275 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.274502142 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.54447508 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.253227944 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.290611901 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.253618511 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.341646941 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.755516885 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.254492659 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.253752779 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.870359048 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.268991699 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.778690312 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.25473448 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.254515067 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.809211421 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.268562636 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.255917611 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.253113867 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.27238033 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.549369803 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.261121686 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.275564569 seconds)
  done (took 478.490114001 seconds)
done (took 618.351580251 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.253745479 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.260951442 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.248797849 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.260854765 seconds)
  done (took 10.203822526 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.264428946 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.260103956 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.262729975 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.262554939 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.262592949 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.262267457 seconds)
  done (took 8.754854876 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.255547983 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.262448722 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.262367215 seconds)
  done (took 7.959625249 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.454740146 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.285141369 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.581471067 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.282581123 seconds)
  done (took 8.78561912 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.259970089 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.259703003 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.26006396 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.261179818 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.262486597 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.264503406 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.26235655 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.26151401 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.263736553 seconds)
  done (took 12.534345028 seconds)
done (took 49.417790139 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.598830201 seconds)
    (2/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.263504305 seconds)
    (3/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.347271516 seconds)
    (4/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.261412283 seconds)
    (5/286) benchmarking ("sort", Float32, true)...
    done (took 2.262928046 seconds)
    (6/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.493231583 seconds)
    (7/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.88706395 seconds)
    (8/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.301506337 seconds)
    (9/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.262345151 seconds)
    (10/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.28874304 seconds)
    (11/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.339999547 seconds)
    (12/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.302811317 seconds)
    (13/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.352025661 seconds)
    (14/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.278508577 seconds)
    (15/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.736563933 seconds)
    (16/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.266146085 seconds)
    (17/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.065296241 seconds)
    (18/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.371888223 seconds)
    (19/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.243086161 seconds)
    (20/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.243044249 seconds)
    (21/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.395643825 seconds)
    (22/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.184808201 seconds)
    (23/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.272546222 seconds)
    (24/286) benchmarking ("sort", Int8, true)...
    done (took 2.278132415 seconds)
    (25/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.259641102 seconds)
    (26/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.241974923 seconds)
    (27/286) benchmarking ("sort", Int64, true)...
    done (took 2.270068155 seconds)
    (28/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.353223793 seconds)
    (29/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.359709288 seconds)
    (30/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.682433367 seconds)
    (31/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.312779552 seconds)
    (32/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.615634461 seconds)
    (33/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.07478821 seconds)
    (34/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.283770933 seconds)
    (35/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.243252599 seconds)
    (36/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.281173984 seconds)
    (37/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.370542995 seconds)
    (38/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.454917384 seconds)
    (39/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.51830084 seconds)
    (40/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.2560914 seconds)
    (41/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.991453434 seconds)
    (42/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.275309475 seconds)
    (43/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.354967362 seconds)
    (44/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.255946263 seconds)
    (45/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.446692251 seconds)
    (46/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.251727963 seconds)
    (47/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.614897724 seconds)
    (48/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.472442474 seconds)
    (49/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.721462049 seconds)
    (50/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.320389775 seconds)
    (51/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.273239742 seconds)
    (52/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.253387016 seconds)
    (53/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.250784966 seconds)
    (54/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.464658932 seconds)
    (55/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.27981374 seconds)
    (56/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.262523582 seconds)
    (57/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.264865156 seconds)
    (58/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.250955047 seconds)
    (59/286) benchmarking ("sort", Float64, false)...
    done (took 2.280025291 seconds)
    (60/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.246931185 seconds)
    (61/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.159524349 seconds)
    (62/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.660702012 seconds)
    (63/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.623962007 seconds)
    (64/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.251805989 seconds)
    (65/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.248501566 seconds)
    (66/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.487791545 seconds)
    (67/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.763071431 seconds)
    (68/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.292755508 seconds)
    (69/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.659172135 seconds)
    (70/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.265784986 seconds)
    (71/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.878948172 seconds)
    (72/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.255805424 seconds)
    (73/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.25193715 seconds)
    (74/286) benchmarking ("sort", Int64, false)...
    done (took 2.264795497 seconds)
    (75/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.030863298 seconds)
    (76/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.003854254 seconds)
    (77/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.246068609 seconds)
    (78/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.262951853 seconds)
    (79/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.253036345 seconds)
    (80/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.274797053 seconds)
    (81/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.274451263 seconds)
    (82/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.258839608 seconds)
    (83/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.267502716 seconds)
    (84/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.267659643 seconds)
    (85/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.278923478 seconds)
    (86/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.332013302 seconds)
    (87/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.497736707 seconds)
    (88/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.450919125 seconds)
    (89/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.115069878 seconds)
    (90/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.269346458 seconds)
    (91/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.247912921 seconds)
    (92/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.11734579 seconds)
    (93/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.296835354 seconds)
    (94/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.290733938 seconds)
    (95/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 2.267475111 seconds)
    (96/286) benchmarking ("sort", BigInt, true)...
    done (took 2.267566566 seconds)
    (97/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 2.270934407 seconds)
    (98/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.253670828 seconds)
    (99/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.367089295 seconds)
    (100/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.474135869 seconds)
    (101/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.358270173 seconds)
    (102/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.026217602 seconds)
    (103/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.253902442 seconds)
    (104/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.839764121 seconds)
    (105/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.618055754 seconds)
    (106/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.345635472 seconds)
    (107/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.133914998 seconds)
    (108/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.287753564 seconds)
    (109/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.256530136 seconds)
    (110/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.638032593 seconds)
    (111/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.309419231 seconds)
    (112/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.251249287 seconds)
    (113/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.998663815 seconds)
    (114/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.860749585 seconds)
    (115/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.242749848 seconds)
    (116/286) benchmarking ("sort", Bool, false)...
    done (took 1.784334255 seconds)
    (117/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.290595684 seconds)
    (118/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.399461237 seconds)
    (119/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.061028306 seconds)
    (120/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.544088675 seconds)
    (121/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.190269783 seconds)
    (122/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.267034277 seconds)
    (123/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.278397698 seconds)
    (124/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.275496993 seconds)
    (125/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.979826816 seconds)
    (126/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.518146882 seconds)
    (127/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.261427502 seconds)
    (128/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.306866275 seconds)
    (129/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.25012955 seconds)
    (130/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.092498169 seconds)
    (131/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.346316403 seconds)
    (132/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.280261456 seconds)
    (133/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.367185043 seconds)
    (134/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.62227525 seconds)
    (135/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.250053267 seconds)
    (136/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.025159022 seconds)
    (137/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.289297498 seconds)
    (138/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.262676069 seconds)
    (139/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.297092756 seconds)
    (140/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.250725937 seconds)
    (141/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.249335022 seconds)
    (142/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.25628135 seconds)
    (143/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 2.284440852 seconds)
    (144/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.25617335 seconds)
    (145/286) benchmarking ("sort", Float32, false)...
    done (took 2.264922832 seconds)
    (146/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.262645735 seconds)
    (147/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.404099318 seconds)
    (148/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.367920149 seconds)
    (149/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.289096991 seconds)
    (150/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.846435282 seconds)
    (151/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.258330253 seconds)
    (152/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.295322422 seconds)
    (153/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.607673301 seconds)
    (154/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.278334991 seconds)
    (155/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.257290759 seconds)
    (156/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.282392478 seconds)
    (157/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.257862287 seconds)
    (158/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.256529385 seconds)
    (159/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.273350749 seconds)
    (160/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.252658843 seconds)
    (161/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.27268084 seconds)
    (162/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.355244345 seconds)
    (163/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.264217826 seconds)
    (164/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.516506773 seconds)
    (165/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.267262588 seconds)
    (166/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.3653259 seconds)
    (167/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.144645521 seconds)
    (168/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.25136177 seconds)
    (169/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.370018745 seconds)
    (170/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.288581965 seconds)
    (171/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.273680144 seconds)
    (172/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.987379375 seconds)
    (173/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.259145573 seconds)
    (174/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.346680262 seconds)
    (175/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.35020971 seconds)
    (176/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.369053777 seconds)
    (177/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.252478312 seconds)
    (178/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.298750766 seconds)
    (179/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.761791788 seconds)
    (180/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.068040361 seconds)
    (181/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.314505306 seconds)
    (182/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.256628889 seconds)
    (183/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.290437736 seconds)
    (184/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.25373775 seconds)
    (185/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.290087699 seconds)
    (186/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.260034724 seconds)
    (187/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.298745988 seconds)
    (188/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.368801675 seconds)
    (189/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.252976967 seconds)
    (190/286) benchmarking ("sort", Bool, true)...
    done (took 2.273527153 seconds)
    (191/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.253778044 seconds)
    (192/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.273277279 seconds)
    (193/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.326472401 seconds)
    (194/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.267423296 seconds)
    (195/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.411211164 seconds)
    (196/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.253589644 seconds)
    (197/286) benchmarking ("sort", Float64, true)...
    done (took 2.274886268 seconds)
    (198/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.521142126 seconds)
    (199/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.205361574 seconds)
    (200/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.483542171 seconds)
    (201/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 2.279453445 seconds)
    (202/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.298838958 seconds)
    (203/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.379602434 seconds)
    (204/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.320355416 seconds)
    (205/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.277461341 seconds)
    (206/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.291499421 seconds)
    (207/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.253769413 seconds)
    (208/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.790396813 seconds)
    (209/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.254219513 seconds)
    (210/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.255863496 seconds)
    (211/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.181718957 seconds)
    (212/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.290906395 seconds)
    (213/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.160324148 seconds)
    (214/286) benchmarking ("sort", BigInt, false)...
    done (took 2.268488619 seconds)
    (215/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.255618612 seconds)
    (216/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.282138553 seconds)
    (217/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.314940495 seconds)
    (218/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.098693846 seconds)
    (219/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.392088288 seconds)
    (220/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.27556128 seconds)
    (221/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.16173502 seconds)
    (222/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.262213714 seconds)
    (223/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.278317155 seconds)
    (224/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.284288185 seconds)
    (225/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.321487779 seconds)
    (226/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.264992917 seconds)
    (227/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.310343335 seconds)
    (228/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.854740696 seconds)
    (229/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.905214402 seconds)
    (230/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.381360923 seconds)
    (231/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.135659885 seconds)
    (232/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.381805532 seconds)
    (233/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.257254037 seconds)
    (234/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.261637101 seconds)
    (235/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.27819616 seconds)
    (236/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.277546576 seconds)
    (237/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.288038878 seconds)
    (238/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.334935229 seconds)
    (239/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 2.268179958 seconds)
    (240/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.479945109 seconds)
    (241/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.284782952 seconds)
    (242/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.395414113 seconds)
    (243/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.83551425 seconds)
    (244/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.26424652 seconds)
    (245/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.304688882 seconds)
    (246/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.257809893 seconds)
    (247/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.271950462 seconds)
    (248/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.103434102 seconds)
    (249/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.277289447 seconds)
    (250/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.301415753 seconds)
    (251/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.657091628 seconds)
    (252/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.378122119 seconds)
    (253/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.983145512 seconds)
    (254/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.358012562 seconds)
    (255/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.674658918 seconds)
    (256/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.019284166 seconds)
    (257/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.359800656 seconds)
    (258/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.257101715 seconds)
    (259/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.321116876 seconds)
    (260/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.282946588 seconds)
    (261/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.296739362 seconds)
    (262/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.260361433 seconds)
    (263/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.278384323 seconds)
    (264/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.282457423 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.354141782 seconds)
    (266/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.334993914 seconds)
    (267/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.353415935 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.384722226 seconds)
    (269/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.668285406 seconds)
    (270/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.284390962 seconds)
    (271/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.274272596 seconds)
    (272/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.274930667 seconds)
    (273/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.264435021 seconds)
    (274/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.273159536 seconds)
    (275/286) benchmarking ("sort", Int8, false)...
    done (took 2.278265771 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.313672499 seconds)
    (277/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.256812401 seconds)
    (278/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.273648048 seconds)
    (279/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.278916928 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.302389798 seconds)
    (281/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.298273905 seconds)
    (282/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.273033677 seconds)
    (283/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.259769141 seconds)
    (284/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.276305299 seconds)
    (285/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.299871624 seconds)
    (286/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.299550805 seconds)
  done (took 546.713225618 seconds)
done (took 547.892172184 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.306766492 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.30197887 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.284922878 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.30582793 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.396342453 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.460854982 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.294851398 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.287581698 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.331867097 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.334455365 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.282277209 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.459167063 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.286367506 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.285369336 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.285686118 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.301116734 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.287066152 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.285288686 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.301661987 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.294883922 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.301750967 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.285852725 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.3367226 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.460754794 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.290154681 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.287932853 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.288453595 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.306009755 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.397381158 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.288782668 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.289128221 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.296927362 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.28947383 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.284219768 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.281298433 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.306537401 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.29804459 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.296569501 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.289538087 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.317945631 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.276347971 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.292586596 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.287343149 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.289351471 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.289080646 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.291531351 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.288047048 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.295795104 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.300294848 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.302356868 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.278206123 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.308713006 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.290295616 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.289593911 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.298303725 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.286745096 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.291371021 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.305408216 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.307077401 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.306890136 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.277503222 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.291986844 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.28899959 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.304751333 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.294707113 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.283484201 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.282539237 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.292930507 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.277070084 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.314801931 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.28408657 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.295928843 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.29117828 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.301858617 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.320103921 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.277275353 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.2998634 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.28943259 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.295453865 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.287847655 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.299260807 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.302615665 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.295954595 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.291871982 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.303340849 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.46599775 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.299729943 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.29103625 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.299965287 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.307860174 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.297471309 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.300852639 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.293549239 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.285787704 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.300069048 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.294306425 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.29282125 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.293910181 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.296187761 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.302230123 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.279891918 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.316684152 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.288470857 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.287512708 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.2916531 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.304526711 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.281510302 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.299358599 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.315539357 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.339324126 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.294144931 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.283242617 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.294771137 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.310425792 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.300740358 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.295887405 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.288344046 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.282064245 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.281134709 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.315066795 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.294056582 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.289534919 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.310541262 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.294788836 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.289817812 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.280717044 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.295312599 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.309111089 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.414409825 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.304027214 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.323644434 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.2913573 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.296366404 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.326057732 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.309884037 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.324537857 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.29595043 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.310300619 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.310594059 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.291338177 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.303847698 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.305755489 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.296461058 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.300136241 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.289102027 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.326883371 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.307193509 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.308055196 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.315556519 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.414444221 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.291953872 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.286087625 seconds)
done (took 215.469594724 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.352083243 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.289467778 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.374721041 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.290078058 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.387832746 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.388058582 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.28839807 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.28700409 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.287245728 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.663883191 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.288253853 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.288687303 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.287398758 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.287455937 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.371705693 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.29120961 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.288199172 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.628545385 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.291122841 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.360979507 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.287763714 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.289132124 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.289662814 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.674708509 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.290298156 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.285593391 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.362624966 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.292193419 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.635085435 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.287775807 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.289019045 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.635044887 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.381718595 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.308126393 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.301403939 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.298827567 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.391463288 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.310766535 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.372762922 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.373033249 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.376480328 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.329877534 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.286277776 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.290597885 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.293910634 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.293269577 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.290136946 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.31983478 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.29179162 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.29021306 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.630865026 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.303293216 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.300127176 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.291839204 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.290602377 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.312080768 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.290276489 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.293668624 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.382245641 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.293544856 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.355097789 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.672798852 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.668424855 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.298272274 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.29083261 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.291421015 seconds)
  done (took 101.583349502 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.359385019 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.366934171 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.404523834 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.300951688 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.345370125 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.410276069 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.301304947 seconds)
  done (took 10.697666152 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.299892313 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.295909002 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.345231479 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.344348771 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.292762695 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.504923279 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.295087717 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.305495151 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.292858825 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.370034101 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.295655866 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.295852156 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.301639348 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.291125105 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.34286099 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.305480152 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.411132651 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.29495497 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.294844979 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.446213419 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.292741618 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.302119445 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.369819463 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.307250554 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.297441896 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.302490617 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.219883789 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.295886068 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.293514478 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.296301368 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.294949023 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.396816309 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.298478843 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.29311639 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.293615708 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.455782344 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.296919165 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.295072623 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.296805719 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.297365908 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.296726126 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.296540297 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.296891755 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.294865492 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.296933238 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.319539345 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.297237929 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.297938192 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.297071879 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.298323586 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.369702931 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.29800289 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.294447106 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.296263642 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.375107932 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.304603051 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.29796517 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.296456113 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.298169897 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.296998382 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.452020232 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.349989525 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.298203276 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.345792724 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.300097404 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.299600814 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.29847962 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.298888409 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.390371482 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.299214957 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.348412342 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.295364785 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.51692607 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.323292601 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.300451352 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.300913974 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.301380702 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.299437419 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.296097682 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.305487554 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.298230482 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.300002154 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.305665826 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.297952599 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.297802199 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.484371944 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.455932799 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.297357596 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.3120893 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.307653456 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.297916033 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.373340083 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.300566955 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.297065104 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.35138024 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.415158937 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.376547903 seconds)
  done (took 134.544886251 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.304868429 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.308375602 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.303957902 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.32370529 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.300433335 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.300497598 seconds)
  done (took 9.056597047 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.303080244 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.300860213 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.302070494 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.301139952 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.302012391 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.301716911 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.301068527 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.303258271 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.3040528 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.301675094 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.301844806 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.302550875 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.303222261 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.302111611 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.302087721 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.302300007 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.301569139 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.299717217 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.303354724 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.302066741 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.30065987 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.303431797 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.30315481 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.305356068 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.306710378 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.303322977 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.309735863 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.302327086 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.303185239 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.311321236 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.305647616 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.30424527 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.30518918 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.308669194 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.307089813 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.305721005 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.307723502 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.304923824 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.300857033 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.304457615 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.305520708 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.303097377 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.30383275 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.3052764 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.306075338 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.307723847 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.308611945 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.310269868 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.304806278 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.30743355 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.306214797 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.305078606 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.30693569 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.307516922 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.310686566 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.3258547 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.308904678 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.305490825 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.305750063 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.307465161 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.305872287 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.305834934 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.306115448 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.309288537 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.303700256 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.307221552 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.30790159 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.308643335 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.306377395 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.305196437 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.306448688 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.30380705 seconds)
  done (took 96.192362863 seconds)
done (took 353.280093587 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.716243744 seconds)
  done (took 3.935592169 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.31876186 seconds)
  done (took 3.541332589 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.726889275 seconds)
  done (took 21.94837214 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.352232556 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.32653475 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.321170726 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.305095358 seconds)
  done (took 10.525392114 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.509856326 seconds)
  done (took 3.728663468 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.305063205 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.298892871 seconds)
  done (took 5.825073176 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.550113602 seconds)
  done (took 3.770065822 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.602535566 seconds)
  done (took 3.823751102 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.328702421 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.314069143 seconds)
  done (took 5.871832484 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.285379402 seconds)
  done (took 3.505082444 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.403881929 seconds)
  done (took 16.627031717 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.300877973 seconds)
  done (took 3.524150448 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.316061084 seconds)
  done (took 3.53656125 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.753891116 seconds)
  done (took 5.973672901 seconds)
done (took 97.356491396 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.29838284 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.307820337 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.301622512 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.298901087 seconds)
  done (took 10.427241685 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.340197444 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.34010374 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.34053603 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.351274473 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.347955362 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.339247043 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.331494455 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.332095868 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.34997533 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.343026245 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.341916948 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.34142035 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.358974124 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.332886527 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.341940302 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.342462822 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.351055598 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.341296446 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.332960578 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.344447822 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.307131426 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.35133348 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.343894863 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.308274341 seconds)
  done (took 33.379228507 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.825924387 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.377821296 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.462507571 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.360800193 seconds)
  done (took 7.250218146 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.359645504 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.362457857 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.373738958 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.412210036 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.437425405 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.370879908 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.333398886 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.330578178 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.316030814 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.362153063 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.4376597 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.376688422 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.464804975 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.308844415 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.515350884 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.308600543 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.308949843 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.360761965 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.412827286 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.43382761 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.310354942 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.360037625 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.363736192 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.378269065 seconds)
  done (took 34.222450758 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.308978911 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.326608081 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.30819279 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.308141782 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.316562742 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.309302401 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.308698348 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.309779487 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.308916249 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.314676506 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.307470805 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.321870126 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.309203009 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.309419454 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.315387325 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.310878485 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.315356771 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.309472303 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.309428145 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.315030969 seconds)
  done (took 27.466256986 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.303343793 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.302941025 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.655320088 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.559319945 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.304385656 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.31072155 seconds)
  done (took 13.661368271 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.377145264 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.516650686 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.310288349 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.654768003 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.744987999 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.31921085 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.311785584 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.548120075 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.852907785 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.844768757 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.375574487 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.380800572 seconds)
  done (took 19.463310696 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.31284769 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.312227954 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.318746959 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.328692794 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.363876611 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.322355689 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.318452598 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.304749938 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.371625614 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.376597405 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.322992572 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.366793067 seconds)
  done (took 21.247636121 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.393742274 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.30572858 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.305990846 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394174626 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307031884 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.519286099 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.392627464 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.008544924 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.328899978 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.580700093 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.306354454 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.403621726 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.563314647 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314701741 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.314511108 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.280112363 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.540514048 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.788458017 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316896371 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.316209187 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.340397364 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.308227274 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.317111847 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.525752125 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.528241101 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.30752197 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.568245774 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.30776058 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.585799581 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.329885401 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.318666268 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.307638249 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.582809616 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957485572 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.422291796 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.517030197 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326078905 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.318375969 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.312898206 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.320944801 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.32344969 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.318624684 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.32008002 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308922577 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.310475987 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.309073458 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.027632107 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.333762483 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.308121579 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.310215718 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.568657875 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.415004534 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.315180433 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.310195564 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359783381 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.310079279 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.313958212 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40663093 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.879657797 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.319955324 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320304159 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.319348581 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.316373428 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325554381 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.936463001 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.325260547 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.315210797 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.314546824 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.310795416 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.317091246 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.336231764 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312086834 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.337570419 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31182218 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.004427171 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.320564279 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.320242129 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.847293985 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322187223 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.320162796 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.540337302 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312584357 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.311255634 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.311586492 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.312955524 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.001829417 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.322305549 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.306384348 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.334352432 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.015723623 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.541290273 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.338353272 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3377192 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.536521483 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.299274577 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.31321304 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.325235509 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321938674 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.335496024 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.02190488 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332171788 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.317768549 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.569409434 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.526237993 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.318818639 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.308671608 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.804286782 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353714791 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.335197629 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.313105787 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.531154906 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.895821256 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.337977867 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324933178 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.339004391 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.313811913 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037835624 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33000939 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.326306073 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.314347777 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.585104695 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.086684875 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316804395 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.384295044 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.319733643 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.315010851 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.326870039 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325372276 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.315347502 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.517210292 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.343378459 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.33555553 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.317304338 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315784471 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.320948491 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327925919 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.325704848 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.538767113 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329970076 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.599582605 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315925004 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.318232142 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316790451 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.5405544 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.314362449 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.329852221 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.576856871 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.31981052 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.325464931 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.336816612 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.337426882 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.417142324 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.340095235 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.327584558 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.582235357 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.321299026 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.322080658 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.330650607 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.325666031 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326066002 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.324179054 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339875623 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.903229309 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.302685568 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.325452451 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.261369899 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.332453894 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.385892941 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.324530491 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.529101679 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.336794833 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331386995 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.33206718 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.316217834 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.549428636 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.328824623 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.328253242 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.406898191 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.791077526 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.914221775 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.341525623 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.320392905 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.31675775 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.316817982 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319292639 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319985041 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.319904129 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.529123216 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.341942973 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.324720631 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.922921478 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329884003 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.329073272 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.333435432 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.331491594 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.325471041 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.320792831 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.331236541 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328480737 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.3559755 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.339768015 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466196354 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.335212643 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.320793962 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.837508263 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.327266568 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.321603698 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.321235863 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355787662 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.332766256 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.134443665 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.581385147 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.329846717 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.582463752 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.339594461 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.346628082 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.32127757 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321818086 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359159219 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.349496788 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355132483 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.332388929 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.334490178 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332692749 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.887541814 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.043424577 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85970781 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.332170066 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.355579492 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.329691612 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.033769193 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341554203 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.321205113 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.554037943 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.041133472 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340753545 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.799152834 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.338631869 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.074210148 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.583416161 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.56055063 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.323748094 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.332496514 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.591483903 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.543912425 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358912534 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.333823908 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332488662 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.310001507 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.877885589 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.356855801 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.413583611 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.035922119 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344540482 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.334712996 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.380418102 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.33191494 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.736961872 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.349908377 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323921072 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.333784138 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.338024304 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.141332483 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.331773346 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.323996982 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94763321 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.338274135 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.808365841 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343368925 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.536924369 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.345567572 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.331291758 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.331026955 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.342000064 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.588005384 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.579977959 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333776007 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.327725057 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866460428 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.196416637 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.331387267 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325356313 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.051282748 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333409777 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.613410514 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.337969512 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.332564964 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33472672 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.327640661 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324713456 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.324001055 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.33373271 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.302247507 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.808012111 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.345347484 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34170617 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.338136234 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.179990577 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.583415318 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.340809513 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.905788748 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.562066252 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.329006026 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359336494 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.332620482 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334264703 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.324929509 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.328386728 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.564788565 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354940318 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.552097444 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.334682387 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.316265784 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.393982224 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.540303713 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.328072351 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.335820256 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.577502272 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.334596905 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.3326532 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.058358538 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36398797 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.338080015 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340452208 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.338176669 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.357361403 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.400989323 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.542724556 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.348973019 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.341886029 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.733058572 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363605142 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.340176504 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.34389999 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425422501 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330156118 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.353213024 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.112945544 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.915893573 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.070639914 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.925201632 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.601664037 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.340705309 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333583731 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330600905 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.479409024 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.32979869 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.604499302 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331837595 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.333646195 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361080474 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337352195 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341416254 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.551581423 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.607247865 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.331623409 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338427997 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33926171 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.33239666 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.342533398 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.543882019 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.820587657 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.890021881 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342102195 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.33584393 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.054648882 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.625628384 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332314299 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.33358507 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332547947 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.339954208 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.376128973 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.347043637 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347534819 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487593486 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.584731556 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00041508 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.361755277 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.359652909 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.106223799 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332844739 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.596486374 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.330708757 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.556712879 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.927061793 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.039276523 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.60467829 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.403770866 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.547011054 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.3412241 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481297626 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.345134271 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.341575868 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.33432256 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.243786688 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.332192258 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.344676906 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.923411191 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.606932109 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.339388916 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.342181813 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365300251 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.344265975 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.558236226 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.039756612 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.567125049 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.345564667 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.341667497 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.335559953 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.922654941 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.607957576 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345026588 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.339762034 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.575959814 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.580089728 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.361942998 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.788032267 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.332795758 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.889806753 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.316618008 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357602477 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347958424 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.044667504 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.933432518 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.345372886 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.833665296 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.346063334 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337227094 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.620462346 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.343621254 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.349195172 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.622161502 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.340159394 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.336504693 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.560851836 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.929698036 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.100053261 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.35233932 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365335039 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.347230472 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336957453 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359222312 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33755748 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.347823399 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.759463967 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.364619344 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339305547 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.349509971 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.346925054 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35906896 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.344555352 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33847867 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.344606517 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.327353827 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.338752324 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.34952065 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.461065702 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.900642567 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359449841 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.015154937 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.671606305 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.594343937 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.352243475 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.334086771 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.345079775 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339734939 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339928831 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341306327 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.340528832 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920146757 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.350150382 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.375135879 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.344133103 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.556851845 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.551595745 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.353850348 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.565407234 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349461894 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.380805417 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.327540271 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340921006 seconds)
  done (took 948.805525353 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.360611068 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.352479916 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.353990487 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.38257733 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.362284817 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.392728119 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.355906357 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.367033413 seconds)
  done (took 20.18745878 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.344833913 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.357990454 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.342009087 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.359047424 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.341964602 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.806387342 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.367861237 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.358903196 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.351984944 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.342275626 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.353351873 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.983145386 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.359062806 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.342477365 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.352970385 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.359251798 seconds)
  done (took 31.98337753 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.2921023 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.476250776 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.213611551 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.372844027 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.385858241 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.354973921 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.555663825 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.358667116 seconds)
  done (took 26.271803281 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.353182402 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.353262706 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.353956343 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.352990876 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.355728692 seconds)
  done (took 8.030660457 seconds)
done (took 1203.618725877 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.347767846 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.349032419 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.346641651 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.349793793 seconds)
  done (took 6.653724811 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.331692815 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.330224933 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.332203615 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.347044 seconds)
  done (took 9.602316535 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.032407092 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.983810291 seconds)
  done (took 5.278014955 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.347276945 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.10842112 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.083517222 seconds)
  done (took 7.803334713 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.640885141 seconds)
  done (took 2.904436018 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.758977317 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.714004833 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.55609176 seconds)
  done (took 6.293307211 seconds)
done (took 39.795369429 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.347075183 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.593721895 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.499239163 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.345437399 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.511896784 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.500614057 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.083121176 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.354192286 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.35377682 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.365866872 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.345493321 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.506810394 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.135360184 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.594176015 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.136721653 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.594808506 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.507708349 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.357593051 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.346401258 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.345453789 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.084404264 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.346112433 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.374503299 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.362476884 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.517413404 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.492998514 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.354044382 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.595975647 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.355090161 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.346564865 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.501207399 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.352882092 seconds)
  done (took 81.77336332 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.360145263 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.349983099 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.356127915 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.354238438 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.360642124 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.363866665 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.347975656 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.347375387 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.360923257 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.355718181 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.347282242 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.352685828 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.349343791 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.358118295 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.34889346 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.357797732 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.348094201 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.355956405 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.368266585 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.348373187 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.349560238 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.348809449 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.347383854 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.348499629 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.356068295 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.376960061 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.357578081 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.355228775 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.34791114 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.349476459 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.383921229 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.348497889 seconds)
  done (took 76.629038181 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.361901061 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.351530173 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.348767611 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.348381993 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.348589178 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.360036639 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.349752481 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.349592509 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.376001583 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.360842654 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.360862692 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.348714214 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.348126466 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.349736345 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.368932615 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.350075502 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.34961418 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.372683389 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.365438764 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.349457068 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.368360965 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.349668777 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.349367881 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.349744403 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.349939201 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.367584367 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.351383645 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.349376814 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.357150802 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.350568892 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.360364512 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.350963053 seconds)
  done (took 76.642140445 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.545591138 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.358124394 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.359102399 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.293120914 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.357698982 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.356682608 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.351275851 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.547170168 seconds)
  done (took 14.437057783 seconds)
done (took 250.744992936 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.353347774 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.359854298 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.560927324 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.387704192 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.350373339 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.389261939 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.379938666 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.552282477 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.31563545 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.569571389 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.361095659 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.38556457 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.351626546 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.385443033 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.63375681 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.489258933 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.240894907 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.346629835 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.700876768 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.387776553 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.623337477 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.361788372 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.563545662 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.312956685 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.380383883 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.361755216 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.367445304 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.234929558 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.404068149 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.715444293 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.368329146 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.350205099 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.443970537 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.430247211 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.494103851 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.487426644 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.385176551 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.427765236 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.577184141 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.361988277 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.379636421 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.129120395 seconds)
  done (took 81.933626941 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.360674612 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.468166308 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.361265194 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.361580446 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.36131656 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.464021387 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.444052704 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.362411216 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.362806545 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.361096382 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.362542437 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.363417495 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.361869359 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.362714153 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.361225751 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.361868526 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.361358853 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.364257614 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.362983274 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.397692816 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.488602561 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.365519046 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.355921818 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.362870093 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.449596038 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.464923276 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.361902267 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.357224168 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.396938349 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.362515566 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.364860572 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.40049973 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.364495893 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.364471634 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.466204431 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.448439342 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.365837839 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.360610945 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.464191227 seconds)
  done (took 55.407423179 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.364209489 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.609033483 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.788765745 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.380364299 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.365058624 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.369724121 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.442066171 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.373125435 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.36761199 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.368598081 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.515026427 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.375021528 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.400060107 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.815444752 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.375949558 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.365260624 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.364665022 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.365569011 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.620913283 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.385150695 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.462125332 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.375566369 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.442278075 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.384320739 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.387777635 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.367357658 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.371361692 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.940394529 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.378242143 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.517469258 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.140563226 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.448783927 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.925464561 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.816673681 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.155388577 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.377107544 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.365792334 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.522252114 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.376587341 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.367550166 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.44362023 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.377163298 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.803458544 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.084326776 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.393050225 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.367309158 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.972579458 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.527977337 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.605600566 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.383094751 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.835444166 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.379092728 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.369007528 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.368713323 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.605262784 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.382929754 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.367020424 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.983556519 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.398677144 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.445085538 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.36884406 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.367623644 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.629930595 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.368782938 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.611242468 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.37232594 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.376440974 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.388362865 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.815640042 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.378842849 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.077298014 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.386947241 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.368081284 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.521546002 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.614562512 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.990260549 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.380187809 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.631162302 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.926710316 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.445118306 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.37560264 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.937494391 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.44805055 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.374175139 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.371337784 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.372653653 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.369845615 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.422340195 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.443292944 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.008846827 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.07444537 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.023068674 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.471170204 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.382938785 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.371345012 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.983438824 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.395535937 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.370406018 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.797282353 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.09073214 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.39654942 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.377129695 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.078413098 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.398396259 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.448717007 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.375932585 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.811229503 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.381117308 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.429140074 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.372194256 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.377584423 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.394318485 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.448398122 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.378934742 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.372221965 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.063931191 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.556880352 seconds)
  done (took 181.271507698 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.376416423 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.364789111 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.373411 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.366079319 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.366268181 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.374267378 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.366264136 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.364638328 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.371373997 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.367014173 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.366711088 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.367357567 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.369110524 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.374230964 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.378617078 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.372082024 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.36532022 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.364962683 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.36526219 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.366861951 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.365942746 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.393223289 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.366975382 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.367238249 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.368038402 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.367329088 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.37435706 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.368867588 seconds)
  done (took 63.636362243 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.373920132 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.920188724 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.375304693 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.503551468 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.399114775 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.37303939 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.501108802 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.430594745 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.378827492 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.371800666 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.37167195 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.670255051 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.385211569 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.876732115 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.569958013 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.510099475 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.885253619 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.40211769 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.372932455 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.373046428 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.50296117 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.389599518 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.670885894 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.938086344 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.384844997 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.928572097 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.375890367 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.374092821 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.373415039 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.931240504 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.382868638 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.673172748 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.459099525 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.435204461 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.939259483 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.886268615 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.898263075 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.518932642 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.384306227 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.373712316 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.373356277 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.365244506 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.931265737 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.385855099 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.376975542 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.926963977 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.40116233 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.37689141 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.381150592 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.373495751 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.433924705 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.437645483 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.682950044 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.93427816 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.451067926 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.39803377 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.50420263 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.757969097 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.388768635 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.877217144 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.365961246 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.931961259 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.396094361 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.367941148 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.376572592 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.380896508 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.522487719 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.514681894 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.892179481 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.404250506 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.883039706 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.549272942 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.385976829 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.376698182 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.408483915 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.933123331 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.879655513 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.539199669 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.517640216 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.571784073 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.379180701 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.377883032 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.371228695 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.453274136 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.384544188 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.933700406 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.897816516 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.394376685 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.379799311 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.378267124 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.378352859 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.550291657 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.942633258 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.454384339 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.88458977 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.693208855 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.677912764 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.381457941 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.435643549 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.404324675 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.678151056 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.379918107 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.434948796 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.821666137 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.688687979 seconds)
  done (took 163.865114123 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.613422171 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.407740069 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.468477911 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.535463545 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.987119429 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.977121841 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.39723269 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.511997142 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.489830762 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.643739357 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.391113764 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.469632495 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.595174718 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.466004812 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.119092183 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.456587365 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.47762008 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.544302247 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.539318909 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.383548785 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.034595793 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.671027938 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.579478386 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.410316684 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.486179058 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.125188757 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.953401978 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.926027183 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.558444972 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.382542701 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.901338371 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.387548567 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.29894561 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.044102628 seconds)
  done (took 64.524176832 seconds)
done (took 611.907384266 seconds)
SAVING RESULT...
DONE!
