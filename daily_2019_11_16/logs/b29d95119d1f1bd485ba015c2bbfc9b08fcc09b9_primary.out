cset: moving following pidspec: 5411
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.309365101 seconds)
loading group "string"... done (took 0.610610011 seconds)
loading group "linalg"... done (took 7.048519327 seconds)
loading group "parallel"... done (took 0.154217002 seconds)
loading group "find"... done (took 1.122082243 seconds)
loading group "tuple"... done (took 1.71583712 seconds)
loading group "dates"... done (took 1.204176109 seconds)
loading group "micro"... done (took 0.216462124 seconds)
loading group "io"... done (took 0.98946986 seconds)
loading group "scalar"... done (took 37.619378525 seconds)
loading group "sparse"... done (took 12.007158603 seconds)
loading group "broadcast"... done (took 0.95671538 seconds)
loading group "union"... done (took 12.559607914 seconds)
loading group "simd"... done (took 4.684536265 seconds)
loading group "random"... done (took 9.550559112 seconds)
loading group "problem"... done (took 1.907654904 seconds)
loading group "array"... done (took 22.217305885 seconds)
loading group "misc"... done (took 1.719584146 seconds)
loading group "sort"... done (took 3.602936775 seconds)
loading group "collection"... done (took 18.057880106 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.482544469 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.119589907 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.110574339 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.114748394 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.142080076 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.106362082 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.119414767 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.080790857 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.774300111 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.144379154 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.114083806 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.409050895 seconds)
done (took 5.017911491 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.167184451 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.07910612 seconds)
    (2/2) benchmarking "String"...
    done (took 0.078102231 seconds)
  done (took 1.291257928 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.062342653 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.117383917 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.062852046 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.063671107 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.063489971 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.062789418 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.062316835 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.062371496 seconds)
  done (took 1.630104422 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.069483116 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.06502279 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.064988526 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.064401566 seconds)
  done (took 1.399587108 seconds)
done (took 5.695448228 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.748722421 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.197180094 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.17847821 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.391479328 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.128216713 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.156382939 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.638368544 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.314373632 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.179329867 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.077799142 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.10078466 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.313371508 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.103215279 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.621165091 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.070229339 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.086541445 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.134815158 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.401667409 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.064051382 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.07858905 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.085588836 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.125062794 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.084732043 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.07082908 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.140870332 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.064300127 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.131464174 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.076233061 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.063051883 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.202235487 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.168959582 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.661354435 seconds)
  done (took 10.032040815 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.091919246 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.094256319 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.065523547 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.119367677 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.092942184 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.065793277 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.067603741 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.064466267 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.083164262 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.123955749 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.085344326 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.09753625 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.062077555 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.065593377 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.080973373 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.200174017 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.076054526 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.077642753 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.066844319 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.07200945 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.104344616 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.074324884 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.074090868 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.073738474 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.124955741 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.176515777 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095799356 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096130109 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.065888063 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079189712 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.113209404 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.122140241 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.061876313 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.063288656 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.120902932 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.09074688 seconds)
  done (took 4.46058037 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.937878786 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.135478958 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.086753476 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.128477004 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.06130473 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.103027018 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.062187387 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.076871828 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.194979417 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.337489657 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.567847591 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.107721406 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099861 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.064515688 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.064742702 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.063158393 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.344913318 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.095111288 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104887283 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.080495783 seconds)
    (20/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.081718892 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068437695 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068143573 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067469522 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.062190657 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066602274 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.101512246 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.295815005 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.124480258 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.065935463 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.915671095 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.12047313 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.063163965 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.096820749 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.158692335 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.086925778 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083789393 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.267338179 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.065576619 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.060967198 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.150449681 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.069551881 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.064445296 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.08228654 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102765519 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.109358903 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.061673433 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.063075483 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.156193554 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.062054383 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.078114116 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.620777961 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.150518146 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.072500411 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.060696356 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.244576271 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.081671082 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.065692338 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.060925634 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.200194447 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.134049502 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.066371268 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.064620145 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066910151 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068968982 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.351524393 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.064832558 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.030276838 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.064205453 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.072493951 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.065736946 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.065826212 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.060604635 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072516706 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071027125 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.082035805 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.060387812 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.062967973 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.073296417 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.064711892 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.064542666 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.063697756 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.081272124 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.353347533 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.064034388 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067093855 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.063046999 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.084800313 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096075433 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.065638231 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064342643 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099087385 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.065106791 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.062821155 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.101314789 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.062988669 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.080830871 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.065833907 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.109831223 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.165887003 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.09355121 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.06491308 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.097428192 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.074064481 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098088354 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.078066975 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.065612029 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.392432982 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.061779292 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.061903481 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.064791701 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.062113218 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.066358729 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.064636263 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078572117 seconds)
  done (took 20.535959868 seconds)
done (took 37.101070159 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.229721054 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.075102083 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.07569543 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.079428202 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074999011 seconds)
  done (took 1.760060129 seconds)
done (took 2.967218224 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.116251956 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.097243878 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.062903596 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.094354881 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062752214 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099400877 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09774002 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.077492352 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.095739042 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.060817776 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.092678807 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.060668912 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.060409723 seconds)
  done (took 2.304022312 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.078813137 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08040444 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06753324 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080240804 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062243567 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081715859 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079192271 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088066308 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079182897 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.070883398 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062662305 seconds)
  done (took 2.031732227 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.077983718 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.080332025 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.066629614 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.079079909 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064663911 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080114218 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079771315 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084599704 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.07999211 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071655505 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062078032 seconds)
  done (took 2.025965401 seconds)
done (took 7.557349499 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.073912118 seconds)
  done (took 1.263217214 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.586057541 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.052801045 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.078114431 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.108733266 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.183384996 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.119412434 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.276332272 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086437914 seconds)
  done (took 8.861137827 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.08739279 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067030936 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.079885186 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.069564313 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.070505306 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.069702183 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.069370499 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.070750625 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068135819 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070387546 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.067981653 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.070132492 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.066566765 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.068018125 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.066656085 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.066671629 seconds)
  done (took 2.39164958 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.088347565 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.086841689 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072240877 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.07300873 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.06861491 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.068619073 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.070626941 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.06967912 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.067431358 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.068401598 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.071005104 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.069951351 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.06798242 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.061330631 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.070422123 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.073619365 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.069641941 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.071946519 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073195812 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.072839876 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.072188832 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.060799809 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.069285955 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.071713485 seconds)
  done (took 3.006243121 seconds)
done (took 16.722097293 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.10971892 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.068054728 seconds)
  done (took 1.375504405 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.079234617 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.078838316 seconds)
  done (took 1.362739188 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.080440884 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.062928278 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.089302613 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.076584909 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.062852311 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.06343415 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.085538265 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.062899315 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.062419798 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.062281592 seconds)
  done (took 1.913066433 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.065088739 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.074780922 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069127659 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080081926 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.072839516 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.062617466 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071825334 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.066569294 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077528664 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.06114282 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070069256 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.080649519 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070064302 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.08283742 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071947337 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.06763857 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.069476447 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.065948142 seconds)
  done (took 2.488095303 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.063294696 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.064984146 seconds)
  done (took 1.340549422 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.063477158 seconds)
    (2/7) benchmarking "second"...
    done (took 0.061907801 seconds)
    (3/7) benchmarking "month"...
    done (took 0.065993797 seconds)
    (4/7) benchmarking "year"...
    done (took 0.064812993 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062093446 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.061292337 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062230925 seconds)
  done (took 1.64887048 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.374899877 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.108602425 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.300916828 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.069120126 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.080714426 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.251635233 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.063830807 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.068823359 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.068765373 seconds)
  done (took 2.644450135 seconds)
done (took 13.98510828 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.07658892 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.083316969 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.094433468 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.364752299 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.090317227 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.064111225 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.11219572 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.188636133 seconds)
done (took 2.295558176 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.2091895 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.610074344 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.392624988 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.19343116 seconds)
  done (took 2.407541222 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.324424652 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.084504939 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.056527794 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066051038 seconds)
  done (took 1.752792357 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06307413 seconds)
    (2/2) benchmarking "read"...
    done (took 0.067491779 seconds)
  done (took 1.350345626 seconds)
done (took 6.942030851 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.063231662 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.063921519 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.062111161 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.064316362 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.06217992 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.061939312 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.064508238 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.064380095 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.064317231 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 0.06460826 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066914747 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.061866318 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062032 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06441469 seconds)
    (15/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.061799826 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.083792371 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061649795 seconds)
    (18/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061841687 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.062402988 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064211405 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.061806111 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062042953 seconds)
    (23/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.06427401 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.061757042 seconds)
  done (took 2.793106371 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.081028154 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.064836332 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070391183 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070199857 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.068297511 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070025617 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.069558456 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.064879861 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.069999622 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.06674725 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068545987 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.068631242 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.06649946 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069053212 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066565978 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.068770719 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.069715473 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065052249 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066744114 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.068692272 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.069615297 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065079771 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.068508378 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06933056 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068062992 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070277998 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.066769514 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.064745888 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069387328 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068508973 seconds)
  done (took 3.283804744 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.068595885 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062228939 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.062941434 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.068940778 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.061968611 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.063768084 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.061935395 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.062808108 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.062763748 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.061895792 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.063379852 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062415501 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062374206 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063060607 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.062699516 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.065770772 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.077515426 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.062953268 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062035134 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.06281646 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.065175386 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062538128 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.062273976 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.061994852 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062294642 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.061962009 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.062390751 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062250946 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.06300419 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062090645 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.064874318 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.065803206 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.061879507 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.068619876 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.065283105 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.061919285 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066390591 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.061899327 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063025722 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.061489318 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.061694099 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062160885 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.061736625 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.068985041 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.062177959 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.063431674 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.06196045 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.063262721 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.062167712 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.06459285 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.061259497 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.061502608 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.063866021 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.062868933 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066023704 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.06163832 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.062806759 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.061446153 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063292862 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.061406891 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.061675106 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.06124388 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064063517 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.062046791 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.075879343 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.068771719 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.061874902 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.06317204 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.062771316 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.064885048 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.063729576 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.074681854 seconds)
  done (took 5.822221669 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.086696429 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.083818937 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.061800133 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.063644642 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.060597813 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.062438753 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066160369 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061650784 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062975114 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.066570004 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06075262 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.062022235 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.174494607 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.073372867 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.061201457 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.061944901 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.066865618 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.058784215 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.061026798 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.065532291 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062855036 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.06590449 seconds)
  done (took 2.793128704 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.150928695 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066673733 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.103711261 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071720517 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066314 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.070997842 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068134963 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067958892 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067992821 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066405922 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066150568 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068131208 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065670137 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066177647 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066413771 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066523086 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067963548 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066650952 seconds)
  done (took 2.573047207 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.072683108 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.062932706 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.082444488 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.063347152 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.064326677 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066907123 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069465624 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072478704 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.066268691 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.064134919 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.072435544 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066644904 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.066455404 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064116145 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06616616 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.064409881 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.066712175 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064221149 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072396806 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069124731 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069505176 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072588931 seconds)
  done (took 2.739280549 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076706383 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.064982753 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.079371741 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065522044 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.058948762 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.060875941 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.06654261 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.062324295 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.066446574 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.063743116 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062337521 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.060804656 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.06570632 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.063704137 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.067963752 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064141848 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.065694726 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.063742072 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065558841 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060123145 seconds)
  done (took 2.548627572 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083452092 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066086957 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066069136 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073905547 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.0662247 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.065695707 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074332413 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.06626902 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.065901989 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086484447 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06579136 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065789004 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07386179 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070389575 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.065569238 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074014475 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073230029 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073537073 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066081204 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06535324 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.085780271 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.065522649 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07347753 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065506951 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065339009 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.065829516 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065804607 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070467359 seconds)
  done (took 3.210213175 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06250154 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.063123234 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.060743899 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062108919 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.061531398 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.062156751 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.061668197 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062030389 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064313 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062051649 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.063973609 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.064618034 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064064862 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.063611919 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06411081 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.064366983 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06389133 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062094477 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062032766 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061744244 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.064069871 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063906822 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.063786506 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.061878059 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061637124 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064152053 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061858939 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062041247 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064358713 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06206726 seconds)
  done (took 3.134223209 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.071834669 seconds)
    (2/2) benchmarking "in"...
    done (took 0.069343772 seconds)
  done (took 1.390172296 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.060108961 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076691167 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.060585903 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068390227 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068472395 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065017562 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.071816486 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068156091 seconds)
  done (took 1.783611818 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.078138317 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.075126662 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.066011118 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079120521 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075394395 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.080776825 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131359186 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.064567248 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.070038281 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.060701524 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.075657999 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.061899276 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.068840426 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.062892804 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.068791454 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069975952 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.060552135 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.06902736 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.065017352 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.061966503 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064814909 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.071131691 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.064650018 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.058974091 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.064348505 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.0844719 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.073492293 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.062643822 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.065752778 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.070428214 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.069030052 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.058012385 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.064113255 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065131169 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06247217 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074157088 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079758035 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.067655023 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.072908151 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065742901 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075174846 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.059674867 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.068879552 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.070971857 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073944502 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.064958895 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.065208264 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.059708179 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.062198138 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.066747199 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.059917563 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064885838 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.05950792 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073900419 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.068057292 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075518203 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.063511736 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.066184388 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.06766391 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.067968289 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.071296421 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.066869656 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066932387 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.064337221 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073872737 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069325085 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074074639 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.059547124 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.058531366 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.062486306 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.074297567 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08690684 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.070501228 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.065335612 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.064785592 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.060758851 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.066377089 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065432938 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07033115 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.070436706 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.064543434 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070343866 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071623551 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064591767 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.066686551 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.072979921 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.062917593 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.067816095 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.062688991 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080898006 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.063390348 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.062877737 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.062422195 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075114707 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.067665142 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.064874741 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.062425644 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072449761 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.058664099 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065573758 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065192533 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.064195393 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.074816843 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067557969 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068436044 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.072372402 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071465016 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064012307 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.06655616 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061157097 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064598289 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.062847972 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.070414494 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.057997204 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.066287576 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.064733509 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064520899 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.072075728 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.061899146 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.063578813 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.196131317 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.069833483 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.063208464 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.062136773 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.06837674 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.065777337 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068552128 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.073682776 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064347046 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.060885027 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.060141794 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.068453188 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.065385971 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.068884034 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069811945 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.068105991 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060440284 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064667205 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.070730611 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.074222365 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.065822548 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.0662821 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.071077248 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.066877575 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065066033 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.071806642 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.067891369 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.064460484 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071470599 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.06645788 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.060158468 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068452221 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.067676384 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.063922107 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.068734477 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068229352 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.0675414 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066069874 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063701677 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.07248777 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065891395 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.063769014 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065060731 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064172478 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.075910063 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.066751447 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.059332599 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.060794227 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.073243138 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.061039745 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.063504696 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.063047713 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.067082715 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.064738666 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.062758663 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.064739501 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067129654 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07510041 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069560964 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065681591 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.070211455 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076495611 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.064555031 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.067875691 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.064509448 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066534815 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.065648103 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074451433 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.070923251 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070241591 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.067786716 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.0617044 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070512503 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072406696 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064060442 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.062341215 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.063299276 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069005632 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.07016805 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.068225936 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.063663823 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.061055554 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.064369648 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068031915 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.067316851 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.064338062 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.063771751 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071387759 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.062717409 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.0718981 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065114415 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.074191071 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.067123886 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.059732227 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067877004 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06339086 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.069904886 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.058194754 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.060783852 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.061893947 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.064002559 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.061738934 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.06509317 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.057261585 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069124816 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069936729 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.063126821 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.062246493 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.062651981 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.069074849 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.063326228 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066930358 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067333029 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.069621782 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072889841 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063184408 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.06692475 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.07351936 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.063960898 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.058076575 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.068332314 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.062437115 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.062836641 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.062612994 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.062102555 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.194056461 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073556857 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.070979419 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.058271896 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.066225337 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.062269179 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.062741421 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.059513848 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.067780292 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.068331329 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066081864 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.071671965 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065923763 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.064919813 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.067258377 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.063867963 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.064361901 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.064631283 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.066228103 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.065123764 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.065010308 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.062921743 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.066332063 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.062498797 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.06138047 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.065295387 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.063193229 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.06371626 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068480007 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.063703163 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.064130927 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.06595326 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.064737798 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.063944892 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.06371041 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.062552434 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.0663563 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.064289497 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.063630668 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.065440815 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.059035966 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072248783 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.063286748 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070486533 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.064096589 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.061043649 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.07158748 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.065576193 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.068615455 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.063766791 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.06410192 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.064831391 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.062527786 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.06569378 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.070581245 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.060787741 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.074197181 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071061528 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06365077 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.06699172 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.065288363 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.066541439 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.063913338 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066081495 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066124871 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.06512731 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.064815838 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.069730762 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068080775 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.065930856 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066881173 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.06642697 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.065397688 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066262596 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.059786438 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.063289426 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.063124825 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.063754623 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072736528 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.063725995 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.062747373 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.062934224 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.064398076 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.062377053 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.060171648 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.071361445 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072446143 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.064197521 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.070321069 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.063859437 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.066438405 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.075458402 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059230151 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.062814677 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.0625773 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.062684179 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071770818 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.065146267 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.07397244 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.064744702 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064305883 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062050371 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065648952 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063726671 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059275711 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062612388 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068369666 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.063387573 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063593685 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064839662 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.066908287 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065483846 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073745881 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063097542 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.064428952 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.063669813 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061189478 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.06296833 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.062627029 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.066109305 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.064461455 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.061422367 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.061116068 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.063380104 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.064192756 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.064830122 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.063514155 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.064924573 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.205255876 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063234057 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.066962616 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066988792 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.058306553 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.066343562 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.063460997 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.06303025 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.062670432 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.068433826 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.067882192 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066039175 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074000238 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065504962 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.065795698 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065244402 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.063345575 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065380288 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065462501 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.065217982 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.064449969 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.066732242 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073254159 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.06298786 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.06849948 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065523961 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.065434636 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072752979 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.066598765 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.06869834 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072275195 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.06552299 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067429446 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.073818868 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.069631103 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068731797 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067143306 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067383301 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071741817 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.064196665 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.071842897 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.065663595 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.065803315 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.06668863 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.061619073 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063556386 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.063481056 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062370447 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.069339873 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.064391692 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.063001036 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.062534463 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.061752266 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.064576193 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067160003 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070468477 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.065916121 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.066431359 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.058892837 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.060208451 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064745822 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.061533705 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.066754603 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.067687078 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071130031 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.067819542 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.065240011 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064011821 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.073849446 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070165912 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.067542168 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.06197929 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.067200294 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.065704765 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.066418524 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.064348473 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.06322367 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063952383 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.066406286 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.064515603 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.062274671 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.069565111 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.065986242 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064121884 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.064438562 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.063541655 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.063377685 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.058097194 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.063623417 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.064512416 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.068759282 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.066664261 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064936563 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075447413 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.062596546 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.065243217 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067789788 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064187364 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.069046855 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.059989675 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.066697573 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06540865 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065803743 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.05992183 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.063758983 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.062697204 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.066905845 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.063873243 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060128193 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07547732 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073691581 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068077422 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06338067 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062899691 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.059430782 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.059281375 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.063055662 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.064517685 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.065479249 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.072840602 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.061992882 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.062580363 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.058323089 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.061526283 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.065989811 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.066528322 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.061341753 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.05909034 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.062760013 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.197583262 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.06894132 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062128811 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.063172034 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.066709567 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.065995074 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.0614531 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066984808 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.060778879 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.066572759 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075826811 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.063502398 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.064175214 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.069456363 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07073671 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.064525522 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.059031778 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.064846501 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.066453307 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.063764589 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.064534103 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.064402291 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078465597 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.066301909 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.062178806 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.06294506 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.06597136 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.062730836 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.071671832 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.065198737 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.064456152 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.067570272 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.065367221 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072535663 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066184845 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070664329 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.06642552 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.06557546 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.061933615 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.063787526 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.062342767 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.064377234 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.065430051 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.065125884 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068880534 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.071477656 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.063109436 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.073378132 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.072177893 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.065124436 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.05979417 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.062920802 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.062318362 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.05911592 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.064836281 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.061609236 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.061185424 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.061884812 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.062755352 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066122045 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070243016 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066497887 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066339371 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.064785043 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.058251057 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.065683379 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.065420429 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.064157486 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.06028086 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.064336193 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.063791616 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.067574066 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066485717 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.060773201 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.064507018 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.064945373 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.063836016 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.06008393 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.070826554 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064129579 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.066761443 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.064129408 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065350295 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.06595218 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.068593544 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069078703 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063944006 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.065294334 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.066864379 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065603548 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.060689189 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.060726346 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.068263581 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.061245034 seconds)
  done (took 41.214169901 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.095859668 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.060138833 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.058810525 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.058810375 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07057955 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.059653961 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.059197458 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.060173382 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.060032583 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.062093824 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.058546018 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.05865255 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.067318651 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.073943067 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.0701002 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.063231649 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.058689824 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.059830293 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.058811596 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.059497691 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.067613675 seconds)
  done (took 2.676985408 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.070679892 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.067085461 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.069296598 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.072416662 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06379528 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067812469 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069412632 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067166838 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072875412 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063932657 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.072627781 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066986066 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.063857195 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.063738446 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064087533 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067170072 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.0723174 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064322043 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.066987633 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06932547 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067234294 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068909699 seconds)
  done (took 2.809600442 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.063429987 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.062785178 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.06424668 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.059122969 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.062852973 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.058223269 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.066551955 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.060773615 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.074385941 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.061669305 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.061572084 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.06171543 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.064257965 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.05845736 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.062665264 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.060942639 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.10567717 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.065856198 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.062185278 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.063265296 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.058288652 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.064281259 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.057987428 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.058195935 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.06225357 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.067386247 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.064737818 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.062316251 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.063816093 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.06280942 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.063802738 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.061884993 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.065658743 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.064395137 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.062827081 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06264741 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.063678959 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.063615853 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.059399001 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.062128127 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.064233236 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.05978521 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.064265886 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.064942582 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.062574409 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.061849953 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.065651476 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.063977957 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.059048929 seconds)
  done (took 4.441566746 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.076415482 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.105216275 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.064572572 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.085790522 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.078615389 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.07334588 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.066638366 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.087555041 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.061814484 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.062979661 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080251651 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.077547309 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063462058 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.067048944 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.069470646 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.063415689 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064029605 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06108852 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.067411518 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.063315044 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068102857 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.070664609 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.07836808 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077393033 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.067907334 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063102476 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064254638 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.068254336 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076900467 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.068969849 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.068879817 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069550221 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079357438 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.066130734 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063593502 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066537663 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080281794 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.064449778 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.066410779 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062080435 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.066180785 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.068782626 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.070667999 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.079877138 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064479801 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069433527 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.063678171 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.060541385 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.076318609 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.066282794 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.07177009 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078619165 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.067965067 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.064580543 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068611919 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.078623177 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064283131 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.062240838 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.06530284 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.073959589 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.059947481 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.065715011 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.075461459 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.064011212 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.069332619 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.075697334 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.067568874 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.065768803 seconds)
  done (took 6.217336253 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071784743 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.069243479 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077336628 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076599544 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068499501 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.068793073 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068995673 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.070224292 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.070782399 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.075687503 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070123147 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.091325358 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.066588913 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073640723 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.070821337 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071081023 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.070879445 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070974789 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070903077 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070860557 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.070808194 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.078764272 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071019876 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.078618656 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.096723166 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066503103 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070675407 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071284678 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078713471 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.070854855 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078051803 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.070892935 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.070908518 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.078708081 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.077876184 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071013309 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063721679 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070530422 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071020628 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.070691468 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066006965 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07879252 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07042693 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066046759 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070606457 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070038144 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.078410684 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.077282597 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07291748 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075330522 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071004364 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.078867541 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070707743 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070776176 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.078399062 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.103436679 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078532477 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078313784 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070385797 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.078401086 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07840834 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.084342761 seconds)
  done (took 5.933089076 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080796724 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071308844 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.073459529 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.058108308 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.060729658 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068071652 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062501251 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.062737152 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073268996 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073244302 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075361963 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068861955 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070756434 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073190683 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066311199 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069747632 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066336089 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066538744 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070781748 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066274869 seconds)
  done (took 2.724048205 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.071199724 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.079282247 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.063726663 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067690853 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.065357355 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068349993 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.064457836 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065421818 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063852128 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065277197 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073396327 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07331 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063480556 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067923555 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.071918737 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067628231 seconds)
  done (took 2.42839002 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.071720201 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.069012718 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.076011003 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.063328254 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.060689877 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.05903254 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.062072115 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.057759088 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.059306531 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.074746789 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.063983747 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.066486284 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.064385417 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06299027 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.061135713 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.06710534 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.06097703 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.061912616 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.064377665 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.076519903 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.075109177 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063046798 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.064950217 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.064215218 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.06450467 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.069265775 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.063837387 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.062298987 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062026496 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.064559773 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065364781 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.067723414 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.061685723 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.062484712 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.062980634 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.061972353 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.063662025 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.064565858 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.066761883 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.063782988 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.062157796 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.06392099 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.063775998 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.065473853 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.060488924 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.064144166 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.060369933 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.066028811 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.062031545 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.064273525 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.063745606 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.066440057 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.06449463 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.070584273 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067130695 seconds)
  done (took 4.901437029 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075419615 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066576285 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.058660755 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.061174021 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.065584888 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.063903527 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.065724292 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.064041658 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064636069 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.060758951 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066171269 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.066927507 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066169425 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068208093 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066535557 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067993806 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06023218 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066075645 seconds)
  done (took 2.524614546 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.068133241 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.062460428 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.069252679 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.062319762 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.062749798 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.064754726 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.058941406 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.062124706 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063016669 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.064152299 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064468801 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.066954882 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063221079 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.066415162 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.064218552 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064125299 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.066425341 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063237074 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.063672779 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060484415 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066571857 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063008183 seconds)
  done (took 2.753896112 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.088609131 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.078016111 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.133736307 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.075092398 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.079160025 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.067988358 seconds)
  done (took 1.866904729 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089455298 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076830742 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064715344 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084367391 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070253726 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064022173 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064995921 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065918484 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074425049 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074965646 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065933091 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074599321 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074607481 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074101367 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07208052 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071990699 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066439584 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066178957 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065099392 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082987155 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066790205 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074594249 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066457159 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066030869 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066520694 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074160545 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074885605 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07502985 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066291611 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074721026 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071544431 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066166596 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075306512 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074845092 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068065704 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074854465 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06605248 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083649745 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072032993 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074037926 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067698477 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07264694 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074700364 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070661966 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073183693 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064431675 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069065502 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065173937 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064449328 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083142376 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070167822 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071869434 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070335317 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072989172 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072978216 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082678739 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072530337 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071671642 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069910874 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075498726 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073335527 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07059801 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071708889 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072687018 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069703522 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071597397 seconds)
  done (took 6.08480481 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079741198 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.083635746 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.064631574 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073131116 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073704407 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066402521 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066321703 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066418081 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066381984 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065847315 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107221008 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066673409 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074560382 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072991426 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064675788 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065833598 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.064806017 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072614974 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.063808304 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082987321 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064594761 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071981536 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072249374 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072183198 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073059244 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071748798 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066695201 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066352761 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066102569 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066063748 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070980555 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06643508 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074653093 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065611686 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073596357 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066137318 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066132742 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070838474 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066062649 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071628238 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074394513 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082579439 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065984343 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065729444 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074892885 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066047001 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066076622 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065393931 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06608968 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065840021 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074398059 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074892867 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074917479 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074222207 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064669664 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064426375 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064126746 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064051465 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064214011 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069740636 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071438698 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.063877929 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083090318 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.064340897 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06409288 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071889877 seconds)
  done (took 5.986676739 seconds)
done (took 125.851968526 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.183790389 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.16214604 seconds)
  done (took 1.678726389 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.06645541 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.09388527 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.075265466 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.126146102 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.062995059 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.096979403 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.096667764 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.074402751 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.062895633 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.063002983 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.06273303 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.065129993 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.128429358 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.063057348 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.063170518 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.065518733 seconds)
  done (took 2.614727627 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.093650761 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.154063898 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.095512417 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.062008541 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.093394118 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.070137163 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.061682121 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.071423204 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.067554762 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.061687606 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.069961151 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.067477449 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.061613589 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.067326939 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.067702163 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.069491948 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.061721027 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.069406096 seconds)
  done (took 2.720280043 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.097115245 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.088130115 seconds)
  done (took 1.543927134 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.153257587 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.101905819 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.140125338 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.338829729 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.162531654 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.224642139 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.124085472 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.13370083 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116332861 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.119691702 seconds)
  done (took 2.968865771 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.094126097 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.147519564 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.250054537 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.11136061 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.068771841 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.091291105 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.112942799 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.074506546 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.077188864 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.077076878 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.076915596 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.072901862 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.095020758 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.069925836 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.07025396 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.072597175 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.098420528 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.069084956 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.070545494 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.07290918 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.095676805 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.062323637 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.069936417 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.068875837 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.073943662 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.073817229 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.0623306 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.062426072 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.073378933 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.07091418 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.07339911 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.089929968 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.074078833 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.103156211 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.067120398 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.10423768 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.073104563 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.07050287 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.07097105 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.070780391 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.07512328 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.075032272 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.070787638 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075379188 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.063865137 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075513051 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.064088103 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.06390851 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077106785 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.065784091 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077089204 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075095846 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.103021658 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.063283145 seconds)
  done (took 5.789421136 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.098174323 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.101849713 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067656181 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.106954706 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096265035 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068606969 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.097411484 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.089762584 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.09921081 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066623846 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.064987018 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.067043356 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079135038 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.079544177 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.109494522 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.100851838 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069965267 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068069464 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.100128431 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.099130038 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.064906195 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.090936077 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.086161835 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.097858991 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.064416012 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067125526 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.064922032 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.06680908 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.073274585 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.075084805 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.066235281 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077157276 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.081480137 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.074840615 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.063537334 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.064434414 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.064976264 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.076368339 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076370431 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.075416037 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.074380866 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064500624 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.064639817 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.066318799 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066391803 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066178208 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.075342017 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.077703089 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.075797101 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066010042 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.066847954 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.064434439 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.067543024 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079079846 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.075499548 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079313483 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076607203 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06521943 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065090691 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069315438 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077903 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.075678955 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075867323 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.065958308 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.075533695 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.065017491 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077094994 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081575073 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.064968315 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.066158547 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.064780324 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066169142 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.065945617 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.074773106 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.074682113 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066098528 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.066141984 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064934188 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.077159383 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075450378 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.064998077 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.073793213 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.063621812 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06487977 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066387442 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066366509 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.074628722 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.077022504 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.066583103 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065126456 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.066119696 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.065440555 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.063764651 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.073453652 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077393465 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.075006086 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.074043082 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.064955825 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.073926404 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.074091692 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065386811 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.074899312 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.064138551 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.065732072 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064652863 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.073134398 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.20119754 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.076521439 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066510266 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.065715065 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.076067614 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077934254 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.065283815 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.075129663 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077255369 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.076419569 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.065783294 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.077672036 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066121016 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076694505 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067237207 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07685581 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066058939 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076426732 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066047978 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.065030444 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.065528893 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.076600021 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067410443 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065513111 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06674604 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066922314 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.077214923 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079442944 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067508718 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07855972 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.075088967 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.067128205 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077135889 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06613141 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.076433807 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066915235 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066200787 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.063981045 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078379447 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.064958271 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.065700602 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.0659428 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.07718603 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.065662552 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.076452439 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.075627855 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065167797 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078486123 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.077188862 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.074789584 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.076974619 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067722825 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06557944 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065401867 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.066213299 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.074756979 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076666216 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067529718 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065072745 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.075459007 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.076602859 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.064028146 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.075347118 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.076198866 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.075328823 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.064911195 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.066419392 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.076543681 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.076935878 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.075186696 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.074825844 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074975603 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.065613976 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.074368883 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.074977914 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064997626 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081911202 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064912269 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.079466257 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075613398 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07383622 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074996162 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.076755561 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.076734576 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.076619417 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.079981242 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.064469936 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.064413759 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.076565234 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06465834 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065932652 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.074942568 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.066275413 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.066340974 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.079906842 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.065388269 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.076258971 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.06444876 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.074262163 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.062755943 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065460114 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078840946 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06373566 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.064776788 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.074900987 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.064914264 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.072915817 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.075190142 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.073077772 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.063700756 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.065107252 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.073996186 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.073041208 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.063134072 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.062982323 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.065356346 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.072748401 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.071145454 seconds)
  done (took 17.737909152 seconds)
done (took 36.416527172 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.209308768 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.149907282 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.176847389 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.115181915 seconds)
  done (took 2.113431266 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.119303631 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.097766545 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.093127683 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.062254929 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.098838677 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.062113001 seconds)
  done (took 1.929250763 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.30952202 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.206853593 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.178977035 seconds)
  done (took 2.092198619 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.196563004 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.184990564 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.395987351 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.250223875 seconds)
  done (took 2.533312283 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.14482147 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089461015 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.064835833 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.080466123 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.131350475 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.159237251 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101106894 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.124191879 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.07525804 seconds)
  done (took 2.419960676 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.143811786 seconds)
done (took 12.664257926 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.211978746 seconds)
    (2/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.217225732 seconds)
    (3/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.099970739 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.119972962 seconds)
    (5/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.230447899 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.105982284 seconds)
    (7/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.174680545 seconds)
    (8/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.093876347 seconds)
    (9/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.071635223 seconds)
    (10/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.167445597 seconds)
    (11/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.171561053 seconds)
    (12/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.225117412 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.081881158 seconds)
    (14/309) benchmarking ("sort", Float32, false)...
    done (took 0.127473264 seconds)
    (15/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.077078167 seconds)
    (16/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.158603581 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.076931289 seconds)
    (18/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.176586441 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.103390617 seconds)
    (20/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.071352924 seconds)
    (21/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073403545 seconds)
    (22/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.170144744 seconds)
    (23/309) benchmarking ("sort", Float64, false)...
    done (took 0.124743869 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.101020102 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.11848992 seconds)
    (26/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.074801168 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.12887065 seconds)
    (28/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.177304997 seconds)
    (29/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.156790529 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.102659722 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.062355953 seconds)
    (32/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.068758819 seconds)
    (33/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.108218545 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.086666901 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.088815463 seconds)
    (36/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.070125899 seconds)
    (37/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.071650874 seconds)
    (38/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.074017893 seconds)
    (39/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.194843444 seconds)
    (40/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.071671759 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.06364839 seconds)
    (42/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.075483475 seconds)
    (43/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.14949249 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071728395 seconds)
    (45/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.202581129 seconds)
    (46/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.205374649 seconds)
    (47/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.0850198 seconds)
    (48/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.051017532 seconds)
    (49/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.137457656 seconds)
    (50/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.061642729 seconds)
    (51/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.071014213 seconds)
    (52/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.116974922 seconds)
    (53/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.217904106 seconds)
    (54/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.138555263 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.090109908 seconds)
    (56/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.060094191 seconds)
    (57/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.102606218 seconds)
    (58/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.155339993 seconds)
    (59/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.171799727 seconds)
    (60/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.183252925 seconds)
    (61/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.068161761 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.064314491 seconds)
    (63/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.095338435 seconds)
    (64/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.114793781 seconds)
    (65/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.175323586 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086508472 seconds)
    (67/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.067829606 seconds)
    (68/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.062110671 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.105415436 seconds)
    (70/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.06653498 seconds)
    (71/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.132371158 seconds)
    (72/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.090506424 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.084507055 seconds)
    (74/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.092633357 seconds)
    (75/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.048798122 seconds)
    (76/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.075572558 seconds)
    (77/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.068091417 seconds)
    (78/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.103668125 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.0931339 seconds)
    (80/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.072165342 seconds)
    (81/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.137191014 seconds)
    (82/309) benchmarking ("sort", BigInt, false)...
    done (took 0.179624553 seconds)
    (83/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.068626314 seconds)
    (84/309) benchmarking ("sort", Int64, false)...
    done (took 0.202138812 seconds)
    (85/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.168493465 seconds)
    (86/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.165448311 seconds)
    (87/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.061743969 seconds)
    (88/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.049679088 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.073619565 seconds)
    (90/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.173556804 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.062526911 seconds)
    (92/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.070315397 seconds)
    (93/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.062805462 seconds)
    (94/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.149309043 seconds)
    (95/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.179095738 seconds)
    (96/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.048238764 seconds)
    (97/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.09730765 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.062646296 seconds)
    (99/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.105139479 seconds)
    (100/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.04959711 seconds)
    (101/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.063136256 seconds)
    (102/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.066073855 seconds)
    (103/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.058121591 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.090391792 seconds)
    (105/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.075967006 seconds)
    (106/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.071141709 seconds)
    (107/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.071819702 seconds)
    (108/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.147041418 seconds)
    (109/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.082475222 seconds)
    (110/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.070112019 seconds)
    (111/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.085437287 seconds)
    (112/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.049100106 seconds)
    (113/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.084413873 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.134082874 seconds)
    (115/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.049411713 seconds)
    (116/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.0488851 seconds)
    (117/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.193017697 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.086244231 seconds)
    (119/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.048519588 seconds)
    (120/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.076581505 seconds)
    (121/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.070101966 seconds)
    (122/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.068678893 seconds)
    (123/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.068751884 seconds)
    (124/309) benchmarking ("sort", Bool, false)...
    done (took 0.129965064 seconds)
    (125/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.094350536 seconds)
    (126/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.070528265 seconds)
    (127/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.147110442 seconds)
    (128/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.06925184 seconds)
    (129/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.048657405 seconds)
    (130/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.069245497 seconds)
    (131/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.070985041 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.085477663 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.067250792 seconds)
    (134/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.081873341 seconds)
    (135/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.049705315 seconds)
    (136/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.146508498 seconds)
    (137/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.074086629 seconds)
    (138/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.063285958 seconds)
    (139/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.06941269 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.133798764 seconds)
    (141/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.185343665 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.062756756 seconds)
    (143/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.069680848 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.071783127 seconds)
    (145/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.048472645 seconds)
    (146/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.072468449 seconds)
    (147/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.04794445 seconds)
    (148/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.088891627 seconds)
    (149/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.110903632 seconds)
    (150/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.068425608 seconds)
    (151/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.085169823 seconds)
    (152/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.070267071 seconds)
    (153/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.057819449 seconds)
    (154/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.072042879 seconds)
    (155/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.077598048 seconds)
    (156/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.063317688 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.085228939 seconds)
    (158/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.168700815 seconds)
    (159/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.083717449 seconds)
    (160/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.049443522 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.087470472 seconds)
    (162/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.048919343 seconds)
    (163/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.07637407 seconds)
    (164/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.085120173 seconds)
    (165/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.154355046 seconds)
    (166/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.161212343 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.073377588 seconds)
    (168/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.048244904 seconds)
    (169/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.048170987 seconds)
    (170/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.077968336 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.062474034 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.115264002 seconds)
    (173/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.066876988 seconds)
    (174/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.052134015 seconds)
    (175/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.049125237 seconds)
    (176/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.048247816 seconds)
    (177/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.048105307 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.06220339 seconds)
    (179/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.059936562 seconds)
    (180/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.068425377 seconds)
    (181/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.070219896 seconds)
    (182/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.065497318 seconds)
    (183/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.10663772 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.062181961 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.087651243 seconds)
    (186/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.07014065 seconds)
    (187/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.063640522 seconds)
    (188/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.057732161 seconds)
    (189/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.105419978 seconds)
    (190/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.076856222 seconds)
    (191/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.132583102 seconds)
    (192/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.049181564 seconds)
    (193/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.060706982 seconds)
    (194/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.063888635 seconds)
    (195/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.064516117 seconds)
    (196/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.066800268 seconds)
    (197/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.072149518 seconds)
    (198/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.136677916 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.061593546 seconds)
    (200/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.069230693 seconds)
    (201/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.060228922 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.282964711 seconds)
    (203/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.332402568 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.086577034 seconds)
    (205/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.058197409 seconds)
    (206/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.183028731 seconds)
    (207/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.048354701 seconds)
    (208/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.071657025 seconds)
    (209/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.07005845 seconds)
    (210/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.133807694 seconds)
    (211/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.062771542 seconds)
    (212/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.063860534 seconds)
    (213/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.073923358 seconds)
    (214/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.13324162 seconds)
    (215/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.078311039 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.089064918 seconds)
    (217/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.064326092 seconds)
    (218/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.049709155 seconds)
    (219/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.069563001 seconds)
    (220/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.074361159 seconds)
    (221/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.068531189 seconds)
    (222/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.066261658 seconds)
    (223/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.050914868 seconds)
    (224/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.067325432 seconds)
    (225/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.085326255 seconds)
    (226/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.17185432 seconds)
    (227/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.147967201 seconds)
    (228/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.065150799 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.061401567 seconds)
    (230/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.049185829 seconds)
    (231/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.103459851 seconds)
    (232/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.062658201 seconds)
    (233/309) benchmarking ("sort", Int8, false)...
    done (took 0.136403838 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.128864682 seconds)
    (235/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.063712546 seconds)
    (236/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.048585951 seconds)
    (237/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.064141071 seconds)
    (238/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.04838452 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.062179949 seconds)
    (240/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.06417509 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.098253526 seconds)
    (242/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.049326964 seconds)
    (243/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.049534434 seconds)
    (244/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.147443787 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.062437847 seconds)
    (246/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.071917585 seconds)
    (247/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.070351829 seconds)
    (248/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.061596174 seconds)
    (249/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.050374876 seconds)
    (250/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.048235478 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.133361985 seconds)
    (252/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.047904318 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.084490588 seconds)
    (254/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.062547709 seconds)
    (255/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.048530962 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.062125444 seconds)
    (257/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.05863512 seconds)
    (258/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.065943252 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.062367282 seconds)
    (260/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.065243782 seconds)
    (261/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.058375595 seconds)
    (262/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.064320567 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.068566588 seconds)
    (264/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.064538209 seconds)
    (265/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.050073479 seconds)
    (266/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.160405941 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.07009363 seconds)
    (268/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.068618833 seconds)
    (269/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.058367625 seconds)
    (270/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.048200789 seconds)
    (271/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.063013036 seconds)
    (272/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.064336011 seconds)
    (273/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.062045172 seconds)
    (274/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.048701119 seconds)
    (275/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.050669304 seconds)
    (276/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.049637879 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.126076829 seconds)
    (278/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.069980189 seconds)
    (279/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.048359998 seconds)
    (280/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.060790788 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.094459881 seconds)
    (282/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.049521572 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.06106128 seconds)
    (284/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.049520173 seconds)
    (285/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.06815316 seconds)
    (286/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.129001838 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.103747926 seconds)
    (288/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.04822222 seconds)
    (289/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.049299414 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.069162701 seconds)
    (291/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.064412385 seconds)
    (292/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.068226067 seconds)
    (293/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.085411395 seconds)
    (294/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.061853166 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.067039612 seconds)
    (296/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.048195389 seconds)
    (297/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.062484993 seconds)
    (298/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.048178702 seconds)
    (299/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.063281841 seconds)
    (300/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.067749157 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.062185279 seconds)
    (302/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.15484059 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.068130082 seconds)
    (304/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.07526206 seconds)
    (305/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.070089958 seconds)
    (306/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.048590888 seconds)
    (307/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.049046974 seconds)
    (308/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.059910486 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.086287439 seconds)
  done (took 29.651612001 seconds)
done (took 31.059501599 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084100395 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088644696 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.071898332 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.088655619 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.077287947 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.072632052 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.068783423 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.074587705 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.076029812 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.077983702 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.074852254 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.051188603 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.070814834 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.070482692 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.070957105 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.087452265 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.074214889 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.069449904 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.069367591 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.06158942 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.069305238 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.062561825 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.063736486 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.051090246 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.073715714 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.067919593 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.068785102 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.070147378 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.062205879 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.06236029 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.065404977 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.069556701 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.061869156 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.073917749 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.068816116 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.069551372 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.071170929 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.072671951 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.064208956 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.062202578 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.070770896 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.062173822 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.068944857 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.069954532 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.069249246 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.067347272 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.069915905 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.074252009 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.086988319 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.064159839 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.070367376 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.071768703 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.072496868 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.068866787 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.065883691 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.069433204 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.067154227 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.087447595 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.069557998 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.064776264 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.070601177 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.070797219 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.06739584 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.068978312 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.069611225 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.071679209 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.071746438 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.067234477 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.070875762 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.067723362 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.061786335 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.069040327 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.065534347 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.062249501 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.072044099 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.072870682 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.060821649 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.067561755 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.068302749 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.06729156 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.06101984 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.063773821 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.06339587 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.067799461 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.063664355 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.051112602 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.065771834 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.068083801 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.061300979 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.069118515 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.067890753 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.068187739 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.063970941 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.071614298 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.061660376 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.067250174 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.062195952 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.061854565 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.063309274 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.065407645 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.061504804 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.063925207 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.070330846 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.062904659 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.067841323 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.074805302 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.061718848 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.068145658 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.060870903 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.061156223 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.075865481 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.071039342 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.061713232 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.064173109 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.060781465 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.068610313 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.060846694 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.062015389 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.061380375 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.061499845 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.067462543 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.061389779 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.063507823 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.06821174 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.073472387 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.060908452 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.064196914 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.062596258 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.060815807 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.066249844 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.060910849 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.060925926 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.062987731 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.056971705 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.063030431 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.061058311 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.067840858 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.197349531 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.069793256 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.064030942 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.070178904 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.066737563 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.068437303 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.067428028 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.06082018 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.055995889 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.064159785 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06518771 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.063919893 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.061958299 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06431601 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.062307223 seconds)
done (took 11.903012424 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.065069776 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.138900862 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.095090624 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.091526114 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.082519569 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.063211275 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.07281531 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.098425088 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.064451817 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.098892883 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.084288484 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.081557636 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.108981575 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.061183141 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.062258317 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.066331444 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.063630013 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.077805217 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.097299729 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.082961948 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.112805891 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.061832963 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.090314056 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.086226902 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.083864474 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.088206563 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.063129421 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.066107224 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.065873223 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.096455332 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.082778209 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.066066512 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.062858462 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.096616143 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.089048624 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.079540487 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.06269222 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.078993214 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.063172864 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.062523361 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.064268746 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.094396046 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.075873692 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.076668286 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.066397768 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.065901472 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.064086177 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.079731958 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.084668803 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.075218327 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.083321584 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.099026598 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.065571271 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.062069897 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.061106334 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.081722984 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.061880662 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.065397839 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.062533068 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.064600024 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.062319756 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.065906259 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.077463396 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.078513208 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.066037941 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.076880373 seconds)
  done (took 6.565652386 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.080889643 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.086432328 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.079776533 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.079542923 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.062380981 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.062713407 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.062639536 seconds)
  done (took 2.014722827 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.063409918 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.084623099 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.084932822 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.085606952 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.080696945 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.083400167 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071969515 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.062792298 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.076482639 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.063781716 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083518168 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.097951645 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.064054086 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.069155905 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.086808703 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.063083312 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.086190689 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.062972173 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.066054585 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.086024181 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.064884193 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.078261374 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.066149095 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.063153265 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.077241679 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.063379789 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.109297069 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067277738 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064702483 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.066533206 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.061267788 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.103446165 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.076725813 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.071749611 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.062905411 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076739682 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.077251227 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.061614384 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.079327498 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.067977403 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.076483914 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.063364842 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.06406258 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.061017384 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.067595666 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.073515797 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.063904033 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.063477287 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.065550215 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082123969 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.063566888 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.076272697 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.066501544 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.065482184 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.064103233 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067169132 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.072614265 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.064029086 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082699433 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064323707 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.079681626 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.078664874 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.076855321 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.079108361 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.065573942 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.076737035 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.076690491 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.065463557 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.064801894 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.066789865 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.079459539 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.061626636 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.064779065 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.073768312 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.065123382 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.086158544 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.086021678 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.064417226 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.071956337 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.063643832 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.063121493 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.063241463 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.085532935 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.065770267 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063164939 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.066912602 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.065650535 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.06193725 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.062342816 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.066518455 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.061405839 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.064345483 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.066014656 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.06589249 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.065474307 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.079225683 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.065397696 seconds)
  done (took 8.421059775 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.067379964 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.06451155 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.065553352 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.065295861 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.063925695 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.064507644 seconds)
  done (took 1.91604627 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.090818782 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.065652195 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.076763491 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.068708498 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.101066424 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.082985651 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.08312998 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075235282 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.080094892 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.074824118 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.082923056 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.084538634 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.08935406 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.069297982 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083073153 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.068427857 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.08354035 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.072121424 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.074585182 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.069606428 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.082731862 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.069279207 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.069662755 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.077990734 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.072440177 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.068584057 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.063752364 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.075138997 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.075053342 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.074949502 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.06914681 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.072028139 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.06711008 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.074557292 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.083507828 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.067377366 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.068489423 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.07398928 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.06885916 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.071919928 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.084513265 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.069548268 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.071122977 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.073629377 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.074899991 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.067338877 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.073627857 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.072562766 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.082899863 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.073680101 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.073584205 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.068622006 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071723924 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.073548824 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.067375251 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074491451 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.073564655 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.083115057 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.069124236 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.067358314 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.065400665 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.07199633 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074504592 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071516706 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.075490281 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.073683736 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.067124103 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.068965565 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.069774449 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.068194232 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.073402078 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.06581139 seconds)
  done (took 6.840301855 seconds)
done (took 27.246073105 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.542300868 seconds)
  done (took 2.03465202 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.606355634 seconds)
  done (took 2.126025316 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.58155956 seconds)
  done (took 8.097077838 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.401087112 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.493091305 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.679108569 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.126270294 seconds)
  done (took 3.259972851 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.678672056 seconds)
  done (took 2.212285836 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.208488593 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.191317884 seconds)
  done (took 1.941273833 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.374256478 seconds)
  done (took 1.887584498 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.10870345 seconds)
  done (took 2.625189542 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.257289275 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.159990216 seconds)
  done (took 1.936233869 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.457140399 seconds)
  done (took 1.973896988 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.814628252 seconds)
  done (took 6.33746925 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.204955674 seconds)
  done (took 1.7720475 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.238035508 seconds)
  done (took 1.760519274 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.673597476 seconds)
  done (took 3.197090219 seconds)
done (took 42.685122494 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078018743 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.077424768 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.077937465 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.075073413 seconds)
  done (took 1.816941231 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.074864252 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.068965883 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.073137215 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.068907452 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.072664438 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.069144812 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.070469307 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.073749865 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.068936174 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.069270771 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.069401458 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.068729505 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.070944394 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.070776457 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.067685517 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.071592317 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.072187196 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.069179303 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.071737164 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.068816827 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.067664307 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.070731857 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.071405384 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.068216495 seconds)
  done (took 3.220172502 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.075694442 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.068514923 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.070324719 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.068069663 seconds)
  done (took 1.819693348 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.075947238 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.088297125 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.085076197 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.07397055 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.087911624 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.082828848 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.065683275 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.065327664 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.069188621 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.07343266 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.064553143 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.092111798 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.083947644 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.073217781 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.075442842 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.062266372 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.064464914 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.083058901 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.073367622 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.073473099 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.066230566 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.073334647 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.064387535 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.084604905 seconds)
  done (took 3.335257137 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.076466708 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.101340805 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.073225135 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.08342438 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.086072499 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.06200047 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.070922966 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.085090228 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.118666085 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.061564476 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.066733152 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.062138752 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.069162577 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.061751072 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.072880063 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.101051262 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.104258784 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.064967454 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.091893272 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.061709086 seconds)
  done (took 3.114516569 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.071716552 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.065991854 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.061921059 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.065430859 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.073188739 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.068429843 seconds)
  done (took 1.945423833 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.06636584 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.064405492 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.063756939 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.062842649 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.067839179 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.063161481 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.062425965 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.063474156 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.064198498 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.063640503 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.063166187 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.062027082 seconds)
  done (took 2.301968694 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.194792634 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.064665558 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.064429774 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.0626548 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.067123205 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.062670506 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.076096839 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.064212844 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.086438461 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.062804172 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.063052245 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.064638309 seconds)
  done (took 2.470027249 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205039783 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073564427 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233157702 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132577218 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108176389 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111418832 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099783281 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109463831 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.138736075 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09792548 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163873265 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160415677 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103289447 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132990183 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08498853 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.093793387 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150861906 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157766964 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099559157 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161359529 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139420982 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120316026 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142230293 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097563511 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102170155 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118063829 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.067065538 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076619396 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166163755 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127166826 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141791761 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106390414 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089275944 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171168472 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166189217 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13794313 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129480024 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080173148 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.097653466 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.128356471 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192584901 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084066523 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156691474 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101611123 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.213720425 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12851683 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115451404 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.115857461 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.103077553 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086159705 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141496461 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177805042 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.134386303 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.0837793 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107598977 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111933524 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.112403776 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099055792 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17809382 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15667043 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127960412 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.067894263 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095034216 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147922902 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126761273 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.10558848 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.122868227 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089546857 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129127169 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149781325 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114973486 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139017942 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.124638 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084544099 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115417491 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135686824 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124080402 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165097908 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120317287 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.069076353 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120808396 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09975402 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077512909 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.137216956 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.071798842 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170007953 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09432219 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.101841076 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.108317106 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104047687 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104732301 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155801113 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138502394 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098202389 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.060785925 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239522825 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.116324924 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143753305 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083977684 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104868759 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113694623 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.074151756 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135182519 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.070642093 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118045706 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.071344355 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121046487 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129383434 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.071601653 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118005916 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096626601 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.09573201 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128716583 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155593218 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084941861 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078763758 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161895278 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117693927 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.100973612 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138747642 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151057522 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.094442884 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099393352 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144444808 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175230126 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085476458 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15794927 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103111256 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079643319 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.083117295 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119706268 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108511535 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.117627655 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078410899 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.114062481 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16326039 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.071468731 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091119326 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12894332 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075385174 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076946259 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099392386 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096396823 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.091307462 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.096141039 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.099817459 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132641113 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118710356 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099809089 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120098149 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093135712 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159254443 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082916871 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.093576646 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096723772 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.064360149 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.127350575 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146851015 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.073698185 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153277629 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.115011718 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097963671 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111024548 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077401179 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131758898 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.072838341 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.065058328 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130755614 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100812425 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101946096 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.13684904 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095471271 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.114178579 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.108253501 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121622949 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118969202 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.118540641 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096009337 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.080452203 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102056324 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114123589 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.067128236 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.08238141 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.07253977 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094659616 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086600417 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076198059 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12858784 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11239428 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091839867 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102271427 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088439089 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135148278 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.069205408 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116053265 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.108458113 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085441092 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.138937246 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138587225 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120044932 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090119253 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132928751 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.064533986 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.068114944 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.081078171 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111887819 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076781714 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076660778 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.365187932 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145599277 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125982378 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1350412 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108971508 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117855669 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15132833 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.066444898 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.112913943 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143525112 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116563227 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.100259525 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086723599 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.095767907 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138694996 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104973696 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177397714 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110324322 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122528251 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149171988 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.095383316 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077010745 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099951895 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131383046 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101095127 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140955518 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096163924 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084565565 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106292141 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.070706743 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096365079 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12314115 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115481284 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130997564 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.110473759 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128836123 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073374414 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112403918 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116737097 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118915991 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.060613281 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116060958 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157352572 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089774245 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113275309 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148267477 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.075525507 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.119761113 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17022965 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139553167 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.227804135 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105809389 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114621042 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122863408 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115993421 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135894277 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103719494 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130641025 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104946429 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.08160636 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083661309 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092891334 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100421886 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.08991161 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.103704042 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.109412654 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.090450093 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12676199 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098591149 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10469994 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113026421 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.092590779 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.085163544 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092264812 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16912175 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114453913 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166067977 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.095015601 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.140817899 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159505124 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.070977337 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075028087 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.07427721 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135009198 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079701905 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126424942 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.093370619 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101646555 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119494013 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137477995 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091722257 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.064866759 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103999822 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130044505 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108402137 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094161779 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.100320709 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158784218 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.096274782 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07577755 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109516912 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100324616 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097603508 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169466277 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.058333498 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.093330485 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.071895345 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076665426 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122307217 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.293883164 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.076449663 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.098713082 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114740758 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105921229 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123306715 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097933174 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094912528 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.110176409 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144617975 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124873719 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.085679128 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108071081 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124692841 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151385542 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101210172 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.09181944 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165976676 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147679946 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.15544094 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.084670554 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110252573 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109862894 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104435947 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135749994 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.07979286 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16240387 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078046168 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131748405 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100306724 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086448624 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125605555 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.094627282 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100928699 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14291262 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113303243 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078703613 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073852482 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113591725 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116336923 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102898421 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.072615233 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135622423 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.070080279 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12856815 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162577353 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077265955 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099988638 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091884714 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075865436 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103473251 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098131504 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085237525 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.23660402 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170024151 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.084486256 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146317363 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136982992 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109249925 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132392318 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095558373 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.631824672 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.073941971 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147127006 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112210927 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167986746 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09369777 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113369457 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105143788 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119614402 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139326534 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10140443 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.169411642 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127175208 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.11178089 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076123619 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098630546 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0985492 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.08544318 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101181841 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109852755 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11184794 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.089512616 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.111458084 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118749547 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.077979874 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090866939 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151122733 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113014459 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139499795 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135449504 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080958121 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113517704 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134476117 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076676911 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.118737413 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148023241 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101517576 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09366727 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.07624488 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.097619731 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164512694 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.069231449 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156423833 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.260357392 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105409059 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108832752 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.110584441 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127140884 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104390309 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116301574 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089339572 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.105671385 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107600845 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077949004 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.07311733 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100444248 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107860495 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.093111725 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094588189 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.093956753 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146723284 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.06775476 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09188143 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099688965 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140618536 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16960012 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.084592932 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078759041 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114575661 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108805681 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.109065995 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116663817 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.075577555 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078524911 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.078225028 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.072835953 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.104075129 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108092664 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10039115 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107025935 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159893302 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.079239385 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.215224204 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091530865 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100357961 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.065463894 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.074555723 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091473336 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093358967 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104116512 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097008081 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164831783 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.090984511 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.086465352 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08922251 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.070012907 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079241708 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124464224 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106122639 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113029971 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092942246 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.058618431 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10438094 seconds)
  done (took 56.369902553 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.110030333 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.078961509 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.094622906 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.146780085 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.119508457 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.208691994 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.154668551 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.195686542 seconds)
  done (took 2.81770219 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.06786033 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.090284453 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.096197981 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.08164364 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.063769154 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067380135 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.221352345 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079165532 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.063330692 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.085635891 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.077337972 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.067332465 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.414373948 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065053036 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.065601865 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.060948998 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.064189372 seconds)
  done (took 3.396256019 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.365364511 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.599283336 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.372105654 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.070464351 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.445401125 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.085888475 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.063054217 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.123137588 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.069706527 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.522394103 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.698666927 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.12430831 seconds)
  done (took 18.219327259 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.074970536 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.068825207 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.081811153 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.07989036 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.069159983 seconds)
  done (took 2.040494005 seconds)
done (took 104.425155087 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079812955 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.377332511 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.050963315 seconds)
  done (took 2.128048244 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.082766464 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084659029 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.080717724 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.081089378 seconds)
  done (took 2.006289561 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.074549303 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.073691738 seconds)
  done (took 1.819506824 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.220098409 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.154577498 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.083377664 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082025489 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076236403 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.075690395 seconds)
  done (took 1.910117428 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072010273 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073055351 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.069806998 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.073321103 seconds)
  done (took 1.960055146 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076396123 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.051464756 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.052883872 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.052707231 seconds)
  done (took 1.905745093 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.086258485 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.076999064 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.075585489 seconds)
  done (took 1.91236384 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.100581345 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.082505022 seconds)
  done (took 1.856709122 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081367418 seconds)
  done (took 1.754015097 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098550144 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.110540619 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.127345734 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.106731488 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.135026561 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.105443325 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.082056378 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.083348061 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.074271445 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.084305641 seconds)
  done (took 2.681152579 seconds)
done (took 22.136513635 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078212361 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.363968661 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.357217633 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086705434 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.66594773 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.353626352 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.024530925 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.088798902 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.113370472 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066292361 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.080877148 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.646033908 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.978300258 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.316041397 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.967119659 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.320011658 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.645970106 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065332349 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.064493135 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.065179293 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.012754828 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.064476017 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.064711216 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.065235238 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.644481618 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.368023696 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.064924456 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.31499193 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.064673293 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.066809447 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.352236703 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.065118009 seconds)
  done (took 16.153059603 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070583439 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.115255805 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.070473224 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.080996562 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.06738316 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.066747872 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.068171609 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.065955885 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.116762099 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066181074 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.081462799 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.064504332 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.068534318 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.065574661 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.083755058 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.064840286 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.065846415 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065044087 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.064938525 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.065119311 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.083324786 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.064440452 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.065026106 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.065911617 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.064664858 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.076374849 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065043904 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.064893551 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.064932632 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.066507846 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.067742018 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.065305818 seconds)
  done (took 3.979320203 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114706886 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121514085 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.070962574 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.100028915 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.109481973 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.066812696 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.139802353 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.089339203 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.124300062 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064960847 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.081520138 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.064772434 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.097722535 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.065921798 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.084934931 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.0655838 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.066147884 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065416246 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.065761195 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.065574552 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.084186476 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.065257075 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.065726557 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.066115916 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.065687106 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.078822968 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065708412 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.065719582 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.065763205 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06752815 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.068921555 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.066001631 seconds)
  done (took 4.241033013 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072739576 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.072619561 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.080514642 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.080751547 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.06647278 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.069071698 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.069706752 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.066750313 seconds)
  done (took 2.273154791 seconds)
done (took 28.325841723 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078174959 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.065918831 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.069410186 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.077688221 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.07008409 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.075410983 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.063929294 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.071497764 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.068849747 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.069661512 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.071967648 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.064499343 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.068055916 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.064465956 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.070403251 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.064783438 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.076139968 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.069095591 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.075794989 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.075947016 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.067620496 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.070007583 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.071595497 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.076147958 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.076290953 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.076431137 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.074482018 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.069729988 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.066294237 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.067610896 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.073782177 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.080741029 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.066194762 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.077142593 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.066593061 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.065445113 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.068816401 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.065027803 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.076343977 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.073913276 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.066741202 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.073422464 seconds)
  done (took 4.653628196 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.08744179 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089590231 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.081175182 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.058336841 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.063426488 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.061638154 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.085045265 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.056401481 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.056665723 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.084265585 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.05281418 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.056318154 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.059743662 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.05091593 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.056414771 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.053761439 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.058266704 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.052714062 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.056313879 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.056190355 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.084654852 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.051128344 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.074044988 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.059687755 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.05569529 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.05860463 seconds)
  done (took 3.364148974 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073910246 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083036684 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.085627209 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.122666883 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.100347913 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.074004491 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.076917139 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.089618597 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.082836725 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066019052 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070083526 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.091248534 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085130706 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.070945139 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.064847876 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.082251026 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.079342553 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.066071846 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.070693282 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.089931007 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.082572668 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.08235781 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.090243002 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.078076281 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.06406726 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.066883466 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.068456081 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.078906153 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.069144088 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.073630868 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.068782614 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.068493831 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.066472491 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.076051149 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.068363218 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.066765679 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.087661267 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.074755589 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.075146857 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.065342609 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.068030286 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.065779719 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.088273276 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.123860028 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.064814207 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.071442463 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.072059627 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.074230648 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.065404719 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.083416766 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075631175 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.064002187 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.067481672 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.063592391 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.064369622 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077253765 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.066837353 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.067042231 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.073340036 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.067359042 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.086435441 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.068433576 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080093489 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.06404597 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.07208326 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.063753623 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.065611637 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.063510997 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.08951778 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.066186206 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.105151699 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.06687238 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.065390454 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.072996 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.071794332 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.070462324 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.064746481 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079998449 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.074427224 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.067861459 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.0725894 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.067712544 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.067464441 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.084406504 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.066573832 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.065930257 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.065567435 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.070759542 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.06714242 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.065641747 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.077001592 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.064670941 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.067382974 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.080805509 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.064045561 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.06548528 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.070880172 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.069187756 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.064073646 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.07527965 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.069178041 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.065060447 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.073524701 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.06451254 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.067625656 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.076393396 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.070524406 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.063477589 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.069348181 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.070671912 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.065230154 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.066142713 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.067525532 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.066568479 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.07283561 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.071141071 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.068741691 seconds)
  done (took 10.288900329 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.174226112 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.150663963 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.067253454 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.140576391 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.073246497 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.07594997 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.145919615 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.091527671 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.064583204 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.064784705 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.065381997 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.106720172 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.102519156 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.112110112 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.07552919 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.064692516 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.080312447 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.110450709 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.145650176 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.139587094 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.080660983 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.073867156 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.067631185 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.066066068 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.067388043 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.075266327 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.08253481 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.073637067 seconds)
  done (took 4.371854543 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081017683 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.095573883 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.071588451 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.086157152 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.088319472 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.064917256 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.067360994 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.066356086 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.077794996 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.075880477 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.064767107 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.070734347 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.071757167 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.068565993 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.065602566 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.071521637 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.072420884 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.066827828 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.068370171 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.070024839 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.074620425 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.088789287 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.068711602 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.063941799 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.069896632 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.06437055 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.061723747 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.081948905 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.065041834 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.088898733 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.062937468 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.072960713 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.078606554 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.065663374 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.064611808 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.065011176 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.064737889 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.064708983 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.066579871 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.06352146 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.063759113 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.054699035 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.06410759 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.07646475 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.071016691 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.053512723 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.070104073 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.070273623 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.07031411 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.062525963 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.068348398 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.067754227 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.068009319 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.071926541 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.069892454 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.070216965 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.066165065 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.070873868 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.072812442 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.064713128 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06166191 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.063260026 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.069480189 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.062989646 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.072293865 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.069117946 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.063579984 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.064061428 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.066440519 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.070702555 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.064348473 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.067971303 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.062444809 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.066611168 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.069366012 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.066294361 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.065970791 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.063380464 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.064555464 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.065203668 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.052503149 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.064895784 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.050718162 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.067953561 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.062956707 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.0636759 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.064669717 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.07000477 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.077309564 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.06620422 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.070515068 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.065739323 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.063821986 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.067939398 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.05748885 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.067706551 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.079940394 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.079772089 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.064938282 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.063036036 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.079070204 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.0695679 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.064111979 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.053404152 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.071910686 seconds)
  done (took 8.915922338 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.089976216 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.067044094 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08054194 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.088173223 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.083927274 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.072013464 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.073702666 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.066217362 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.079237832 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.070799004 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.073803325 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.065862341 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.074210553 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.073925853 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.067000526 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.073941578 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.069236849 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.080007156 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.079020532 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.06515422 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.07302302 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.076989918 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.086041916 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.076554171 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.075718238 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.076745964 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.086332375 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.069309586 seconds)
  done (took 3.856352297 seconds)
done (took 37.143237447 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.776359399 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.951707859 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.77232006 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.145894514 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.983940167 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.878313162 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.782115821 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.77371073 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.920494412 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.812378277 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.017797618 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.81147696 seconds)
done (took 65.333174133 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.787469488 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.908159131 seconds)
    (2/2) benchmarking "String"...
    done (took 2.045506794 seconds)
  done (took 5.663234782 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.093298868 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.425474235 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.003433711 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.769328192 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.773650663 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.003745391 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.577998014 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.305786489 seconds)
  done (took 30.571034041 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.957976013 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.012913136 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.467714857 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.513096534 seconds)
  done (took 15.712323865 seconds)
done (took 63.706646692 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.77769471 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.80064369 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.772059911 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.75509763 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.828421989 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.789404322 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.897153971 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.97992496 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.768272473 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.759517472 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.770100136 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.204674033 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.768919108 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.921705367 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.771142892 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.776041945 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.772026391 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.225136803 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.925997126 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.778116565 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.787885409 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.824963439 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.772331059 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.775731325 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.786454559 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.769627282 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.197910451 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.777074648 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.388465109 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.775134267 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.799140922 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.07170373 seconds)
  done (took 204.475829513 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.771152888 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.639268077 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.703574814 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.81579452 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.144447098 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.955515769 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.884851139 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.208877569 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.775098997 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.80107088 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.910751767 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.773329151 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.952402303 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.721165514 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.813304705 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.875299586 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.957645554 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.98196872 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.81605808 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.941283666 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.794711658 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.773216634 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.711677703 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.907822607 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.805482431 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.786316863 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.789895586 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.799038615 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.963637258 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.926851701 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.7771519 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.782885931 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.903855172 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.644267021 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.773664729 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.796469722 seconds)
  done (took 169.090723306 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.299454838 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.773945531 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.773926072 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.774132921 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.787292191 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.773388759 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.940186706 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.89972172 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.236707832 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.909459167 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.828396967 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.622886742 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.771594188 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.842222684 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.787170988 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.773078391 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.789645848 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.799835696 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.775445043 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.775491715 seconds)
    (20/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.774098731 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.899814518 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.787224643 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.77955826 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.775525335 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.77963264 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.145544879 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.833039203 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.775042257 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.779878514 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.036532623 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.773626798 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.773530855 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.677630228 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.488125876 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.78180596 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.859024093 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.774908978 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.780471576 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.774123817 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.997012605 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.772777219 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.775813235 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.777905909 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.955085851 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.772061591 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.900424944 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.77455347 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.278364861 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.773334766 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.777017988 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.556908422 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.45932513 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.775867085 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.774895501 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.779210678 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.776726641 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.775925836 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.782179914 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.578462484 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.853024591 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.776182861 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.77958186 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.781223382 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.776832977 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.870364872 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.773335225 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.237923831 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.837179079 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.885204583 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.897987561 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.777799178 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.777988677 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.844887006 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.869285403 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.774924091 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.775524886 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.776984001 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.779270923 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.776795419 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.859209757 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.776824104 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.9076063 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.783015869 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.77816275 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.82789033 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.848698948 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.7754199 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.671335363 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.775658463 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.778397834 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.102127648 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.84293239 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.776743567 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.777700544 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.777167957 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.905272407 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.900895794 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.553598517 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.775818065 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.662002408 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.779213493 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.919516464 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.778159898 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.968984089 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.781606908 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.862968812 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.783397472 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.781053614 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.778518471 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.81115747 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.78094283 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.83911398 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.776728719 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.149654639 seconds)
  done (took 402.494020811 seconds)
done (took 780.128809302 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.451684485 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.409938251 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.52742756 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.436841567 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.407049027 seconds)
  done (took 13.947901155 seconds)
done (took 15.664306209 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.869616195 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.873130688 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.804472865 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.870178023 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.801762856 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.869234963 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.851790583 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.806641227 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.835509066 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.806691934 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.838354679 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.806395782 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.792182748 seconds)
  done (took 25.542471573 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.012773558 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.020395011 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.849684747 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.00814 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.827908834 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.010787234 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.942421104 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.928506737 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.936530699 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.796606813 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.794357712 seconds)
  done (took 22.846861854 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.01683725 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.01918918 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.859190235 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.024531459 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.831737171 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.016631406 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.946187035 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.935025236 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.933232154 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.79676371 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.794328699 seconds)
  done (took 22.891817516 seconds)
done (took 72.999339794 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.789812252 seconds)
  done (took 3.507572159 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.812911372 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.95061518 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.79677731 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.794010276 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.790906647 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.793344558 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.796075017 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.791060387 seconds)
  done (took 16.245641754 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.787577648 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.787446155 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.78994953 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.789394017 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.790025838 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.791839703 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.790432654 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.789543871 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.788809631 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.790207246 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.788330412 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.789754756 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.789278335 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.787871547 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.787888825 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.786885736 seconds)
  done (took 30.346087077 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.789532774 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.787099152 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.788245038 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.789110073 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.786918317 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.787846601 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.79022159 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.787360505 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.789259921 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.786581123 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.789830551 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.788134327 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.789576048 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.788689988 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.787808105 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.789548215 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.788358895 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.788044576 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.795084438 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.791799512 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.790440593 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.790010767 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.790551214 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.791116885 seconds)
  done (took 44.666904226 seconds)
done (took 96.484064958 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.727972903 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.188355627 seconds)
  done (took 8.636534327 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.787333187 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.78433796 seconds)
  done (took 5.325268555 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.785510458 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.785516903 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.786751744 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.786661091 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.786495722 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.787774056 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.787419849 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.786407821 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.787286973 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.786440905 seconds)
  done (took 19.582256984 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.785297722 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.786810643 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.783114139 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.787174856 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.786652136 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.783535339 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.786913425 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.787028216 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.787204474 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.784813251 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.786557225 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.784137732 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.788226868 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.785307158 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.786601688 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.78518573 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.783453307 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.784693326 seconds)
  done (took 33.859866656 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.788224641 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.78716735 seconds)
  done (took 5.292765573 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.785278043 seconds)
    (2/7) benchmarking "second"...
    done (took 1.784671185 seconds)
    (3/7) benchmarking "month"...
    done (took 1.784714754 seconds)
    (4/7) benchmarking "year"...
    done (took 1.786446209 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.784607253 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.785341113 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.784665873 seconds)
  done (took 14.212732874 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.788722073 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.946742339 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.025587511 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.45477705 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.789428141 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.791725406 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.737328073 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.790970412 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.793638242 seconds)
  done (took 19.836603087 seconds)
done (took 108.467525012 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.62895164 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.78239938 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.137998233 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.830566473 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.835632115 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.122521944 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.800665291 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.011657503 seconds)
done (took 42.867799401 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.793079186 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.3575595 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.386764268 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.23303173 seconds)
  done (took 12.695069426 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.768615134 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.305621594 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.819163087 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.388340878 seconds)
  done (took 20.014863684 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.153330785 seconds)
    (2/2) benchmarking "read"...
    done (took 2.140060695 seconds)
  done (took 6.018920259 seconds)
done (took 47.242844627 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.789503358 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.791532947 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.787333402 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.791002981 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.787613809 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.786819158 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.790528046 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.788660997 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.789353545 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 1.790707485 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.79024372 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.789436541 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.7877617 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.789810997 seconds)
    (15/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.787989863 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.790927625 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.788305967 seconds)
    (18/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.787994414 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.788898713 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.789624221 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.788752217 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.787014604 seconds)
    (23/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.790888397 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.787886321 seconds)
  done (took 44.657517191 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.791781141 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.789942205 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.79100437 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.7927821 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.788516426 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.792206926 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.792476695 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.788472263 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.792566665 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.793588784 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.788849543 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.788789351 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.791653677 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.790323335 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.792314235 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.789541535 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.792533886 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.790273849 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.791199268 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.79042331 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.792495543 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.790386614 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.790464087 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.792601437 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.790369851 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.791185835 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.792932014 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.792462861 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.791980371 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.789916063 seconds)
  done (took 55.456936999 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.797992044 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.801675321 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.792270732 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.793614094 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.794408143 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.792643862 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.794435635 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.79324055 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.791797321 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.793650739 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.794252719 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.79283392 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.793955763 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.794706473 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.79284456 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.793587423 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.794413167 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.795039134 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.793473886 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.792648259 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.794294457 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.793758657 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.794734323 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.793961292 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.793472379 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.793241209 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.794088257 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.79358697 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.79374935 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.793722672 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.79291855 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.79314096 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.79407159 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.794920594 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.794478695 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.794376065 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.799565177 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.804309595 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.794687462 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.795943502 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.79724343 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.795225373 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.794182235 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.796164058 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.795483724 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.795035263 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.795084531 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.796554286 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.794368982 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.794925319 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.795389544 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.795358586 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.794632916 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.79528804 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.795889349 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.794935532 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.794612665 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.795322404 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.795574696 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.795720882 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.795069345 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.795157787 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.795838136 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.796349347 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.796092092 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.79692618 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.796060285 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.796851681 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.796359822 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.796278039 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.795866699 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.797374294 seconds)
  done (took 130.966723781 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.795397223 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.793078544 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.794466135 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.793572263 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.79427107 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.796518451 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.793637342 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.796958375 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.794395194 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.79586328 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.797709105 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.795059128 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.795742509 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.797164608 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.798830529 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.794233245 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.796816483 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.793986072 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.797830148 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.798176969 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.798456025 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.794650626 seconds)
  done (took 41.23334003 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.797711229 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.79734974 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.795988738 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.799453396 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.796508558 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.799075568 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.79974682 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.798453403 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.799200309 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.796219619 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.797045862 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.79851054 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.795529854 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.795422902 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.795857429 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.797116395 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.799194533 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.794923023 seconds)
  done (took 34.082025001 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.797410566 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.796605224 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.799254436 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.796287439 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.796699182 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.800120262 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.79793201 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.799384886 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.799376819 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.797141686 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.800699362 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.798494838 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.79889467 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.796879505 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.798608659 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.797343654 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.800934728 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.796004742 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.799007914 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.796669295 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.797113542 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.799815841 seconds)
  done (took 41.29038912 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.799284708 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.799620127 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.797410028 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.798629561 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.798012632 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.801605406 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.800339238 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.796536983 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.799811824 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.800883054 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.798547306 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.800381292 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.798346964 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.798409727 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.798622131 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.79929964 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.801840035 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.798560986 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.800813842 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.799168325 seconds)
  done (took 37.715590151 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.800852721 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.801379987 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.801317376 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.800678973 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.80132264 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.801820744 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.801778488 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.801811598 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.801381509 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.801536292 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.80247081 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.801638549 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.802237207 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.801839086 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.800178784 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.80246105 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.801672149 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.802378315 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.803135029 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.801538024 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.80233324 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.801525374 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.801946422 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.802089825 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.801609102 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.802809808 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.802216571 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.801698808 seconds)
  done (took 52.181365964 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.802867476 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.801618297 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.799482218 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.798891434 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.801167416 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.799114264 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.801182947 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.80037397 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.802390756 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.801629343 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.803993685 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.803382823 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.802887878 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.802845145 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.803301905 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.803694926 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.802777498 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.802481095 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.802108616 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.801369859 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.80351286 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.804985741 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.804678561 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.801278713 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.802289633 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.804420849 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.800831574 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.802756023 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.804035108 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.802246528 seconds)
  done (took 55.801942186 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.820949416 seconds)
    (2/2) benchmarking "in"...
    done (took 1.823490614 seconds)
  done (took 5.376796199 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.800999635 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.805231294 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.805662238 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.801603957 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.801018725 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.804745615 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.804025079 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.801624171 seconds)
  done (took 16.159127375 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.80443554 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.80529437 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.803067139 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.804464881 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.804824311 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.805864914 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.811205442 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.805654081 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.807614604 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.805331368 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.81271368 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.815095028 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.807845291 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.804100485 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.805119545 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.805250468 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.804132964 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.806591394 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.806739813 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.805848424 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.804758353 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.807671963 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.80731942 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.802513507 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.807290378 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.816293382 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.80928087 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.80486168 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.807357386 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.810774455 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.805500432 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.802531506 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.80648383 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.805487851 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.807152118 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.805984097 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.814584031 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.806219142 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.811130453 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.806027305 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.808464808 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.80445727 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.807989127 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.807408069 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.808309338 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.806519758 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.808587825 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.805642425 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.807051334 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.811418367 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.813845614 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.805211992 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.804460783 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.810402093 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.807961405 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.811373438 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.80693031 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.809686813 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.817167651 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.817260683 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.819986406 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.816441671 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.807853731 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.807084519 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.817447827 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.835539054 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.813224842 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.804558534 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.805584942 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.807822636 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.814298336 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.821509382 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.819017866 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.807377896 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.807757875 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.809343944 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.809280707 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.808568611 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.815583659 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.808972483 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.807029569 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.807036602 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.818183254 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.835130308 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.807273788 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.810275986 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.80839287 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.807576184 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.810242948 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.819988714 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.809335772 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.809495138 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.809502297 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.809543963 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.810908041 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.809492479 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.808638725 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.811165796 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.806488857 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.811137293 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.810522889 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.813819218 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.820599775 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.809124891 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.808471816 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.815789997 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.808294347 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.810207502 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.81519794 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.809419709 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.809202235 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.809748138 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.816242526 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.806457604 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.81313419 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.820728837 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.811354047 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.812491086 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.811114849 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.808600717 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.821492164 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.840270906 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.810090913 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.811187856 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.815532848 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.825009902 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.810267721 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.816242796 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.81065503 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.810007251 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.809859478 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.813262363 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.810116754 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.812053733 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.811140541 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.813577976 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.809389246 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.812035201 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.813438521 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.81266781 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.812538403 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.811735962 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.812839536 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.813407898 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.81179257 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.812758877 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.817030656 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.811661097 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.813511087 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.812407342 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.810479085 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.81289897 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.814583631 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.812620712 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.812549402 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.812302027 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.811148411 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.812702819 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.812682796 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.81394809 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.812618396 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.813937002 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.81674679 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.813545561 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.815860485 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.811460455 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.809427676 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.812281336 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.813638882 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.813646768 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.813382198 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.81215869 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.816704814 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.821855322 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.812115438 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.812439873 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.816178452 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.811612525 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.812596998 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.813235621 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.816073464 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.823268237 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.812627593 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.819998863 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.812765455 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.814448469 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.814494941 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.813417056 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.813866232 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.813859161 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.818073421 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.824718219 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.826928974 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.823164726 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.815522255 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.819033451 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.816112004 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.819621105 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.817557071 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.813640507 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.81553717 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.815609844 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.815214291 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.815207998 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.816043814 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.81333123 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.814079274 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.815251506 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.814974296 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.815421869 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.815090066 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.816290628 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.816201913 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.81269539 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.815281458 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.815630004 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.814413229 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.813423628 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.816205452 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.81679326 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.81673317 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.816187997 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.823352694 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.812763887 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.817305367 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.815451954 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.816544259 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.814664268 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.816812493 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.819040403 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.814106451 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.822811512 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.816007462 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.817562207 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.821805924 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.81627578 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.817429118 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.818688384 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.815317329 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.815362499 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.82071648 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.826866937 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.817967248 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.817283596 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.818016685 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.818189634 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.818479359 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.822595217 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.816264852 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.819280577 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.817505977 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.819389764 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.815770494 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.819896398 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.819746901 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.820052239 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.820974694 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.819833131 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.819501451 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.820933861 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.818341798 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.8186605 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.817383454 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.822788251 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.829302405 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.822149235 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.819116791 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.821258823 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.81971635 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.824068888 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.819053424 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.820556981 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.819695717 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.83185484 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.830056673 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.823345058 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.8199571 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.820214184 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.824158764 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.820504797 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.824515094 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.820155099 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.820082 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.818882057 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.818402895 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.817768083 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.818629242 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.818437581 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.820595373 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.820876008 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.825301977 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.820627646 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.820590452 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.819443932 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.820580367 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.821794601 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.821565208 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.820300562 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.822847253 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.823294271 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.820080394 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.821992433 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.829066181 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.821868528 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.822440027 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.820149416 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.821550324 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.821772664 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.822046051 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.821621438 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.826100534 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.830912924 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.825268017 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.833059799 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.824291982 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.831153698 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.820981532 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.825703705 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.832229647 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.818455942 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.82151512 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.82053515 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.823359585 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.827822669 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.822100748 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.822567096 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.826949192 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.821708907 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.823412991 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.822069637 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.8215154 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.823114396 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.823404343 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.829593952 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.823271503 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.825563985 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.824936884 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.819703811 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.823485479 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.82386961 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.823005118 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.827184416 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.82385854 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.82442032 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.822763948 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.824437512 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.82464563 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.824935693 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.822628698 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.820552182 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.824958496 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.831226309 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.825668569 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.831195484 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.826384336 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.832976702 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.825641519 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.833308194 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.825667827 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.826933294 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.824904243 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.824457768 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.825923356 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.826301603 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.825994248 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.826364792 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.827231745 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.830802731 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.824233952 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.828405948 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.826412796 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.825974864 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.825269733 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.836680615 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.85371524 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.825853744 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.831365662 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.823506259 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.826701572 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.829616809 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.825180356 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.824786373 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.828742765 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.840215864 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.838609885 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.830864523 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.831279799 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.830083628 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.834923141 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.827738392 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.827007991 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.827826139 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.826116584 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.827321837 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.824005337 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.829927056 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.825768541 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.828177718 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.827294632 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.829591781 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.837591471 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.8291021 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.828604273 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.827472288 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.827920314 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.829001232 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.827545459 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.826143026 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.82760024 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.827805445 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.831099707 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.834554639 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.837685873 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.830977049 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.828736756 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.835279206 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.837116534 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.837434302 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.830451259 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.827835085 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.827297108 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.831534234 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.829335159 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.82988281 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.830200377 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.828386033 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.82806125 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.829371079 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.832420084 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.838092567 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.829345098 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.824994321 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.829100208 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.828941347 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.828462948 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.83164952 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.835051389 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.832242409 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.841061397 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.838614692 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.83350876 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.830323279 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.832019074 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.836637621 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.828032316 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.828548554 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.828810698 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.831340017 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.830017328 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.835421281 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.829371097 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.834677607 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.830280583 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.83148772 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.840134346 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.830858217 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.829127134 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.833016396 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.835295509 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.829835015 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.825196708 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.830050394 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.828946351 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.83521905 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.830550641 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.828538558 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.830528185 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.829443278 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.830639058 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.835049406 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.831594014 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.829370253 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.825632334 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.83057862 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.829120936 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.82948695 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.828687357 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.830055846 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.829709831 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.833840294 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.839594934 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.82879537 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.832045056 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.830559048 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.831627726 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.830910967 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.82972192 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.830604111 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.82880094 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.828991873 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.829725454 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.831086883 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.832803354 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.827676109 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.832583171 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.831561753 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.832209828 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.835110438 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.843167312 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.840172669 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.826995119 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.830122471 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.831675517 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.835087417 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.829375605 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.830603581 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.832922995 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.833252236 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.830833024 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.831085547 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.832314021 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.833638133 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.848619317 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.831004448 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.830912844 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.832117583 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.835679671 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.831382523 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.828629165 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.832889184 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.835229554 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.836012035 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.841946613 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.83232549 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.837694496 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.829937669 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.833062535 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.83681807 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.835057567 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.842548068 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.835109609 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.83290728 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.832988651 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.838110427 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.85162205 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.832462709 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.844928759 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.865860572 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.833116239 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.833798647 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.833622317 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.831144644 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.83219098 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.83437366 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.833318208 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.834899507 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.83367849 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.833158757 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.836265735 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.840284208 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.835266716 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.833475697 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.833696773 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.832088772 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.835539403 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.832259952 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.834044396 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.834243031 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.834966225 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.83387347 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.835637841 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.834690456 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.84769403 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.84603672 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.834521872 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.833959489 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.831683764 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.836878126 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.837643834 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.847686305 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.844390191 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.834376291 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.83506622 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.834844128 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.833980021 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.831981008 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.835446013 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.83601611 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.834639743 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.831966226 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.848550251 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.844347345 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.839463736 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.834649921 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.836947344 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.837277355 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.836292308 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.836650797 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.834738494 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.836180128 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.835766191 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.839733306 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.83580205 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.836543853 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.838470372 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.844324913 seconds)
  done (took 1088.021635004 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.834309598 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.834290081 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.832956629 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.833841316 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.834949532 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.834404017 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.835022673 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.833929263 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.83407618 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.834839263 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.834024197 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.835530897 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.835458004 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.834425923 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.834723334 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.834932614 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.833751249 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.833836766 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.834706413 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.835181056 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.834990197 seconds)
  done (took 40.290348776 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.837319042 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.834584935 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.835106545 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.836773862 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.834201181 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.837282394 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.836209824 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.838884201 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.837931323 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.835589627 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.837406665 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.837079788 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.834716226 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.835709448 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.834810226 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.839470076 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.83831376 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.836239275 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.837453141 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.836536179 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.838086407 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.835961253 seconds)
  done (took 42.173812199 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.839642891 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.839347021 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.838667714 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.837854889 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.840078517 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.836264715 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.838346008 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.846225573 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.841305369 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.841343082 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.840103657 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.841528768 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.849532235 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.849278226 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.841430107 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.838501587 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.984824671 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.838840603 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.843599128 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.838747956 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.83671114 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.844722457 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.836877466 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.838885335 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.838232646 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.840937663 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.838726553 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.840642258 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.839185315 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.84238125 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.84603778 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.842096537 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.840503176 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.841331071 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.842100235 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.841258658 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.843934954 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.840209802 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.838208474 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.840493054 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.852281403 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.86589248 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.840772157 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.845590443 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.838601888 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.842351556 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.844015495 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.849303641 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.837372817 seconds)
  done (took 92.165256155 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.841001937 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.856278965 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.844844457 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.848450193 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.848574928 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.848138466 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.852470734 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.845267989 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.839855837 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.843680956 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.845653924 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.844474152 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.840324251 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.843145276 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.84504533 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.842951376 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.838777054 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.841815348 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.835644308 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.834969831 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.838040848 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.837657122 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.845306544 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.840057146 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.841279578 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.835710606 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.837840685 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.840908585 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.847157373 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.83675757 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.840766441 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.84233427 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.838845505 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.840452926 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.840187322 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.842619343 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.840779765 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.837788703 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.840110983 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.840861677 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.841798759 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.840096895 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.838270008 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.841174461 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.837474672 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.838497514 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.838096761 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.837360661 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.840914654 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.839901248 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.839896443 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.838561695 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.839618293 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.837745207 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.841392842 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.839710164 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.840529098 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.837964236 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.840146556 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.840271221 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.838551964 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.841989496 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.839079821 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.84312786 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.843062799 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.841077401 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.839333155 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.841316286 seconds)
  done (took 126.977036552 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.842251111 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.839423219 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.843003644 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.841792551 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.843165177 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.843051572 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.842784803 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.841467677 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.842551724 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.843577763 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.844509407 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.842777097 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.843320893 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.844745509 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.843056567 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.842765813 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.840282578 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.841718983 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.844983917 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.843901127 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.845160397 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.84142073 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.842770948 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.839642721 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.844117898 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.839791209 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.840804758 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.84062839 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.840573221 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.843495036 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.84340034 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.843613096 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.84198309 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.841004524 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.841965823 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.846668873 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.843766564 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.843504657 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.843112303 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.843282369 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.846879957 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.842524658 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.842725723 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.84345341 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.844680437 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.844127628 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.846805187 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.847412066 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.843394492 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.843043545 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.841998651 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.843641506 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.848056032 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.844277936 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.843841311 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.848850683 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.842064704 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.846325565 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.844171454 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.844310557 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.847783063 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.845108481 seconds)
  done (took 116.067369345 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.838615421 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.838394599 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.835248595 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.835302451 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.83904917 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.833743633 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.83725567 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.836234662 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.835447259 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.834936719 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.837500012 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.831576801 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.830762039 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.833766009 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.830333498 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.831153027 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.830685335 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.830557956 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.833591171 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.831020088 seconds)
  done (took 38.463342205 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.832177833 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.832375901 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.829353087 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.830372056 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.831840725 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.832228008 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.830885145 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.830298054 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.827885701 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.830023864 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.831407864 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.832343149 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.828054772 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.829128967 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.831079093 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.828382792 seconds)
  done (took 31.053042532 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.828671223 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.833363286 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.830860417 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.83188845 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.828699576 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.828553281 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.831292888 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.828213959 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.829476838 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.831451063 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.831758088 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.831313569 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.832424248 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.831542534 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.828734766 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.831745292 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.82922491 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.829959641 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.832264713 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.831999524 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.830381842 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.829310542 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.832453497 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.831731676 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.830786124 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.830796145 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.829763937 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.829028152 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.830432646 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.831929674 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.829716355 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.829972001 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.829730631 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.83022689 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.833694776 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.829723127 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.833183187 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.83385219 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.832966451 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.832670717 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.832797944 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.829830813 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.833524725 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.833927917 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.830552147 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.832756648 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.831234123 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.831025864 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.831654295 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.830145312 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.834159515 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.834311495 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.834342921 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.834300781 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.835176476 seconds)
  done (took 102.490473432 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.834554623 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.833448425 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.830508632 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.833841376 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.834523687 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.831355595 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.834315457 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.83095049 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.830699053 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.833918572 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.833111331 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.834017731 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.831272944 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.833913638 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.831976019 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.833755362 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.831230254 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.831883393 seconds)
  done (took 34.755244702 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.831876518 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.834372394 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.834583173 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.831849946 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.831904161 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.834820158 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.833730789 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.834296035 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.834660921 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.831970457 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.832029684 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.834609986 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.834721377 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.83321776 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.831581983 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.831393492 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.833886919 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.835682244 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.830664552 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.830503459 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.833897486 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.834978826 seconds)
  done (took 42.097560974 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.835189357 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.832926726 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.84886755 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.853751317 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.8567197 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.870589821 seconds)
  done (took 12.864193795 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.830591007 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835278161 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.834870221 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837516866 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.839049181 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.832923079 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832337101 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.833310158 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.835431362 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832505748 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.829194598 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.831622747 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.831275959 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.829169334 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.833866002 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.83176911 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.829355907 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.829919701 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.830229878 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.832434957 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.83049186 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.830465565 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.828575381 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.828217846 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.828971477 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.832126895 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829948085 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.826935668 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.82631254 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.829603221 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.828853355 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.82614386 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827488538 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.826202184 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.829131659 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.82858726 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826732562 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828439443 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.828194487 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.826221255 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.828758899 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828100007 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.82874418 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826561397 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.828977152 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.826396877 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825300538 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.827471145 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825435828 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829343998 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.828123028 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.827223982 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.82878338 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.830377525 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.830419356 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.82911443 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.826857313 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.82597824 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.830338428 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.826861102 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.827062494 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.829162257 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.826956515 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827162315 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.831053422 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825767009 seconds)
  done (took 122.513003329 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.82667571 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.826930996 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.827486821 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.827251665 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.826412005 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.82759946 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.827610156 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.826392059 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827307388 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827189038 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.829493498 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.826081912 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.826833505 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.827554836 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.826333007 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.826373082 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827342654 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826369198 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.827177469 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.831544146 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827075456 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.826490189 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826296798 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.827937986 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.833694009 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.829360143 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.827983045 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827952685 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827125485 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827032718 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.82757205 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.825801626 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825918695 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.826529536 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.825786079 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.827926856 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.826075979 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.827021 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.826239289 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.829104702 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.826815356 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.829864183 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.827244971 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.827630281 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827490551 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.825776005 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.827725144 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.826674972 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.826840206 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.826299 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826811023 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.828528527 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825048217 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.8259993 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.825684616 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825646909 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825669912 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826606687 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.826014587 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.828324549 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.826138327 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.825537192 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.830882057 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.825935456 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.825386214 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.82538376 seconds)
  done (took 122.35461703 seconds)
done (took 2528.927788361 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.895339693 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.822152172 seconds)
  done (took 15.47675246 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.99000024 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.941106702 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.827597991 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.856104604 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.826288551 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.845358812 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.835948954 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.827111742 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.825300684 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.825793409 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.826179791 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.010655583 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.831231624 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.826774786 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.824783887 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.917341778 seconds)
  done (took 51.601536493 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.828796287 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.830572956 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.841185564 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.831015455 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.827865169 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.840948044 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.861986572 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.832660302 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.864192088 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.841110557 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.902134123 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.840035981 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.828524375 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.876662043 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.841666095 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.842108444 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.914204869 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.903887253 seconds)
  done (took 35.109000348 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.90592813 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.829873683 seconds)
  done (took 10.501173072 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.85392037 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.821223648 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.855259385 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.845735627 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.83364649 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.843903784 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.826570129 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.833625398 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.825075666 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.828300227 seconds)
  done (took 70.127907837 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.830761158 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.825878839 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.82603363 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.824170292 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.818743943 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.822500651 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.825768573 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.820339609 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.509707383 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.861523501 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.832480723 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.831445109 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.827013089 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.827739474 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.824810938 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.850307557 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.946662706 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.824584475 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.824406753 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.831717082 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.826290991 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.910021445 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.83958998 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.828773815 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.857012067 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.511461137 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.835004239 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.832640523 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.93815405 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.824700245 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.827977255 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.827054092 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.828450826 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.218570496 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.110601612 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.827217968 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.836679669 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.835602651 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.825898818 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.966610423 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.828299831 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.833115299 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.796630645 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.090604075 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.922717035 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.870973026 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.160709817 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.833933004 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.830291942 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.861792179 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.830710033 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.829619124 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.8405016 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.341342778 seconds)
  done (took 130.32705366 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.823149509 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.140189707 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.976750531 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.82456347 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.098019035 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.030633471 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.824169515 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.87258674 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.823915742 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.026466714 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.047507026 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.933423954 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.8252233 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.821712252 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.824393848 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.823494607 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.984512367 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.892447989 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.824903435 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.822755878 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.851900499 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.032547857 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.953705761 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.825071507 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.8464948 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.03416085 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.946691239 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.93219846 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.340054049 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.822950111 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.889677562 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.827020285 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.823980213 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.823658188 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.980467629 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.922241397 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.916885858 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.825746105 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.823084684 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.822558618 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.487629016 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.023624625 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.924057437 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.968666619 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.078567507 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.029427165 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.476019324 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.82452502 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.462003978 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.987423743 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.038496525 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.032645564 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.952778344 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.830866739 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.982310377 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.823559823 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.823210509 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.062537223 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.067242381 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.928471544 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.827299271 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.826183682 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.824052242 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.067841285 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.829280622 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.922886429 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.825998632 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.825437053 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.924701727 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.929612087 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.072823604 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.038006388 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.86093786 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.123235955 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.298005126 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.041241803 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.89428063 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.061757777 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.826738144 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.823463286 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.911889042 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.580954055 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.025075754 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.072508037 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.051641858 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.860554934 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.449979744 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.824924508 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.019066392 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.011485933 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.020856192 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.066023377 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.979409563 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.160482571 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.825191778 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.825527556 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.054226926 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.962601586 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.827323345 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.184512981 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.059163384 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.387734378 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.858305128 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.122385032 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.959068432 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.190702787 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.456403706 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.825946514 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.994165045 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.866440594 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.826999355 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.826805499 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.017218408 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.635718764 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.826262746 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.552027634 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.892993151 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.827435229 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.029587884 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.829946184 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.040520522 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.828004402 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.062290576 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.822534497 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.860776937 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.999498289 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.067347924 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.617482645 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.074797863 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.071264979 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.946359967 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.12189993 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.552681681 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.827931707 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.102781952 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.83120612 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.827160006 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.994074794 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.827363885 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.062702726 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.828992244 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.056388737 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.853657261 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.986599226 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.830538832 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.061201625 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.864448274 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.880203791 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.831787456 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.960362558 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.829395639 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.712231181 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.982760283 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.830308336 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.827963401 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.226693249 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.82812091 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.974973546 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.059170324 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.853900479 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.896591907 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.358633846 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.827900135 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.916296227 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.855251484 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.249797731 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.827790907 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.046601566 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.774884475 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.266752218 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.827549647 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.067501576 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.085604812 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.830673859 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.829298261 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.570356632 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.521773133 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.828933055 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.98833342 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.397368593 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.483048131 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.031121899 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.831443955 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.957875995 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.830502588 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.909617388 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.174850001 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.8287387 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.82909144 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.829167409 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.830845947 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.831579358 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.036259722 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.859725833 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.344651514 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.967444765 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.046097999 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.14010283 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.051752014 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.877614848 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.83396007 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.100232085 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.830836691 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.89664735 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.831937579 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.853560043 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.061933438 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.832162574 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.058823667 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.086591603 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.757246994 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.881787525 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.831770038 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.830874212 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.83054438 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.983618547 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.924153767 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.83361979 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.830967329 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.94294094 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.958237297 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.024258213 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.423574039 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.001291825 seconds)
  done (took 890.520365928 seconds)
done (took 1205.423219457 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.830699719 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.834119851 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.818483107 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.832282647 seconds)
  done (took 29.084748301 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.838580444 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.836807402 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.837492324 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.835251664 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.837935681 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.836393076 seconds)
  done (took 12.791271602 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.902418507 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.83350309 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.833002986 seconds)
  done (took 21.339260964 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.905221225 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.239410167 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.948113081 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.274142919 seconds)
  done (took 10.137123704 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.838601673 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.837665049 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.837762091 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.839025793 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.839602226 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.841214503 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.839616352 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.840047944 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.840609844 seconds)
  done (took 18.324210943 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.291433167 seconds)
done (took 97.736589874 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.028314043 seconds)
    (2/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.363062771 seconds)
    (3/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.673248316 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.753880769 seconds)
    (5/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.50110611 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.232139535 seconds)
    (7/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.336624834 seconds)
    (8/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.928673287 seconds)
    (9/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.184117891 seconds)
    (10/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.939561196 seconds)
    (11/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.126699308 seconds)
    (12/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.362322518 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.978468771 seconds)
    (14/309) benchmarking ("sort", Float32, false)...
    done (took 5.603554989 seconds)
    (15/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.969797605 seconds)
    (16/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.970802446 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.886438354 seconds)
    (18/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.022105737 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.510661823 seconds)
    (20/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.193867153 seconds)
    (21/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.870180015 seconds)
    (22/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.937534872 seconds)
    (23/309) benchmarking ("sort", Float64, false)...
    done (took 5.656537411 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.7563577 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.913589939 seconds)
    (26/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.926417562 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.962483002 seconds)
    (28/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.20519042 seconds)
    (29/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.047558803 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.83228536 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.491932292 seconds)
    (32/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.945179852 seconds)
    (33/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.976833746 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.225819828 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.239910052 seconds)
    (36/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.970377895 seconds)
    (37/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.866804119 seconds)
    (38/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.841854443 seconds)
    (39/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.893291336 seconds)
    (40/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.949426647 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.226719115 seconds)
    (42/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.872601275 seconds)
    (43/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.920433612 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.95573001 seconds)
    (45/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.827838992 seconds)
    (46/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 4.14869388 seconds)
    (47/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.100744021 seconds)
    (48/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.192381154 seconds)
    (49/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.014309054 seconds)
    (50/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.833915548 seconds)
    (51/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 3.346918407 seconds)
    (52/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.86558339 seconds)
    (53/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.127811837 seconds)
    (54/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.846331821 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.488733257 seconds)
    (56/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.214403792 seconds)
    (57/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.072650597 seconds)
    (58/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.183471086 seconds)
    (59/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.151230007 seconds)
    (60/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.833912664 seconds)
    (61/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 3.666141981 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.909208124 seconds)
    (63/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.983736526 seconds)
    (64/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.850947236 seconds)
    (65/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.137932646 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.752098171 seconds)
    (67/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.072003443 seconds)
    (68/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.10348887 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.835713701 seconds)
    (70/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.009518247 seconds)
    (71/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.831215688 seconds)
    (72/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 8.111807938 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.88264413 seconds)
    (74/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.988638791 seconds)
    (75/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.334625171 seconds)
    (76/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.97707004 seconds)
    (77/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.253115578 seconds)
    (78/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.872053177 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.871921919 seconds)
    (80/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.937895546 seconds)
    (81/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.220910665 seconds)
    (82/309) benchmarking ("sort", BigInt, false)...
    done (took 6.851630081 seconds)
    (83/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.974680733 seconds)
    (84/309) benchmarking ("sort", Int64, false)...
    done (took 5.558054788 seconds)
    (85/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.850680561 seconds)
    (86/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.35412774 seconds)
    (87/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.934176287 seconds)
    (88/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.198822893 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.089343522 seconds)
    (90/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.848662466 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.146483722 seconds)
    (92/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.875717819 seconds)
    (93/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.251731581 seconds)
    (94/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.854208928 seconds)
    (95/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.74010349 seconds)
    (96/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.148669057 seconds)
    (97/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.003511294 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.513756884 seconds)
    (99/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.77594621 seconds)
    (100/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.148150671 seconds)
    (101/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.992406784 seconds)
    (102/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 8.080887313 seconds)
    (103/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.452964632 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.533255041 seconds)
    (105/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.948139296 seconds)
    (106/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.870232759 seconds)
    (107/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.382010118 seconds)
    (108/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.021541547 seconds)
    (109/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.075201265 seconds)
    (110/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.872354582 seconds)
    (111/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.862857059 seconds)
    (112/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.148343515 seconds)
    (113/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.903376044 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.847098864 seconds)
    (115/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.131033704 seconds)
    (116/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.130285176 seconds)
    (117/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.83797455 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.099637321 seconds)
    (119/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.212459291 seconds)
    (120/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.416285102 seconds)
    (121/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.814867684 seconds)
    (122/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.110639895 seconds)
    (123/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.878879606 seconds)
    (124/309) benchmarking ("sort", Bool, false)...
    done (took 2.29562661 seconds)
    (125/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.979522329 seconds)
    (126/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.875489346 seconds)
    (127/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.832792929 seconds)
    (128/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.108388433 seconds)
    (129/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.990707501 seconds)
    (130/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.877498552 seconds)
    (131/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.407082468 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.8722362 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.074183957 seconds)
    (134/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.106034198 seconds)
    (135/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.14787637 seconds)
    (136/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.052326747 seconds)
    (137/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.851520528 seconds)
    (138/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.881426415 seconds)
    (139/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.05297869 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.944270356 seconds)
    (141/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.833107441 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.098600935 seconds)
    (143/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.879484883 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.13694628 seconds)
    (145/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.043754832 seconds)
    (146/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.007550481 seconds)
    (147/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.07711769 seconds)
    (148/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.855045781 seconds)
    (149/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 8.15038709 seconds)
    (150/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.903665593 seconds)
    (151/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.849661051 seconds)
    (152/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.911021585 seconds)
    (153/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.019112088 seconds)
    (154/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.856892698 seconds)
    (155/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.81543473 seconds)
    (156/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.852911359 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.901856217 seconds)
    (158/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.861464876 seconds)
    (159/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.865413122 seconds)
    (160/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.217445897 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.012515916 seconds)
    (162/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.18966008 seconds)
    (163/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.539497085 seconds)
    (164/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.942407113 seconds)
    (165/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.050390339 seconds)
    (166/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.853254077 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.180987257 seconds)
    (168/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.947218191 seconds)
    (169/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.147155952 seconds)
    (170/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.694312143 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.199860977 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.931007849 seconds)
    (173/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.428239541 seconds)
    (174/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.336163917 seconds)
    (175/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.818007292 seconds)
    (176/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.47739862 seconds)
    (177/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.043662061 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.183569796 seconds)
    (179/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.105576842 seconds)
    (180/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.886431754 seconds)
    (181/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.07167405 seconds)
    (182/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.916039074 seconds)
    (183/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.179140766 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.097835048 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.917109576 seconds)
    (186/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.892497011 seconds)
    (187/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.934038907 seconds)
    (188/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.022724466 seconds)
    (189/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.064465986 seconds)
    (190/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.681731403 seconds)
    (191/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.858578055 seconds)
    (192/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.767732308 seconds)
    (193/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.998825644 seconds)
    (194/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.001110236 seconds)
    (195/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.914579561 seconds)
    (196/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.866614845 seconds)
    (197/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.859436015 seconds)
    (198/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.244346942 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.235614199 seconds)
    (200/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.881402525 seconds)
    (201/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.969489651 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.973198524 seconds)
    (203/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.088384129 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.759909305 seconds)
    (205/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.035212842 seconds)
    (206/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.454628625 seconds)
    (207/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.018155827 seconds)
    (208/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.64550463 seconds)
    (209/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.062361458 seconds)
    (210/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.853578292 seconds)
    (211/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.077561457 seconds)
    (212/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.506440774 seconds)
    (213/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.970118584 seconds)
    (214/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.853388661 seconds)
    (215/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.362828066 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.667333724 seconds)
    (217/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.881918301 seconds)
    (218/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.928444797 seconds)
    (219/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.913740102 seconds)
    (220/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.852413746 seconds)
    (221/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.940355312 seconds)
    (222/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.870908103 seconds)
    (223/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.837620718 seconds)
    (224/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.542079298 seconds)
    (225/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.14778088 seconds)
    (226/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.947534939 seconds)
    (227/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.956358153 seconds)
    (228/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.96721105 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.893067809 seconds)
    (230/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.747990475 seconds)
    (231/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.019382086 seconds)
    (232/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.947967122 seconds)
    (233/309) benchmarking ("sort", Int8, false)...
    done (took 4.859907738 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.751936623 seconds)
    (235/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.858921949 seconds)
    (236/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 3.968528235 seconds)
    (237/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.956876556 seconds)
    (238/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.024064341 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.198474211 seconds)
    (240/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.890328058 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.021789105 seconds)
    (242/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.059442883 seconds)
    (243/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.44611923 seconds)
    (244/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.965838159 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.133613272 seconds)
    (246/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.604071174 seconds)
    (247/309) benchmarking ("perf_sum", Int8, true)...
    done (took 2.004065813 seconds)
    (248/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.126611397 seconds)
    (249/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.84406333 seconds)
    (250/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 3.801509633 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.87940765 seconds)
    (252/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.166485023 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.907491487 seconds)
    (254/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.855371967 seconds)
    (255/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.266490302 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.954581575 seconds)
    (257/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.17788269 seconds)
    (258/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.942352944 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.152295749 seconds)
    (260/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.92313283 seconds)
    (261/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.143632022 seconds)
    (262/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.922282771 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.880709914 seconds)
    (264/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.855584754 seconds)
    (265/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 8.092796941 seconds)
    (266/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.931253842 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.25021656 seconds)
    (268/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.881552954 seconds)
    (269/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.048745417 seconds)
    (270/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.247202236 seconds)
    (271/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.958283623 seconds)
    (272/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.316559176 seconds)
    (273/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.992541506 seconds)
    (274/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.030323754 seconds)
    (275/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.856600803 seconds)
    (276/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.90603153 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.038303352 seconds)
    (278/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.951020226 seconds)
    (279/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.929020488 seconds)
    (280/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.941284167 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.930276012 seconds)
    (282/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.465348599 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.000517418 seconds)
    (284/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.842168969 seconds)
    (285/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.058731105 seconds)
    (286/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.85643398 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.627191696 seconds)
    (288/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.952280901 seconds)
    (289/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.378110459 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.606725827 seconds)
    (291/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.965228579 seconds)
    (292/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.96667304 seconds)
    (293/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.116763849 seconds)
    (294/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.003234983 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.90403032 seconds)
    (296/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.307307669 seconds)
    (297/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.85904369 seconds)
    (298/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.168575836 seconds)
    (299/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.982918277 seconds)
    (300/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.884316625 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.155357529 seconds)
    (302/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.064490843 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.883462554 seconds)
    (304/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.373392916 seconds)
    (305/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.879718339 seconds)
    (306/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.039160044 seconds)
    (307/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.999333564 seconds)
    (308/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.404574143 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.4993315 seconds)
  done (took 1013.092242753 seconds)
done (took 1015.136309732 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.892454967 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.883460816 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.867880925 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.888709528 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.979556855 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.902302635 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.878587526 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.871876763 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.916554367 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.916990492 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.866284103 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.901221254 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.870118265 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.868828839 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.867690643 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.882993696 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.182769174 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.896047237 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.887483815 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.878608788 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.885319278 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.868204578 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.918413429 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.903954492 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.872260434 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.871725296 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.872700254 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.888148922 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.982543827 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.87405793 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.872441148 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.880477743 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.179613525 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.897999786 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.864716346 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.888872619 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.883422794 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.880114825 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.874197113 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.904383417 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.321237865 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.875935847 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.872766794 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.869991256 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.871677642 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.873312211 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.871164341 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.876460018 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.883183707 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.885607861 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.318246793 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.892604943 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.87422761 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.870536355 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.883104676 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.87144458 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.874679058 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.886606921 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.889862968 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.887361973 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.17348066 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.901564302 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.873227688 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.887588291 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.878818694 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.354076201 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.872797556 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.875799236 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.322149549 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.883434701 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.35566569 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.885661698 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.87274403 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.8860285 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.903435914 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.181657152 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.894580841 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.870762729 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.879704626 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.870052572 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.882409756 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.885993661 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.877824063 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.872620769 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.886391494 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.907045238 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.883461879 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.873867954 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.882399709 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.893195742 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.880476561 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.884815775 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.875662377 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.868240567 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.882273502 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.877435645 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.877560546 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.877294582 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.878557439 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.884879695 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.325820075 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.896078693 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.870937444 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.869359103 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.872225107 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.887926507 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.320611143 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.880225611 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.896150067 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.92178943 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.875329197 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.177093208 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.904630553 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.889197534 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.883977633 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.877664927 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.871609704 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.174923798 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.347530003 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.894837933 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.875563729 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.873843644 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.890629667 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.87637504 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.870210838 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.187536303 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.902403582 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.888528004 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.995710247 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.88540113 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.906648506 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.874832587 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.878240061 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.910071559 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.890920499 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.907018237 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.878152754 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.892103084 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.891781147 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.871957611 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.887427542 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.886385272 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.878869401 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.882564252 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.870272219 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.91008479 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.888502452 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.891413175 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.897463768 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.998064874 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.873040041 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.177736092 seconds)
done (took 294.505521546 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.943617872 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.868565234 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.972254429 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.874342806 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.959988988 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.959615913 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.872077098 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.871224559 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.871046047 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.248965709 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.871960149 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.872656597 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.871428105 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.871068711 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.95960752 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.874943939 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.871785612 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.213790945 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.875030385 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.946842829 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.867143531 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.872559303 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.875548756 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.301666883 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.868643308 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.869108602 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.946575108 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.875106247 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.220825735 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.870148076 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.875736911 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.220112678 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.969572495 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.893338366 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.884722927 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.88279273 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.96066716 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.880067766 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.957161629 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.958388745 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.973481799 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.915660604 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.876908906 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.873257125 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.877975889 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.876902481 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.872809152 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.904165111 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.871064443 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.874250571 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.213907293 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.885801021 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.875206213 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.87408715 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.874717649 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.907021979 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.874617576 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.876767489 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.967382989 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.877210913 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.939330388 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.25910605 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.277765844 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.876889987 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.878404075 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.875056549 seconds)
  done (took 184.775492468 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.943636747 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.951247106 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.943356275 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.883760108 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.927567292 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.950322719 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.885058793 seconds)
  done (took 15.291462707 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.88316445 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.877779961 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.926509886 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.926635101 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.87710359 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.029082127 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.877590692 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.889054352 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.874467454 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.931081881 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.877371741 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.877657019 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.884494562 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.870132256 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.926033496 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.890133342 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.993541836 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.879691031 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.878440569 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.028882088 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.876008933 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.885349216 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.933591884 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.890157014 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.878796478 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.883886823 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.480204134 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.878823554 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.876248397 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.87944226 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.876800567 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.922738473 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.879874974 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.875924368 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.876748275 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.995315683 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.879044466 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.877133241 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.878763113 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.87704354 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.879376961 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.879342205 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.878908537 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.876910335 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.878755052 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.902750249 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.879839004 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.879770694 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.880433521 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.879199145 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.931677192 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.87965261 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.877790513 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.877782356 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.935642304 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.886826982 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.879950048 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.878091979 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.880482378 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.878724104 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.030957897 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.927429716 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.880406539 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.928437402 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.880220651 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.880380579 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.879901523 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.880227241 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.975753895 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.880952558 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.928852646 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.877702826 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.039487764 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.905101855 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.881923054 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.884622082 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.883707931 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.880673837 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.874860032 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.887525259 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.878346989 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.882527622 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.888401037 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.88063134 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.879551593 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.994462516 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.991079782 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.878804864 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.894966109 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.889579699 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.879497099 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.935232031 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.881856782 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.879614705 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.935664329 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.997069156 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.937564701 seconds)
  done (took 206.82677292 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.888024407 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.889984295 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.882626681 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.898562125 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.882886133 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.882967286 seconds)
  done (took 13.135700624 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.884155077 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.882420155 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.882944634 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.882373843 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.88246598 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.882645748 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.883124925 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.883689848 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.886804577 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.884676754 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.882773474 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.88228308 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.884045502 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.882201791 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.883887985 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.882125222 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.882994682 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.880226858 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.882616089 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.882179751 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.036326496 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.882615124 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.882190757 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.885344345 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.88833356 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.884627262 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.890787489 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.883518717 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.883777592 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.889604457 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.887494582 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.885909714 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.884690281 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.889292045 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.888637817 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.886262059 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.887611846 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.884155533 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.881983111 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.88503503 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.886492714 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.884524774 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.883978967 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.884141158 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.886351681 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.889351467 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.890120687 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.891346256 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.884128587 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.885356955 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.885307903 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.884878362 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.885218232 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.885532273 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.886028505 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.888585717 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.889325273 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.886969956 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.884897543 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.886727896 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.886764156 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.885784381 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.88865282 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.889289784 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.883064715 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.885911785 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.886124489 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.890104135 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.885370967 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.885188866 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.886135864 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.882845726 seconds)
  done (took 138.707855025 seconds)
done (took 560.556349692 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.160602091 seconds)
  done (took 8.976316197 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.053825078 seconds)
  done (took 8.971116345 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.503605979 seconds)
  done (took 10.318444643 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.885751765 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.921154753 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.891129389 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.889893315 seconds)
  done (took 29.414287204 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.9614884 seconds)
  done (took 8.777701587 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.893951461 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.879371301 seconds)
  done (took 15.622019694 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.942437883 seconds)
  done (took 8.758879604 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.971681369 seconds)
  done (took 8.789822022 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.895389257 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.892241376 seconds)
  done (took 15.616818328 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.867987174 seconds)
  done (took 8.684448806 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.533775686 seconds)
  done (took 11.357363326 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.89201176 seconds)
  done (took 8.722133431 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.882019992 seconds)
  done (took 8.697836191 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.062967256 seconds)
  done (took 9.878803619 seconds)
done (took 164.400665287 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.882673396 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.884055939 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.884047075 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.882592927 seconds)
  done (took 29.348409963 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.920176832 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.919546754 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.922237634 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.931021166 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.923251636 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.920130881 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.912524344 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.916550604 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.932137448 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.924018726 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.922778844 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.92243267 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.921938987 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.913604614 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.923674767 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.92293234 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.931397398 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.922723729 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.914109542 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.923857786 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.888121012 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.932238963 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.925210451 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.889281126 seconds)
  done (took 47.892227965 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.086965193 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.959608156 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.041657665 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.940976827 seconds)
  done (took 9.845546332 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.939216259 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.941225795 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.952636865 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.999999519 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.017917013 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.950594642 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.915837182 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.910129859 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.897179652 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.943050292 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.016428457 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.957668107 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.024259138 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.889068212 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.075896425 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.887928919 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.889916705 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.940462968 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.991858538 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.006211646 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.889111133 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.940900626 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.944067657 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.959119738 seconds)
  done (took 48.698413886 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.888388012 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.896897724 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.894988838 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.889108083 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.88882136 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.888885213 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.895133802 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.889892362 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.90988441 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.89209069 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.888373651 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.889151528 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.888756126 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.889364489 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.890198742 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.902701435 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.903086821 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.891105935 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.893152756 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.89567789 seconds)
  done (took 39.685339864 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.88329869 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.738062207 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.235479765 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.139108499 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.884730327 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.887647816 seconds)
  done (took 31.588146957 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.903368924 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.895952695 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.889657978 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.946515799 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.032195645 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.897522626 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.890522082 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.900771218 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.937700642 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.960095944 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.908665816 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.918403299 seconds)
  done (took 24.901815033 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.893882416 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.884631851 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.88842294 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.903628906 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.902878076 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.901740419 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.897824535 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.884830568 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.906208382 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.910273338 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.902190287 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.905385051 seconds)
  done (took 44.605343366 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981474498 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.931040894 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.91252049 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.599766673 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.264822826 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.098302351 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.398951373 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.223588122 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.891323163 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.160563123 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.917742623 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006816211 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.142038977 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.378230193 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.923890693 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.343264322 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.185678341 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.099324133 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.916250751 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.586121017 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.95277134 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.074467134 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.711019676 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.945950229 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.099259636 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.020982902 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.148365416 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.888616229 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026399489 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.926403114 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899271464 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.889661638 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.162965062 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.263982698 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99650618 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898654654 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.505746374 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.606920073 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.877423317 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.655147015 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.638410358 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.019589841 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900313716 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.889642051 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.823440794 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.046732088 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.26675657 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.89579117 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.60190953 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.890427579 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.904582129 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003007233 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.893359594 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.706678724 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.8098382 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.892696412 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.886966321 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895168134 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.461874225 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.039049479 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.092306654 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.867224402 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.981795206 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.615763263 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.284488768 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.040662959 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.893684524 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.894029076 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.827921509 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.61030857 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.947289317 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.220086708 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.911443121 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.540390729 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.20724715 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.014066782 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.833270004 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.170692041 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.42744666 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.867371379 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.118984997 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.891394495 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.826995145 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.927570774 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.82539045 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.16100046 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929006852 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.658006143 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.935499555 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.225426763 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.902087486 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909092439 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916234049 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.116819546 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.776650378 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.892047059 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.730061703 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.035915299 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914178225 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.226878235 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.826744831 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.896848322 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.148257861 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.102981285 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.972780821 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.394269191 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.052580742 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.458743488 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.94715087 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.047257125 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.943316341 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.168300593 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.953048726 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.044051705 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949953763 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.894213307 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.198130814 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.482728042 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.033274541 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.989307287 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.021511794 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.21686782 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.92303356 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958680453 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.896822327 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.894568475 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.714249494 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.44643851 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.893499768 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.896188563 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.97046964 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.946001684 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.895124262 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.843938504 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.519400459 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.022044844 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.909598133 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.117628653 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.461185981 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.208070915 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.829307006 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.224711721 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.984673795 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.118587822 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.541786771 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.979143953 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.156382815 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.972022702 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.008124291 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.94441586 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91436029 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993204819 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916896009 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.07399273 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.189302164 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.900478441 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.900532496 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.68738495 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.932834449 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.902416594 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.900745037 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.650304631 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.174270078 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.921866412 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.904379898 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.78712308 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.910162696 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961012459 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.901700138 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.907282572 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.440172378 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.628918718 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.903374916 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.484166006 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.120792808 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.90720898 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.692002087 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.01585505 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.978020086 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.176245748 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.95821585 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.830018962 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.607791367 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.590612138 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.898140512 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.832182256 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.898677812 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905872922 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.908901658 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.094565206 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.175761909 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.943976222 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.623850373 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.942565972 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.908308975 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.902585966 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.898529442 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.408181834 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.063065133 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.103001083 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.945752905 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042033972 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.912203259 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.831730467 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.902745735 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.902380957 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.898228316 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.897948358 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931390131 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.630601516 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.278937841 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.158536861 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.508721 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.913721374 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.715479191 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.962755052 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.95923737 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.755810585 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.071709322 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.011048145 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911844742 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.909688607 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.70385437 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.597434904 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.475069344 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.221307384 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.2126083 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.345745714 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.126073007 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.931312931 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.235889214 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.834115462 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.466335362 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.958741572 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.68172965 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.844188684 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.986050383 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.546784693 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.25092106 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.914349712 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.127268752 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.293852874 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.68007131 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.053787392 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.11150442 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935720452 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.057006901 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.865733848 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.187255744 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.043907644 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.660765673 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.114140319 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.234407179 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.613484617 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.037618748 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.901006083 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.591305914 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.990154927 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.611098783 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.07318742 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.09555043 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.862708109 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387706506 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.911087777 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.127792447 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.260123105 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.058863576 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.022919005 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.838542837 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.912733571 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.912866703 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.90297286 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.901060568 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.786675248 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.155854425 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.914344501 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.837674664 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.008433395 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.200486063 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.80790121 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.908561275 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.904210234 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.207177238 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.450271163 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.080160665 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.00784418 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.426817366 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.911541808 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.837365015 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.837792496 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.596042532 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.911605607 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.87817699 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.114724593 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.006405149 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.823647378 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.984808403 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.989225275 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.160584541 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.91773529 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.179207428 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.181259819 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.605833448 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929790593 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.004597915 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.612991859 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.023373813 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.904876404 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.140740885 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.663480908 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.13188236 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.975519062 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.865545096 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.904215303 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.119648992 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.905637619 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.840513133 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.153529496 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.631303816 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 7.025950979 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.232184784 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.982050435 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.871600738 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.960733882 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.996410046 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915113375 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985422415 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.915499561 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.916110709 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.917380455 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953739342 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.897551076 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.038949366 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.920431367 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000672124 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.083893148 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.433645697 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.912083191 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.190040181 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.279576987 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.244581534 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.968159879 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.907347771 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.912234104 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.840807367 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05483341 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.132642663 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.18048806 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.035837632 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.020880667 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931154465 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.630565862 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.130327993 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.15289748 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.182320071 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.801774504 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.416630149 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.950663933 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.907629369 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.918816041 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.120192357 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.121379779 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.209379871 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.056504515 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.99402006 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.27587577 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.182595885 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.908795445 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.90966386 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.497704534 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 7.041169629 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.598409958 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.950992603 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.852182239 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.193201726 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.91983582 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.294894713 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.931341197 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.068439349 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.425426923 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.673360363 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.201289771 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.897699586 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.971445679 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.19060527 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.309629279 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.224746215 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977021509 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.921004088 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.013164219 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.054928184 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.804877257 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.910741016 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.909713408 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.960022474 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.620153607 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.917502941 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.187695614 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.223908622 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.908083608 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.807332489 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932816785 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.920795499 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.134347427 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.179486879 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.165424306 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.919607349 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.917410607 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.725327689 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.18753779 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.971495619 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.844749589 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.915031667 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016511561 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.159879742 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.933440325 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.363410281 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.6220073 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.184083617 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.911479874 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933576994 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.075481472 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.2786993 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.241017382 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.448453246 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.124115835 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.498716831 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.492858233 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.214451561 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.91661162 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.076775537 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.215637106 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.914404972 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.992495792 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.950852077 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.182617527 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.22485332 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 7.040554604 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.648538809 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.883643373 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.25450805 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.473523242 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.851381199 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.914793249 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.972752717 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.912783985 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.043025737 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.923863141 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.809626826 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.085940585 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.699428936 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.193973935 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.919427138 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.907073204 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.675699152 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.209549183 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.952168403 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.061515652 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.924982118 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.632546861 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.278596814 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.171863606 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.004294354 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.925324141 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.920207074 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.916407828 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.903412127 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.112297843 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.11177945 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.190990703 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.030677902 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.95408246 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.920950193 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.133425688 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.127364382 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.85751301 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.064865223 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.006914846 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.962332485 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.824316146 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.423730714 seconds)
  done (took 1692.087985433 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.93756494 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.939329693 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.923318276 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.950175234 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.936599318 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.003017187 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.981851142 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.95490529 seconds)
  done (took 57.481229019 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.914971818 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.115361293 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.925747247 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.916643522 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.926318869 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.916830754 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.089663498 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.92769618 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.926634168 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.926764086 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.918803335 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.91684227 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.226930266 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.942498587 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.917215342 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.905271949 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.925192647 seconds)
  done (took 75.192993243 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.917130941 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.015874918 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.942518208 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.932045458 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.885135469 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.927732827 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.695095851 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.951204886 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.919197451 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.15555727 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.55444978 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.932217244 seconds)
  done (took 90.680983776 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.925535665 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.922383733 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.921806701 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.922418212 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.922176082 seconds)
  done (took 11.469636944 seconds)
done (took 2205.319649389 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.169746798 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.139275122 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.151177807 seconds)
  done (took 6.141647473 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.061749947 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.110564244 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.229281774 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.236341042 seconds)
  done (took 10.488785408 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.196032359 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.300803658 seconds)
  done (took 6.345419442 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.303361734 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.918966677 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.298539295 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.912856992 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.915087535 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.916112643 seconds)
  done (took 22.598255405 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.917887799 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.920571511 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.919695542 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.921166933 seconds)
  done (took 9.527390854 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.898346359 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.583805641 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.90011106 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.914914569 seconds)
  done (took 21.146535118 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.665349065 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.67687756 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.660978956 seconds)
  done (took 9.851643647 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.414928628 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.820777764 seconds)
  done (took 9.083954003 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.17683403 seconds)
  done (took 4.030138615 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.054032145 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.229639037 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.434983443 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.450583638 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.543581588 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.658928015 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.241332695 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.166791347 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.332793721 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.362320512 seconds)
  done (took 25.329570924 seconds)
done (took 140.085096107 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.29508809 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.158065835 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.123330774 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.256293522 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.140726747 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.120828249 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.350207256 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.238823362 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.760523924 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.757282868 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.252688893 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.139146952 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.074202503 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.148437498 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.071728714 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.146379022 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.132005226 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.295072551 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.981385722 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.140195284 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.341545355 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.882982518 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.092318271 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.895734712 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.134960592 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.063688298 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.45957246 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.149246322 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.131869895 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.465683186 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.06541473 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.289442682 seconds)
  done (took 174.410668875 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.665180667 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.912293451 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.912416439 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.913514252 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.495760038 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.911587416 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.914677966 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.916086365 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.969327146 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.951111155 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.913507048 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.502064335 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.914858806 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.912733407 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.914165714 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.927222733 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.101026546 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.718949578 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.92291543 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.928020445 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.934230764 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.443215786 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.937706342 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.495878932 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.150655721 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.940504048 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.914076589 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.939869048 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.918785579 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.932356626 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.937395983 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.913446098 seconds)
  done (took 209.624095799 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.912484103 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.915308392 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.923733003 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.915027915 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.919582275 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.917333194 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.923212782 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.913265146 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.471441239 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.46718515 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.922126142 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.938489833 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.924385899 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.914264811 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.924092949 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.914652623 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.919582427 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.920564356 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.917446349 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.92036219 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.923006922 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.72440285 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.92756631 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.719196999 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.920777039 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.920738055 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.915800103 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.923551162 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.926610284 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.926836187 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.92840461 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.915869069 seconds)
  done (took 222.045040844 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.117384135 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.922288979 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.922703902 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.8755343 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.923043231 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.921308851 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.917966036 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.114423911 seconds)
  done (took 19.583690729 seconds)
done (took 627.529570618 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.380411054 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.221284492 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.098420173 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.946463715 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.175161609 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.979241033 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.941326775 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.004469662 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.683020366 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.007382961 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.60677292 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.959166184 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.692953857 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.963859436 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.067156606 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.999972658 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.471836959 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.568866548 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.12380907 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.991664621 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.118973199 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.915364792 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.015720091 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.712138726 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.712112066 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.945578834 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.113340676 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.478680429 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.953798669 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.109268529 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.670525695 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.33579211 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.951893666 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.940728895 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.993630341 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.975921975 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.281352348 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.950462157 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.069796882 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.72028053 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.98890977 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.567087463 seconds)
  done (took 105.256362896 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.913560681 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.913355347 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.911267301 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.912530837 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.914155157 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.912959574 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.911926712 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.911593533 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.913093718 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.911507734 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.911924198 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.913220317 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.9113499 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.91395879 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.912204845 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.912282229 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.912974225 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.915214219 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.912363578 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.911619806 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.91237196 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.911977382 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.92633233 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.91278123 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.914343374 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.912908308 seconds)
  done (took 51.606211168 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.926666822 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.0671412 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.147773077 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.942816652 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.92560418 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.928719167 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.94345831 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.930267389 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.927780622 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.927541179 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.019737467 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.932582874 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.944491863 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.146655774 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.940406167 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.926759108 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.927327048 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.926489125 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.074542443 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.940951538 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.945831116 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.932067208 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.944624851 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.940281609 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.928324109 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.927244262 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.93033735 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.396602089 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.935978089 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.021713072 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.968879133 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.948309369 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.361963937 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.157755489 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.978251185 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.935575406 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.931889309 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.024074647 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.932654522 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.92766667 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.945157778 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.932129129 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.14701113 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.421627907 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.940189145 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.927948968 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.406150944 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.032830938 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.968180517 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.94059016 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.152386048 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.943320872 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.929560543 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.928506952 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.964342925 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.938685874 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.92996181 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.292460093 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.938971422 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.945509946 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.933916372 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.92885268 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.082129658 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.936420439 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.071322589 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.937568098 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.936916002 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.929798144 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.150419484 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.944228474 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.430920549 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.940991794 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.929749825 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.023864034 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.076139736 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.429678856 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.940455483 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.083832549 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.378611169 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.95290946 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.936968967 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.39047945 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.957690334 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.935774401 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.931543258 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.931303201 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.930620035 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.974232827 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.946650389 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.370011389 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.431610241 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.305949031 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.954751184 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.945505297 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.931549278 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.293333976 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.938613712 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.931782555 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.145134435 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.440752601 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.941998179 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.937705263 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.419985902 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.944732251 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.948821527 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.938959292 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.154824815 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.944020295 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.975525775 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.931738982 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.93751095 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.934663919 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.949641927 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.937745137 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.932171647 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.405439544 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.041134265 seconds)
  done (took 238.940639061 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.937146318 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.925889358 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.926533355 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.926752595 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.925457285 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.930662181 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.92581984 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.925913373 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.931628256 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.925444562 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.924292106 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.927719126 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.927488172 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.927230002 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.968517117 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.932810403 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.536164615 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.926705572 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.92549282 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.927146242 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.573756931 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.931828739 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.925623615 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.938668922 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.926044467 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.92975553 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.934619914 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.957439592 seconds)
  done (took 169.186184014 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.933902258 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.045603203 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.946783213 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.96059667 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.939920505 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.931640636 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.956116585 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.947951625 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.937217284 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.93142026 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.931499622 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.992724931 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.944951232 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.03100399 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.962611231 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.965050092 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.03453101 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.938862567 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.931758348 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.932395538 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.961727567 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.930192937 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.992204391 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.057863926 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.948371017 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.04954316 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.935740517 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.934839588 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.934679136 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.050206297 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.946226345 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.992617676 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.961784583 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.951067748 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.050668591 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.046376948 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.037059141 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.962359578 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.938135675 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.931915577 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.933188817 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.923458162 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.049438171 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.950400061 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.936438631 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.041579812 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.949785233 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.936251195 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.94394633 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.93367905 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.948514658 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.951587728 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.998645812 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.061908675 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.963570795 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.959934603 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.959934943 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.227361756 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.947028783 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.033343333 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.927690877 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.050963661 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.951267322 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.923773672 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.936384787 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.94080255 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.964491969 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.968293535 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.038380715 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.941671762 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.034120429 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.968658086 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.943987657 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.936153287 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.939384555 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.052752015 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.04863939 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.969127011 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.974243877 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.968756931 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.931079362 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.936509301 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.925695688 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.952380298 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.93976502 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.050819176 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.048909236 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.942732187 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.938401161 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.939164358 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.9385851 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.962447297 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.058388345 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.967109928 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.031383675 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.001198615 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.007058195 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.948578358 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.949726935 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.93966416 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.998738405 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.949327675 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.948631212 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.27975039 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.007746301 seconds)
  done (took 209.398927744 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.388282567 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.98871327 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.992358303 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.206724814 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.357747926 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.781837432 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.984149402 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.98707693 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.011093244 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.141554088 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.041622861 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.000139425 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.975805191 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.959575602 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.98866921 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.006371273 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.988626939 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.271713477 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.109695581 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.066727654 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.9631692 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.272382982 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.307414013 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.358562548 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.017896213 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.316916421 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.66733858 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.226829078 seconds)
  done (took 63.251938211 seconds)
done (took 839.490018757 seconds)
SAVING RESULT...
DONE!
