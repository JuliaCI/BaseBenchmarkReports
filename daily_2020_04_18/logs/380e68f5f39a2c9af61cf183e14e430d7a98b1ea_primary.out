cset: moving following pidspec: 30122
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.358359617 seconds)
loading group "string"... done (took 0.577900431 seconds)
loading group "linalg"... done (took 7.672579308 seconds)
loading group "parallel"... done (took 0.160554785 seconds)
loading group "find"... done (took 1.134453493 seconds)
loading group "tuple"... done (took 1.860296977 seconds)
loading group "dates"... done (took 1.236548337 seconds)
loading group "micro"... done (took 0.234647799 seconds)
loading group "io"... done (took 0.913166558 seconds)
loading group "scalar"... done (took 37.701637408 seconds)
loading group "sparse"... done (took 11.622222826 seconds)
loading group "broadcast"... done (took 0.917680902 seconds)
loading group "union"... done (took 12.535069929 seconds)
loading group "simd"... done (took 4.544787369 seconds)
loading group "random"... done (took 8.701147918 seconds)
loading group "problem"... done (took 1.787607665 seconds)
loading group "array"... done (took 19.69497122 seconds)
loading group "misc"... done (took 1.872030305 seconds)
loading group "sort"... done (took 3.250029419 seconds)
loading group "collection"... done (took 17.038296769 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.532093607 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.129992391 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.137900298 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.125357487 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.153785044 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.123189902 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.130500953 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.090653022 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.927110877 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.158956288 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.11964858 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.41101658 seconds)
done (took 5.465639969 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.179056213 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087635341 seconds)
    (2/2) benchmarking "String"...
    done (took 0.088093584 seconds)
  done (took 1.282302669 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.071427395 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.131057756 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.073140219 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.073456825 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.072890906 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.072566914 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.072754673 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.072844019 seconds)
  done (took 1.675792667 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.078841442 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.074193686 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.071660114 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.073509859 seconds)
  done (took 1.405064776 seconds)
done (took 5.731155537 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.775770822 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.213017676 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.189484221 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.396485346 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.133631481 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.179238354 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.645174055 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.326582813 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.191131943 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080480711 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.112577803 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.348235371 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.125616578 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.654269036 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.082618325 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.095279957 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.145012614 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.421935576 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.072740296 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.088009296 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.094150798 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.134074864 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.092344068 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.079181645 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.153696018 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.073272236 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.13944097 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.085723804 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.071638554 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.218774141 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.178189194 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.694959156 seconds)
  done (took 10.430197724 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.10422652 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.103094468 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.074383852 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.130609859 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.103137828 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.075224948 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.080267361 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.073498726 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.097673688 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.135036573 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.096288539 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.110845091 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.071721953 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.074423922 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.08868534 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.213730776 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.085667026 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.087483662 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.07633027 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.083608829 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.113242269 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.083146192 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.085001501 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.085263376 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.13407232 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.185894128 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.101464521 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.103202153 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.071643851 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.086819676 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.120388085 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.132376938 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.071219693 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.071147056 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.131167017 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.100269385 seconds)
  done (took 4.789904107 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.983282287 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.145957939 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093512677 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.136913982 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.070607339 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.112752158 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.074151061 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085313498 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.211855848 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.440279895 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.588299462 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.134944397 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115453226 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.107956351 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073301446 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.073721167 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.072830461 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.48295383 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.104211135 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.11129853 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.084976572 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.074603597 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.073312384 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.069890299 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.0715615 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.068907572 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073096646 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.117837969 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.0791799 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.307564526 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.128709928 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073148963 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.951360713 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.17263305 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.072153884 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.244394344 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.169255312 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096065286 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.144772233 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074824585 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.071438469 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.164158421 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.071435723 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.075492624 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.072014432 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.089701844 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.108350798 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.124631525 seconds)
    (48/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.096800004 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.071419671 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.172308113 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071650076 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.070168636 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.086881659 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.133848344 seconds)
    (55/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.073845347 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.158415785 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.073725659 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.292998459 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.095423797 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.075604054 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.07115653 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.179295662 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.129130684 seconds)
    (64/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.070119038 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.073443608 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.072463863 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073809098 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.074067888 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.364411173 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.071582562 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.014083979 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.076214986 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.083045896 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.075042032 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074841471 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077756078 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077981071 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.093413082 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.072167936 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.081276238 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.071251078 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.071328264 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.072053019 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087487054 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.479609707 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.072719603 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.073779493 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.07086422 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.095714887 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101507286 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.072977354 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.071107557 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105183705 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073180842 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.072109539 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.071940888 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.087679789 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.075224393 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.118904892 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.072544364 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.092122333 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.104785729 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.074152199 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104022279 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.084584427 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072893839 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.407831802 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.070720713 seconds)
    (109/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.074434467 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.073310431 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.070969556 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.072977752 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.071748371 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.085130478 seconds)
  done (took 22.282307262 seconds)
done (took 39.591877483 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.245128081 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.074906138 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074811596 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075461656 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075183714 seconds)
  done (took 1.73655239 seconds)
done (took 2.914552826 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.125050834 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102797737 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070097188 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.101584407 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07086445 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.107626292 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.104448472 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082159521 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103571775 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.070326072 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100887177 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.069845798 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.069812912 seconds)
  done (took 2.367639957 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088638213 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.089134309 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.075580497 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087770929 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.069374094 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.088112311 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086893392 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.093866478 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086723357 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.078188621 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.069322721 seconds)
  done (took 2.08246475 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087296502 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.089688291 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.075624679 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087067285 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.071467724 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087162364 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086798508 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090374352 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086856338 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.079966379 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.069216918 seconds)
  done (took 2.075910835 seconds)
done (took 7.690212032 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.080964161 seconds)
  done (took 1.235669343 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.535386186 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.707109351 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.084717983 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.109447707 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.191922845 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.116697806 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.250028595 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.089629958 seconds)
  done (took 8.397538101 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.094748236 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.086596538 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.077271719 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.075709042 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.076563247 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.073733322 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.07541339 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.077368161 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.075610537 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.073962669 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.07528889 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.076299712 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.073420749 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.077585509 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.07506615 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.07730167 seconds)
  done (took 2.471922379 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.096096059 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.095401456 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.078673086 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.079831397 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.077483729 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.076741426 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.079514508 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.078615292 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.075413426 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.077835187 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.079964668 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.078013082 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.076448483 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.06889498 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.078874242 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.080843857 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.075610301 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.078846979 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.07998014 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.080307339 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.080175981 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.068540989 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.077002241 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.079049398 seconds)
  done (took 3.148931025 seconds)
done (took 16.418063295 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.110837765 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072820547 seconds)
  done (took 1.345410789 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084256674 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.085139127 seconds)
  done (took 1.340043347 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084842429 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.069592521 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091138573 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.080971052 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.070916001 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.070029008 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.089983563 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.070432749 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.070891768 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.070375391 seconds)
  done (took 1.940225821 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.072121162 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.080043099 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.073570241 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.083754842 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.07728468 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.068748854 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.07555568 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.072743351 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080170511 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.06755104 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.07551905 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.087537651 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.075061546 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.089521706 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.075653175 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.072690621 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.07467624 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.071745529 seconds)
  done (took 2.54850533 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.070236036 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.070792666 seconds)
  done (took 1.319188713 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.07125484 seconds)
    (2/7) benchmarking "second"...
    done (took 0.067775483 seconds)
    (3/7) benchmarking "month"...
    done (took 0.07085553 seconds)
    (4/7) benchmarking "year"...
    done (took 0.070783701 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.068225903 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.067513986 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.068488408 seconds)
  done (took 1.659152944 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.388372454 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.120208559 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.305932078 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.077152972 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.086165624 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.259477795 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.071983944 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.076819733 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.076728751 seconds)
  done (took 2.673719601 seconds)
done (took 14.003925361 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.086226403 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.09202106 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.103009813 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.390071776 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.097529435 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.072949649 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.118874432 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.185125677 seconds)
done (took 2.332517111 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.21665112 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.662432454 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.405118256 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.20887079 seconds)
  done (took 2.4561815 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.344518368 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.093221669 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.066239374 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.073101226 seconds)
  done (took 1.765052712 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.072433961 seconds)
    (2/2) benchmarking "read"...
    done (took 0.074678995 seconds)
  done (took 1.332174384 seconds)
done (took 6.954967333 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07241785 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.186022011 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.06928192 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.071593564 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.069407485 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.070436937 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.091216421 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.069237282 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.071663773 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.071753801 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.069086606 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.071660186 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.071755462 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071325806 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069321987 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069202947 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071492344 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.069381987 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06913859 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.07147378 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069384844 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071331642 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.0694878 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.069069002 seconds)
  done (took 3.038929005 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.087383435 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.072151199 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.075318683 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.075422639 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.07351007 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.075542316 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.075448246 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.07135468 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.075798459 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.073810501 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073859279 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.073620997 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.073517238 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.074131408 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074375435 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.073843579 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.075844266 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071723707 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074487141 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.074322035 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.075677028 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071517122 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.0741026 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075694386 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.073431231 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073424053 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.073754414 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.071980623 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075762896 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.073631807 seconds)
  done (took 3.427794255 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.075165605 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.068259708 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.068930971 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.076435406 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.068202442 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.069570639 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.068261838 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.069034458 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.069231784 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.068007692 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.069411531 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.068253483 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.068733002 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.069336857 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.068780651 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.072566844 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.08469316 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.068403874 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.068372421 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.068714462 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.07489318 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.068448669 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.068671162 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.068266509 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.068669116 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.068225796 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.069290374 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.068730948 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.069133682 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.068425588 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.072469778 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.073349099 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.068543561 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.076022482 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.07274465 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.068383308 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.073105878 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.068236702 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.069042214 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.068358938 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.068026924 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.067852782 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.069045224 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.076476582 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.06850352 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.069915415 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.068719309 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.069793889 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.069066866 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.070546461 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.068189608 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.069088259 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.070713049 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.069588328 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.072827782 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.068189345 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.069054821 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.06836601 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.069313001 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.068709473 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.068371424 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.068324047 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.071977305 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.069074002 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.085167855 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.076763774 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.06839171 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.069767401 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.069476927 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.07198342 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.070395339 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.084278616 seconds)
  done (took 6.273436793 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.0922377 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.09125013 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.071145439 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.071062432 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066387411 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069282083 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.07460769 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068968172 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070951854 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.088305642 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069209479 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071238816 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071385444 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.073328535 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069310217 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.071074725 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077495891 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067287281 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.068920841 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.073367221 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069012214 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074299221 seconds)
  done (took 2.831030923 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.153516425 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075214252 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.109981025 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.079612907 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.075231304 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080143783 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.075175138 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075121411 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075249655 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073138328 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072845499 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074922952 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.075339585 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073288766 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072877371 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072548461 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075097636 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072954073 seconds)
  done (took 2.664338527 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.082144761 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.071904689 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.092812489 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.071343917 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.071235821 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.073508977 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075567782 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.079249719 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.073619351 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.071541564 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.078656571 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073835317 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.073762349 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071520957 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074044044 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071694993 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.074014111 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071356814 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078436175 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07547862 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07571918 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078812057 seconds)
  done (took 2.862556961 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08516003 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073346911 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.086483737 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.073123819 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.067025906 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.069364039 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.075241561 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.07126721 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.075455674 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.073344068 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071728322 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06900551 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.073365302 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.07120073 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.073898658 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071392918 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073505323 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071270753 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073144283 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.066706863 seconds)
  done (took 2.669574563 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089141597 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07238442 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072822492 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079046679 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072006554 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072215423 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079010734 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.07247439 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072591533 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.09330149 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072464553 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073116932 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078554865 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079380739 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072717087 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078884524 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079001935 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078865456 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072692815 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072533551 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.093138717 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072533595 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079379773 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.073088997 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072447531 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072563812 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072496936 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076637635 seconds)
  done (took 3.350654512 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072631544 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071395307 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.069701246 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.068950194 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.069091505 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.069149714 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.069194761 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06931326 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072025905 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069458761 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.071884088 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.07127868 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071602276 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.071851301 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071578669 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.071354745 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071677587 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.069277967 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069775689 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071373896 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.072119912 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072033575 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.07192572 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069948855 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069122855 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.071280853 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069282679 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069411322 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071688903 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069344884 seconds)
  done (took 3.32833271 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.079870457 seconds)
    (2/2) benchmarking "in"...
    done (took 0.077631723 seconds)
  done (took 1.368102316 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.067902506 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085355669 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.06805438 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.076759125 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074176659 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.072402256 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.078051511 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074788528 seconds)
  done (took 1.803961757 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.086248702 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.0803967 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.071383753 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080483211 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.079548763 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.087686167 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.127809649 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.070755992 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.077664975 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.070064709 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.083812741 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.070658639 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.078180654 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072150932 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.077436318 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.078380302 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.068739301 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.075107934 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.072162623 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.06903836 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.072263271 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079821921 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074818123 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.066556298 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.072953036 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094260698 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.082208713 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.070356299 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074583534 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.078847486 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.077670125 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.06574112 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.070807916 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.070748004 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.069161956 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.080095294 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085522897 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074677326 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.079915794 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071200122 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.079118324 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.066386081 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.076605791 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.078787708 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083206234 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.070815991 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.071514772 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.066330282 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.070137523 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.073900656 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.066483584 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072324096 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.06609645 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.079311662 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.075965275 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081811534 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.070452969 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.073714384 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.074606652 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.074383018 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.078646166 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.07420537 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075019507 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.070314876 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.082393091 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.076809402 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079469131 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.066249987 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.065761537 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.069304177 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.08101979 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09499227 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.077344068 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.0712877 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071691169 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.069065901 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074663657 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071368827 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076815426 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.078339805 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.070754256 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.076099947 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078723704 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071959982 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.074117375 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.076622905 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.068729533 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.072754993 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.069785476 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086136793 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.071860575 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.06921648 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.069617742 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.081780571 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.075446321 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.069735267 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.069737156 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078697404 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.0651367 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.070573887 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070941096 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072018404 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079927136 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073373626 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074470632 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.079136463 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.077056679 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070909589 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.072901432 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.067383333 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.198955717 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.07236336 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.080259466 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.066142011 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07559671 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.073775501 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.071147133 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.079982017 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.069253045 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.071000667 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.079857442 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.07800749 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.069441457 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.06781343 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.074289539 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.070618399 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072803509 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.079503192 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.069757308 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.066090468 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.066344851 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.075098409 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.071057723 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.07639591 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.074279342 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074510487 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.065669349 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.069563042 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.075036314 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.079326007 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.071804796 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.072507697 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.077110604 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.072614516 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.070197479 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.077926227 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.074968386 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.070859285 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.077122353 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.072737784 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.065859215 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072593279 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.074406135 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.069276207 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.07563734 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072509969 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.074207049 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.071239017 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069328867 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.076811267 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071548334 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.071176149 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07219063 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.070008718 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.081633049 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.073766026 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.066487558 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.068489148 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.07799863 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.07011331 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.070207533 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.070836963 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.073771355 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.071159193 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.068877201 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.07068365 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.073726483 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078713228 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073706851 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071221896 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.077102454 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.084117163 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.070074435 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.074082114 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.070249968 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072155188 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.070846463 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.081209877 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.077470664 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074711994 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.074634559 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.068612627 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076522268 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079806317 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.071345833 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.068792667 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.071317773 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.073843166 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.077608596 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.073458511 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.070758954 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068725326 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07240963 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072871967 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.073982226 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.069958775 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.070867094 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.075598543 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.069091744 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.07620074 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071054361 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.081643614 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074475351 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.066218347 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073142842 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068532644 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.077738797 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.065511837 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.0692807 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.070249759 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.070863311 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.068906075 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.072992725 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.06456978 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.209425513 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.08073083 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.07423056 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.072116526 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.071519638 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.080186856 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.074136962 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075944609 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.076217314 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.077882104 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.081814156 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.071434404 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.078898699 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.081901365 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.070934619 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.065620726 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.077039662 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.069613677 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.070316968 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.070082824 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.069037203 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075112498 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.077691609 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.077442726 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.065279502 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.074890487 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.069716138 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.071244622 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.065913999 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.076370294 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.074456224 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.072709209 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078388284 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070971411 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.070992184 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075478336 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.070729318 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.070785295 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.071154704 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075159648 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.07094191 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.073749678 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.070690963 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.074460769 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.070399627 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.068965589 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.07339788 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.07035354 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.072173722 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076629946 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.070125845 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071830504 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.074561016 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.07072314 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072646313 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.072314745 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.07119423 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075145473 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072732131 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.07260146 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.074480021 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.06648329 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.080090089 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.070315937 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078876537 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.072666193 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.068123757 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.0767343 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.074424697 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.07529041 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.071241339 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.071279228 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.073278084 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.069989177 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.074256918 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079215279 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.070644452 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.082423164 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078638108 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07314848 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.07454948 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.072420577 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.073675908 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.071439351 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.072818601 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.071250119 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.072843775 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.070762902 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.076048749 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.074246016 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.072129002 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.073114123 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.070831066 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.07206521 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.070964658 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.065608396 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.071204534 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.070848951 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.070008683 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079864904 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.070844583 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.071289644 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.069808961 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.0713927 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.069346818 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.06805514 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.077366825 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077624904 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.070196362 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077118908 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.070581064 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.072910124 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081082888 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.064601919 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.068301805 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.20280029 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.071677555 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080828638 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.07206847 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.082226448 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.072766651 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.072227428 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.06907 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.071320802 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.069812978 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.066116954 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.06964498 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075658614 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.070850547 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069887174 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.070491647 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.074227601 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071528025 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080257657 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.070277375 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.072645637 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.070867229 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.068657722 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.072031352 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.071691611 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.074733529 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.0707516 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.070211349 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.068664537 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.070865556 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.073380081 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.073415076 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.070255234 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.073305943 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07896633 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070348634 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.074596877 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073069715 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.065769006 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.07453958 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.070427459 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.070362444 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.070470572 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.077629712 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074451298 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071610755 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.080927893 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.070789551 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072224989 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070457163 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.068801273 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.070026665 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.071073754 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.070716633 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.071754887 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.071681244 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07962855 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.069018815 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.074878824 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072355983 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.07284668 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.077753385 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.071260071 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.074721174 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.076120323 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.072529829 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.073862206 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.080302625 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.074285397 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075029497 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071285402 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.073707471 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077483452 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.07131651 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.078605818 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.072657182 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.071589271 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.073427951 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.070349241 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070368346 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.070319267 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069813817 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.077836243 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.071113511 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.071319243 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.07101232 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.070835222 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.074672826 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075281432 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.082029648 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.076333117 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07659999 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.067741529 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.070312579 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072833599 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.07171914 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.074742922 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.075116935 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.079654117 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.07504692 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.07355341 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.069820719 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.080396315 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07690518 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.076396927 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.071901964 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.077172116 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.07301262 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.075844097 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.075441481 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.074231661 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07319045 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.076810714 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.074836211 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.072438431 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079340755 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.076257568 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.207617699 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.075988012 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.07467944 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.073480655 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.06706098 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.072118766 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.074465301 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077252063 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.074405696 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071012658 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08223486 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.0698429 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.072547877 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073909801 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070503398 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.076253889 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.066505031 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.073840481 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071158987 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071887592 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.065954893 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.071985176 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.070772419 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.073869967 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.071907114 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.066079961 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081811667 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.081124389 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.075034928 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069919183 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06960034 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.066720765 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.066240908 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.071273848 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071462496 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.073887629 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.081715431 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.071229274 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.071027448 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.066300121 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070517489 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074543412 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.074981286 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.068225256 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.066033326 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.071257444 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.074215128 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.077469205 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069565778 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.070039513 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074578339 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.074305381 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.069163066 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073379999 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.068228727 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.075568238 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083568231 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.071219075 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07279251 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.078003628 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079336712 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.071093426 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.066509698 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.071102226 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.074898134 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.07274995 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.071582668 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.071476765 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085926406 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074820584 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.071467174 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.070069926 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.076795793 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.071455601 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.079382673 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072012127 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.070858524 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.076168322 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.073903151 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.077893421 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.075427191 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078290235 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.074844298 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.074973843 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.069865348 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072576735 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.069359738 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.071480334 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.072227825 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.071096975 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.075084621 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.07728954 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.070954617 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081779853 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.080151849 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.073276074 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.068296538 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.071122259 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.071532001 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.066079412 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.070995049 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.068951024 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.069198424 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.069139754 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.069967494 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.073297132 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076461495 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.072759823 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.071043658 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.070748556 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.065657793 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.074467933 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.073465379 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072205504 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.067568341 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.069969841 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.204591759 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.077192147 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07455616 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.070834995 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.074591969 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.074159216 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073477669 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.066949115 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.079302073 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.07053147 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.074394958 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.071469985 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071002693 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.071481188 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075535702 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074896093 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.072639357 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.07420442 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.076086138 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072596627 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.068665332 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.068286749 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.077422917 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.068943344 seconds)
  done (took 45.624146823 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.103950012 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067970554 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066390938 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066279205 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076858114 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067683608 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066414464 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067813764 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067975453 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069795672 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066805504 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066939505 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074124246 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08167927 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07734106 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071072663 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066684049 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067864843 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066743594 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067730102 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074542509 seconds)
  done (took 2.790065084 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.077117844 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.081766838 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079421017 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086586158 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075841049 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.074265521 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.079156641 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074432333 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082702612 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077015525 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082877707 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074679469 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.07695217 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.077223795 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076714661 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074525804 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.082929741 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.076034723 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.074533646 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079215588 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074640683 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.079623687 seconds)
  done (took 2.995790932 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.071293387 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.070558124 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.073401243 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.065927651 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.069755493 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.066214548 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.073229577 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.068848953 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.073036438 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.071285201 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.070837649 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.070445135 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.073202749 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.065983909 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.080614471 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.068610532 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.11123315 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.073225998 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.070303139 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.071256579 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.066196539 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.073360244 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.066440013 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.066644965 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.071052878 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.073218524 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.071441698 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.068816033 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.069995111 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.070324933 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.07079127 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.068527612 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.073303943 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.071766706 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.071405896 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.070830261 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.072772175 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.070490975 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.066489518 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.068700716 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.072298135 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.067439062 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.071088095 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.073015595 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.069195043 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.068769014 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.073183798 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.070231928 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.066006588 seconds)
  done (took 4.77552401 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081196553 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.112697567 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.072700276 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092408404 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.083544754 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.076975016 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.074963588 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093174027 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.067895043 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.06851291 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.084584836 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.082224921 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069886921 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.074194077 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.076951392 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069770851 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070837079 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068921748 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.073204072 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069674087 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.073465866 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.076602961 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.083689071 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.081553828 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074311487 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.069222471 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069396207 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.074369862 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.081405748 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.07399367 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.074223191 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.075109997 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.084159736 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.073165039 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069738122 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.072393898 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.08493219 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.069913404 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.07206492 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.068058819 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.072208866 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.074053019 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.07726851 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.085167758 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.070226557 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.074953569 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.070224619 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.067735857 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.081557156 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.072338577 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.076941431 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.082584838 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073449171 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.070324353 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07441731 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.083935808 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.070291357 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.068848064 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.072891493 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.081124441 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.068057957 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073459512 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.081839453 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.072106754 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.07647637 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.082375117 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.075195173 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073677454 seconds)
  done (took 6.569891706 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.079569576 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.10118928 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08740666 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086877425 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.0804519 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.080482704 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.080361209 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.080664383 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079887997 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.084515997 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080419163 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.120150455 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.085128568 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.082570083 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080602973 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080570401 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.080717361 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080596123 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08069108 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080843008 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.080509556 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.087254112 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.080187653 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.087010551 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.083256734 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.076592209 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.08047282 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080343044 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08725575 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.08077211 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.083097091 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.080131076 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.080247819 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.086815494 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.083277926 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.080226785 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070277655 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079875089 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.080510202 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.079877819 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.076207517 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.087180485 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.080135176 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.075948983 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080617346 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080220381 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.087500799 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.083303523 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.082569679 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.084325527 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.080657956 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087117648 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080143962 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080379602 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.087327023 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.089121968 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086731336 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.087620618 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08104266 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.08618987 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08754114 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.089549594 seconds)
  done (took 6.47111745 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08511761 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077643265 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.089905651 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.06635517 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.068625133 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.076985529 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069402416 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.069436776 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.078734577 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.077710391 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079924953 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076978469 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079847794 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079813302 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.077219245 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079419355 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077439912 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.077179437 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077633818 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.076988013 seconds)
  done (took 2.851580761 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.080034255 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088344112 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.071588166 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.076568014 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.074639186 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.076421339 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.073841506 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074322398 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07216597 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074035373 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.080791778 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.080293461 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072508647 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075980259 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.080207708 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.076162889 seconds)
  done (took 2.525826166 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.087360805 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.076658851 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.083293441 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.071318735 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.072380512 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.067132552 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.070335125 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.06605348 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.066929293 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.082963777 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.070457709 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.082211478 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.070510966 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.069410163 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.083924736 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.075961954 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.06668747 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.067454069 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.070644275 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.081316732 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.074125201 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.068737935 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.074396896 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.070223521 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.073065103 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.074722469 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.069348781 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.071432954 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.067760445 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.070606745 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.073379215 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.07459306 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.067432941 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.068156182 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.069541421 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.067576529 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06998887 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.07075499 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.076406751 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.070267592 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.068848868 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.07263448 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.070526369 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.07116292 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.067056335 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.070694059 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.066856812 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.073096388 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.068502109 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.073313569 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.070048052 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.072926557 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070972452 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.077476259 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.073289145 seconds)
  done (took 5.270733939 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08473165 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074514152 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.066369729 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068841738 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.073883246 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.071498453 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.073816894 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071682837 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072347593 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068600439 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.07208231 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.073609383 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072548319 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07404405 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072089888 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074034971 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.066197424 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072029909 seconds)
  done (took 2.63203674 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.076687201 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071359637 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.078200084 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.071372955 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.070518926 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.073389525 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066452206 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.068971271 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069093094 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.071206802 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071404379 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.073185945 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068999953 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.073121864 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071449755 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070995547 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.073078252 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069105182 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.070938837 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066679995 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.073417805 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069104426 seconds)
  done (took 2.886006701 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.098198224 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.08847111 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.142491781 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.084116672 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.090734199 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.076673463 seconds)
  done (took 1.901311669 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096673512 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104661878 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071025358 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074122484 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079815324 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074087925 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074714748 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074884741 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081490036 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079454382 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077503486 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081927164 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081831324 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081246721 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079758829 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079864815 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074888028 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075096776 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071405849 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086665595 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075541482 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082322765 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075149401 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074664916 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07531886 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081813124 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082162024 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079939287 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074984451 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082677584 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080273406 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075152726 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082924915 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079872399 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074840578 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08208304 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075653554 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086969005 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079871953 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081676782 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.074051111 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07995541 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08236116 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079001959 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082105284 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075123467 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07890771 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075075592 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07525358 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088215431 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080324842 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081465327 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080045547 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082804663 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081952921 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088999198 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07988216 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08211785 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079813416 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079854427 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081470498 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080291087 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081148927 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079963392 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079658838 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081388725 seconds)
  done (took 6.596765124 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108643698 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071734902 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075230489 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080099783 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081542623 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075180856 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075690704 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075719812 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075358529 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072269058 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112530533 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075590383 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081867856 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081530996 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075342628 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074982247 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075040659 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08184573 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072574488 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088437051 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075054268 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0818551 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081912273 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081257626 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080126078 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080228949 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075279223 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075238633 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075086817 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075080507 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079245993 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075212415 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081504773 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.072769748 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082149617 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075500508 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075545446 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079348065 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075367987 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080067319 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081710728 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087350905 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075538855 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075181551 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080103262 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075438078 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075644126 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072055073 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075046603 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072351063 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079971724 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080796968 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080025858 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081793756 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075025517 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075314369 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075346494 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075027911 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075243744 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080061179 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081668825 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074777321 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088343797 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075267374 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075039573 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081883283 seconds)
  done (took 6.536087472 seconds)
done (took 135.234371162 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.198402173 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.174647211 seconds)
  done (took 1.681406941 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.074858422 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.102210184 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.081416972 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.132548223 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071807079 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105640025 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104460831 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.082184152 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071524158 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.072094001 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071617648 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.073639328 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.137100849 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071608183 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071586929 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.073878851 seconds)
  done (took 2.724331223 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102540845 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.161177103 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.105931904 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.070108119 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101924492 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077440973 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.073323469 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.080174653 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.075649078 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.07076232 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077297353 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.075338859 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.07068581 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.07527479 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075636334 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.077377438 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.07084001 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.077377643 seconds)
  done (took 2.846773707 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101249587 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.095125834 seconds)
  done (took 1.525485979 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.161639687 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.138901343 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.206755828 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.341112671 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.158087105 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.147033142 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.147045248 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.147908788 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.11916363 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.141229745 seconds)
  done (took 3.034599291 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104144836 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.153601909 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.276276802 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.1209682 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.078268258 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.09534832 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.12316607 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.084694035 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084055642 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.084006653 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.084151622 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080655263 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.104514275 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.078167037 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.080133309 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080723287 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.107386823 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.079027675 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.08008617 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.080180815 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.105361114 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.071950966 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.078330881 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07927042 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.081235118 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081252821 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.071917326 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.071237108 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.08064733 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.080189644 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.080937154 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.094378498 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.081349383 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106441427 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.07651058 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.10748739 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.081170812 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.077841977 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.080006722 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.077737894 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.082079787 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.082379125 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078853933 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080619757 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.071707786 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.081412139 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.071750412 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.071441668 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.081886786 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.072441829 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.081825763 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080766532 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106676367 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.072911695 seconds)
  done (took 6.194538601 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.111742848 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.111329937 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075275417 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.116100627 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109070907 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074689018 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.109776345 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102940117 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.112499999 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.075425358 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073576478 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.075054208 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083915507 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.08539674 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.120459487 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.111966421 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077222386 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.074370769 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.111679725 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.111608641 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074293866 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106441979 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.101794125 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.111035602 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.073389281 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.0746378 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.073242791 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07544614 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080536199 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.082337633 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073875711 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.083137915 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.087203396 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081503087 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072585861 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073405849 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073387537 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.082365014 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082968608 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082488322 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.081112651 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072816241 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.073465088 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.074221007 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.074406659 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07221499 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.081117991 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.082568371 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.081440611 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073428395 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.075368604 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.073370114 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.074855096 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.082559663 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.080184224 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.083207744 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.083013029 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073773976 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073490484 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.076091185 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083636795 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.082861179 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082739751 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.076641963 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082655094 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073687287 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083862328 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.086292038 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.073687344 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074983921 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.073399412 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073268442 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.074510642 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080436488 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.080733011 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074925373 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073279923 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073021491 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081728021 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080907871 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072795639 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079504822 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072020465 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07274191 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.075046521 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074152543 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.080223851 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.082349985 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.074872843 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.073223017 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.075100179 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074036383 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.073085659 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.079786274 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.08104761 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.080554671 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.079877809 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073267318 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079986199 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080068733 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.208828431 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.083378407 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.075337615 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075695445 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075767178 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.081543251 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.081250296 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08291673 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073722316 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.075539106 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.08097765 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084153884 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.074236077 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.080942103 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083185898 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.081855268 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.072566021 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083874934 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073631447 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.082502108 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073665636 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082772385 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073359742 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.082331168 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.073649338 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.072484722 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.073731638 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.082028854 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074752112 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073419047 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074552098 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07325057 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.08177455 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.084941515 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074984719 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080877771 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.080684249 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074398595 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081796814 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073457794 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.082123399 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073457935 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074144258 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072912066 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084023188 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.074046122 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.073315883 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073542869 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.082850211 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073441506 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08368337 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080828885 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072723353 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084161474 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084117815 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.080452965 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.083156464 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074861749 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.073231922 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073626941 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.074098431 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080373622 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082227416 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07500599 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.073564961 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.080372465 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.082602171 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.07222384 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.080775123 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080827343 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.081217123 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.073216781 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073366148 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08378663 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.083401576 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.081137042 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.081336374 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081425265 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.073779265 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.0808091 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081460044 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073067125 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08576974 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073465908 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.084877531 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.081842828 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079591542 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081222419 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.082440496 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.082474283 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.082741449 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.085167172 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072936532 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.073796512 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.081176511 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072839843 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072732023 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.079108141 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.073605456 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.073624767 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083931757 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072659631 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.218416121 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.074087117 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.082910103 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.073284618 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076193458 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086278351 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.074396619 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.078191157 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081739445 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.074190145 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.080980374 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084061683 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.081256043 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073907338 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074738086 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.083231359 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.082965461 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.0736442 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074374554 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07482953 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.081955937 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.080752238 seconds)
  done (took 19.550526068 seconds)
done (took 38.900560389 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.198227889 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.149762332 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.162327855 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117053355 seconds)
  done (took 2.041232324 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.114111967 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101883056 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.093308492 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.070382995 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.099555116 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.070975268 seconds)
  done (took 1.914417534 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.27920785 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.19456989 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.178728659 seconds)
  done (took 2.015540765 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.20107078 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.188012429 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.430924248 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.26533241 seconds)
  done (took 2.548941216 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.141440394 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089658638 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.071394768 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.087591541 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.130157467 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.157863484 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100288483 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.124940333 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.083344437 seconds)
  done (took 2.394105435 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.147903808 seconds)
done (took 12.423226855 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.159051028 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.123468113 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.115597424 seconds)
    (4/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.175126272 seconds)
    (5/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.229176496 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.096569654 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.073033883 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.096555355 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.107728415 seconds)
    (10/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.208177458 seconds)
    (11/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.175413136 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.08069592 seconds)
    (13/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.095582969 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.138565569 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.071091415 seconds)
    (16/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.079764672 seconds)
    (17/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.079044074 seconds)
    (18/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.161663037 seconds)
    (19/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.079401764 seconds)
    (20/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.081355816 seconds)
    (21/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.087621503 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.133372466 seconds)
    (23/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.088135082 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.09204527 seconds)
    (25/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.404718896 seconds)
    (26/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.226451978 seconds)
    (27/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.185779815 seconds)
    (28/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.182414501 seconds)
    (29/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.084667389 seconds)
    (30/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.078956407 seconds)
    (31/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.103430224 seconds)
    (32/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.069567396 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.071088375 seconds)
    (34/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.213797581 seconds)
    (35/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.088430924 seconds)
    (36/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.113875438 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.118420553 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.131146735 seconds)
    (39/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.159045509 seconds)
    (40/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.181953452 seconds)
    (41/309) benchmarking ("sort", Bool, false)...
    done (took 0.149717886 seconds)
    (42/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.118451775 seconds)
    (43/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.079743017 seconds)
    (44/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.195148197 seconds)
    (45/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.069846492 seconds)
    (46/309) benchmarking ("sort", Int64, false)...
    done (took 0.072030801 seconds)
    (47/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.249733855 seconds)
    (48/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.079081599 seconds)
    (49/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.084918359 seconds)
    (50/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.181537294 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.087973034 seconds)
    (52/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.077736089 seconds)
    (53/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.059640491 seconds)
    (54/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.059172878 seconds)
    (55/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.147016419 seconds)
    (56/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.079554003 seconds)
    (57/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.18330713 seconds)
    (58/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.071133849 seconds)
    (59/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.079514452 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.109063731 seconds)
    (61/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.058742197 seconds)
    (62/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.058062455 seconds)
    (63/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.213718021 seconds)
    (64/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.161002188 seconds)
    (65/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.124205789 seconds)
    (66/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.080395984 seconds)
    (67/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.058393215 seconds)
    (68/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.068854351 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.091947614 seconds)
    (70/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.181145049 seconds)
    (71/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.209818598 seconds)
    (72/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.094826952 seconds)
    (73/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.080639423 seconds)
    (74/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.108817494 seconds)
    (75/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.07812974 seconds)
    (76/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.122246271 seconds)
    (77/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.071566392 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.091404156 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.104607208 seconds)
    (80/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.05687616 seconds)
    (81/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.16872232 seconds)
    (82/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.120176791 seconds)
    (83/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.225596045 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.102455328 seconds)
    (85/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.085518774 seconds)
    (86/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.082955474 seconds)
    (87/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.08198263 seconds)
    (88/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.067320468 seconds)
    (89/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.076385556 seconds)
    (90/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.057864136 seconds)
    (91/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.168811575 seconds)
    (92/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.108144501 seconds)
    (93/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.16454591 seconds)
    (94/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.175674405 seconds)
    (95/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.077139444 seconds)
    (96/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.078419109 seconds)
    (97/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.117314056 seconds)
    (98/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.057176948 seconds)
    (99/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.071611144 seconds)
    (100/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.071643153 seconds)
    (101/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.224304507 seconds)
    (102/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.08136884 seconds)
    (103/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.082190935 seconds)
    (104/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.085065386 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.092570038 seconds)
    (106/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.072305508 seconds)
    (107/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.07821956 seconds)
    (108/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.076241044 seconds)
    (109/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.059113302 seconds)
    (110/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.079634832 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.092157562 seconds)
    (112/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.159350441 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.078344868 seconds)
    (114/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.078998899 seconds)
    (115/309) benchmarking ("sort", Float32, false)...
    done (took 0.136934926 seconds)
    (116/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.058655206 seconds)
    (117/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.117729741 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.08227843 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.092563211 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.092255606 seconds)
    (121/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.096119353 seconds)
    (122/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.098783 seconds)
    (123/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.164644736 seconds)
    (124/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.114968161 seconds)
    (125/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.218171 seconds)
    (126/309) benchmarking ("sort", Float64, false)...
    done (took 0.139296955 seconds)
    (127/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.186035292 seconds)
    (128/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.09678927 seconds)
    (129/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.073329154 seconds)
    (130/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.160561485 seconds)
    (131/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.157179321 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.093885928 seconds)
    (133/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.080009536 seconds)
    (134/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.080165785 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.096375544 seconds)
    (136/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.199489896 seconds)
    (137/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.077672522 seconds)
    (138/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.076877756 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.07680518 seconds)
    (140/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.057036891 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.077159036 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.114367124 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.12264329 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.070529091 seconds)
    (145/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.078446301 seconds)
    (146/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.057014757 seconds)
    (147/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.058675767 seconds)
    (148/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.081914877 seconds)
    (149/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.080569951 seconds)
    (150/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.094930732 seconds)
    (151/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.116796617 seconds)
    (152/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.085220829 seconds)
    (153/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.083802982 seconds)
    (154/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.095373239 seconds)
    (155/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.069445669 seconds)
    (156/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.069107274 seconds)
    (157/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.077242673 seconds)
    (158/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.074915233 seconds)
    (159/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.068733431 seconds)
    (160/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.071657947 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.071024735 seconds)
    (162/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.078832726 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.071026052 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.109432386 seconds)
    (165/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.07201619 seconds)
    (166/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.14867977 seconds)
    (167/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.067588616 seconds)
    (168/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.058183444 seconds)
    (169/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.163439655 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.09477049 seconds)
    (171/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.095940928 seconds)
    (172/309) benchmarking ("sort", BigInt, false)...
    done (took 0.194251335 seconds)
    (173/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.081060696 seconds)
    (174/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.192586352 seconds)
    (175/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.077295499 seconds)
    (176/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.071327847 seconds)
    (177/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.108914881 seconds)
    (178/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.181941111 seconds)
    (179/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.072053301 seconds)
    (180/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.071197561 seconds)
    (181/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.170892278 seconds)
    (182/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.056527934 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.070295105 seconds)
    (184/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.108055483 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.280696822 seconds)
    (186/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.076573605 seconds)
    (187/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.058736025 seconds)
    (188/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.058142383 seconds)
    (189/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.058164357 seconds)
    (190/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.059714093 seconds)
    (191/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.075761572 seconds)
    (192/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.178847812 seconds)
    (193/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.059587289 seconds)
    (194/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.058148891 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.071394678 seconds)
    (196/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.059599853 seconds)
    (197/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.069838536 seconds)
    (198/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.07765157 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.095493083 seconds)
    (200/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.081756067 seconds)
    (201/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.174101768 seconds)
    (202/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.072361392 seconds)
    (203/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.084942051 seconds)
    (204/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.058285939 seconds)
    (205/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.077759845 seconds)
    (206/309) benchmarking ("sort", Int8, false)...
    done (took 0.151342122 seconds)
    (207/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.058007791 seconds)
    (208/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.071652974 seconds)
    (209/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.108138741 seconds)
    (210/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.058543365 seconds)
    (211/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.075169521 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.080747111 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.078315655 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.105604005 seconds)
    (215/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.145354631 seconds)
    (216/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.182455228 seconds)
    (217/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.07882591 seconds)
    (218/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.057761879 seconds)
    (219/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.07765354 seconds)
    (220/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.081950877 seconds)
    (221/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.057741758 seconds)
    (222/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.071105263 seconds)
    (223/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.078319151 seconds)
    (224/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.05883429 seconds)
    (225/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.059773026 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.096190209 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.100334942 seconds)
    (228/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.182416537 seconds)
    (229/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.073127706 seconds)
    (230/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.059153613 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.097190012 seconds)
    (232/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.057590755 seconds)
    (233/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.071153497 seconds)
    (234/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.071816269 seconds)
    (235/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.196189499 seconds)
    (236/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.069808759 seconds)
    (237/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.060149193 seconds)
    (238/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.116598327 seconds)
    (239/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.05785205 seconds)
    (240/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.069823557 seconds)
    (241/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.073265883 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.114027602 seconds)
    (243/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.058858624 seconds)
    (244/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.069680399 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.093496761 seconds)
    (246/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.077733062 seconds)
    (247/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.195401677 seconds)
    (248/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.079288268 seconds)
    (249/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.193847035 seconds)
    (250/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.072842181 seconds)
    (251/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.079344716 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.070733551 seconds)
    (253/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.057066268 seconds)
    (254/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.093752629 seconds)
    (255/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.073397844 seconds)
    (256/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.082074712 seconds)
    (257/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.058532705 seconds)
    (258/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.078648843 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.071032041 seconds)
    (260/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.080286457 seconds)
    (261/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.070979332 seconds)
    (262/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.05734012 seconds)
    (263/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.074029846 seconds)
    (264/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.071231546 seconds)
    (265/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.07655894 seconds)
    (266/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.058714035 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.070727738 seconds)
    (268/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.082964612 seconds)
    (269/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.069231474 seconds)
    (270/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.057180626 seconds)
    (271/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.142534369 seconds)
    (272/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.077268627 seconds)
    (273/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.070678403 seconds)
    (274/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.060570807 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.070836335 seconds)
    (276/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.057858845 seconds)
    (277/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.057849196 seconds)
    (278/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.078784336 seconds)
    (279/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.057116652 seconds)
    (280/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.071694032 seconds)
    (281/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.150739595 seconds)
    (282/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.079195526 seconds)
    (283/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.069439454 seconds)
    (284/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.076470116 seconds)
    (285/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.073763124 seconds)
    (286/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.077401072 seconds)
    (287/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.070306494 seconds)
    (288/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.06919214 seconds)
    (289/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.074228744 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.099367044 seconds)
    (291/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.056692839 seconds)
    (292/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.057505898 seconds)
    (293/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.150299374 seconds)
    (294/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.057163611 seconds)
    (295/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.059494319 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.132571088 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.077218385 seconds)
    (298/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.073641163 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.093224597 seconds)
    (300/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.058019173 seconds)
    (301/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.057637903 seconds)
    (302/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.070323146 seconds)
    (303/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.095126832 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.07028206 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.069406232 seconds)
    (306/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.242918812 seconds)
    (307/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.078856627 seconds)
    (308/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.058570547 seconds)
    (309/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.058867029 seconds)
  done (took 32.582304138 seconds)
done (took 33.954062805 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.089026045 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099463086 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.082462523 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.099509595 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.087490571 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.084659448 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.079489458 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.084453741 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.086749244 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.087891607 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.084724739 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.062174629 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.080978906 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.080971131 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.080831786 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096872117 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.085349831 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.079557376 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.079616468 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.070519081 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.079487878 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.071538743 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.073584672 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.061737301 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.084449443 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.077934392 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.080524796 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.080285757 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.071824849 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.071757351 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.076010511 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.080451667 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.071651307 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.085588072 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.079614024 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.079499312 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.080521382 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.082937715 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.072892924 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.072263258 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.081421363 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.071263362 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.078923469 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.079461514 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.077837103 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.076871567 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.079019563 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.083122454 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095401878 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073506646 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.081309401 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.081874665 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.082830194 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.079041755 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.075704129 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.079279311 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.076618213 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095904558 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.079684955 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073124379 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.080404486 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.079623743 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.07668119 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.079213568 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.07908559 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.08157654 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.083026685 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.076784231 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.080919945 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.077599933 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.070924845 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.079121924 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.075514772 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.074117259 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.082026971 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.084190367 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.069875011 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.077621463 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.07942159 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.0796352 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.070716599 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073502999 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.07282497 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.07787077 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073652408 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.061315879 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.075500145 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.07783117 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.069817225 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.079380435 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.078535947 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.078944308 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.07392618 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.083095894 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.070397971 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.076515889 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.071653955 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.070733206 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.072642961 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.075216817 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.070326708 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073006957 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.081196591 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.071978912 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.077309717 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.083716 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.070400063 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.077740107 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.070152445 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.070060352 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.084197156 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.080295817 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.070889574 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073363493 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.069855316 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.078144053 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.069794541 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.069778125 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.070106458 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.070099393 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.077011029 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.070030036 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072605001 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.077563395 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.226148184 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.072353082 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.076469454 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.074252844 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.072149198 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.078076942 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.071537771 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.071663811 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.073400262 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.069527596 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073398339 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.070984116 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.078706357 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073256344 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.079098073 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.072273235 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.079569593 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.076422601 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.077625489 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.076996618 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.070242922 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.067066439 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073264386 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073454558 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.072668725 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.071768576 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.072918371 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.071504616 seconds)
done (took 13.314111879 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.072065259 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.136693253 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.096821348 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.097763934 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.088446714 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.072067764 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.079970489 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.099390514 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.073063212 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102057589 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.092282122 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.090522569 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.113181576 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.070114084 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.071298646 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.075123926 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.073512238 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.087799664 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.103779465 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.094632521 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.119072328 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.072784689 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.098397749 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.095180738 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.091414864 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.096375197 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.072580002 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.075374532 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.075746082 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.106256804 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.094267804 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.075776104 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.073424365 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.101031642 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.096506418 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.086069613 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.071616974 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.086531273 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.071907802 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.071142028 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.073147227 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.099485336 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.083756861 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.08452218 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.075385308 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.081588125 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.072451478 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.085876962 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.091994269 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.082182599 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.088795588 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101955954 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.073751741 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.08801271 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.070004754 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.089220484 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.080707302 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.073953921 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.072195711 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.078921511 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.071946075 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.075601633 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.084606989 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.08338297 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.075886605 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.087553871 seconds)
  done (took 7.071821035 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.088590262 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.101127196 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.087575528 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.087969202 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.071269993 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.071650315 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.071414413 seconds)
  done (took 2.043247821 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.071698482 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091748743 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.092558998 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.092663528 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.085706835 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.095497629 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080771497 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.071763984 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.096265423 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.07323317 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.091709533 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101719329 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.074961851 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.084936112 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.093702268 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.072280502 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094263793 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.072178666 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.074677033 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.09424948 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077451164 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.100980861 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.079393417 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.072324904 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.084966552 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.072322432 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117785024 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075761813 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.073778888 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.074734745 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.073282287 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.110632796 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.084555456 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078983726 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072157278 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.086537667 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.085632354 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.075195837 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082680289 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.08056189 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.084860832 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.07322497 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.072843173 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.073665494 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.075967649 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.082437836 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.07313177 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.076364919 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.07448838 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.09123937 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.071073666 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.084282284 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.075151748 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.077537367 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.074204452 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.078191826 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082243309 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.073122674 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090872166 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.07364614 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087275231 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086437018 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.084996753 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086573541 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074145449 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08415552 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.0848314 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.074820794 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074114758 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.075912914 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086783208 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.070484645 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.073779527 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.081558666 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.074321506 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094203528 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.093304972 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073587794 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.085014314 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.072548962 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.072441681 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.071769844 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.09372452 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077036312 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072161884 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.076310477 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075558112 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.075117524 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.071111829 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.075912389 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.070401309 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.077907824 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.074942958 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.074696972 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074651321 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.08631983 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.074689004 seconds)
  done (took 9.285837535 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.074943948 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.073419835 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.074488473 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.073074301 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.07303198 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.072768569 seconds)
  done (took 1.92917617 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.094468297 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.073700053 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.084820719 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.075759848 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.106564137 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.090316036 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.090504536 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.081760522 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.087443542 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.083449222 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.090170979 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.091737171 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.095294888 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.077114045 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.09043195 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.07621369 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.090896782 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.078902749 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.082861195 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077242369 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.089611447 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.077013011 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077508637 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.085878001 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.08017024 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.076357492 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.083511099 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.083970025 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.082695512 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.082083844 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.07743536 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.080511041 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075877404 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.081706267 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.091233425 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.075696501 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.0788216 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.081969554 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.076559501 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.079970632 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.0911265 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077458504 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.079018018 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.081418498 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.081386226 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075860232 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.081547287 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.083262477 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.090812819 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.081745149 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.081890194 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.075987986 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.080521691 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.08130885 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.07536231 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.08131178 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.081434596 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.090809099 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.077214248 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.07534056 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.073094135 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.080597127 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.08123288 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.080562562 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.081654401 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.081403601 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075018505 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076986703 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077285833 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.07588046 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.08186207 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.07346963 seconds)
  done (took 7.36065042 seconds)
done (took 29.13972552 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.541874486 seconds)
  done (took 1.984796982 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.603995433 seconds)
  done (took 2.075270839 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.560404994 seconds)
  done (took 8.026158501 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.373238039 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.476347622 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.716644061 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.138806265 seconds)
  done (took 3.212015575 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.7216042 seconds)
  done (took 2.199786715 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.238506324 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.229949673 seconds)
  done (took 1.958827078 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.378670571 seconds)
  done (took 1.848205412 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.115307163 seconds)
  done (took 2.586348539 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.241090563 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.180774395 seconds)
  done (took 1.896818783 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.444132665 seconds)
  done (took 1.917722014 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.85964983 seconds)
  done (took 6.335484157 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.222626625 seconds)
  done (took 1.737921341 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.241328108 seconds)
  done (took 1.717323547 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.715114316 seconds)
  done (took 3.191014391 seconds)
done (took 42.168203264 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.089093124 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.090598561 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.091224632 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.086252801 seconds)
  done (took 1.815428772 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.081683084 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.077947608 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.081200721 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.077656525 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.081242438 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.07847963 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.079514 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.080584468 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.078547882 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.078686606 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.078463998 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.078469278 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.080627917 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.079463567 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.07692896 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.080494841 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.08130168 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.078201227 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.080676628 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.078276121 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.076530645 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.080416285 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.08061326 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.077380185 seconds)
  done (took 3.381935937 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.083842529 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.078627469 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.081001798 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.076827694 seconds)
  done (took 1.804476749 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.083856601 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.095500996 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.09291851 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.083975972 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.095731208 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.090880459 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.074503684 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.074495921 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.075697726 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.083890148 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.07371361 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.099517887 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.092706102 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.083332491 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.086540571 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.070666886 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.073002104 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.092068309 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.084421072 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.084815485 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.076199488 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.084489947 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.073794451 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.09401632 seconds)
  done (took 3.501960367 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.086156967 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105839714 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.085437513 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.095762659 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.098191663 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.071404362 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.084858585 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.097818949 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.132039044 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.071449002 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.077435324 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.07152691 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.080164857 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.073914391 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.08580063 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.113775831 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.117597343 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.074930769 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.103350272 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.07147666 seconds)
  done (took 3.289075956 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.077760214 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.075453224 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.076462902 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.071205165 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.083161855 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.078167251 seconds)
  done (took 1.95295487 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.073859499 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.073859546 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.073352006 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.073015989 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.077535368 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.073434756 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.071638617 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.073058638 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.073689823 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.073400494 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.072615813 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.071618915 seconds)
  done (took 2.367640549 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.188147177 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.074088109 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.0757148 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.071824765 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.07619373 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.072421065 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.086876489 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.073447835 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.097229886 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.072249281 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.072537755 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.074556096 seconds)
  done (took 2.523565618 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198927144 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08051996 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228976714 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15357184 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111330342 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116264278 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115302436 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11437851 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.139308311 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102405914 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163306702 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16398358 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110379779 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138560575 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093781953 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.107035039 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152601716 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166018851 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109027555 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16376594 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145427267 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12906908 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146929701 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104708371 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108410937 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120922588 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.076810525 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084212344 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166473285 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132626229 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142579246 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113917247 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094672847 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178656093 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163561575 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139498721 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149456365 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088245553 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.107084764 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.135359596 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196767819 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09295818 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.304831144 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115480392 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086941644 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135768428 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120522039 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.123508554 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107990753 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094902217 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144941525 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178434478 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.134124356 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09028105 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125217868 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114767662 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.113671591 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116089079 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173128333 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157182401 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129030443 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.076566432 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114777179 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150243769 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13709365 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.111556591 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.125970227 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095829684 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134662132 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153645986 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124610804 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142568981 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.118614306 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09259804 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122498672 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138447698 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128238191 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15962113 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126668 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.078769407 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123870591 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102101115 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084877095 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.148771262 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080004979 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173847907 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105894334 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.10979112 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125311706 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10987439 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110983784 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154847136 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.290304247 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107918031 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.073549886 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109342708 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.121011634 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143746985 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091929701 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11089825 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117732294 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.082565947 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134478298 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.080884468 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124913222 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.083167076 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125845047 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131090983 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.082775273 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124760209 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107934715 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.105838113 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131615872 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156991237 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092280731 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085986601 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163812233 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124540627 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.106107241 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143135369 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156545711 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.106943716 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102797018 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14674022 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169029461 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09433911 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162045633 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107949705 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088462987 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.09312713 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125763964 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114083626 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.126515831 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086823429 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.120030386 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163043593 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.079404297 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099453618 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135691705 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083490392 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085041933 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10809007 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106356067 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.10034168 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.101845656 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104974746 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136452312 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.278634938 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110835041 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126739431 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103516929 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164658421 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09234219 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.108397632 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108980502 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.075737354 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.133025086 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153699365 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08352914 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158067375 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.123710588 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118336835 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12190971 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088113917 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137320222 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083981313 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.076239067 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141131881 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114015641 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112109027 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.148846653 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118091805 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.125461038 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.120694395 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132455569 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13121709 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.131112078 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110407611 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.093407649 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115877249 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1292993 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.079395073 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.094258695 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.08572514 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10845879 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098625437 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088697166 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141345304 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124600029 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115084785 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114830404 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100503092 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145460546 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.080864172 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126690748 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.12195074 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099544863 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.149737123 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149397351 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133780021 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102224936 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.287627531 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.077924946 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081151765 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.091534951 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124142528 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088818769 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088322894 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116094246 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145582923 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129428762 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135515969 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125564466 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120697288 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152875023 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.076515109 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.123686002 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143076978 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122873677 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.108366129 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094970166 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.102700243 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141410387 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107998583 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174990527 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117513433 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12745715 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155029091 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.107038746 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085006127 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106461572 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133097162 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106103147 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143919762 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102461402 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092536567 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111221147 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.081293902 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10128859 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128293707 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119341697 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135826366 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.116143015 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132631727 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082568146 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115643515 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123730336 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12199104 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.070658168 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119208727 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15555579 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099050777 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118931509 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.301549974 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085329665 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.140145231 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169808185 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145729686 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089679193 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110250804 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123132047 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126772714 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121708722 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138400972 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108195076 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138394011 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113901358 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.091043657 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093012609 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100863356 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10739712 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.09916592 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.107366841 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.116094044 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.100726765 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132160665 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106701696 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113338547 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120953456 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.104796456 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.097665222 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100962795 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172954035 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120937318 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167760372 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.105067047 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.142015195 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160026077 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08115041 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084672441 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.083495269 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139186442 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089805222 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131975352 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.11405877 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119216358 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125232035 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138864137 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099035729 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.074200426 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111234369 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132674237 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125075589 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101344824 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.10474708 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158970253 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.102138637 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083008967 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.265665072 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119965604 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108199331 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167390604 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.069430067 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110335664 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082218602 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084926899 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127064108 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149119766 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.085439864 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103655884 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12297951 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114499769 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126444042 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101371988 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11493857 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126354497 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146375003 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128568182 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.094122417 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113106582 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130403687 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153141029 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106037351 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.102848055 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169017398 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150496981 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.157492166 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.090768439 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117203252 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117077625 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112788256 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138282405 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089071772 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15944948 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08713213 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136401859 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105835605 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092257237 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128676073 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.113391098 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092114197 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144256842 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1186112 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087362855 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082467469 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117861758 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120149253 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106408564 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.0799419 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2899202 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.081056683 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135376552 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159596169 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086026947 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10917123 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099624873 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08556172 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107923016 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105824251 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092923681 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.103764097 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166512154 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.090635802 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145255889 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13359853 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113750596 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13424987 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105664745 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.643959493 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.082206235 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149169205 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117147152 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168720481 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103681084 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120846399 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113188717 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122557553 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142666474 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105233518 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.183234612 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132426902 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.118665092 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084289397 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106453659 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10812574 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.091229436 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111018186 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116557995 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117213587 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.097438156 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.119497751 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125953725 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.087679288 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099776889 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153132427 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116796455 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142518012 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137839024 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089060549 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120012801 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136844676 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2367399 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.121249124 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15032817 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109489561 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104132123 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.086713581 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.102466295 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15752766 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.079049407 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155722269 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125242964 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129875229 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11616146 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.111857266 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132454219 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107175501 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123217282 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095562541 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110382624 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115916913 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085884539 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.081858623 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108251104 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113129663 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.103429667 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099969861 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.104569826 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150383748 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.078470318 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102074498 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118850709 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143514291 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169786895 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.093664998 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088026761 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121832729 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118618156 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.115553369 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12333304 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.084261877 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08658422 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.084313891 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.087293276 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.110502801 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116973716 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11714018 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112139175 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158141937 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.088452579 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.229183211 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098831802 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107116171 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.075906967 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.082080296 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099665597 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099174334 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.258671008 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116445593 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158888616 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.100906396 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.095807532 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096228301 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.081184736 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088748074 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127733271 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111097819 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121475427 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104372775 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.069746566 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109433799 seconds)
  done (took 59.98171091 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.11257575 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.087998671 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.103101006 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.150508642 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.126965374 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.205146712 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.162343518 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.194646664 seconds)
  done (took 2.730268465 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.073944324 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.100159792 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.109562515 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.091063121 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.073652941 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.076579114 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.229921648 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.088265589 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.072610177 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.098708863 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.084865308 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.076749522 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.413659227 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.072330085 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.073590529 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.069348804 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.0737931 seconds)
  done (took 3.455353969 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.397764564 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.622420837 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.350549476 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.083807804 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.962553529 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.101465748 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.30738684 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.143639684 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.084959364 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.535179529 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.415162728 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.139875362 seconds)
  done (took 18.729104019 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.087823769 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.081825527 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.095152388 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.095049697 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.084357252 seconds)
  done (took 2.027611751 seconds)
done (took 109.089647691 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.088655747 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.425688865 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.060305566 seconds)
  done (took 2.095803789 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.092979783 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.090951883 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.091156309 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.090609503 seconds)
  done (took 1.956106126 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.080583989 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.082947991 seconds)
  done (took 1.747900544 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.233605467 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.173559272 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.102479238 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.087986607 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.086099448 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.086023209 seconds)
  done (took 1.849977313 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.077960662 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.080902758 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.078038394 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.081773289 seconds)
  done (took 1.902988973 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.081903254 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.058699725 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.060702558 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.063274313 seconds)
  done (took 1.849286845 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.092943677 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.087928108 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.084597823 seconds)
  done (took 1.851173132 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.105046457 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.09296751 seconds)
  done (took 1.783703252 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.086201749 seconds)
  done (took 1.673291894 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.093812771 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.104549466 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.136937281 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.119558869 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.143300479 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.119227696 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.090439617 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.090873975 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.084741792 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.092040961 seconds)
  done (took 2.661832511 seconds)
done (took 21.55013059 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.084053305 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.373545907 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.3655247 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.094647488 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.675290125 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.363450231 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.974370897 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09832699 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.145904194 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.074105516 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090493012 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.654964101 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.964425073 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.336061267 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.952686751 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.330423791 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.656305065 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.075309943 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07493894 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.075172557 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.961765677 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.074321247 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074623331 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.075131113 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.656431446 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.378923817 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.075293493 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.341860191 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074374828 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.076754147 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.378582058 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074816448 seconds)
  done (took 16.270758573 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07622134 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124758818 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.079294303 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.09040738 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.076879448 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.076033665 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.078125873 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.076299082 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127596328 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.075009277 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.091822052 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.075549838 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.078402769 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.075852839 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.094261491 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.078482846 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.076117682 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.075300932 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.075333564 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.075337994 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.094381305 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.077451358 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.076972328 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.075220941 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.075017905 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.088159314 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07823923 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.077893884 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.076876151 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.076726766 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.079055799 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.075235357 seconds)
  done (took 4.228099635 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.12244003 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.129640458 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.079136002 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110083999 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.118313742 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.076977091 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.150390727 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.099416247 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.133649546 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.074563152 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.091643985 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.075485337 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.108114076 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.07616427 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.094487036 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.075493881 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.076074862 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.075704403 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.075069636 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.075267363 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.093686377 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.074573123 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074962901 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.075635636 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.075110301 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08919029 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.075510913 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.076577951 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.075332469 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07725257 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.078677581 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.075438361 seconds)
  done (took 4.461903197 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.078371997 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.082102809 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.088328657 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.089697484 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.074941636 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.078300065 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.079593898 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.076241176 seconds)
  done (took 2.251539713 seconds)
done (took 28.803399996 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.084907207 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.075580361 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.079181846 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.094953641 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.080308328 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.083922802 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.073224389 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.082644736 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.079863439 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.07985852 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.081413827 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.073731352 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.078416414 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.073344306 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.080566655 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.074271848 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.08503317 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.078642045 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.084811625 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.085154917 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.07680865 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.079489823 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.081675365 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.084221532 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.084478213 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083917127 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.082857547 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.078897359 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.07439175 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.07658519 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.082995846 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.089957762 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.074030994 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.08414925 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.073720978 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.074065072 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.078046306 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.073760489 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.084439822 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.082311049 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.075750476 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.082597107 seconds)
  done (took 4.946179977 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.094002568 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.098836653 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.091134324 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.06864065 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.074069643 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.071950703 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.095728828 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.066567235 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.067163925 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.095595249 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.063870209 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.066650756 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.070006133 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.061203966 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.067323439 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.065177607 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.068580943 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.062108127 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.066752947 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.066294977 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.095816935 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.061232464 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.083470939 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.069931424 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.063354391 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.069149609 seconds)
  done (took 3.538340513 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.08051573 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.090018365 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.096967448 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.148554616 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.116663988 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.083782047 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.085522014 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.098430259 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.100280805 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.072993468 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.076932962 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.099939486 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.094066095 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.079887768 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.073771102 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.09042206 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.091071372 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.075464809 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.079322023 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101186134 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.092553091 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.091515772 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.097978431 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.087566029 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.07296536 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076015284 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.077419082 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.086454775 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.076282196 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.082994634 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.076034975 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.076889517 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.075282671 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.085169889 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.076127278 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.075357662 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.099733761 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083525894 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.084482806 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.074615886 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.082094662 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.074789826 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.097281297 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.130089337 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.073452315 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.079151239 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.077424442 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.083843802 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.073757436 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.100619452 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.084773232 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.073500238 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.076666724 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.072822719 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.073375791 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.076612856 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.075412529 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.075839682 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.082546082 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.079002085 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.097420037 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.0784916 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.089773672 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.07323139 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.081898816 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.073002115 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.075143261 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.073022353 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.098829012 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076076344 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.11368989 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.074049766 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.074582973 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.082879093 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.083516227 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08046696 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.073775411 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.089914917 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.083847526 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.077014843 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.082435846 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.077095337 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.076195078 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.102569205 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.076585992 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.07569265 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.074974584 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.079749045 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.076429412 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.074978203 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086063902 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.073336817 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.076140351 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.090592069 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.073642203 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.075256936 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.078902835 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.077933923 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.073060466 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084082065 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.077406788 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.074219552 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.083163156 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.073855474 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.076042698 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.085701679 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.079786643 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.072495285 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.077474117 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.078373911 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.074005699 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.075264732 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.075924975 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.075253447 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.081782059 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.079835983 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.077862793 seconds)
  done (took 11.297963912 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.16849429 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.157683811 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.077741783 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.150908005 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.082993838 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.085152711 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.152318019 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.098754395 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.074044124 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.074846396 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.074592169 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.113595442 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.108645003 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.11951532 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.084764459 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.073997995 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.096810525 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.118359675 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.154172797 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.149734176 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.096874309 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.082323378 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.076100042 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.075348941 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.076143593 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.083886198 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.090770858 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.082690974 seconds)
  done (took 4.536132614 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084956521 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.109013867 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.08118854 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.096661154 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.095486171 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.074106935 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.076065042 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.076455271 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.09196623 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.083402525 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.073928074 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.078733967 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.080340106 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.076831752 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.075068837 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.080521379 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.08079171 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.075337945 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.077622757 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.081250217 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.084177263 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.097292822 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.077029213 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.07362729 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.078514349 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.073509844 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.068588496 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.088885207 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.074444613 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.099009338 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.071390002 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.078544972 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.087981533 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.074969574 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.073955463 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.074110847 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.073965483 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.073937735 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.075486031 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.072481975 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.072532 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.063638448 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.073050475 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.08385183 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.087222183 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.062828834 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.078313587 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.078954698 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.079596498 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.071553465 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.076970235 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.077076184 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.076657918 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.081872437 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.077997252 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.079188692 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.075059302 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.082953116 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.082402876 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.073901061 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.070536535 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.072571073 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.078809843 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.070781325 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.089865426 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.078894124 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.072873598 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.073851682 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.075811328 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.087539983 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.074000251 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.079125976 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.071651794 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.07615902 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.078575419 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.075937223 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.075647153 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.072479997 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.073891985 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.074299961 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.06208689 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.074222842 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.059869163 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.076652139 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.071909877 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.07250559 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.074038327 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.078291675 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.085279708 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.075480196 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.080186122 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.07516087 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.073342803 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.076503741 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.066848361 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.076403901 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.084485151 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.087750095 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.074114664 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.072224827 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.086628131 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.078794509 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.072943837 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.063482914 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.078317546 seconds)
  done (took 9.795305179 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.097704448 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.076356524 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.088243699 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.095438454 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.092876315 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.080364115 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.084379984 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.075217648 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.090432594 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.080346219 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.083755356 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.074739668 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.084872261 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.084083134 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.076263022 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.08465056 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.078527722 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.089478889 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.088709998 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.074401708 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.083077657 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.086472752 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.095773291 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.086778968 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.085332582 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.087471366 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.095507792 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.083275613 seconds)
  done (took 4.041445329 seconds)
done (took 39.752999844 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.709366167 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.85867845 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.690495503 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.001489207 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.859330741 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.710567661 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.876673298 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.686405614 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.029103514 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.725433774 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.007748394 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.76194522 seconds)
done (took 64.66096964 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.758677067 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.817735407 seconds)
    (2/2) benchmarking "String"...
    done (took 1.91615447 seconds)
  done (took 5.348277189 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.889538583 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.262415497 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.926796703 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.682485619 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.688535502 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.979179212 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.481729215 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.21013773 seconds)
  done (took 29.845190307 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.875134033 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.913352387 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.386365552 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.414191356 seconds)
  done (took 15.256918582 seconds)
done (took 61.804086228 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.681016224 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.71369242 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.725038635 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.667939403 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.74250313 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.695196426 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.844862335 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.7131104 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.6856041 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.670238738 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.685949216 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.123915615 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.695995678 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.995472594 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.685521327 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.694688028 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.689505399 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.157213198 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.840213457 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.699010674 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.691793727 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.711210745 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.687362652 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.690986434 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.728752202 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.68252185 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.084085948 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.697851507 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.523224187 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.686676279 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.732171405 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.134035017 seconds)
  done (took 201.07104192 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.683155176 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.722685956 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.813017921 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.71344146 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.264880009 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.86600692 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.784522265 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.28851987 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.693682675 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.690057526 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.935028423 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.685319891 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.964148059 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.662786929 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.733435237 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.765810389 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.93979295 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.98766512 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.739628256 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.853660631 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.693381061 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.801769451 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.743273907 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.934395967 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.718709612 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.707056044 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.701155654 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.695643958 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.877526709 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.935481225 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.69820912 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.726571481 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.893826982 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.556602396 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.708298409 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.695874728 seconds)
  done (took 167.491703413 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.894114674 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.687557032 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.685592292 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.685990141 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.691720914 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.685414526 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.809847732 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.818307889 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.325618552 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.34636607 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.739767857 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.68627955 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.476300029 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.686316025 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.758565069 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.698420028 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.687804324 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.701674236 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.71467178 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.689352395 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.687011736 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.816302834 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.70079286 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.687332951 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.69437227 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.687269497 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.69293265 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.057988663 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.686336974 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.903296343 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.690772578 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.69398134 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.931799593 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.688250505 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.688044501 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.545434336 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.205241357 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.776207571 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.689724681 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.693762266 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.68782447 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.905058692 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.687699346 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.68812326 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.686935599 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.690398455 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.836867605 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.686759756 seconds)
    (48/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.687019675 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.814131353 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.162222447 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.687959901 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.687974079 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.687366152 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.424303522 seconds)
    (55/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.690582179 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.267429487 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.691009675 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.690995573 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.690070676 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.688079911 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.695254911 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.568505022 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.762372225 seconds)
    (64/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.689961091 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.689270853 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.691849198 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.694943511 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.69167965 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.762694526 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.690748723 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.109107982 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.748630949 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.922763178 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.812708545 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.690793823 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.75623038 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.78340128 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.692859228 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.691445419 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.688532749 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.688437595 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.769214535 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.689981198 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.817118176 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.698063546 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.691539573 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.741025426 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.759193893 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.689722707 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.536325168 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.691618351 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.689489985 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.954383083 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.755242702 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.690767154 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.690348841 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.817189336 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.813713862 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.405723916 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.692007785 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.571439987 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.829478309 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.690508197 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.834073117 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.692539899 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.772223252 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.697157342 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.692380459 seconds)
    (109/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.690297363 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.722009147 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.690949633 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.742985843 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.690610069 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.063020997 seconds)
  done (took 392.660865369 seconds)
done (took 764.789315164 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.296243236 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.263546274 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.358859358 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.275097962 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.25645217 seconds)
  done (took 13.072829771 seconds)
done (took 14.693121104 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.777782048 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.784974268 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.713012339 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.78430595 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.70997043 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.779335294 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.764773624 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.714710379 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.749281371 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.713847207 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.749011232 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.713734037 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.701398561 seconds)
  done (took 24.279750744 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.923902545 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.920189456 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.759517193 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.919847027 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.734760479 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.926450537 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.849770932 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.838926083 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.840303503 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.704862913 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.700949276 seconds)
  done (took 21.741005129 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.92924523 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.9253843 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.764395424 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.92176487 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.740504294 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.929563915 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.85294329 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.842324587 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.848748371 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.705859141 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.701297044 seconds)
  done (took 21.782985577 seconds)
done (took 69.422201539 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.697015619 seconds)
  done (took 3.317125252 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.736226895 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.895209884 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.704884715 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.701509401 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.696994243 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.69856437 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.701550335 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.69775764 seconds)
  done (took 15.454651826 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.695775238 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.697900474 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.69830992 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.697649938 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.698011312 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.695490383 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.694918578 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.69830711 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.695590882 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.694900132 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.695864825 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.69885631 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.694538835 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.69875416 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.695258489 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.698872487 seconds)
  done (took 28.771418191 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.696840551 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.697042526 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.695673092 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.696430149 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.695648796 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.696201788 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.696080964 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.695970416 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.694774176 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.695537187 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.695841426 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.695589258 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.69585951 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.695929945 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.696139213 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.696457004 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.695555764 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.696353613 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.700799859 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.696471315 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.697373701 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.695714343 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.696492945 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.696420428 seconds)
  done (took 42.336762934 seconds)
done (took 91.498962717 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.41561226 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.636761324 seconds)
  done (took 9.676156266 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.700138346 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.700102911 seconds)
  done (took 5.028165787 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.700157629 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.699365253 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.702466822 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.699569047 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.699383901 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.699999039 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.700442703 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.699408193 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.700032335 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.699280145 seconds)
  done (took 18.624567066 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.700160286 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.700092646 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.697078956 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.699897733 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.700101551 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.697920914 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.700318234 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.700653518 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.700940984 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.69880165 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.700062271 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.697669982 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.699449381 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.698035372 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.700505981 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.697124914 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.697682542 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.698041738 seconds)
  done (took 32.209155379 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.700574071 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.700358915 seconds)
  done (took 5.025189382 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.697282476 seconds)
    (2/7) benchmarking "second"...
    done (took 1.696993185 seconds)
    (3/7) benchmarking "month"...
    done (took 1.697678695 seconds)
    (4/7) benchmarking "year"...
    done (took 1.697979277 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.699058988 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.697218388 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.697763167 seconds)
  done (took 13.508422123 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.70172506 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.846083127 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.911051687 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.339852491 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.702905407 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.704620455 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.619101068 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.705401671 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.706018576 seconds)
  done (took 18.862371679 seconds)
done (took 104.556016445 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.565024351 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.703343846 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.925248373 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.756530347 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.758576972 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.041438164 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.717319333 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.968007388 seconds)
done (took 42.059893754 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.728988602 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.433338349 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.470549479 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.72561337 seconds)
  done (took 15.255541059 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.684241562 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.014915967 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.706452882 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.53894011 seconds)
  done (took 21.574410868 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.071148307 seconds)
    (2/2) benchmarking "read"...
    done (took 2.050144825 seconds)
  done (took 5.753364909 seconds)
done (took 50.938870707 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.702295542 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.70143961 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.699192228 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.701570988 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.698666215 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.699020043 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.702981841 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.699752478 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.70252584 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.702270519 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.700438298 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.703667963 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.702960907 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.702530352 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.701350184 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.699921578 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.703633113 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.700949777 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.702736301 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.704157599 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.701249178 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.70374337 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.700160761 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.701245421 seconds)
  done (took 42.467268217 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.703977046 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.701307748 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.704547838 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.703697321 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.70251048 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.704145797 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.704611859 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.700944724 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.704020952 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.705100719 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.701452335 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.705243706 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.704098215 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.701696952 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.704118691 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.702130342 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.703861149 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.701348841 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.704420701 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.701914796 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.704303596 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.701712397 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.701289124 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.703922256 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.702204401 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.701984788 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.70699013 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.70331951 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.707095349 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.705236223 seconds)
  done (took 52.732624924 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.70976696 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.711943599 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.705324274 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.705569239 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.705055779 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.704920074 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.70529126 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.705318766 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.704662644 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.704805167 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.705511561 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.705409618 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.705330035 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.70561011 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.705468077 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.709576546 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.705354066 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.70574446 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.7051272 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.706035637 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.706499385 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.705132507 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.707161137 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.705960877 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.70535116 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.704649273 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.705154622 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.705103125 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.705853864 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.705678691 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.70566038 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.706136325 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.705563123 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.71053678 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.706257137 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.70615959 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.710791223 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.714360076 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.706113741 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.70671779 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.706486449 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.706326023 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.706778349 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.707216397 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.706715528 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.705952427 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.707740674 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.707024017 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.706913236 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.707445789 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.711171477 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.708667118 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.70689995 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.707784725 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.707849305 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.707756596 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.708052363 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.707305429 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.706876004 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.706743337 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.706466825 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.707020718 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.706129044 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.708292858 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.709212383 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.708495172 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.708142525 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.709319813 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.71336275 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.708353478 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.708913866 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.707636643 seconds)
  done (took 124.537448791 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.707427658 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.705560545 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.705504525 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.704739329 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.706257601 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.708361275 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.705947736 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.708467086 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.706617418 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.709281063 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.708880445 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.706555284 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.706634377 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.709888938 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.709257881 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.706814315 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.708470435 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.706541024 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.709791007 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.709133161 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.70932448 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.706899157 seconds)
  done (took 39.199081972 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.709944746 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.709796721 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.706788729 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.709422205 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.706520502 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.709397202 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.709531623 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.713374795 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.710396186 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.706226326 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.705689433 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.709317945 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.707561134 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.706277365 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.706496612 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.706972691 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.709713182 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.706967173 seconds)
  done (took 32.384007348 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.707142121 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.707648516 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.709917257 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.707585408 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.707660584 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.710758883 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.709955859 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.710296677 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.709953866 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.707864164 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.710591573 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.710599109 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.71042028 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.707271005 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.710106145 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.708301804 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.710675461 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.707982119 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.71043263 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.708087391 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.707834932 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.712342937 seconds)
  done (took 39.237973174 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.712153046 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.712634673 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.708261165 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.708307458 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.709562682 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.710423944 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.711210647 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.708687179 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.711737899 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.711332125 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.708623037 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.711291233 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.708610846 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.710529835 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.708836135 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.709074979 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.711252806 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.710284302 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.713821325 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.708322286 seconds)
  done (took 35.840760627 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.713748533 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.712402656 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.712998804 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.712938237 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.713103989 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.712715953 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.71322913 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.713264965 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.713172305 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.713776266 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.713325755 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.713486783 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.713172595 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.713524707 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.713827037 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.716039674 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.713405661 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.714387102 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.713456493 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.714239533 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.714143768 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.714103889 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.714026436 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.714491549 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.714898169 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.714169016 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.714464832 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.714734184 seconds)
  done (took 49.621963383 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.712742221 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.713927837 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.71004838 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.713059546 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.711020114 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.709909538 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.710892687 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.710806229 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.71344252 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.710486645 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.713803215 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.713181825 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.714241938 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.713877157 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.713894784 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.714692975 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.714603246 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.710619213 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.711932562 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.711440385 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.714025035 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.715511136 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.714721329 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.711914177 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.711662521 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.714917203 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.711519813 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.712331738 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.714552587 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.710867432 seconds)
  done (took 53.019311869 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.73279729 seconds)
    (2/2) benchmarking "in"...
    done (took 1.733180265 seconds)
  done (took 5.103985033 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.711962835 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.715867507 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.715257431 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.711592683 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.712183055 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.71647152 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.714568139 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.712588447 seconds)
  done (took 15.349441158 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.714648995 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.71554527 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.715069768 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.71569797 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.715801603 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.715568014 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.722056276 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.7154769 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.716560236 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.716404726 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.723152726 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.72399693 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.718329017 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.717588237 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.715868949 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.717355237 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.715425381 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.716397024 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.715989688 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.716022465 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.71692603 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.717971216 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.719333887 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.714028932 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.718134035 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.72688012 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.719712252 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.716732566 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.717737386 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.720142044 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.717959709 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.715138716 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.717850923 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.717559623 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.716727357 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.718224464 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.726269953 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.718263115 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.724461933 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.719000476 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.717949093 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.715465688 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.718046492 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.718513427 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.718623388 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.717847683 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.717714437 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.714317923 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.718351022 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.721415288 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.722980433 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.716927353 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.715206259 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.720927527 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.718837535 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.724636397 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.718210147 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.721901892 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.726846302 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.729058937 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.73127049 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.72619276 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.720327872 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.719095813 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.728328413 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.742971635 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.724769948 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.715561576 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.714605508 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.71817632 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.725144833 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.731614494 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.728011578 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.718793713 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.718466806 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.719091771 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.718952181 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.719328909 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.726148935 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.723084069 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.719112817 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.720724248 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.728784377 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.744920431 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.719252619 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.719550073 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.719279491 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.719529968 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.720696417 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.729726804 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.720761067 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.719186016 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.719611542 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.719402353 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.720453957 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.721120864 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.719159984 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.721251928 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.717294254 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.719816156 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.722594091 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.723918706 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.729002136 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.720983839 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.720303367 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.726242645 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.72034984 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.72047651 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.726330344 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.720550286 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.720973813 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.721247745 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.727048279 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.71763763 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.72402392 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.729475221 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.720899499 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.72145319 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.72250391 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.720526557 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.731081362 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.74731059 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.720333934 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.720338022 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.725846809 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.736046248 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.720878766 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.723525314 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.721376667 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.717818947 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.719834269 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.72204655 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.720583163 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.722933254 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.722128475 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.726063528 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.718962675 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.724100459 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.722399831 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.722880866 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.72315796 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.723385813 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.723858471 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.72460259 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.723691263 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.723048592 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.728925129 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.723024117 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.723175025 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.723262056 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.719468704 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.722588182 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.723908959 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.724120951 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.722597631 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.723468372 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.722546167 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.723388642 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.722684966 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.722621428 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.723273823 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.723829031 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.72775391 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.724035545 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.72759432 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.7229942 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.720224568 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.722646921 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.722853111 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.722505792 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.724725855 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.722501459 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.72692583 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.73100906 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.723101828 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.724553495 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.725846084 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.724016051 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.724133356 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.724072315 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.726792447 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.732224386 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.723310367 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.730358567 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.725326535 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.724697249 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.724846483 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.723661674 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.726298649 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.724708563 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.727424513 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.731394826 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.73727495 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.734259626 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.725927877 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.728296223 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.726112329 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.729426524 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.72936716 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.725439676 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.724402444 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.725614223 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.724953684 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.72587707 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.727629144 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.730405688 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.72533942 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.725180318 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.725619538 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.725597051 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.72502477 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.726871309 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.727081694 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.722302255 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.725535195 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.725067858 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.724738165 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.722244604 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.724531755 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.725606718 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.725304964 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.726026679 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.733476534 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.723915278 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.726842366 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.728867629 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.726084256 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.725981212 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.726303137 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.728198216 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.726193204 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.732635345 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.726179545 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.726555114 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.733333529 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.726758845 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.725969638 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.729562502 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.72633294 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.723804919 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.730693707 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.734486958 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.727084194 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.727871894 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.727250771 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.727107644 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.726506776 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.73296636 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.724674117 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.727335008 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.726984219 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.729096454 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.723982549 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.728756754 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.728204563 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.727304059 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.729013444 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.729917269 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.727957286 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.729320824 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.72869286 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.728408304 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.727868979 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.732100142 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.73573788 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.73202762 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.729102592 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.730415641 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.729805663 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.732037655 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.728935596 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.728713328 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.728505037 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.741538588 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.737279141 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.738466975 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.731063475 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.728304918 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.73331656 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.72973473 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.733361702 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.728250283 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.728968908 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.729660618 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.728529974 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.725279519 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.729310062 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.728894899 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.729854908 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.730817897 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.732681614 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.728526547 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.729547283 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.728984182 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.729348247 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.728718517 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.728582347 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.729291217 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.731417573 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.731554218 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.729121719 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.72952031 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.736849207 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.731314477 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.730569871 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.729313063 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.730441725 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.728987056 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.730798276 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.732397083 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.734887329 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.738475898 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.733403004 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.739401886 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.731259678 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.739514322 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.730732488 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.735077099 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.738293797 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.726887599 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.730180494 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.731588813 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.732053596 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.737568236 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.731990529 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.731542034 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.735657203 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.732817627 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.731803189 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.731089406 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.731694768 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.731376469 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.731975629 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.739146293 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.733256179 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.73520533 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.733004262 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.727844524 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.731157939 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.73048051 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.73132311 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.735981595 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.732047099 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.731774022 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.736354036 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.7318163 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.731924437 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.732633144 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.731378911 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.728897707 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.730883178 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.739326888 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.734074139 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.736148641 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.731133324 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.740170752 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.732294285 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.738356128 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.733930501 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.732967265 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.732747286 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.73427068 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.736754422 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.732623419 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.733799258 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.733162381 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.733164614 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.736073625 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.732014452 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.733870016 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.732940008 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.73290947 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.732777856 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.742842269 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.756981268 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.734316663 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.736357091 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.730127203 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.734277049 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.740260673 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.734425206 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.732799167 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.737053733 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.744893022 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.74156852 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.735278744 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.73460611 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.735529043 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.734106595 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.733564711 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.734063284 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.733644252 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.734495684 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.735117073 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.734324947 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.736939454 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.735025068 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.73498866 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.735957279 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.735423399 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.7441666 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.734498785 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.734966404 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.733909517 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.734585213 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.734274458 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.734383732 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.734357446 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.735836038 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.733436335 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.737118509 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.742755427 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.742222749 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.737697539 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.734345509 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.73580393 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.736358582 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.735734495 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.73521331 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.735223787 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.735339274 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.736379764 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.735704167 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.737365838 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.735544368 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.734783588 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.735901158 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.735837966 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.738814618 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.743637876 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.735921475 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.73378439 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.736378967 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.735741328 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.736165382 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.736866787 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.744172815 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.740732853 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.747600692 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.745499907 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.741505389 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.736720256 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.739852061 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.744939842 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.737353658 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.738823978 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.736470952 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.738804694 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.738910731 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.740818059 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.738370487 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.743906264 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.736923192 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.737104541 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.744818695 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.737881786 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.738023174 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.738067168 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.741142222 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.737843937 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.734082835 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.736696296 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.737157044 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.74427384 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.739091659 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.738501051 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.738730113 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.735562352 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.739001426 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.741547092 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.736906739 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.738111583 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.734774399 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.738558821 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.737746658 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.74054386 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.73450593 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.737527756 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.738000091 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.741347775 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.745288894 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.734730673 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.74007775 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.740288262 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.73983908 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.738465614 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.738604221 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.735055953 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.736335175 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.738739085 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.73913574 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.74051517 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.742625438 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.738739573 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.740199662 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.739131729 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.739475229 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.742005917 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.748551916 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.746515855 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.737460174 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.738750384 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.739815109 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.741386229 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.739364021 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.740588007 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.739886218 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.74089444 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.73912202 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.738941035 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.738718004 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.742326377 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.755547409 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.740033142 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.739889847 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.739034259 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.743590229 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.740213896 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.736575939 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.738658744 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.742587125 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.743682847 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.748598068 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.740415184 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.746687107 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.740882894 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.741693609 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.743772589 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.743612802 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.748881423 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.743648191 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.740838541 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.740942264 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.746143582 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.757956515 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.739798108 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.751233878 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.770908231 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.741567133 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.741589038 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.741365612 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.740865862 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.740539958 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.742744924 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.741471761 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.740432755 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.741302377 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.742479693 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.744364907 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.747769661 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.74281304 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.741497136 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.742699015 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.742557816 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.74322049 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.738966129 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.742769456 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.742816944 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.742616203 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.741905373 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.742857573 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.742602547 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.754702891 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.752387704 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.742017393 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.743055002 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.739026812 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.744587103 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.746630767 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.754327497 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.750334055 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.74270694 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.74227238 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.744432985 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.742577851 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.739094874 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.742924278 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.742563942 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.742473677 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.739394081 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.756231757 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.751172756 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.747238586 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.742987249 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.743055793 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.74266011 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.744786816 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.743424716 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.74361034 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.744573209 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.744270571 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.747531643 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.74334589 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.743011954 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.747617833 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.751641859 seconds)
  done (took 1033.641172174 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.741004715 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.740649757 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.740647414 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.740507699 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.740838417 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.741106036 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.742884735 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.742173072 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.740602575 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.740924426 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.740819221 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.741832408 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.741452535 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.741009034 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.741948454 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.742005215 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.74220665 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.741571753 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.741790397 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.741907408 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.741689386 seconds)
  done (took 38.235988162 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.744241855 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.741513643 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.742675558 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.744087377 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.741637845 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.744287698 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.741606948 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.743954136 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.744911422 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.742186101 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.744631242 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.74491788 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.741890012 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.741806475 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.741974283 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.744664841 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.744719353 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.742149027 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.744976539 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.744928459 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.744874589 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.742546381 seconds)
  done (took 40.022362296 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.745853139 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.745598218 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.746207555 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.742485331 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.746198977 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.742451591 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.746198706 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.746010049 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.745499047 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.746242674 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.745625964 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.746832094 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.753657949 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.754456079 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.749303036 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.745670794 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.88942349 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.746973346 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.74718711 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.746751004 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.743450102 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.751667416 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.743613599 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.744108579 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.745979737 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.748097925 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.747279322 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.747186967 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.747591669 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.749853498 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.754455615 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.747519534 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.747538545 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.749633074 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.747283129 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.74865203 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.753949657 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.749768628 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.744492407 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.747423694 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.75765933 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.769113457 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.749270093 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.753130164 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.747531599 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.747411271 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.753916139 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.756925078 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.749553248 seconds)
  done (took 87.491470175 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.748103645 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.746989868 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.744831547 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.748048872 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.748200207 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.74839395 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.747792062 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.747781829 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.744805827 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.745330256 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.74844714 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.747088756 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.744582274 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.747347375 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.747151 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.747269557 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.744190173 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.744561839 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.743208746 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.744233033 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.74594181 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.747250121 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.747660956 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.744236648 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.745701181 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.743782679 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.744747406 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.746693902 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.746125988 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.743623787 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.747402912 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.747892991 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.750874097 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.746101002 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.745620098 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.748073779 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.7485936 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.745088381 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.74803011 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.745817483 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.747626956 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.747325016 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.747189876 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.746979815 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.744586766 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.744130336 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.742518239 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.742448417 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.742970788 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.747909908 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.746551066 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.744153469 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.746293114 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.743053802 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.745523369 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.745228797 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.743263685 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.744604545 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.746137482 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.744329899 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.743998263 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.746473775 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.745598512 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.7470376 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.746263846 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.744976449 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.745178731 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.746679863 seconds)
  done (took 120.399537742 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.743150971 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.744568798 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.743414945 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.744195122 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.744915932 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.744196969 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.741044544 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.741526572 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.74062374 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.740947182 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.741245105 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.741423744 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.740149011 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.739776765 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.740191161 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.743371433 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.741448942 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.740253161 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.739651651 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.740057438 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.739872718 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.740181666 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.741348672 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.740306293 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.739736341 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.739517131 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.741608315 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.740592103 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.740603312 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.741267095 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.740670402 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.740978038 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.743668288 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.741073299 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.741401789 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.740131493 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.740050444 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.740243275 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.740807054 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.74057454 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.740736804 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.740643856 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.739880151 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.740427469 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.740472341 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.740963438 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.741305321 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.740843311 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.740430402 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.74289875 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.742535114 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.741523046 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.741121716 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.741173063 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.741283201 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.740414423 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.741516599 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.743394957 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.741279456 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.740633076 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.740828619 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.74068516 seconds)
  done (took 109.628478161 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.739280809 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.740800808 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.737679947 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.737834424 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.742205551 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.739287175 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.740257328 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.740449997 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.741933202 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.739785388 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.740361453 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.739043291 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.739046684 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.740096845 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.738197331 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.739240298 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.739378594 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.74274278 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.740389928 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.73839964 seconds)
  done (took 36.459943117 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.740745636 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.743244053 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.737440456 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.738462534 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.740490814 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.738243897 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.740566522 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.742137295 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.738272918 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.739836749 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.740760562 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.740668729 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.737566935 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.739322715 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.740450545 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.738636744 seconds)
  done (took 29.500649232 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.740127723 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.740799171 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.742502481 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.741229641 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.737019291 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.737722032 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.740142989 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.740102053 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.731185733 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.735855689 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.735022555 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.735070507 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.734015616 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.736152716 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.731401528 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.734589473 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.731480044 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.731216071 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.736253204 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.734162044 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.731451977 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.731346894 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.734394559 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.734707603 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.731850672 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.733686387 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.730958789 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.730670418 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.730652851 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.734177848 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.731676022 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.730924798 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.729110278 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.729076199 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.732911688 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.730846287 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.73314465 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.729986884 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.729808397 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.730315029 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.729464651 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.728012136 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.731224085 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.730475929 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.728158157 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.730224777 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.727426888 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.727782638 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.727809918 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.726559893 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.728892184 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.730325565 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.729909084 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.730229784 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.729567324 seconds)
  done (took 96.958535581 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.728202712 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.728434179 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.725954076 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.72892096 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.72926686 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.72553151 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.728060356 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.725994693 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.725853953 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.727827117 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.727212867 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.727856126 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.726283768 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.72810549 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.726920628 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.728824759 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.725502335 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.726980027 seconds)
  done (took 32.742754079 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.7268554 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.726104429 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.72946761 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.726907692 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.726242296 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.729523818 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.725655988 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.729563958 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.730220195 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.727399572 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.727014074 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.729040973 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.73189434 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.730370197 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.726104464 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.726948842 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.728921612 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.728986961 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.726187982 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.727082364 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.728191188 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.728509773 seconds)
  done (took 39.668748508 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.727510451 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.727531523 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.744494565 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.747319732 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.749274701 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.761025141 seconds)
  done (took 12.107702797 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.727403196 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.728548646 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.723676651 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.727431422 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.726635374 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.723860212 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.723829859 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.724196756 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.726030577 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.723044013 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.723523997 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.7255332 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.726014364 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.723287481 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.726119201 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.725018752 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.723034692 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.723914547 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.723761202 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.72506253 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.721754538 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.725370867 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.721702731 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.721755872 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.723767003 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.723071413 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.72504153 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.722042129 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.722329219 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.724343584 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.726239134 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.722355725 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.725538579 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.722247273 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.724577658 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.725818345 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.723475467 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.725109172 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.724991559 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.722633628 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.724780381 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.725181438 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.724557298 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.72389239 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.725879359 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.722579673 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.722593332 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.723509085 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.722405486 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.725185824 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.7261161 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.722683176 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.727178432 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.725194859 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.72559656 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.724832772 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.722564379 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.722359342 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.725262016 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.722128585 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.721934976 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.725624791 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.722910457 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.72270147 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.725394069 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.722887447 seconds)
  done (took 115.450803348 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.721898282 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.721734704 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.722772864 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.723542891 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.72157573 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.722164731 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.722090043 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.722639305 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.722279371 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.723588739 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.724566953 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.721788035 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.723419877 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.722078473 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.723304865 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.723042944 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.721711226 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.72205376 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.722269309 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.725107609 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.725526326 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.722415286 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.722358113 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.721523743 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.722612535 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.724194423 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.721809715 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.722523256 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.722661348 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.721840853 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.722276645 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.722639513 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.721855201 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.722238255 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.722553036 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.721380513 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.722516237 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.723163938 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.723144736 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.724856428 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.721423264 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.724377503 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.721965099 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.721897658 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.722081466 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.722332857 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.72134085 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.722774584 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.722498863 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.720760964 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.723139785 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.721780048 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.722027236 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.7213693 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.721022059 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.725590641 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.722176407 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.721314268 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.721234108 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.723280275 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.721649084 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.721742292 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.726101074 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.72130586 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.721805299 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.721187844 seconds)
  done (took 115.334596497 seconds)
done (took 2398.766978756 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.762466236 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.712321896 seconds)
  done (took 15.121489346 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.883609029 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.838045186 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.726166765 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.760449691 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.72562616 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.742633567 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.720096815 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.724751 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.724938311 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.724860049 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.726042603 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.910837324 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.724229613 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.724684767 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.725715506 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.816685571 seconds)
  done (took 49.849278516 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.728128518 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.728990144 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.746338874 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.730297005 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.728638987 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.739044324 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.761858763 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.731545232 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.762044477 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.740571303 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.79556768 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.739407491 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.725804482 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.776873804 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.744590407 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.741561846 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.817012825 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.803280649 seconds)
  done (took 33.190571631 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.810042792 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.749761275 seconds)
  done (took 10.214842202 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.746761296 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.778802885 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.788828984 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.728964706 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.728241185 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.756758689 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.761018139 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.758076452 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.754612098 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.744951891 seconds)
  done (took 69.197632324 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.732292361 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.72910933 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.727031559 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.725275665 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.720624118 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.72392629 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.72532765 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.724880104 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.391443258 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.76564128 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.734066925 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.731563177 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.726768445 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.728216691 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.724942981 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.754419656 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.831233601 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.724131508 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.724206731 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.731930371 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.726549213 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.780869041 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.739759544 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.727319363 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.756576073 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.39155478 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.735214327 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.732381848 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.828627879 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.72482276 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.726803118 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.729987452 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.731076683 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.108918982 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.011027286 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.727855653 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.74195878 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.735385475 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.72445713 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.833691271 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.729585765 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.735674786 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.4855095 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.993904894 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.834265262 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.771497685 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.03592133 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.744921402 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.730104352 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.75712979 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.73097121 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.729308196 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.741738113 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.219493806 seconds)
  done (took 124.486356879 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.723215759 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.079551353 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.893417834 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.724557578 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.013537651 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.933106821 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.725535188 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.7740051 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.726743183 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.96042305 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.980626721 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.832826557 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.726254965 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.723819104 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.726507421 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.723191486 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.88414169 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.798749313 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.726044947 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.722760185 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.755829758 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.968966613 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.848989747 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.728118702 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.755295739 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.939350404 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.84837025 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.832260646 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.508082607 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.723039916 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.789621075 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.725729829 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.730286719 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.723820385 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.882103743 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.821167409 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.809924362 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.72722308 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.725142532 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.724302751 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.397027885 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.928741855 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.822498037 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.868358065 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.923944425 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.932510351 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.51223254 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.722956048 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.481817842 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.89332928 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.956148821 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.961574006 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.850470786 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.726805378 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.26396111 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.724290468 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.726579144 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.977237754 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.870270799 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.826771207 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.72662808 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.725228555 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.724713853 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.973071068 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.728171796 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.82343336 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.728101141 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.725673704 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.824445548 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.826058137 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.868234125 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.939535994 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.757813469 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.633003201 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.267161983 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.975347578 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.794028069 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.977861898 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.729427896 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.724338109 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.806054856 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.570314761 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.981981725 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.976398579 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.980588952 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.764293922 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.449850389 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.725110169 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.956196337 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.949346118 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.988873601 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.964550219 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.965773954 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.047575192 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.727822535 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.725356059 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.943696764 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.863978493 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.729280028 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.073071072 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.960921235 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.277950183 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.747633111 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.033794729 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.860701941 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.730790992 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.369759659 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.726216399 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.960380206 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.768439438 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.72881121 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.727778304 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.94973792 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.720524486 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.727262733 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.388589333 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.791637275 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.732810381 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.962509307 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.731097232 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.99801901 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.730603699 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.967789447 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.784112915 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.761151869 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.961020526 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.961009537 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.730147181 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.973607717 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.97499313 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.84710306 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.953032647 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.428551667 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.727325483 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.017842585 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.730500859 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.727046574 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.902984691 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.728671941 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.875635377 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.731252805 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.02372752 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.753429236 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.961470356 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.73011097 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.991992608 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.764418593 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.780742905 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.731980764 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.862058529 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.730011415 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.563566803 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.888131191 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.732604478 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.730183634 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.538244452 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.729331342 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.88124836 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.964548168 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.167900427 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.804151744 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.403744072 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.728533262 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.812691031 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.754941126 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.118882288 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.730588056 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.982928235 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.732801696 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.730964433 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.729809222 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.971817074 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.915519596 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.732529705 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.729177786 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.640519142 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.730188698 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.729264969 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.912967849 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.093709034 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.730147384 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.935047078 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.734179793 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.859316139 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.73399855 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.816197144 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.071856449 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.729694136 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.729923774 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.732431492 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.730040217 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.730125255 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.997682596 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.760725985 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.251826215 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.870466624 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.009013499 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.044616778 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.98216266 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.777072853 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.730724758 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.986733415 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.733452267 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.796208818 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.732795059 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.753070359 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.962723882 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.73521519 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.941665248 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.01363546 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.58730452 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.781714877 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.734289645 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.731849003 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.729684271 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.878951525 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.820940546 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.733572857 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.731565427 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.848314427 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.855106757 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.941658999 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.732584737 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.931750849 seconds)
  done (took 872.231400743 seconds)
done (took 1175.937376358 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.733761816 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.735849616 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.721218736 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.734049656 seconds)
  done (took 28.585139191 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.740019413 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.736974388 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.73799637 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.738883119 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.740009154 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.736767212 seconds)
  done (took 12.090394487 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.742987267 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.734553842 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.735110575 seconds)
  done (took 20.873439424 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.805305399 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.123468895 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.843719025 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.165506997 seconds)
  done (took 9.597584819 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.739404978 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.739694439 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.738945958 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.739833378 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.741040159 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.743043227 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.738984769 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.741882976 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.742799226 seconds)
  done (took 17.327376591 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.037924669 seconds)
done (took 94.170463428 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.834090549 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.865499577 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.13613295 seconds)
    (4/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.736142175 seconds)
    (5/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.720608245 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.893197448 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.835291091 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.520880669 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.389892587 seconds)
    (10/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.88350164 seconds)
    (11/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.018023286 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.753755043 seconds)
    (13/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.633285568 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.862026974 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.072670307 seconds)
    (16/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.899455046 seconds)
    (17/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.758116758 seconds)
    (18/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.662757217 seconds)
    (19/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.765372344 seconds)
    (20/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.835375137 seconds)
    (21/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.823547539 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.753029963 seconds)
    (23/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.979372412 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.048390766 seconds)
    (25/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.722791363 seconds)
    (26/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 7.823031188 seconds)
    (27/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.302737141 seconds)
    (28/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.738501244 seconds)
    (29/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.737890669 seconds)
    (30/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.009580083 seconds)
    (31/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.424602362 seconds)
    (32/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.846288032 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.053332214 seconds)
    (34/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.723358133 seconds)
    (35/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.02241364 seconds)
    (36/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.755684752 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.723414359 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.960771982 seconds)
    (39/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.788183503 seconds)
    (40/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.840498355 seconds)
    (41/309) benchmarking ("sort", Bool, false)...
    done (took 1.958889786 seconds)
    (42/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.005969928 seconds)
    (43/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.764013189 seconds)
    (44/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.149099724 seconds)
    (45/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.714315085 seconds)
    (46/309) benchmarking ("sort", Int64, false)...
    done (took 5.473041871 seconds)
    (47/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.6887807 seconds)
    (48/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.762465847 seconds)
    (49/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.8704144 seconds)
    (50/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.029932803 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.977702655 seconds)
    (52/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.065566653 seconds)
    (53/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.923976734 seconds)
    (54/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.836986829 seconds)
    (55/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.82999046 seconds)
    (56/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.737679807 seconds)
    (57/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 3.566643072 seconds)
    (58/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.896494484 seconds)
    (59/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.758054706 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.849186467 seconds)
    (61/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.017185185 seconds)
    (62/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.72419723 seconds)
    (63/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.154112183 seconds)
    (64/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.894318347 seconds)
    (65/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.742542058 seconds)
    (66/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.759791047 seconds)
    (67/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.232645152 seconds)
    (68/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.833364269 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.691425402 seconds)
    (70/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.101620605 seconds)
    (71/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.016327049 seconds)
    (72/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.748661548 seconds)
    (73/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.754212646 seconds)
    (74/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.803764135 seconds)
    (75/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.765871792 seconds)
    (76/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.261621152 seconds)
    (77/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.738451761 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 3.523722413 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.864014226 seconds)
    (80/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.789774024 seconds)
    (81/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.839398377 seconds)
    (82/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.972634439 seconds)
    (83/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.742844541 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.896965183 seconds)
    (85/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.393761477 seconds)
    (86/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.859629505 seconds)
    (87/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.746996977 seconds)
    (88/309) benchmarking ("map", identity, BigInt, true)...
    done (took 3.52331829 seconds)
    (89/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.146473282 seconds)
    (90/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.850220664 seconds)
    (91/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.398329655 seconds)
    (92/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.841362204 seconds)
    (93/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.849750041 seconds)
    (94/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.754221713 seconds)
    (95/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.769688009 seconds)
    (96/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.931886962 seconds)
    (97/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.876342818 seconds)
    (98/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.89614711 seconds)
    (99/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.757762027 seconds)
    (100/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.860655453 seconds)
    (101/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.213923295 seconds)
    (102/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.892962843 seconds)
    (103/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.76353824 seconds)
    (104/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.884247223 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.102933371 seconds)
    (106/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.763481383 seconds)
    (107/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.772812701 seconds)
    (108/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.144209792 seconds)
    (109/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.189496772 seconds)
    (110/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.778753164 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.677058818 seconds)
    (112/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.935403127 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.958629483 seconds)
    (114/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.772952192 seconds)
    (115/309) benchmarking ("sort", Float32, false)...
    done (took 5.478814966 seconds)
    (116/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.738745068 seconds)
    (117/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.539408302 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.077333672 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.796931673 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.688410191 seconds)
    (121/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.7534429 seconds)
    (122/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 2.98263772 seconds)
    (123/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.763095528 seconds)
    (124/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.248445062 seconds)
    (125/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.264465287 seconds)
    (126/309) benchmarking ("sort", Float64, false)...
    done (took 5.559460367 seconds)
    (127/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.753484463 seconds)
    (128/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.701969833 seconds)
    (129/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.894217085 seconds)
    (130/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.93417047 seconds)
    (131/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.99506582 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.911984526 seconds)
    (133/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.792982048 seconds)
    (134/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.774141732 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.443977843 seconds)
    (136/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.951335981 seconds)
    (137/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.990449027 seconds)
    (138/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.905917799 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.909758944 seconds)
    (140/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.915609765 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.005363011 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.845884471 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.775699289 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.013744655 seconds)
    (145/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.780665179 seconds)
    (146/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.840659023 seconds)
    (147/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.179986597 seconds)
    (148/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.76661475 seconds)
    (149/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.844619008 seconds)
    (150/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.802872685 seconds)
    (151/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.895055181 seconds)
    (152/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.590443068 seconds)
    (153/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.474878124 seconds)
    (154/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.75606355 seconds)
    (155/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.889162131 seconds)
    (156/309) benchmarking ("map", identity, Float64, true)...
    done (took 1.996045657 seconds)
    (157/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.840383281 seconds)
    (158/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.736432265 seconds)
    (159/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.976243285 seconds)
    (160/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.759661867 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 3.618032755 seconds)
    (162/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.904995409 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.154085103 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.866621172 seconds)
    (165/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.909765491 seconds)
    (166/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.75150401 seconds)
    (167/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.935331912 seconds)
    (168/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.713661911 seconds)
    (169/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.953700417 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.585881038 seconds)
    (171/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.755676287 seconds)
    (172/309) benchmarking ("sort", BigInt, false)...
    done (took 6.841671013 seconds)
    (173/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.756748866 seconds)
    (174/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.298876818 seconds)
    (175/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.83701032 seconds)
    (176/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.751323259 seconds)
    (177/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.121197619 seconds)
    (178/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.125570698 seconds)
    (179/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.842281483 seconds)
    (180/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.075089809 seconds)
    (181/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.913959441 seconds)
    (182/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.82835651 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.436652563 seconds)
    (184/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.83347306 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.741866672 seconds)
    (186/309) benchmarking ("perf_sum", Float64, true)...
    done (took 3.210925428 seconds)
    (187/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.955935334 seconds)
    (188/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.320991727 seconds)
    (189/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.993743728 seconds)
    (190/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.085055878 seconds)
    (191/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.82045102 seconds)
    (192/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.094500756 seconds)
    (193/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.895801505 seconds)
    (194/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.675876144 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.017556717 seconds)
    (196/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.875492308 seconds)
    (197/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.03531951 seconds)
    (198/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.835234519 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.113903264 seconds)
    (200/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.782989707 seconds)
    (201/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 7.014185029 seconds)
    (202/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.840550646 seconds)
    (203/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.26596667 seconds)
    (204/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.832723164 seconds)
    (205/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.999115628 seconds)
    (206/309) benchmarking ("sort", Int8, false)...
    done (took 4.638677802 seconds)
    (207/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.926037175 seconds)
    (208/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.037470919 seconds)
    (209/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.8549559 seconds)
    (210/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.015452879 seconds)
    (211/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.822709918 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.493306005 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.976079181 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.73893912 seconds)
    (215/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 7.654434469 seconds)
    (216/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.763200239 seconds)
    (217/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.779322952 seconds)
    (218/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.118515473 seconds)
    (219/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.146406538 seconds)
    (220/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.763120098 seconds)
    (221/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.940014655 seconds)
    (222/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.945163036 seconds)
    (223/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.792076981 seconds)
    (224/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.168454093 seconds)
    (225/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.746943547 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.965083933 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.776225217 seconds)
    (228/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.760703992 seconds)
    (229/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.838768153 seconds)
    (230/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.15582612 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.414642002 seconds)
    (232/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.087123943 seconds)
    (233/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.860847048 seconds)
    (234/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.759176449 seconds)
    (235/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.831048453 seconds)
    (236/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.872263878 seconds)
    (237/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.077992409 seconds)
    (238/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.221091469 seconds)
    (239/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.818317553 seconds)
    (240/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.862323263 seconds)
    (241/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.755376697 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 7.111733663 seconds)
    (243/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.331558745 seconds)
    (244/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.003179015 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.742442028 seconds)
    (246/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.989312632 seconds)
    (247/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.052983323 seconds)
    (248/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.770278437 seconds)
    (249/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.740942764 seconds)
    (250/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.931956483 seconds)
    (251/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.840321316 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.10637343 seconds)
    (253/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.864995589 seconds)
    (254/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.77525471 seconds)
    (255/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.931175722 seconds)
    (256/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.758572356 seconds)
    (257/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.113116614 seconds)
    (258/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.092220906 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.161106053 seconds)
    (260/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.84682873 seconds)
    (261/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.75783683 seconds)
    (262/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.775560969 seconds)
    (263/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.820725582 seconds)
    (264/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.758051722 seconds)
    (265/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.852240797 seconds)
    (266/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.016157024 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.230759803 seconds)
    (268/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.274802395 seconds)
    (269/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.018520477 seconds)
    (270/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.052511115 seconds)
    (271/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.762005699 seconds)
    (272/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.894126711 seconds)
    (273/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.146367897 seconds)
    (274/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.926500295 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.136975364 seconds)
    (276/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.002175333 seconds)
    (277/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.828187841 seconds)
    (278/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.786553408 seconds)
    (279/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.862834021 seconds)
    (280/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.763076038 seconds)
    (281/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.850956487 seconds)
    (282/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.761431288 seconds)
    (283/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 3.212496969 seconds)
    (284/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.809263547 seconds)
    (285/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.776933977 seconds)
    (286/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.535394605 seconds)
    (287/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.898827484 seconds)
    (288/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.86400757 seconds)
    (289/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.897963736 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.877923465 seconds)
    (291/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.891741142 seconds)
    (292/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.867164954 seconds)
    (293/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.763557217 seconds)
    (294/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.947537036 seconds)
    (295/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.750493083 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.531214616 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.789741335 seconds)
    (298/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.821018545 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.709177949 seconds)
    (300/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.064498569 seconds)
    (301/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.85681296 seconds)
    (302/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.004046654 seconds)
    (303/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.789360656 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.38878035 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.979897208 seconds)
    (306/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.761523761 seconds)
    (307/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 2.959958966 seconds)
    (308/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.36479428 seconds)
    (309/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.144921574 seconds)
  done (took 971.714008105 seconds)
done (took 973.444405584 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.793469543 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.786496341 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.770667038 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.790926302 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.882122995 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.797502176 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.78110366 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.772160789 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.817726808 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.819402782 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.767623027 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.796503871 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.775300049 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.770624208 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.771048863 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.786059998 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.086060974 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.804623915 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.788354301 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.780006612 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.787677162 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.767778391 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.821224025 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.796530879 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.773880722 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.772096789 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.774722403 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.790823459 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.883690898 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.775028319 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.774845761 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.784128106 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.088486577 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.802240949 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.767143308 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.79088963 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.78243481 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.781047046 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.776053997 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.803299144 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.17150632 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.808661276 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.774487809 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.772635979 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.772001791 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.778281606 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.773579567 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.778379378 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.786948161 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.785725108 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.163870133 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.828753178 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.774049832 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.772516895 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.783075975 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.772802184 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.775285173 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.788015282 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.791835494 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.789005868 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.067873976 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.808659881 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.777599945 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.789840795 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.781092959 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.20278819 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.808630437 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.777527573 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.173901293 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.819095487 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.200492999 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.82294442 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.774754388 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.787249096 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.805257378 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.087721643 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.800145289 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.77403007 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.785683556 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.771749344 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.784076966 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.787392977 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.77916098 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.774771495 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.787455689 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.800670212 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.785250553 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.774357842 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.783221784 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.792959943 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.781788764 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.78564449 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.778972905 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.76938898 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.785577979 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.781968138 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.776460312 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.776993926 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.779656251 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.785933388 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.172241252 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.831930597 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.77214644 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.771404694 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.774853888 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.789121322 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.17222848 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.817782158 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.797755521 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.822180892 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.776484931 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.072409308 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.810769414 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.792360179 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.784028968 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.778937094 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.770864597 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.070731122 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.198931959 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.832968186 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.777077325 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.772932973 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.792728083 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.778910971 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.773772217 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.090689919 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.809834983 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.794462438 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.896813262 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.790082808 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.810087818 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.773595454 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.779651477 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.807994011 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.792718921 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.807891414 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.779631011 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.791753412 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.792688111 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.772877698 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.787168834 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.787965155 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.777940748 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.781343851 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.771147238 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.808805884 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.790652596 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.791051267 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.797688314 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.898540751 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.77539487 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.071710855 seconds)
done (took 279.273162282 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.845373046 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.765917992 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.868470788 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.772621061 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.85577253 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.857372801 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.770874566 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.770634209 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.769833229 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.149450737 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.769259149 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.769950009 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.768008217 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.769441783 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.854207284 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.772038933 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.770025714 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.114803658 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.773680348 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.843846989 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.775698728 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.770274906 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.773858054 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.146459133 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.773367301 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.777205603 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.844820795 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.7728349 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.110913751 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.774396484 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.771376987 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.110224987 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.864454825 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.791555955 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.783222121 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.780196679 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.858329811 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.77793535 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.85436653 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.85600474 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.871117982 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.814303139 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.775221112 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.774496076 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.777922391 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.775101649 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.771194711 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.802418442 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.777186654 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.773182815 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.11432185 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.784573691 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.773160764 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.772041935 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.77267182 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.805572878 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.772401757 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.775086802 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.868218462 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.776517358 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.83633534 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.151350764 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.149999862 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.776819606 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.771763133 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.772491501 seconds)
  done (took 177.877650373 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.842014233 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.854135761 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.840349647 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.779697044 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.825877243 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.84244592 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.780533013 seconds)
  done (took 14.4612852 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.782276434 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.775217131 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.830636013 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.8264959 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.776432321 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.930770244 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.775424462 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.785973484 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.773767307 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.826986252 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.776375893 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.776184642 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.781873609 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.769609563 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.829296119 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.787005312 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.891578593 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.77817046 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.776379138 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.927343564 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.773725773 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.782545906 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.809155635 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.78748833 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.777863628 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.783220827 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.371630378 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.777742586 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.773391867 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.776655028 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.775084114 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.816930666 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.777092254 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.772912539 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.77348798 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.890036881 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.776689699 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.774518405 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.777860234 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.772141233 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.777042345 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.778827519 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.777264738 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.774622841 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.777252917 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.799581703 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.777402844 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.77719814 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.776863939 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.778991591 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.811336806 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.777562786 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.774757495 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.775274112 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.833118744 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.784551771 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.778147945 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.774782004 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.778963371 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.775444947 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.928752246 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.829042867 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.777049379 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.828691625 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.778195933 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.778631266 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.778870178 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.777380017 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.875006706 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.778583299 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.829844476 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.776291134 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.93601537 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.801753468 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.77945565 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.783150572 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.782329796 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.779736295 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.77600579 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.785126227 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.777007407 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.780205293 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.784896305 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.776739781 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.776215797 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.891616588 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.88420108 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.776072673 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.791720486 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.788213556 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.775787487 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.814269693 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.779071618 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.776577682 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.83605854 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.895619924 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.833991299 seconds)
  done (took 196.753528407 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.783950617 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.787796508 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.781198178 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.796835982 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.780357391 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.780297438 seconds)
  done (took 12.408831862 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.781911028 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.780806429 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.778989736 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.780354006 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.779760374 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.780860465 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.781433411 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.781330111 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.784784782 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.779614425 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.780788558 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.781399915 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.781837858 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.781467392 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.782314993 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.779738662 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.781175547 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.779377564 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.779193393 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.780654882 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.93515792 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.780574174 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.781733197 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.782063327 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.786494291 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.780860534 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.789852484 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.782112776 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.781452728 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.789769454 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.787149711 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.782725729 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.782000177 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.788625544 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.787369129 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.783031463 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.786774172 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.782725076 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.778219685 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.783231228 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.78275654 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.782059759 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.782187537 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.783341746 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.784843956 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.786592053 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.787788336 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.789709801 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.782714622 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.783964757 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.783815527 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.781769706 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.783297266 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.783726896 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.784625804 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.788963901 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.788114172 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.782958156 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.783488026 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.783172543 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.78401732 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.782971833 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.784233721 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.788204943 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.782078343 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.784939588 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.783994785 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.790347652 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.783939472 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.782708045 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.784567855 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.779852885 seconds)
  done (took 131.252485126 seconds)
done (took 534.46416684 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.923958335 seconds)
  done (took 8.626218843 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.836229136 seconds)
  done (took 8.578293738 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.311598964 seconds)
  done (took 10.015611393 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.800605202 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.808011037 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.787786699 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.788673546 seconds)
  done (took 28.913540208 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.872028482 seconds)
  done (took 8.575636725 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.801293962 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.778955189 seconds)
  done (took 15.3193261 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.794922427 seconds)
  done (took 8.498011763 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.879534535 seconds)
  done (took 8.607076267 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.795049594 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.825018153 seconds)
  done (took 15.337412349 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.765148374 seconds)
  done (took 8.467061537 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.415175091 seconds)
  done (took 11.216159892 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.797799658 seconds)
  done (took 8.607429852 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.864995208 seconds)
  done (took 8.573532975 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.83533178 seconds)
  done (took 8.538381612 seconds)
done (took 159.576012808 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.781732242 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.781028094 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.78007062 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.780911975 seconds)
  done (took 28.826377115 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.816503933 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.816740303 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.820079803 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.827156278 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.819685561 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.818478919 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.809937423 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.811307672 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.828582759 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.820086636 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.819875937 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.820305181 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.819128906 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.812371468 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.820602527 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.818800456 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.828545147 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.818809433 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.811862036 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.821003172 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.785302767 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.828553724 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.825480104 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.785974506 seconds)
  done (took 45.309732555 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.981328653 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.856832795 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.940171592 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.837865446 seconds)
  done (took 9.321465877 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.837212306 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.839272314 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.850249744 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.888390488 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.912700335 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.849669739 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.811360561 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.806546225 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.793737541 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.841365519 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.916314321 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.833155989 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.947977389 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.785425386 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.972068634 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.786690104 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.785418734 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.838205871 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.889958166 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.915843932 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.786284849 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.839113536 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.8408034 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.833569463 seconds)
  done (took 46.10824286 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.787268158 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.793825145 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.790943445 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.785120512 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.787877382 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.786000654 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.791148092 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.786890082 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.806831165 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.787407118 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.784786542 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.786128452 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.786181676 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.786898876 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.786532309 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.798733976 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.799865392 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.789304354 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.791156502 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.792066296 seconds)
  done (took 37.511540086 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.781656469 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.633400136 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.131527394 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.037567741 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.783084484 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.787785161 seconds)
  done (took 30.862071418 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.800864482 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.792726202 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.787705456 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.844387627 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.928532994 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.793985668 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.787472072 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.79928782 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.83547895 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.853260101 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.806331783 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.815628321 seconds)
  done (took 23.552100983 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.785810345 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.788388044 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.784820429 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.802792096 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.799075337 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.795391112 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.795033658 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.786392899 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.803283438 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.807553645 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.796444001 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.803112561 seconds)
  done (took 43.262482558 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.871642992 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.671912772 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.426480255 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.510708305 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.318843642 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.994442718 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.306428352 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.959893346 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.786614347 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.058958226 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.399608158 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034108229 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.03737564 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.784090838 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.85748229 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.265713736 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.084140071 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.032549462 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.817851551 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.488319851 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910835712 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.326350073 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.568673594 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.918154784 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.995369386 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.916388221 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.04708482 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.74021611 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92323324 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.825276797 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.794475296 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.787321669 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.05926224 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007039506 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917342621 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.794870232 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.440973076 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.502340637 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.777444537 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.566326748 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.461640248 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.924289655 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.7951646 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.786839692 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.717449753 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.319343174 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.969168012 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.790228866 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.4875199 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.786632767 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.796778726 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.87613783 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.789262104 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.600975606 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.7389011 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.064346925 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.786431357 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.793662712 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.367218908 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.898606876 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.458389626 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.728614847 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.87960228 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.553730437 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.271700221 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.944742901 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.790858883 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.789356462 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.719510943 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.494197266 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.918623953 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.930944603 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.805864477 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.436227655 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.089306303 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.463747897 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.874728055 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.092830574 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.602565822 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.729678659 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.013116752 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.738596047 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.7209541 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.647582731 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.720517361 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.065197783 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.828039195 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.452844239 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.833263538 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.96300119 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.799242137 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.809342107 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.794480097 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.01194654 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.672827664 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.789520743 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.348070382 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.078403944 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.811993616 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.964438818 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.722356429 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.792205465 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.043605358 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.998626657 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.040983318 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.267061668 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.956693479 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.789061847 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.875774133 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.714677216 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.806595236 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.079045304 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.857236056 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.906144352 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925889146 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.751813801 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.099564224 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.820794183 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.963029017 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.40582002 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.059300005 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.134870836 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.043559402 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.872762776 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.79708356 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.789159268 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.563137666 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.424006383 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.012559633 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.789998306 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.292909072 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.80517067 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.791240139 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.722831423 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.448116928 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.427849288 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.902984883 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.011761449 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.755946053 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.068717592 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.723279346 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.93664614 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.9016333 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.011632417 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.445063936 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.875417254 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.047304875 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.284688155 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.057855765 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.807663565 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.810189185 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.891092493 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.81133416 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.22840678 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.049033495 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.794337449 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.794530353 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.562860583 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.876336383 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.800983715 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.795636519 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.587787599 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.086426152 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.829801534 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.796638946 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.718913622 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.806469789 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.874800756 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.796665053 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.800506039 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.320335706 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.544109951 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.802201134 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.443949153 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.01578885 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.801156068 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.551510567 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.986526936 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.882976516 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.077338576 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.863971722 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.726515506 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.50051954 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.496322986 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.793841329 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.726227822 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.793715321 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.801357371 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.803801592 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.994380772 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.089878517 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.848852569 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.500289339 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.914972993 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.803289626 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.79818358 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.794482659 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.290567094 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.913736039 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.426462656 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.806284619 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.929759436 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.80754764 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.72647729 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.800954777 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.798005022 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.79413878 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.753210616 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.84571146 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.55261531 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.135794895 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.051323026 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.442959277 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.811380559 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.52178801 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.928636939 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.814006972 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.357715815 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.782631511 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.92809805 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867171923 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.80479681 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.556384428 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.581460887 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.375336391 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.111867049 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.12773715 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.257215875 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.197690972 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.135015492 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.971653262 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.029993534 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.322395729 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.854552097 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.978851564 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.738348914 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.885533128 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.451892126 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.159436178 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.810306206 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.022834804 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.192044359 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.431575581 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.962879235 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.005460435 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.830761196 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.61922939 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.82592522 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.320033868 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.95160709 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.362421029 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.026438833 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.970208904 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.371578444 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.921766391 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.796548677 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.271826982 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887607688 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.505442179 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.158389216 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.343351386 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.428890135 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.177620882 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.802524013 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.241483096 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.166948265 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.133208657 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.895086114 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.73221687 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.807480934 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.807133029 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.796880671 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.773870403 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.658107028 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.048612566 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.807982447 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.030811429 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.075612683 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.08311692 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.713065408 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.802726657 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.798670282 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.107188704 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.563864774 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039900825 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.142747844 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.370567845 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.810479684 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.730969017 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.731847402 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.500414944 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.79969648 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.77213018 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.033976176 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.915297078 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.753172785 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.201262915 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.110264365 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.052022058 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.813055583 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.082337061 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.084788191 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.533401121 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.827810506 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.898849227 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.371641593 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.552648613 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.021700952 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.033105188 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.597434647 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.027997122 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.456046002 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.783181533 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.802579129 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.012718543 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.021939885 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.421698146 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05878836 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.527552517 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.809874008 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.169855035 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866903787 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.436694633 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.024549861 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.893078217 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.809946299 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.88108006 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.809945436 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.811230141 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.81015508 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848381014 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.444736253 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.943177839 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.813959608 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.890322538 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.914902697 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.387270262 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.810683661 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.088498074 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.17177658 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.149773288 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.87251054 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.80145571 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.808825529 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.733117922 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94179772 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.245336084 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.075013732 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.932915476 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.941326541 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.826059576 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.373300946 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.111672592 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.113731693 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.076165716 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.694836238 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.803060554 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.889175362 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.025870226 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.811747557 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.010945033 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.039967949 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.137387118 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.275143043 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.944531385 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.081215995 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.075198825 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.1710428 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.803073554 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.390820619 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.815079377 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.335300364 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.849298522 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.436479017 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.09700369 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.812968937 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.02835505 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.824351944 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.997894366 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.255557797 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.516646303 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.173441598 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.805657975 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.868599037 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.090881212 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.225885405 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.124959008 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.885872568 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.812910725 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.499911181 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941742505 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.691503964 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.048032489 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.805438681 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.013823848 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.515569807 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.81332493 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.102199913 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.122604318 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.803310909 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.730725965 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.849924747 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.81336814 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.027867664 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.08930696 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.059372799 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.812946782 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.807329243 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.617415575 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.100702308 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.872879049 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.73722817 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.808407022 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.90472211 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.052355123 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.825306422 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.321693417 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.50820949 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.118936107 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.727792849 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.82729871 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.218028179 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.266934847 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.164815926 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.336878001 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.057208601 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.367562593 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.656711782 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.178284994 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.809978566 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.20398854 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.182727881 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.808712241 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.330454111 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.914682009 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.089443214 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.137936256 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.822078223 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.59456017 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.855850955 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.029373601 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.403195197 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.747184556 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.811276006 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.867815481 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.807453451 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.935618697 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.81729047 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.77041819 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.684676932 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.642991783 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.301664578 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.811316158 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.880800939 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.382213736 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.380121039 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912199111 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.964047801 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.811318065 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.529033443 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.097547576 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.059048846 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.319780354 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.88100656 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.810126768 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.807309322 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.732840872 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.006289213 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.004521221 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.118979506 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.162131052 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.917103262 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.811244132 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.021264841 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.018445392 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.448151371 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.973733108 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.193857408 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.918432158 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.735892883 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.527165654 seconds)
  done (took 1643.993523009 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.832592581 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.823069239 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.828985704 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.832362076 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.844731895 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.833650282 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.884741216 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.815325392 seconds)
  done (took 56.428323641 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.808534985 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.994503157 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.817554268 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.809818893 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.835101238 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.809205017 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.003715609 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.822855571 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.82329846 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.818862433 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.810336613 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.817542874 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.101552788 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.83433342 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.81022135 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.279979742 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.82705978 seconds)
  done (took 73.768413592 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.809819498 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.238457708 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.840228875 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.830209767 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.845756897 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.813895293 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.922308725 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.87004178 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.816910215 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.988053232 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.153700186 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.824918452 seconds)
  done (took 89.689937662 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.827233066 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.816374746 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.81728209 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.816418638 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.81767566 seconds)
  done (took 10.837870442 seconds)
done (took 2141.196214006 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.077438784 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.997391897 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.036828186 seconds)
  done (took 5.769438732 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.957676054 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.006085289 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.126355462 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.132335849 seconds)
  done (took 9.961584427 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.096587122 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.196375684 seconds)
  done (took 6.02779277 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.147925266 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.848676311 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.232779185 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.810628594 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.815272101 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.812993827 seconds)
  done (took 22.180801681 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.814301543 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.817328162 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.814985405 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.818670743 seconds)
  done (took 9.001660691 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.796301542 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.501294519 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.799173815 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.813960872 seconds)
  done (took 20.645969917 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.564284429 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.938983953 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.559482022 seconds)
  done (took 8.798226561 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.287568366 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.732393484 seconds)
  done (took 8.758578084 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.975466508 seconds)
  done (took 3.71135457 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.843737557 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.086046986 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.303621306 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.336903131 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.399714214 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.649806564 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.135569119 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.051132694 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.263725764 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.283034213 seconds)
  done (took 24.089789115 seconds)
done (took 133.985804004 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.166488356 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.846792716 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.014114698 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.179358826 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.057904363 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.014219988 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.032467108 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.168537948 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.8658602 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.856072185 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.191157232 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.053851807 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.978285751 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.833487519 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.988020525 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.835962657 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.048894628 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.198204159 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.865362324 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.105046441 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.050080603 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.824969463 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.016690709 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.841320323 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.052153117 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.9656303 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.368661638 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.842583922 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.999110777 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.380904733 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.970265231 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.243811404 seconds)
  done (took 166.59402569 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.816690601 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.816408587 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.816548318 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.815273109 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.288265689 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.819315842 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.815894955 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.816141674 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.251172964 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.232870732 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.820933401 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.280792297 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.818366451 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.814949217 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.816130251 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.816454244 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.399813025 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.81670987 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.815745778 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.814399023 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.816731824 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.103340031 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.817355007 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.118748314 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.39174226 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.818300665 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.81614778 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.816501716 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.815499921 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.815387523 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.816775957 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.816122607 seconds)
  done (took 207.406492559 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.815849938 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.819966559 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.81747247 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.817007237 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.817573933 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.820708062 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.816615949 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.817168603 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.554098359 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.554006747 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.818524383 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.818054309 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.818105586 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.816676189 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.817559159 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.817342267 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.816439946 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.818415359 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.818885836 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.819409725 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.818130457 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.56000701 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.818871537 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.567225412 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.818353892 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.819907105 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.817349697 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.818613819 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.816818071 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.819501132 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.819687274 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.817127514 seconds)
  done (took 218.882109165 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.070351628 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.822803715 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.82440714 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.754238434 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.823619128 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.822907644 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.816609586 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.076132677 seconds)
  done (took 18.75331754 seconds)
done (took 613.38141932 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.302562949 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.161642233 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.007670428 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.847658458 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.099805617 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.885561407 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.842399704 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.907382554 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.470569314 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.91583524 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.518479767 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.86713622 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.607446275 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.871926311 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.967318589 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.900227571 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.421227488 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.508566907 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.021233984 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.920193933 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.015735177 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.788809965 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.926137323 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.510967057 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.62834132 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.850136797 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.907565992 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.423879888 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.855124247 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.006717074 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.627381188 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.16633918 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.859180405 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.843207461 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.898547642 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.877937391 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.119169979 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.857736555 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.967274341 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.601969556 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.91431248 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.388821481 seconds)
  done (took 100.822598555 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.816114083 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.813451385 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.813732105 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.813612336 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.81343188 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.813750978 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.813641487 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.814720597 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.814849429 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.812928808 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.813763265 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.813469341 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.813668592 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.813623972 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.813792218 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.815306631 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.815237583 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.814551537 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.813782022 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.814137557 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.814404589 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.813915458 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.82864536 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.813373215 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.814850505 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.81448623 seconds)
  done (took 48.9344489 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.827056885 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.976214563 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.064750912 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.848163299 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.827657153 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.83139632 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.844855023 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.833062663 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.830449717 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.829449895 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.918431112 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.833970865 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.845872333 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.062905173 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.845678434 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.828041478 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.828518787 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.828657849 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.983321546 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.845023646 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.847352344 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.833904287 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.846450348 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.842446258 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.830673023 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.829723767 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.832805273 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.332894374 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.838992484 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.920358926 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.876307248 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.855866311 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.266331571 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.073519301 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.886417859 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.839808637 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.832735091 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.920984416 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.835340393 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.82983477 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.847325425 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.834216634 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.060313907 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.316529722 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.844477902 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.828892747 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.338015909 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.930820818 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.871082525 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.841693578 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.064601036 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.848612176 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.829363717 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.829493312 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.866692128 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.834938317 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.829865788 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.179980201 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.842655689 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.847871654 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.835801683 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.830878836 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.988745268 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.84016913 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.978821442 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.840509151 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.836283342 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.831621039 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.065116235 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.847427586 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.319571334 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.83993237 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.826595532 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.915405886 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.979189307 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.363692056 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.838819665 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.983878266 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.280102909 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.853146824 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.834660832 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.316803972 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.857941708 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.836106078 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.829235406 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.827727934 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.82703598 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.872634061 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.843659438 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.248309554 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.321128993 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.196165398 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.854114312 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.841919445 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.828063852 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.176991592 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.836755394 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.827554969 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.060560119 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.326551243 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.842134486 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.833898476 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.304940257 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.844633381 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.847579711 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.837051693 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.066382497 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.845457876 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.871149278 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.827203376 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.833882784 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.830278325 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.845931962 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.834542792 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.826822309 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.296818693 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.937830522 seconds)
  done (took 227.327900783 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.825966018 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.828046294 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.824787091 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.829166854 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.822970475 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.828494823 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.823188877 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.822141566 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.827704072 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.823272701 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.821823828 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.825213925 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.826976661 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.829549603 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.834071788 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.82904077 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.428684623 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.824720659 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.825976052 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.823325783 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.483439956 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.833061717 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.825155985 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.823981501 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.82444664 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.823994656 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.834323708 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.82997628 seconds)
  done (took 166.151507141 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.830154073 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.945525477 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.852855625 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.863180804 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.83855833 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.82695286 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.853686828 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.846778737 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.83622232 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.829095153 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.829175821 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.891028702 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.841380359 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.926393074 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.862968381 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.861767873 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.933384735 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.837647236 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.828040422 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.831073719 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.859031181 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.824433031 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.892184578 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.95854955 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.851485897 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.948332476 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.838039338 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.831732424 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.830854753 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.949619855 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.849918512 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.891737235 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.861684731 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.849893051 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.952305722 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.95281543 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.934626979 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.861055314 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.836610444 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.829869532 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.829810734 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.817633092 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.947657795 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.853162853 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.832498151 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.93494017 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.851662461 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.831874366 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.840420902 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.829916588 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.845627705 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.852895477 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.900871938 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.965171269 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.868281382 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.856444916 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.856833972 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.120225588 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.841868984 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.930049852 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.824594853 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.948336474 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.852943911 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.818525055 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.831220046 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.836472812 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.861266059 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.865873239 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.933945849 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.838650044 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.929929079 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.867776295 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.838741002 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.831353635 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.835205957 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.950359483 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.949822202 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.867870451 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.871783324 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.863860563 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.82796277 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.83206467 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.819289513 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.851997793 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.836488908 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.948188976 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.950491216 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.839601069 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.83420348 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.833562031 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.833492621 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.857522186 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.956983494 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.870071031 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.923046402 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.898674008 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.906532727 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.84743217 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.845201589 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.836877291 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.895674087 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.847864481 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.843711153 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.168748947 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.904657136 seconds)
  done (took 198.558251883 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.309520402 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.889128636 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.889582788 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.15666716 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.189486745 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.892568116 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.881004505 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.882042413 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.906706749 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.073395441 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.953617678 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.901152734 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.868991879 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.856398377 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.882553852 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.903408092 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.892695987 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.194252377 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.978664782 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.02489393 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.864848366 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.146875985 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.161495431 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.293080745 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.919596276 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.215596859 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.551773933 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.03913543 seconds)
  done (took 60.477274125 seconds)
done (took 804.01302551 seconds)
SAVING RESULT...
DONE!
