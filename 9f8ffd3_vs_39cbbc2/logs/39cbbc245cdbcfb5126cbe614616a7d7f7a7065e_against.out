cset: moving following pidspec: 12207
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.52655965 seconds)
loading group "string"... done (took 0.529117141 seconds)
loading group "linalg"... done (took 9.033739424 seconds)
loading group "parallel"... done (took 0.176071319 seconds)
loading group "find"... done (took 1.294971245 seconds)
loading group "tuple"... done (took 1.943523691 seconds)
loading group "dates"... done (took 1.36722673 seconds)
loading group "micro"... done (took 0.197251631 seconds)
loading group "io"... done (took 0.515824306 seconds)
loading group "scalar"... done (took 51.519527253 seconds)
loading group "sparse"... done (took 14.182691191 seconds)
loading group "broadcast"... done (took 1.335204544 seconds)
loading group "union"... done (took 10.373722797 seconds)
loading group "simd"... done (took 3.095391246 seconds)
loading group "random"... done (took 11.727485528 seconds)
loading group "problem"... done (took 2.252003656 seconds)
loading group "array"... done (took 24.656687801 seconds)
loading group "misc"... done (took 1.161755226 seconds)
loading group "sort"... done (took 3.837146124 seconds)
loading group "collection"... done (took 19.621777884 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.619284828 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.183066398 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.206045945 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.289382797 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.241970246 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.153992315 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.139223241 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.262711534 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.738909021 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.207043804 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.131164695 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.514749798 seconds)
done (took 6.510991393 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.257077463 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.179584664 seconds)
    (2/2) benchmarking "String"...
    done (took 0.168416103 seconds)
  done (took 1.116911103 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.075084006 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.154725851 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.107379347 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.094121979 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.0927026 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.108837445 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.091763832 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.107605465 seconds)
  done (took 1.53078729 seconds)
done (took 3.751178617 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.504442953 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.868466613 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.512840223 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.164327936 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.301740242 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.317244478 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.319517941 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.201534568 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.090678322 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.090534674 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.176459822 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.383737904 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.438435419 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.955191697 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.090442143 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.113986472 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.119205221 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.760348696 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.078282021 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.111681506 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.512276952 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.191637961 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.096694391 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.124661018 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.184457617 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.132816961 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.162849442 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.103425895 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.666573869 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.133951823 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.185831711 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.097754147 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.163186884 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.194793945 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.208798121 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.092201974 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.677779682 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.202477818 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.090454499 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.098709016 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.661974314 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.120651656 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.188349723 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.102994103 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.09090974 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.185731175 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.094045536 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.077240288 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.114721474 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.085194974 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.16389149 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.452738934 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.108183148 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.172382819 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.092817147 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.688864124 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.100992105 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.277614545 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.126077782 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.093569 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.090512657 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.088043059 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.158779592 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.095023434 seconds)
  done (took 20.15880912 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.149876185 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.168884789 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.077022419 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.156843716 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.122467405 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.079238733 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.100859822 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.07759576 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.108096275 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.244419381 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.137543809 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.155650803 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.090955873 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.087306714 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.126230783 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.248416766 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.108064601 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.121559917 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.08754635 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.089732554 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.140170169 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.096411606 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107483848 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093856173 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168881127 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.204612966 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.11007881 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122655658 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.086203377 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.096396307 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.141259077 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.145589609 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.09260532 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.085959861 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.191771607 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.105730848 seconds)
  done (took 5.317706135 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.202553369 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.123555891 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.216219094 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.164941945 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.14773682 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.17070034 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.148130523 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.287083089 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.218277478 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.163461898 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.133155038 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.094720117 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078460393 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.078894615 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097846279 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.400887707 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.181586403 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.132103074 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.156265547 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.086691281 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.099938416 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.366811273 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100845746 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.079519883 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101966237 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.067404225 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.201645617 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085722997 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.1018062 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.083997523 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087445533 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136262669 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.200100524 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.122525612 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.079956915 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.112592925 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.14052197 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086004252 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.099837161 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.19980044 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.113193581 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.076697903 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.124699788 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116408243 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.139366398 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.084527035 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.110897435 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.220610683 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.082785218 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.106083479 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.085505336 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.196518489 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.127958415 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.079012605 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.284919144 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.117534427 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086790979 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.081620786 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.256669989 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.115749717 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.158579435 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.081176122 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.077197439 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.104840115 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.079056848 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.433043443 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.089787347 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.942720252 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.099673296 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.141780244 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100952006 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.088695712 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102820609 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085166005 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.100712504 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.098048091 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078264181 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.077882853 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096991486 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.084776225 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.109197554 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.085114817 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.079545966 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.15973949 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.098572843 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.09831622 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126403522 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.086388018 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.096100881 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11248726 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097516685 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.083834014 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.173114742 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087570559 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.092777778 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103472346 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143106826 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082603087 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.201112503 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.09857518 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.081808481 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.10652806 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101758837 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127118645 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.1016112 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078446981 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099778597 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.078530182 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.080096863 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.160841677 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082475591 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.08190087 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.081332149 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.111199359 seconds)
  done (took 23.067742958 seconds)
done (took 49.312155074 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.448051191 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.087630279 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.086073203 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.107231827 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.087586316 seconds)
  done (took 1.668466806 seconds)
done (took 2.492821622 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.327444642 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.20112692 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.10030032 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.198484194 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085251839 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.203781141 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.190156966 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.094352642 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.215999152 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.085091759 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.196739174 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084333486 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.104519208 seconds)
  done (took 2.938376911 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.099646338 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105725434 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.098023231 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.116719774 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079745775 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.096940644 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.113955559 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108479473 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096680609 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.108025385 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.081207531 seconds)
  done (took 1.927742643 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096589269 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102449623 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087011756 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11443464 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08055597 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.093473305 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.112668654 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105065873 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.093705869 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.109300148 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.081756941 seconds)
  done (took 1.903964721 seconds)
done (took 7.593335649 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 2.120877483 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 26.681920164 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.173261657 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.290939287 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.347887514 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.255901553 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.681599242 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.157832079 seconds)
  done (took 31.691045246 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.118580444 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.087976697 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.105811883 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.141168909 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.087886022 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.109685462 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.08869963 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.091505728 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.111131063 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.092465498 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.093534353 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.107750312 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.09115191 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.092680781 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.090114388 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.107318576 seconds)
  done (took 2.507159656 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.140973569 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.113253318 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.113792546 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.095706808 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.089835239 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.113840369 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.097613599 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.092208347 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.109824286 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.090924927 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.097524253 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.111973062 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.093849069 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.089064032 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.1125065 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.120335261 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.08994852 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.111491254 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.119417952 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.09335637 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.113484024 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.092044973 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.092275448 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.112990173 seconds)
  done (took 3.418504248 seconds)
done (took 38.443087129 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.153913929 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.101533761 seconds)
  done (took 1.087421048 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.14062757 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.160502039 seconds)
  done (took 1.135864889 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.109868303 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.086062464 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.136364088 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.100994167 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.086837806 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.104194733 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.114627262 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.103281603 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.087336343 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.086690683 seconds)
  done (took 1.854218403 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.091611305 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.091383482 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.120734291 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.141387387 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.113450718 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.090835356 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.091901232 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.089255983 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.11253952 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.087244063 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.096090511 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.124742853 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.091037359 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.125179684 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.092834621 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.093722332 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.113984173 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.0927691 seconds)
  done (took 2.699852474 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.087129198 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.088531011 seconds)
  done (took 1.014939871 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.090204548 seconds)
    (2/7) benchmarking "second"...
    done (took 0.086878206 seconds)
    (3/7) benchmarking "month"...
    done (took 0.088310898 seconds)
    (4/7) benchmarking "year"...
    done (took 0.106865471 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.086375224 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.085727861 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.105124624 seconds)
  done (took 1.490174391 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.500839468 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.265541504 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.371604316 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.103921214 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.144618272 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.342059749 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.144297576 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.100721188 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.099122925 seconds)
  done (took 2.946744097 seconds)
done (took 13.067289651 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.092734847 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.220373487 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.638164922 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.109956816 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.206399127 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.164591537 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.297262637 seconds)
done (took 2.574795856 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.351345512 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.150151156 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.085457855 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.086614724 seconds)
  done (took 1.514027924 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082106693 seconds)
    (2/2) benchmarking "read"...
    done (took 0.095645508 seconds)
  done (took 1.025852583 seconds)
done (took 3.385050867 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087354392 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.085012009 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.127325916 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.084697424 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.085032753 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.084333229 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.104486267 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.084681959 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.084752442 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.084682813 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.10605835 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.084269611 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.086350834 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103412916 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084677003 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085009191 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0842609 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.10367908 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.084356649 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083162339 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100899025 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086208864 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.084514028 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.083615723 seconds)
  done (took 3.052713394 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.110072009 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.08641771 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.106605143 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.091373271 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.089850889 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.107780213 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.092016861 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.08688146 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.089757616 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.106710541 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089360098 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.089152862 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.105708554 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.090972629 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08748701 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.107591486 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.090871436 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086066824 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105853938 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.090482028 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.089309916 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105077382 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.090199259 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089866485 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.106506467 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090291691 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.087723042 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.103788039 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091177653 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.089586582 seconds)
  done (took 3.702965928 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.097460059 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.085164133 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.087957806 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.115997802 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.085472609 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.088252869 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.103162687 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.087096836 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.09044298 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.087569129 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.109782932 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.088412053 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.084937918 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.107777424 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.09102007 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.091294934 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.096392786 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.105013759 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.08687509 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.089356341 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.110448018 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.086304702 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.088091522 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.087981249 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.108244949 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.086032353 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.088948208 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.106061802 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.090494848 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.088496718 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.091248032 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.11047739 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.090408386 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.099276152 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.110430835 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.089986534 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.094922172 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.08538682 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.109684864 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.086436041 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.085753941 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.107440025 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.086693882 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.09519786 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.089767497 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.108465906 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.086666291 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.089937013 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.108784261 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.092859413 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.085437322 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.084822047 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.110381106 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.091789851 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.09156485 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.103254934 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.091226701 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.085436863 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.107671534 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.090273731 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.085890756 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.084400586 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.111797701 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.090411667 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.103510047 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.113986121 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.086846455 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.091147984 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.089016636 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.113014186 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.09127693 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.098101373 seconds)
  done (took 7.696471951 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.10181717 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.095415233 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.086168692 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.105359383 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085678687 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.086941838 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.110561128 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088212038 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087413545 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.111462698 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087738075 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.086833796 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085536383 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.106308801 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087398693 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086542501 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.111612976 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087899534 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.08607373 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.10608139 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088162714 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.090454632 seconds)
  done (took 2.926916025 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.232334831 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.093595334 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.134787698 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.1192859 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.1041254 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.117378167 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.092373647 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.092034538 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108086628 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096131467 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095318287 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109593903 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.105506337 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09494052 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.114741358 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.09687761 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.090897601 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.115218658 seconds)
  done (took 2.871455655 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.101374597 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.090938155 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.128995466 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.089300189 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.088746027 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.088501742 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.112661979 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110451414 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.089131845 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.108755101 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.095708573 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088395244 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.108686845 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088531787 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088384021 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.110165149 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.090081247 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087936877 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114218139 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094747762 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.092745902 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114276658 seconds)
  done (took 3.041331588 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103757445 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.089076608 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.125169169 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.092679491 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.087983849 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.088019819 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.112215539 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.087708874 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.094364209 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.108500541 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088406543 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.086907776 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.122148155 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.088466689 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.09306432 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106746922 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.089948537 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088702642 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106248626 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.088910804 seconds)
  done (took 2.80585497 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.174285059 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124799414 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108366226 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115172103 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126733782 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107371677 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114494992 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.12681479 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107009143 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.136739768 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108226038 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105844516 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.134421448 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113111042 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.106199944 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.136185929 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115889412 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.134555381 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108373741 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.106592407 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.137081711 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107271783 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.134254421 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.107926231 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.107929762 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.125467527 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109145829 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.112176703 seconds)
  done (took 4.215653045 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089419739 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.087598528 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.085942803 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.106326084 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.087940316 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.085537735 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.084940006 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.106158463 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.089684861 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085906221 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.105469139 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.088750141 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.088033711 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.086810831 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.107401769 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.089028348 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087566884 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.104380922 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086835918 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086874978 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.087318943 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106730321 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.088524374 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.086558867 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086048785 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.107460568 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086662465 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086250025 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105578672 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088107155 seconds)
  done (took 3.636402296 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.097498205 seconds)
    (2/2) benchmarking "in"...
    done (took 0.093461784 seconds)
  done (took 1.058388373 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.095854141 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103397328 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.087324612 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10667633 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.095105001 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.088433645 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.115589608 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094655697 seconds)
  done (took 1.6550925 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.145205375 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.163767741 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.094121764 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.100535642 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.165427292 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.157001633 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.135930789 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.093700151 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.110422734 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.084588369 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.159218496 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.08445692 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.092365785 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.107380108 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.092801408 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097980735 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.088449537 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.11907165 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.096290324 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.089797292 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112985745 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098242194 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.093145208 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.118178233 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.086128967 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.09372118 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.115591467 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.10408363 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088200651 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.113995224 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089988518 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.087723157 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.112293498 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.094344299 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.08980676 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.165792507 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099771906 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106780382 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.093304928 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.094307438 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.141073708 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.090280118 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.09313855 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.08964929 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.115761768 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.093422653 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.094493008 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.108272717 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.084683968 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.087183647 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.107472795 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088152299 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.087851312 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110515744 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.093519201 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098292058 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.110395914 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.089865965 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.088251204 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.104978934 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.09252156 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.087836481 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112217259 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.093607788 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093612832 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.092373849 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110883426 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.089022049 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.089714457 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.108908974 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.092290826 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106793608 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.112680893 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.094160409 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.094166881 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.109186234 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090330714 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.094193226 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109173861 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.094010138 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.092104957 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.136225728 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096236075 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086985537 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.106211178 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.098187476 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.091375932 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.091958858 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.104160695 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102248255 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.091257799 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.110171861 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.085951305 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.089579459 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.106374971 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.094212044 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.085223011 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.112349316 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.089158277 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.094721983 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.093468776 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.1114674 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.094617748 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.094277958 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.116440057 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.092401697 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.156555486 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089665031 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.086948709 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.11042212 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.095812698 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.086093666 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.090994734 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.108712562 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089582314 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.087181717 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.113335549 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.094749808 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.090417056 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.113025714 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09660667 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.093641843 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.110866488 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.090483259 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.088388139 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.112258793 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100091844 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.094104038 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.091669631 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.108739885 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.089431153 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.091185613 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.113391312 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.08965755 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.094213276 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108574899 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.089567961 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.08964199 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.112493034 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.094030958 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.087042055 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.109487154 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.094365382 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.091743071 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.091743983 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.114599739 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087828531 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.083735339 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.113542746 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.088358217 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.088460707 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.118122737 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.089428144 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.092916081 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.109089133 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099549623 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.089059932 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.114330911 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.093175485 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.095949099 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.113289346 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.086117274 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090489801 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.092241397 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.114027705 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.089347504 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.089219591 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.107918683 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.097404578 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.085900102 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.112069291 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.086038041 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.088661482 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.094048544 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.110392151 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.093960112 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.088794304 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.150260122 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104057135 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.094775971 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.112105899 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.093588323 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.094146446 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.111371118 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.095089531 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.095409553 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.113841227 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.0939341 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.091593711 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.113999176 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.090833472 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.091334491 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090233296 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114406874 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.085229035 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.089926598 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.103814665 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.09555213 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.094542603 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.114617144 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.09603988 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.091853079 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10999352 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100147034 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.089200638 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.092808757 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.104606779 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.095480132 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.098860522 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.116060227 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.096651471 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094554851 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.11002503 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.091745031 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.098954491 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.111575785 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.094715206 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.089714855 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.085581047 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.106672863 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.096036688 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.092805971 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.108459613 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.089797502 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094535484 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.115444654 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.09103806 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.084906111 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.113464106 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.0974712 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.087152148 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112671568 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.091115667 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.090854182 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.119454714 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.08664936 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.089750183 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.114163503 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.096122045 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.088745239 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.091808987 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.112658309 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.100038282 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.092936542 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.111836719 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092089874 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.097674095 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.109822916 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.090074728 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.089827774 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.092882284 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.106737248 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.091574869 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.093336301 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.109411355 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.089819155 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096744209 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.115954628 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.096399153 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091163291 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.113195119 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.097911599 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.096119659 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110088308 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.098425987 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.088298182 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.085360592 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.109745742 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.085685564 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.091165432 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.109264542 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.096283616 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.091236283 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111230607 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.095956174 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095569347 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.109351305 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.096938457 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104158937 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.105507504 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.087375106 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.09151196 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.111576283 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.099411103 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.089362529 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.090638219 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115493478 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.095450338 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094545858 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.109142715 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.08952254 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.096476073 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.118182731 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.098208417 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.096433076 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.115108688 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.090024295 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.094286479 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.089298496 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.117401587 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.086483433 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.091912706 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.1120027 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09313645 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.088326976 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.111492994 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.089469374 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.085181848 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.109086108 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.097380659 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.090820297 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.113622764 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.09338834 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.090284396 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.108294686 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090257926 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.096434213 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.091650547 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.11828235 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.090641848 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.085848608 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.10667631 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.097250478 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093256143 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.116105586 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.090387368 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.094385191 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.096413775 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.115602021 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.091668977 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.099139113 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.119346969 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.09755971 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098907913 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.106979944 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.091496839 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098175786 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.10984197 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.094464418 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.092116281 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.106501985 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.098796381 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.096965858 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.094256565 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.112637068 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.087224637 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.09005723 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.117427296 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.095055698 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.093687816 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.111116812 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096474312 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.088528581 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.093221349 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.117710919 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.09443942 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.096869086 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113619107 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.095654681 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.089763421 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.117646542 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.091571797 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.087091194 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.106462253 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.092685304 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.097711624 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.087209746 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.118946699 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.096288425 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.089901972 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.112652926 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.09660745 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.090104816 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.117784371 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098236293 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.091673612 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.120124718 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.091866679 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.091484256 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.095096073 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.117343518 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.087946037 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.092456842 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.113578151 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.099119966 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.092650643 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.117144941 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09490191 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.097152648 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.113079013 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.097811097 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.096361096 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.096163344 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.10819447 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.098784605 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09762998 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.114042267 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.093356659 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092450626 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.109129307 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.094244111 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.097655067 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.110563164 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101279922 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.0967217 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.111441683 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.094556673 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.09767075 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092299798 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.119156569 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.090836938 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095463752 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.108695261 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.097630345 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.093316975 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.118033619 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.092210477 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.087930905 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.115899866 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.097439012 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.095568328 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.096138481 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.119508098 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.088370318 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.087147485 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.114490705 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.092101783 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099894148 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.117772012 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.093770729 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092212993 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.113045058 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.09398859 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.097739073 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.088495995 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.111571424 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.095127823 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09601129 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.113721975 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.090623928 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.095534168 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.113788939 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097451222 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.093203866 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.109592111 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.094060541 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.099298579 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.11272383 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.092032858 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.091776237 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.118338983 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.095979563 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.090668871 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.087537823 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.121244195 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.096330393 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098284874 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.112971535 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.096201502 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.091183175 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.113685788 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.099586726 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.092190844 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115985376 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.093830395 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.096879687 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120459616 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.089607108 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.09096078 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.120735015 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098447366 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.099008076 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.092241012 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.114240136 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.09983754 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.097863461 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.113998991 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.089526542 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.088850892 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.113099104 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.090120346 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.09279534 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119466634 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.0950408 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.091814067 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.095744499 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.117383374 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.093601247 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.092814025 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.109192322 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100912662 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.091271536 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.118531135 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.090218924 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.088076135 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.092372183 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.119298559 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093766853 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.093800116 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.114218176 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.094809602 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.089866332 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.112535137 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.099830221 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096296553 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.117608526 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096380945 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.09267776 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.093939888 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.123129548 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.094103922 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.093445327 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.124173562 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.09972417 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09451951 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.115640946 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.100619548 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.097918016 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.113874001 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.100229286 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.092571319 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.113869414 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.10091932 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.100041992 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.124885472 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095871011 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.0885444 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.116498295 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.095013045 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.089254535 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.098086877 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.1217158 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.099310756 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.094980055 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.112815478 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102953376 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10065637 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.115742066 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.093021303 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.091594091 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.118377748 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.094149113 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.09657797 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.111152607 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.10137569 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.099655251 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.09803354 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.122483716 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.0892962 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100509332 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.119014189 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.103642122 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.09236669 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.110927977 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.090175497 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.09407376 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.118604159 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.103504099 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.096369423 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.095631974 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.118064801 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.097431134 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094833999 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.113313526 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.100790979 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.098581866 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.112727173 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.099433816 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.094443831 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095856454 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.115572787 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.099272435 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.098984886 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.11725899 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103821907 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.097967498 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.1142935 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.094008805 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.096110764 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.114266835 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.098068895 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.097841021 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.091748647 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.111742575 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099637303 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.099571355 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115968304 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102016271 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10048675 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.115473115 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.099585168 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100638835 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.11704025 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.096008133 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.096637262 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.095114034 seconds)
  done (took 60.814602929 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.14693289 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100625927 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.115818968 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094788848 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113553554 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11679548 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095284247 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.095055432 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.115077589 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105513069 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.093520329 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113125888 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112397156 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.116796426 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.134620229 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.105278897 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114613027 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.0965294 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.094239353 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.09396047 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.131349619 seconds)
  done (took 3.228132096 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.114018459 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.107917817 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.126717268 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.109895469 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100509977 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.128478352 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.106970295 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.128266901 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110642295 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102486466 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.130532371 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10684443 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.123190145 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.104339602 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103281549 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.124852739 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.111050937 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100357062 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.128015709 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.106218836 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.123782442 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.107091941 seconds)
  done (took 3.424855533 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.105266746 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.098381108 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.100045166 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.116099845 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.099916339 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.094550998 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.124014575 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.096089414 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.103792647 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.116060917 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.092417812 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.096290297 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.100261219 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.116085212 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.092283277 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.095310513 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.124685384 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.100127028 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.098821928 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.113849428 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.109500535 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.094896202 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.114858764 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.092873223 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.107118656 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.09892122 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.116867096 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.099642964 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.090234758 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.12040456 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.097588181 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.095980224 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.117230662 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.092730768 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.090770499 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.098361275 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.120506337 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.096081212 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.095050533 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.11823824 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.096896515 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.099502431 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.120724209 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.096843931 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.096270745 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.116722629 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.100514388 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.094091539 seconds)
  done (took 5.899884454 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.126863544 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.155567313 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.100025091 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.125870547 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.132840173 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.105467977 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.0976006 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.128341614 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.096657946 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.120820795 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.112819394 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.109584492 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.12245387 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.103494044 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.100547194 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.122903186 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101106592 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.097493424 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.12500885 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.099927315 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.103061794 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.122801835 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.109295424 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.129922588 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.103637677 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.09845979 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.11926519 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.103800894 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.107871153 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.126210418 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.105064355 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.103931677 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.132110636 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.098928081 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.340744119 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.122951432 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.112547023 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.119553473 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.102380516 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.097805838 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.099798504 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.125173871 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.102815312 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.133061641 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.101532191 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.101032448 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.119184373 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.09818666 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.110099995 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.121342337 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.10813356 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.110576825 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.123981476 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.100988021 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.102345296 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.131678191 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.099408866 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.098309662 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.123444985 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.108459899 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.096371792 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.123574884 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.110071709 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.120895759 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.10690146 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.10993715 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.121527592 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.102484793 seconds)
  done (took 8.920013629 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.134845014 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.103201452 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.133163644 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113387887 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.103512245 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.125149686 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.103739244 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.102925271 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.126146109 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109075904 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.122949834 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.200961192 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.1214498 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.109709934 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.10267689 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.125791291 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.104086679 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103248779 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.125780635 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104008322 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.103334121 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.134675839 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.103873249 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.131484776 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.116408232 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.099825242 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.124991645 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.104364344 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111319132 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.125276361 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.115475447 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.124856273 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.104672765 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.112368372 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.13806929 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.103616915 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.097743402 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125254503 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.103731945 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.103162361 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.122272595 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113464646 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.124121965 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.102196731 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103885613 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.123831215 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.11437426 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.115364869 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.130323433 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109767714 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.124399427 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114537686 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104508188 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.125646163 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.114584231 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.139435759 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114672242 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112614819 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125550441 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.113444662 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.132750284 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.121051536 seconds)
  done (took 8.199341766 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097665532 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097570065 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.095148247 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.118528378 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.098779208 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096241426 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.095980116 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.119378763 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097348772 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.096573171 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11854937 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098170938 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097012433 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096260931 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.117561446 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096775863 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095593426 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.115613233 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099433124 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.096780798 seconds)
  done (took 2.984744671 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.108155067 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.114602935 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.11872655 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.105357419 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.100423665 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.125453395 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.100912694 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099906309 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097434856 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.12158729 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109326017 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.107408939 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.120622085 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105278949 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.12793974 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.10713575 seconds)
  done (took 2.711158799 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.119784234 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117046923 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.194274891 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.101320134 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.121019135 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.10823012 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.099886421 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.099644798 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.121217391 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.105954264 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.102499049 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.125534701 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.10081252 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.100161085 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.121177398 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.104207148 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.096646834 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.123362373 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.101830816 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.192508046 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.103661842 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.100247876 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.099887601 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.126039448 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.101232996 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.102428129 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.128570517 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.099941685 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.100340342 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.122711985 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.101575085 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.105686068 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.12039899 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.105346385 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.100899538 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.120877259 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.101114502 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.100215404 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.123490055 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.10232602 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.102066742 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.099707301 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.12160445 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.102969611 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.096905445 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.122425314 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.099210576 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.104755549 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.121484297 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.101951351 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.099582374 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.125924214 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106633244 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.108803174 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.127530054 seconds)
  done (took 7.110731069 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.113020275 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102620109 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.131355026 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.100326113 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.100638859 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.098987533 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.123134034 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.10186155 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09928116 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.121266901 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10086478 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.101524723 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.121280005 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102897505 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.100963422 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099758511 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.119654301 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.101311226 seconds)
  done (took 2.883353847 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.106252653 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.099768771 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.104405777 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.121282115 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.099675101 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100060306 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.119408048 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.100368638 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098747594 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.098508096 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.121857586 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.100645324 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099933927 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.122846137 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.099546071 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09913318 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.121404305 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100254643 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.09899407 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097729218 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.122552413 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.099380691 seconds)
  done (took 3.28005168 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.113659866 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.186284347 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.109542352 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.195686944 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.099998619 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.097656769 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.12961189 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.100598854 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.11506142 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.120088402 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.099121034 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.097870292 seconds)
  done (took 2.413894972 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1308504 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138404021 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.121293341 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101839523 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108733713 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126596305 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1051021 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103377145 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135177372 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116290978 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125323549 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114853356 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112250936 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134173247 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109787389 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130652555 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105705576 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103683714 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12028078 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122276068 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104529769 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135041804 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104983764 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103745526 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127083732 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113549859 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133647467 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117654757 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103991526 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136034144 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110260814 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103758884 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135670678 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115828105 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122838353 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113970002 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104180509 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142647299 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109927531 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13501188 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103028757 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108983237 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136098282 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110857956 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134022475 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10632146 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109578342 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12538166 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106671084 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126862663 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132994327 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113660514 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131222703 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115061039 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112623864 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.149746505 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116397899 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135915605 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111179022 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138945555 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115130819 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108774698 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135590343 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116900137 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131682795 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115278311 seconds)
  done (took 8.84424097 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142923052 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.100743865 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126617939 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117048214 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133883842 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10655268 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104367627 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126019691 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106468684 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10156118 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.172661435 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105215553 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115003805 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136748704 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106185951 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126280278 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106309071 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112737738 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122744534 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128335668 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126440157 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11580451 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113888918 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135516174 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117157575 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131416216 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106652205 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10535254 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126749328 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106432639 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110158065 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127031146 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114284917 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.100570906 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135663286 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106482439 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104366811 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133364697 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106078673 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131126033 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115442936 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121050723 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128914974 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104994474 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138912322 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1068203 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104667796 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123039783 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106703061 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101569174 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13818089 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118181711 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138099061 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115011559 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104652757 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127839387 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105873987 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104665557 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127898675 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111624079 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136134237 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107784646 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12752011 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12819198 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10562082 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11381301 seconds)
  done (took 8.775293074 seconds)
done (took 167.001616394 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.151522333 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.194487777 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.147514888 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.180478099 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.09583063 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.129282311 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.150500014 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.150610142 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.093650467 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.118873504 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.095707505 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.096126909 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.183235845 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.095535004 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.094254791 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.12003828 seconds)
  done (took 3.050803168 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.192531479 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.313280817 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110761242 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.120728939 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.105012355 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.101063575 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.120993049 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.103098623 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.099318624 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.12965624 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.103935709 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.097109429 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.128736655 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.099093394 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.09898464 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.122926503 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.10886331 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.101230133 seconds)
  done (took 3.215622475 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.122903831 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.145005149 seconds)
  done (took 1.233623739 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.132422545 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.199758879 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.278081611 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.175115677 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.123564472 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.140645917 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.154599283 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.134730269 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.181888529 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.136248149 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.114982974 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.099141992 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.149420035 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.105816327 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.112581546 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.123922929 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.128676841 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.133508361 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.11316157 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.102446514 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.14295813 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.107474496 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.106084192 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.13367954 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.173558978 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.134949288 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.106777924 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.104215672 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.125019473 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.111437352 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.108043472 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.140431473 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.11432841 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.177559724 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.105175898 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.173277028 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.110012364 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.123105328 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.111680341 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.100191328 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.126479179 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.105610443 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.136932105 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.102071562 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.104716853 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.131142055 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.107302074 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.10434462 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.131683395 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.112186456 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.109326111 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.131610326 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.170176544 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.113882845 seconds)
  done (took 8.001379349 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.873720496 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.143423413 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100866169 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.011991088 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.152070236 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117336494 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.84999317 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.145984774 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.234023256 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.902216556 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.117494432 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.113847174 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.264192974 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.253306752 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.182206115 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.371369087 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.68971986 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.136372503 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.13134303 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.166694916 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109974246 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.149267687 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.123565532 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.442443684 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.10219929 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.100143981 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.131317359 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.114186986 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.180940024 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.101268423 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.126409757 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.17842167 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.287729541 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.210755084 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.101282853 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.122643671 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099780699 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.188573964 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.273337273 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.221693473 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.185648399 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098847854 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.099932025 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.130408122 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121639907 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.096425766 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.183962879 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.195502055 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.193690724 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.105824535 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.112462335 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.135340876 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.107845798 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.182419836 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.09802949 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.35783945 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.379499699 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.101398117 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108626255 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.140902008 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269885003 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.100646399 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.236979694 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.149218335 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.218360355 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.099948416 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.817085965 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.188124971 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.09998543 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.128820177 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.108377038 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.106123076 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.131287093 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159373168 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.40573934 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.112337269 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.12771453 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101573529 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.230414038 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.100210069 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121146507 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162585099 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.123648237 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.110057053 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.113979812 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.135329855 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.191620421 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.248391777 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.135649589 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.109884902 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.128080405 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.114809685 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.100741083 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.236376297 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.230336402 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.179031608 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.234233357 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.109533314 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.184894361 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.186659995 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.113145804 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.192664647 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.107319346 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.139717598 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109299014 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.2274563 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.15819322 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.101446813 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.105151775 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.134173553 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.138399349 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.127504898 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.10978973 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.189730819 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.46591124 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.164106102 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.12092207 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105673694 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109225167 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.182079299 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.129846033 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269145197 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.112210424 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.186517908 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.108272135 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.097123726 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.132074859 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.183310848 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.112371787 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109930559 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.132375995 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.112779391 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.274026538 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.224546164 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.113160436 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.243353123 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.191362002 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.108900531 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.194544926 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130856666 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.169124733 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.133643973 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.10987701 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101973906 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.803758381 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.137628346 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.109092728 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.128509017 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.184288514 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099982448 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126649128 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.10105037 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.098283412 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.813295464 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127337951 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.10041848 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102367265 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.131099839 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.110171758 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108175805 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.130718907 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.181240494 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.247926164 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114776715 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.129898836 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103115918 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.17945901 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.103528746 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.101216634 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.123791989 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.103681835 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.110457055 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.12755611 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104616513 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.192402738 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.158004569 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.253789863 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.534245632 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.103021279 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.101089473 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.243769037 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123764162 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.322032461 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109386825 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.235827753 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.188215932 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098417698 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.374263833 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.168382679 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.20833504 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.104432587 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.194213751 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098334222 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.132553269 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.158688127 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.125415538 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.109372941 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.180500847 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.115613966 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.137431649 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.189572156 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.102037269 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.253637574 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.098270154 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.1918693 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102307884 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.132781042 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.324998196 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101015637 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.14258041 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.160290354 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.129696903 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.103234924 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.698736123 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.101489411 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.135391257 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110272036 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.237126906 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.186814998 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.109226994 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.135315366 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.114740663 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.183850715 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.236600931 seconds)
  done (took 46.472377255 seconds)
done (took 62.93561477 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.293275549 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.258927873 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.307880265 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.21660553 seconds)
  done (took 2.133856041 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.289374789 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.166705398 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.237132405 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.100046888 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.253123493 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.099824401 seconds)
  done (took 2.138997327 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.502356225 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.391209446 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.34906336 seconds)
  done (took 2.238819349 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.248609072 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.237269957 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.349680546 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.420098567 seconds)
  done (took 2.362026889 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.304406758 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.134831427 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.128022973 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.217384304 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.28477942 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.2617968 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.154337795 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.20499505 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.181670807 seconds)
  done (took 2.911491431 seconds)
done (took 12.772728226 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.344248314 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.305144135 seconds)
    (3/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.34797878 seconds)
    (4/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.134480846 seconds)
    (5/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.142852855 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.172137907 seconds)
    (7/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.13721579 seconds)
    (8/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.217919937 seconds)
    (9/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.232079554 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.107873021 seconds)
    (11/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.105776989 seconds)
    (12/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.199450254 seconds)
    (13/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.225339692 seconds)
    (14/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.167485002 seconds)
    (15/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.231348923 seconds)
    (16/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.304835894 seconds)
    (17/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.139765484 seconds)
    (18/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.307034063 seconds)
    (19/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.23546933 seconds)
    (20/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.193993341 seconds)
    (21/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.115323203 seconds)
    (22/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.304440137 seconds)
    (23/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.317855322 seconds)
    (24/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.222417549 seconds)
    (25/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.167935638 seconds)
    (26/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.178508753 seconds)
    (27/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.267679422 seconds)
    (28/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.274743636 seconds)
    (29/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.265685725 seconds)
    (30/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.201199187 seconds)
    (31/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.106332662 seconds)
    (32/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.234673904 seconds)
    (33/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.137850338 seconds)
    (34/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.093344809 seconds)
    (35/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.107055858 seconds)
    (36/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.171706592 seconds)
    (37/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.128893752 seconds)
    (38/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.106190487 seconds)
    (39/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.24970839 seconds)
    (40/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.116812731 seconds)
    (41/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.103245971 seconds)
    (42/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.215468719 seconds)
    (43/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.107522433 seconds)
    (44/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.213523149 seconds)
    (45/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.108636852 seconds)
    (46/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.310391108 seconds)
    (47/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.153112374 seconds)
    (48/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.130448484 seconds)
    (49/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.108799144 seconds)
    (50/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.176250596 seconds)
    (51/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.144660264 seconds)
    (52/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.17827325 seconds)
    (53/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.082514931 seconds)
    (54/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.082257706 seconds)
    (55/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.210247805 seconds)
    (56/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.107106041 seconds)
    (57/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.19320193 seconds)
    (58/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.111233997 seconds)
    (59/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.108930211 seconds)
    (60/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.081981316 seconds)
    (61/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.168977453 seconds)
    (62/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.180738446 seconds)
    (63/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.138065568 seconds)
    (64/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.1073675 seconds)
    (65/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.084314131 seconds)
    (66/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.203295414 seconds)
    (67/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.108854164 seconds)
    (68/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.29706229 seconds)
    (69/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.093675492 seconds)
    (70/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.145117048 seconds)
    (71/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.171236217 seconds)
    (72/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.112434062 seconds)
    (73/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.206134823 seconds)
    (74/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.134406644 seconds)
    (75/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.140821929 seconds)
    (76/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.083662504 seconds)
    (77/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.166533681 seconds)
    (78/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.181400296 seconds)
    (79/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.083876652 seconds)
    (80/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.134667622 seconds)
    (81/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.14516112 seconds)
    (82/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.132090504 seconds)
    (83/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.108552855 seconds)
    (84/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.106944453 seconds)
    (85/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.179651112 seconds)
    (86/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.108015363 seconds)
    (87/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.111139137 seconds)
    (88/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.153166452 seconds)
    (89/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.120112204 seconds)
    (90/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.083623372 seconds)
    (91/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.083491717 seconds)
    (92/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.204043063 seconds)
    (93/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.151334895 seconds)
    (94/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.08286745 seconds)
    (95/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.13302263 seconds)
    (96/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.09025601 seconds)
    (97/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.100943495 seconds)
    (98/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.105889177 seconds)
    (99/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.125409434 seconds)
    (100/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.118447023 seconds)
    (101/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.108509702 seconds)
    (102/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.088326878 seconds)
    (103/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.203106848 seconds)
    (104/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.145976354 seconds)
    (105/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.139624394 seconds)
    (106/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.08562465 seconds)
    (107/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.083573412 seconds)
    (108/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.08262117 seconds)
    (109/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.220897449 seconds)
    (110/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.109771192 seconds)
    (111/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.083872497 seconds)
    (112/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.107843799 seconds)
    (113/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.11067849 seconds)
    (114/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.084537513 seconds)
    (115/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.083318525 seconds)
    (116/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.083775271 seconds)
    (117/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.08343601 seconds)
    (118/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.109499605 seconds)
    (119/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.090323987 seconds)
    (120/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.084918076 seconds)
    (121/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.154283578 seconds)
    (122/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.133125014 seconds)
    (123/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.085709028 seconds)
    (124/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.083408302 seconds)
    (125/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.106908686 seconds)
    (126/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.133997603 seconds)
    (127/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.104119597 seconds)
    (128/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.220470171 seconds)
    (129/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.109776476 seconds)
    (130/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.084728325 seconds)
    (131/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.223393577 seconds)
    (132/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.084858827 seconds)
    (133/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.102180587 seconds)
    (134/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.083818615 seconds)
    (135/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.205733076 seconds)
    (136/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.090042289 seconds)
    (137/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.085305601 seconds)
    (138/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.10742729 seconds)
    (139/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.134395921 seconds)
    (140/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.112964698 seconds)
    (141/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.084405437 seconds)
    (142/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.127684034 seconds)
    (143/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.129215663 seconds)
    (144/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.094658609 seconds)
    (145/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.125706842 seconds)
    (146/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.128589732 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.109282086 seconds)
    (148/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.107972313 seconds)
    (149/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.108604426 seconds)
    (150/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.085787021 seconds)
    (151/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.084356008 seconds)
    (152/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.221228705 seconds)
    (153/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.113538427 seconds)
    (154/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.085553841 seconds)
    (155/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.084449868 seconds)
    (156/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.088829002 seconds)
    (157/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.114250845 seconds)
    (158/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.084087911 seconds)
    (159/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.089473536 seconds)
    (160/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.108769129 seconds)
    (161/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.134108568 seconds)
    (162/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.084580106 seconds)
    (163/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.085550774 seconds)
    (164/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.08342802 seconds)
    (165/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.089237705 seconds)
    (166/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.108619048 seconds)
    (167/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.089928384 seconds)
    (168/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.10229968 seconds)
    (169/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.175679812 seconds)
    (170/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.109854183 seconds)
    (171/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.086081968 seconds)
    (172/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.108241751 seconds)
    (173/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.158356341 seconds)
    (174/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.084342738 seconds)
    (175/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.103304426 seconds)
    (176/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.085971802 seconds)
    (177/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.133612542 seconds)
    (178/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.102613574 seconds)
    (179/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.109317342 seconds)
    (180/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.083471411 seconds)
    (181/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.109296422 seconds)
    (182/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.08473377 seconds)
    (183/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.084432286 seconds)
    (184/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.083608657 seconds)
    (185/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.149037406 seconds)
    (186/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.085714401 seconds)
    (187/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.084409019 seconds)
    (188/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.108837605 seconds)
    (189/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.100743459 seconds)
    (190/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.135468553 seconds)
    (191/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.090605836 seconds)
    (192/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.089558457 seconds)
  done (took 27.690779724 seconds)
done (took 28.68899763 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.219907999 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.13080998 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.111359913 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.110048529 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.208175441 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.118896313 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.146295554 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.114274613 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.116485367 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.133845271 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.10289241 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.11957221 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.110367704 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.204330341 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.113472306 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.130566357 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.102867515 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.117975594 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.146043547 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.121792336 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.208016258 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.105351483 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.114684859 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.128161291 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.18380731 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.129545537 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.110961418 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.110438046 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.141684693 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.110569041 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.110293892 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.102138791 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.147575504 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.120689296 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.10197896 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.135223519 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102411337 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.090094933 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.134246618 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112305533 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.117679063 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.13235115 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.114196024 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.1031234 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.109588038 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.134178416 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103488934 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.113542179 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.127360437 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.111613515 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.104888392 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.147002983 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.108969699 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.101097241 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.125509898 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.104826068 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.116775153 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.126802667 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.122568819 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.102832385 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.10342773 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.127916475 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.112080111 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102749736 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.134183902 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.104136539 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.110281646 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.135418424 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109581738 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.105593997 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101734925 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.135616749 seconds)
done (took 9.93100883 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.111312257 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.159389504 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.208026551 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.214836598 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.13339312 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.144038173 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.125377022 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.133108408 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.148105199 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.128138653 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.162927721 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.132826489 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.216023029 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.115742516 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.119146658 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.139078768 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.118450342 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.11528385 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.218066132 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.125963371 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.16102321 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.115347278 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.163679755 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.127010955 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.109049772 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.157847138 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.109734183 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.137645012 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.111375736 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.126759848 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.152336213 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.111489928 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.109829169 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.155333583 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.124097876 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.11590024 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.146465527 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.113971768 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.108274074 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.135381028 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.119819228 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.152277588 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.110758302 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.120053932 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.137768657 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.118216238 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.11776761 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.142067623 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.113450369 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.113106586 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.136921409 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.13933865 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.116104193 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.143736812 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.116955004 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.117254783 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.143804511 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.118381172 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.10972134 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.144968364 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.110666939 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.110451603 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.139584774 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.135052319 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.136618064 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.119493041 seconds)
  done (took 9.881627876 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.128972461 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.138678468 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.14321806 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.118888694 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112600023 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.126568487 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.101223996 seconds)
  done (took 1.925515285 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.104106849 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.189745664 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.212391431 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.213418825 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.183657549 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.223929441 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.149528776 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.104535067 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.133570223 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.138530864 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.189368773 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.24583292 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.109184818 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.145191495 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.190002518 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.128853743 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.191519498 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.129601679 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116291147 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.215791514 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116623202 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.130447473 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.141972094 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.103479701 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.213171543 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.103862655 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.267502814 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.118243586 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.134452245 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.11759523 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114442155 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.208099666 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.211344319 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.118265506 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.107078981 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.215541023 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.207630232 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114872608 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.227175722 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.10854218 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.212615515 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.116363652 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.118113665 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.139570652 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119789948 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.173242325 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.148074311 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.116737861 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.138895367 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.198225736 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.13842462 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.188898743 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.110782918 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.141135634 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.113922575 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11522688 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.150297055 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.115773862 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.224526312 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.117447902 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.214070569 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.212206754 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.188632226 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.2150364 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125192669 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.215770657 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.207861716 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.115601519 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.111376433 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.141164356 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.191629544 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.137976042 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116123168 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.201181955 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120989655 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.21564702 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.190293667 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.138014383 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.117611134 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.106903815 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.137540042 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.106824311 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.178610162 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.140832393 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113305374 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120827496 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.143639921 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.114591764 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.108073436 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.153151826 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.114130233 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.140092771 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.123101897 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.115965409 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.145289399 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.193716784 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.140928204 seconds)
  done (took 15.923582482 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.109956296 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.104883632 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.10899259 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.132123949 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.106024235 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.104966644 seconds)
  done (took 1.730982624 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.144272101 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.116122634 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.150836949 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.118373636 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.167639099 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.224251019 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.229699417 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.112766097 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.159112201 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.130269294 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.224289882 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.203473875 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.234107032 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.118367171 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.227525718 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121374573 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.232393173 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.113677238 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.152905424 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114078671 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.119049469 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.149092843 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.113645131 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.215230778 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.122191075 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.146198339 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.114984708 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.129396258 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.150096985 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.114497941 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.119583507 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.146068702 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.113120795 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.112802703 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.230725968 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.110620874 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.139148193 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.126209088 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.117943199 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.148770022 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.20483509 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.140891578 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.126520903 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.124958882 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.140008771 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.111416546 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.153404775 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.114617966 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.228931531 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.126219211 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.126024868 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.142929344 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.123663305 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.125411992 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.139092965 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114493072 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.124502387 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.232394131 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.119438799 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.138619339 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117254429 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.121606441 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.140968641 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.124354426 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.14327895 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.127135643 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.112029327 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.142854734 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116411324 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.116784377 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.150317313 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.118938529 seconds)
  done (took 11.499430889 seconds)
done (took 42.002969634 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.640171234 seconds)
  done (took 2.70354056 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.913573198 seconds)
  done (took 1.979698447 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.325970626 seconds)
  done (took 20.425411885 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.545764617 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.618258744 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.060858311 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.156683223 seconds)
  done (took 3.450807379 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.022769005 seconds)
  done (took 2.10644674 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.296805535 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.266105164 seconds)
  done (took 1.633455579 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.752559568 seconds)
  done (took 1.836564721 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.556256937 seconds)
  done (took 2.629265344 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.365963745 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.177923253 seconds)
  done (took 1.630428 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.625041875 seconds)
  done (took 1.711632007 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.727136948 seconds)
  done (took 20.815954898 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.249287857 seconds)
  done (took 1.34215081 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.288913283 seconds)
  done (took 1.383881713 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.842712455 seconds)
  done (took 4.938478367 seconds)
done (took 69.663852225 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.116173383 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.11911552 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.118241067 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.14317601 seconds)
  done (took 1.58130685 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.124723696 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119614754 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.122116102 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.14588 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125843113 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.120300246 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.145566525 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.122000585 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.118357213 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.148295935 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120390338 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119016861 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.148725294 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.118684904 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.117415971 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.148054908 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.124729542 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.120363028 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.145859546 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.122630929 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119394596 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.146821835 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124890181 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.122103277 seconds)
  done (took 4.18775581 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.116920833 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.108968665 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.111210935 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.134775103 seconds)
  done (took 1.569062985 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.129700649 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.133361807 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.156113506 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.12831766 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.132680961 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.157064794 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.119301483 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.115972134 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.144872641 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.130176245 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.136269347 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.15874274 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.132520274 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.119998409 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.157736631 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114066103 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.120820883 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.159112885 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.128462306 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.127706953 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.14744339 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.128321528 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.124503818 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.155504873 seconds)
  done (took 4.351582307 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.192507239 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.127650314 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.169601453 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.161462161 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.171124899 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.114455431 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.139216889 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.149630484 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.121925438 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.116562374 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.145399617 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.161722071 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.14774917 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.118575861 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.11556429 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.148037305 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.128724337 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.12097477 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.18629117 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.120753065 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.14841004 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.129102263 seconds)
  done (took 4.230565813 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.122252251 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.110705165 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.104906954 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.141085658 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.122135352 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.140082893 seconds)
  done (took 1.844376707 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.109648048 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.103900913 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.103086125 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.129474496 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.10998838 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.104224713 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.102288133 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.130910764 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.104791458 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.103967519 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.129539874 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.104258324 seconds)
  done (took 2.436921537 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.347435834 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.108960333 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.137230781 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.11038545 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.114867721 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.107286776 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.149981225 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.108266527 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.271237913 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.109265024 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.148469845 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.197793152 seconds)
  done (took 3.01654398 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208652846 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145420024 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.303076662 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.372643533 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16385478 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.188180348 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.27231299 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192575356 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.205718848 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135465259 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243600558 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153875785 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177092317 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1731271 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16400613 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.162898379 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196391663 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190045919 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174913974 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197769698 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183268673 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.19045819 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179389751 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175506486 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134985929 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187285991 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.118003097 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125483579 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197401759 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162916058 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201779478 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172702218 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13924734 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221459596 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257901325 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176167289 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.287017515 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159036343 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.200408189 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.183262502 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.258167325 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136863849 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218604621 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180101538 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127456336 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205679585 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15361599 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.201218961 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.129168565 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167174638 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184643371 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200145201 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.206271707 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136530542 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.317560231 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164952894 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.168737734 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172532225 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211709342 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213586766 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165514234 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.120216389 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.210303778 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209175787 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176446447 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.166844709 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.192061511 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125439087 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165094326 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.219921462 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206410365 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155694843 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.224742733 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155727109 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158102331 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.198633351 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177936875 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20290483 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157589186 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.143162053 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148618091 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131079705 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154057456 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.198537324 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118761193 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228331696 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155944546 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.340804495 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18756086 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181679251 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158526798 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185330818 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157069797 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172186448 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.110480973 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142566144 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.188890839 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153980833 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159098788 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153678456 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164551843 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.12705858 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176881883 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.12104399 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180564984 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.135258436 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161320579 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184410376 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.127373395 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190911417 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146413342 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.180456439 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166688812 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209378489 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129524405 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158011652 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187419853 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183779491 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.129041135 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.205200823 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.209093371 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.149387707 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134050483 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191131792 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214957349 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141233545 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214173368 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136189709 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131181503 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.176599508 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157594502 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186890972 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.148283614 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154082866 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.148931332 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225098694 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.124964853 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164586043 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166999726 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1584863 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124962666 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135284637 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161711664 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.138429701 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.170004581 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.131808488 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179247246 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157455964 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179672348 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15684846 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15941915 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177479963 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158757325 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.159315001 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17064595 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.118554392 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.173390099 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210812955 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12652946 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229164195 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.190969851 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217256545 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157832274 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156517225 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178337319 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12363368 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.146406964 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159306135 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.181588696 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161093995 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.206655771 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213794114 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.166972938 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.177974839 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145339415 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196713071 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.201612101 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151958939 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.168586664 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156934256 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190138411 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.119280817 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.12058629 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.152453755 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13646526 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126133162 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161096389 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178807687 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193024038 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.210650662 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156075811 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165337522 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179776766 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.155063886 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160052828 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.190831588 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136798618 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.208899511 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206366016 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167020374 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164589851 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161618427 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.116608379 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152334761 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.131697291 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.192084342 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133080902 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132812069 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168672986 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208029218 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175304844 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172902478 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225581916 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166130326 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.220456055 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.116946745 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.191365423 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171713725 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182845645 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.183587348 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137072447 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.188214947 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.204427274 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140762583 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215990196 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155244901 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189138083 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187502504 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.183950533 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128612182 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173954901 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158233425 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164092068 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164449192 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17102941 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129635843 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150835906 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.164691271 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122773565 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215274308 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139344881 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19888027 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.18298826 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171155214 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14968367 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142088736 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156926119 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172879626 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.114321233 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197902343 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183099108 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172144926 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154355451 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201961437 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126982007 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.347258748 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218508327 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177763469 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159051456 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13989777 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187682386 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162523753 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189899843 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17884485 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168804836 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176385379 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18594555 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.140927359 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156507272 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148243435 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147953338 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.177169664 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.129997432 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.183747062 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.139192705 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2179948 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136962712 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187026872 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158519288 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.174742991 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.150241549 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165428301 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194553288 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183919167 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173911336 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.182966321 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.165095201 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219478628 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120560007 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154846479 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.130455706 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.207858932 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128743282 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186880465 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.18073852 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22092284 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191400255 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161653141 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167048007 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.124144973 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182790718 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148205358 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219832243 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134907167 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.165802307 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192238152 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.164965356 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129396729 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187786864 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.281484408 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174048962 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17244031 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.149273289 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.273295541 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156189317 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130669309 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18980082 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170764326 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.157972573 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.183333543 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161267584 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169726227 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162095988 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164018793 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.213183649 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191285491 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194792763 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201615914 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.145088101 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187491362 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161190338 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203419932 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141964811 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.170617809 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160891204 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208234068 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.180977078 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.157085848 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158118062 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183330703 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156580997 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200522264 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135013245 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219882025 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126955769 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190993459 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136921938 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121234098 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187297215 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.204459033 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131910056 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207359706 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157186486 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159276025 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126026289 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142819445 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183586379 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13577463 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.157057308 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184395759 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.156349267 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163283421 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207013008 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12871856 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183749213 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148240505 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127804415 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169257993 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139960841 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156627079 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.171064596 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183434498 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.158535079 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178266928 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191458111 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193129795 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156146863 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169141196 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.664938583 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.124895154 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209989306 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145163123 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214527772 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146886367 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190409863 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15629576 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177251503 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161777822 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177154878 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.237745276 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191795814 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.18145915 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132166235 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140375618 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167387946 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.131929013 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179250549 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158187357 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13768867 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.164562935 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.154501517 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170364795 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.145508843 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165889899 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184488381 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173786903 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18626766 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.210520536 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134068002 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190641728 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201855541 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130603221 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.16217351 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202678428 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138581654 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175609905 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.129705556 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.164202465 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181414628 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.121435861 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18847493 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158937255 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187331459 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156445688 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.163352045 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15955104 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16904548 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160348439 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152319119 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.151832078 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183838688 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133287389 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.124342169 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185407927 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159569917 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.18492361 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123989859 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.170767356 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211878415 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.121792699 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160256656 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.27980064 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189541326 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217057562 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.148156744 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132847445 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171174277 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154881714 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.183154701 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159017434 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.125738521 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158708217 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.128325113 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.197387704 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.152213826 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187547763 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177801499 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189968327 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191941815 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.162971446 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.288132553 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168131935 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15705826 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.125272232 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.156543278 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139068613 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160140055 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140525375 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.215674317 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179922255 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.184120103 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.14502608 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156159149 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.124840373 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12922055 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195059206 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150939658 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188539197 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142923866 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.141254262 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143057827 seconds)
  done (took 84.092287719 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.170124144 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.155371672 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.171722392 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.225400112 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.1999077 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.294461474 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.233210035 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.258506341 seconds)
  done (took 2.901315643 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.123117339 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.161374881 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.143825157 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.147686011 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.120227902 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.457425039 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.161499137 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.122022229 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.16798564 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.163093205 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.144973456 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.622912872 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.116107456 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.147277918 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.1309546 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.120102843 seconds)
  done (took 4.234238603 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.586962596 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.605218548 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.397579933 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.2871806 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.238380372 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.184105324 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.823216063 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.196094825 seconds)
  done (took 13.515526984 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.149813341 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.136890706 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.835189655 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.26555001 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.152537811 seconds)
  done (took 2.736965733 seconds)
done (took 131.781127729 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.123846654 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.12297419 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.121985472 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.155895543 seconds)
  done (took 1.708460207 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.185695676 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.095889066 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.098173876 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.123736943 seconds)
  done (took 1.698377288 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.443010091 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.095071495 seconds)
  done (took 1.758972724 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.154176595 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.143922486 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.166283776 seconds)
  done (took 1.677369309 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.143677768 seconds)
  done (took 1.342588965 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.131171289 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.122232132 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.243431381 seconds)
  done (took 1.700917911 seconds)
done (took 11.087987835 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.122798144 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.510717416 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.435700258 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136394826 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.711459924 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.430620354 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.029447668 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.177720813 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.177201052 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.139580092 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.134424157 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.689434854 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.046899652 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.454924646 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.001848436 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.390214255 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.695469452 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.113306451 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.148759627 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113682381 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.009104507 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.139384447 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114573665 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.112658492 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.721364761 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.424521552 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.110254689 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.406442259 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.112091284 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.114798401 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.429374551 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112952459 seconds)
  done (took 17.659486623 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120577656 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.175240806 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.148480714 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.114547492 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115031091 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.141798359 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124727709 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.124443722 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.208544233 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.111590563 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.162706245 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.112305227 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.117019511 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.140051287 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.137730173 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.111495181 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.14260682 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.115717732 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120305042 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.140840772 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.135101473 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110857237 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.113678113 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.144333958 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.111821888 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.1342483 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.14176461 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.12408236 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111288725 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.146444165 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.11776393 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112598794 seconds)
  done (took 5.396034897 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.160838991 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182895355 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.150221539 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.149443428 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.189017389 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.11472146 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.225649867 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.150297026 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.207131238 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.113101055 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133461239 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.139565839 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.153741186 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.113807817 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.167273503 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.113514259 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.115502738 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.144006683 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122774388 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.114143638 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.163652295 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.112069667 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.113784901 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.143648723 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.11334018 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135249937 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.142262505 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.126474127 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111683479 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.146651292 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.118852652 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112901623 seconds)
  done (took 5.712406144 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.128087444 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.128016186 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.135595618 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.167846033 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.122637752 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126269408 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.157940106 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.123126883 seconds)
  done (took 2.301221724 seconds)
done (took 32.273271812 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.136502824 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.12979197 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.12985379 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.154467902 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.196468148 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.146893033 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.128194843 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.115868264 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.152728971 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.132036659 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.11173347 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.116283543 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.160437306 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.120432444 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.229343017 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.124773713 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.232548101 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.199458612 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.147048846 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.124376017 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.117161432 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.233618315 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.121329669 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.115296658 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.235345725 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.115498459 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.218036743 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.120035591 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.149222942 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.115629709 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.226399801 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.122365206 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.11554384 seconds)
  done (took 6.194043444 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.21465902 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.11873785 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.1523192 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.120928516 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.119341163 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.151068011 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.217717836 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.149661343 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.122110782 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.120248234 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.120264272 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.227752241 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.123329258 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.14414006 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.121898188 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.115512685 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.248780192 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.120693545 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.11238262 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.127765712 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.114622614 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.12035769 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.258315443 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.113151546 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.121091224 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.151811198 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.12245206 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.124026097 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.14950349 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.121135957 seconds)
  done (took 5.564681051 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.12955089 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134654504 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.137427052 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.220222692 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.148933399 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.164073478 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.144446831 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.135798392 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.175592033 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.115236174 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.129538298 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.18359456 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.132396349 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.125103681 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.149930242 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.134305563 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.137303736 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.146062078 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.122503706 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.132222555 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.166213218 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.133529452 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.142560752 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.153851793 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.115108059 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121718016 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.154109069 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.130301007 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.122417642 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.158703063 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.118261827 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.118764216 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.11667375 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.182050672 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.116281289 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.158133715 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.14205978 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.127228276 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.15879656 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.148532249 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.118568841 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.147396481 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.143291653 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.171878543 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.14536647 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.130676848 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.126593997 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.157936951 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.115102484 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.134304084 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.187954247 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.116372898 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.135094843 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.145061035 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.114670123 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.122925346 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.114207529 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.148181625 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.130350246 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.11727899 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.16924305 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.122789965 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.124544911 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.14571465 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.126875436 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.113543551 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.113117533 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.149793734 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.142401471 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.121259622 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.182743125 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.114733779 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.126710425 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.157624668 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.12576 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.125997783 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.143163148 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.127188421 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.125187688 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.120092134 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.159345463 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.117736612 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.117899876 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.163016983 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.136441428 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.128590032 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.158786447 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.129324581 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.117951874 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.147212895 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133501868 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.115889385 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.151789663 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.129487037 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.115666445 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.147909548 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.130892052 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.127447166 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.113058817 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.171702777 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.120184145 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.114011868 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.171297036 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.121527176 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.120453885 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.155772249 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.15906397 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.114712679 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.157142245 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.129734959 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.116147764 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.15193385 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.121359535 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.115190785 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.162864921 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.132582116 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.122531872 seconds)
  done (took 17.310844252 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.330190473 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.318084048 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.185237766 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.318449525 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.1608983 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.214819508 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.31587131 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.314700767 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.114896285 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.185241343 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.167281166 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.28338323 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.148388108 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.143803395 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.318893163 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.370587118 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.178292333 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.155157978 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.185209152 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.129464196 seconds)
  done (took 5.770362418 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.139065712 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.152013982 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.170495 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.147031153 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.122186797 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.161132288 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.11589245 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135736232 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.15512203 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.126654708 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.118007969 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.163787544 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.125138188 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.12927778 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.162554297 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.154444153 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.123615216 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.151457194 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.140538684 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.120670886 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.140460481 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.144972193 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.124786641 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.169919743 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.131854425 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.126980256 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.145647315 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.122774158 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.119494728 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.151385294 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.121695211 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.136839623 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.151955222 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.11182741 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.128311737 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.131587961 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.149827036 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.119445088 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.120837217 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.149796952 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.132144753 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.124920706 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.123537726 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.135267507 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.133755357 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.117348847 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.125653975 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.160495736 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.114417616 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.130759428 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.159624823 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.127957161 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.122809187 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.165518879 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.120815206 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.133166722 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.158394606 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.127990759 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.12101133 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.144371344 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.11623479 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.120470312 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.120979998 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.158164282 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.129010395 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.137065121 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.163651913 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.11623918 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.11989917 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.151165294 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.120349446 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.130606088 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.171885466 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.122550662 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.119621039 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.158889041 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.121721732 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.100378234 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.125203716 seconds)
  done (took 11.940986554 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.145749008 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.122019042 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.1348547 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.185503142 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.125610758 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.122172094 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.15304409 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.137702227 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.12623479 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.162529981 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.127697425 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.129676237 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.169948161 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.126318671 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.121220591 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.163506355 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.127149238 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.155489763 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.16654528 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.145886631 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.125971581 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.154167339 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.130062051 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.127986121 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.178042839 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.128032354 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.143142806 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.158573898 seconds)
  done (took 5.24486497 seconds)
done (took 53.237850612 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.386565376 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.570301413 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.329847675 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.329249351 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.401790044 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.348792626 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.328971866 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.330794906 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.900731267 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.306515879 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.330636067 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.340740921 seconds)
done (took 30.139858533 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.344369902 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.899439441 seconds)
    (2/2) benchmarking "String"...
    done (took 1.605868763 seconds)
  done (took 4.727880883 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.3253907 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.325704203 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.546220436 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.327141485 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.334999102 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.329507883 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.327247215 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.326843576 seconds)
  done (took 16.742662094 seconds)
done (took 27.363194422 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.402011251 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.504972681 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.56691189 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.326932649 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.328394743 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.337192874 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.327506658 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.358308937 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.330251744 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.325316319 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.752454756 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.583206064 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.329195163 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.701438171 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.33827702 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.334286492 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.342895952 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.572916864 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.330776859 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.363452767 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.309677715 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.31498233 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.33106901 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.338423308 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.334734307 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.335657073 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.351977206 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.330124062 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.510874888 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.358071166 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.368782216 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.332901213 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.389506071 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.338331757 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.331568176 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.330300205 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.519490192 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.344743614 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.317846955 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.332886209 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.523291988 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.334809264 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.341477949 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.34178703 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.333039862 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.391176164 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.312268739 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.448761281 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.360073228 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.336245616 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.336589806 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.713497777 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.344939534 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.332333351 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.339264053 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.556110085 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.36052209 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.400337353 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.357240288 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.333465813 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.338882533 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.331977765 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.389593315 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.334721065 seconds)
  done (took 151.99640871 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.333350634 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.330809004 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.330299439 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.335913015 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.330232084 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.332359741 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.334082255 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.335641091 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.331488985 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.362838475 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.333541752 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.330490353 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.335485028 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.278303117 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.338609296 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.351116291 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.333582408 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.34723519 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.353356477 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.333614643 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.333556908 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.336810183 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.331971964 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.330476906 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.336650205 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.41752619 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.378729443 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.343015495 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.343797986 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.332611068 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.335024507 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.338303473 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.987858235 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.201083472 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.349964924 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.36193107 seconds)
  done (took 84.983104162 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.328934517 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.332205179 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.333721139 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.365335855 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.329922887 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.934523335 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.955516619 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.049171335 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.911750939 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.82295245 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.646113421 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.3376982 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.429599448 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.346956208 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.33761982 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.349918013 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.36284995 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.334622019 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.334213704 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.957766997 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.349765003 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.338254762 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.514764857 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.346115468 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.367769018 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.732327095 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.335405519 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.367447956 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.67524336 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.388172544 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.337719288 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.747897682 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.22882963 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.341220786 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.335318038 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.447701726 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.337885545 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.368200572 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.332069842 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.619614634 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.339005564 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.33243894 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.339288934 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.052617732 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.338071754 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.942950796 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.338970116 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.337640737 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.337703899 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.33541891 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.59707699 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.099893185 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.340877954 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.337998056 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.339447111 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.336983799 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.336902997 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.373603189 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.663167987 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.436512892 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.337010726 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.337475824 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.339671802 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.373330463 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.340108456 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.504675596 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.338720574 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.148614039 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.392203854 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.472174134 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.958318337 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.343145142 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.436452583 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.462701123 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.339653602 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.337502415 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.334601152 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.342234529 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.451750801 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.34137667 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.772545265 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.5223482 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.353274671 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.83877638 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.43996146 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.336281115 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.759145418 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.343794863 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.337623414 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.16265657 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.438502511 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.336868945 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.338456806 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.339682883 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.777792781 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.960829918 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.633491683 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.341197794 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.870237197 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.341866323 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.338923637 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.796672554 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.936875539 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.078566621 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.344564762 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.453221337 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.520445808 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.357347616 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.336903504 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.842265107 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.343927376 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.397839109 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.34313753 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.744707497 seconds)
  done (took 384.115638162 seconds)
done (took 622.318421275 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.233653765 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.176289431 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.330867228 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.196659874 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.165829344 seconds)
  done (took 12.335061714 seconds)
done (took 13.569770499 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.542004836 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.545956582 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.405303455 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.542703295 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.372183135 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.558648556 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.523458826 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.362529898 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.458755442 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.428831164 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.45764524 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.393971083 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.375235382 seconds)
  done (took 20.204951679 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.624311452 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.344838156 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.405073897 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.641729164 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.379648049 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.619906106 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.66826516 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.343973621 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.486424181 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.356176721 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.361434064 seconds)
  done (took 19.471154181 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.634847997 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.349121081 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.400465576 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.648876404 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.378324829 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.622991841 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.663760526 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.348420538 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.473000836 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.360694109 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.356352841 seconds)
  done (took 19.477501524 seconds)
done (took 60.38722019 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 2.281185495 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 17.650862762 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.378772052 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.43319139 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.359155633 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.371725461 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.435487393 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.362236959 seconds)
  done (took 29.515682195 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.3544564 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.356648006 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.355878932 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.355612672 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.358595849 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.356229412 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.355214546 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.357125667 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.354626503 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.358496144 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.357385861 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.358298112 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.35672499 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.358908395 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.357549714 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.35642025 seconds)
  done (took 22.947321393 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.358673068 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.352174382 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.353560631 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.358787449 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.358427093 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.355983776 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.354019751 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.353131113 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.357394142 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.353428447 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.359126128 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.3538416 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.355015496 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.359190281 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.357980322 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.360388048 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.361116783 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.359695517 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.361750411 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.358976565 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.355451191 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.35683909 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.35384153 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.354084073 seconds)
  done (took 33.805279753 seconds)
done (took 87.509014489 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.349711059 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.365457918 seconds)
  done (took 5.955028986 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.415917794 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.419381844 seconds)
  done (took 4.073069031 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.360277193 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.361826369 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.358850333 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.361139841 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.355193777 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.357045603 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.359206538 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.361173234 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.359326263 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.360832021 seconds)
  done (took 14.837597286 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.360181365 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.362047068 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.357163476 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.364708616 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.358745889 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.360133087 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.359312715 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.359996213 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.358507374 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.362330601 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.362219162 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.362338991 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.36220034 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.359025597 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.358498031 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.36006648 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.361628008 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.360973311 seconds)
  done (took 25.734310926 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.372541206 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.382491479 seconds)
  done (took 4.000237179 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.49693843 seconds)
    (2/7) benchmarking "second"...
    done (took 1.402244603 seconds)
    (3/7) benchmarking "month"...
    done (took 1.477141387 seconds)
    (4/7) benchmarking "year"...
    done (took 1.467932518 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.401324577 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.380126557 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.403769392 seconds)
  done (took 11.273481597 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.3615513 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.573010813 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.702640876 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.883330111 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.361876859 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.365094016 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.185834959 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.36213975 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.363850713 seconds)
  done (took 15.402741035 seconds)
done (took 82.514905423 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.350153303 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.379930401 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.382671017 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.371692155 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.705390481 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.390567071 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.35573919 seconds)
done (took 17.18057284 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.328465222 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.334719371 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.341037977 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.358251515 seconds)
  done (took 10.608264829 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.364107156 seconds)
    (2/2) benchmarking "read"...
    done (took 1.638025552 seconds)
  done (took 5.245276847 seconds)
done (took 17.095664613 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.361088477 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.362848745 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.36050769 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.36409744 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.366320956 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.365178274 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.362672728 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.364020928 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.367307653 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.36639382 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.367146527 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.365310579 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.364189515 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.36631894 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.360726808 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.361545416 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.36625284 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.364754481 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.36609869 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.363806832 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.365841073 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.364545123 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.365315284 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.36458755 seconds)
  done (took 33.99601163 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.364805532 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.364355639 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.36589784 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.366876433 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.362707656 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.364300076 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.36636364 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.363630332 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.36432159 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.366773892 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.364637317 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.365709991 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.366564416 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.364182013 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.368133962 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.365321093 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.366948816 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.364698986 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.366389957 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.365346928 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.365231744 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.366194478 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.367037104 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.366801045 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.364530742 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.364870488 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.367846101 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.36541544 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.36712667 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.365689405 seconds)
  done (took 42.219797157 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.374016621 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.373549138 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.370307864 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.369018738 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.371873339 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.369807338 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.369316437 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.369796674 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.36923942 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.371064595 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.369992061 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.371353651 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.372442863 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.371471217 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.370423985 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.370172733 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.370114522 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.369398411 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.370695783 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.36984377 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.371558019 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.370748139 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.37146494 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.371349814 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.369655374 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.372875226 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.370462042 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.371521467 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.370624428 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.371218499 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.371811767 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.370410866 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.372680976 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.370958441 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.370507678 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.370707362 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.376031617 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.376195715 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.371382489 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.372189183 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.373821158 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.372445029 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.371012279 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.37262282 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.37195379 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.371643331 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.372739637 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.372423584 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.373680645 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.37129446 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.37111025 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.37350224 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.373695894 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.373436421 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.372694273 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.373438764 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.374625746 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.373465179 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.374122824 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.373196806 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.373651687 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.373534971 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.37276257 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.37263036 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.374140031 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.373248395 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.373329299 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.375817592 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.373225451 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.373906801 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.374481306 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.373405054 seconds)
  done (took 100.042571027 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.372836055 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.370690326 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.370316504 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.370481437 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.370238448 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.371644563 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.371252394 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.372770729 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.371820862 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.373050971 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.374372805 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.371308206 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.372345454 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.372620134 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.373066549 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.370973682 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.372406048 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.368969465 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.372876551 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.373130873 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.374223817 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.372324604 seconds)
  done (took 31.439999914 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.374017916 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.375529528 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.372586676 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.372422298 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.376566541 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.37486555 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.373709588 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.374575674 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.373985589 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.372275335 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.372047542 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.373207289 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.37537844 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.372516761 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.373158096 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.376013421 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.377242303 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.376549679 seconds)
  done (took 25.99345041 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.373695353 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.374009885 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.376671144 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.37260657 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.373724512 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.374056902 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.37264712 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.375035174 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.374464642 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.374396781 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.376170044 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.375237949 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.37536002 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.373816923 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.375149724 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.37095053 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.375784677 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.375482461 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.375328442 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.374804606 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.373961697 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.376136947 seconds)
  done (took 31.496527366 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.374948799 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.376054633 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.375158148 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.375504436 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.375681362 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.377191859 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.375883671 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.376230479 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.377865985 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.375444534 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.375148106 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.375364608 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.378239182 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.37471658 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.37676426 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.375798808 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.378106444 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.374697456 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.378583298 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.374400859 seconds)
  done (took 28.780265564 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.378621998 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.378606559 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.380841657 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.378678561 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.379292697 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.386076991 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.378046275 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.379891395 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.379068298 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.380862034 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.379745458 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.37907792 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.379728538 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.37963373 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.380060707 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.380492433 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.379426383 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.380989994 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.379474605 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.379827373 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.380191722 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.379058342 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.379706551 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.37963072 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.379872166 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.379534662 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.381836892 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.382136734 seconds)
  done (took 39.900431772 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.380700966 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.378856255 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.377662103 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.379593876 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.377169644 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.377971949 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.376529579 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.378115334 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.378303547 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.378780734 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.378233224 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.380799463 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.378468791 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.380242988 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.379784381 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.380453218 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.380631015 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.379717108 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.37804315 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.378683811 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.380021044 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.37862061 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.379971075 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.379329033 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.378570035 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.379454769 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.380166878 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.380522477 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.381327255 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.380392265 seconds)
  done (took 42.636314005 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.423000611 seconds)
    (2/2) benchmarking "in"...
    done (took 1.429457208 seconds)
  done (took 4.113996933 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.378407867 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.380257528 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.380856085 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.37858246 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.381910601 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.380587919 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.380344848 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.381042761 seconds)
  done (took 12.304019703 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.376792418 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.38300787 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.382307809 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.381448751 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.382356159 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.374201741 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.383743329 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.386688367 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.378081144 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.376484746 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.380574676 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.378528068 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.379393289 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.380119335 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.376904705 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.380907037 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.386293228 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.382147627 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.382268556 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.382206595 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.382357848 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.38035527 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.381979213 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.382705668 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.378095922 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.386146357 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.383869403 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.390393481 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.378409119 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.382683601 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.379617929 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.385016474 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.383995409 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.383497228 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.383115045 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.383539356 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.385828766 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.385258771 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.385811308 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.386840309 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.385764943 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.382592748 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.381275305 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.382365034 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.382287932 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.386681837 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.385636594 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.382363902 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.379522706 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.382240968 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.388311449 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.377515467 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.383397015 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.382944686 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.383498117 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.389005219 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.39028063 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.383132292 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.384827779 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.391022777 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.39563762 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.390143149 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.38411675 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.387988296 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.38879847 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.396787954 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.38806612 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.388912307 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.384767388 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.386645593 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.388755773 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.39588838 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.394078572 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.388976045 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.387184334 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.386713549 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.381697758 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.387353551 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.39151585 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.387575133 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.388599311 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.386958313 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.389655125 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.396077784 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.383145952 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.387566583 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.387812645 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.387714272 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.382047378 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.391630526 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.390307223 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.388236128 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.381415195 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.381805151 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.383935655 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.386686153 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.381075532 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.380850447 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.386532569 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.38873474 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.38677113 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.386181485 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.389228108 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.389378222 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.388945637 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.390091435 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.390613382 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.381722296 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.389226233 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.390954177 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.387996801 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.384812521 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.387592953 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.387214877 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.386333563 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.388614742 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.391336498 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.387375761 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.391432227 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.388683111 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.391465365 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.401626633 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.391486697 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.388852621 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.386567335 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.394224774 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.388732273 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.388434699 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.392169948 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.38776197 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.38806122 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.386407768 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.391871692 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.383694234 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.391322354 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.384352179 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.388539249 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.388539425 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.389149527 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.38549254 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.387507148 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.386326652 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.388782661 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.390534029 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.391354867 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.388275596 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.395855779 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.38858415 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.389891473 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.389665416 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.391400081 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.392007035 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.387255991 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.394544146 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.386033063 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.392904885 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.386043134 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.393960746 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.393386213 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.392555951 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.392431187 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.388435313 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.38977709 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.392561656 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.39008282 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.387700546 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.391883224 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.391135497 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.392999198 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.387307416 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.39218386 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.38642962 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.390322687 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.398430899 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.392909212 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.393368604 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.389440547 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.394482312 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.391584079 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.392305803 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.390309742 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.391665944 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.39399848 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.395540597 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.394747462 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.393999257 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.39399473 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.3879603 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.388702601 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.394124353 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.390901554 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.399958658 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.398121882 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.399406451 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.388380468 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.395812306 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.388007716 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.394654931 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.391931714 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.394117203 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.394424804 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.394250398 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.387999789 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.396615904 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.391294904 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.396274726 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.386794394 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.395428388 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.394413287 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.392395093 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.393621772 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.389306273 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.390021435 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.39563038 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.397076116 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.395676067 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.391102737 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.394740636 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.389237532 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.390433407 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.397128803 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.394702902 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.39606688 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.396072676 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.392014806 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.392676768 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.393304485 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.392089673 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.397452142 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.394156094 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.391333389 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.399068869 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.394336669 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.393468737 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.399763253 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.396464494 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.392835469 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.396950626 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.401110627 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.396414676 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.392620244 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.402474095 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.399420042 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.397183434 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.398073425 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.392721641 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.400015972 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.398635829 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.398296083 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.392224877 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.398534152 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.391622905 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.398165492 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.394987677 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.392938797 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.394200618 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.397245527 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.400907912 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.398834015 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.394998038 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.398521908 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.399084398 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.398077502 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.394961497 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.402853541 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.398235944 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.394813765 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.396292548 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.394521421 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.400868955 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.395277173 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.399935443 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.395409022 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.405866387 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.409751053 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.400678933 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.399390689 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.39961248 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.398811769 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.398109956 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.395991479 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.395147282 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.396257032 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.39459221 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.39512728 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.400142767 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.396796826 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.400690759 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.397367277 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.397510638 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.402112313 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.400296821 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.394459107 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.40235151 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.399875648 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.400503053 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.393684997 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.40207804 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.39555078 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.397875327 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.397204197 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.396139864 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.40420597 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.402948849 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.397617821 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.399035095 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.397171652 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.398120691 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.398722222 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.402850026 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.398890319 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.406390821 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.398474548 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.402917197 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.399539521 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.40581831 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.405712374 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.398500493 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.407034932 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.400538226 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.394510549 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.397131501 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.401963259 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.405194843 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.405414408 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.398294681 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.405416395 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.40300683 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.404304247 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.404071308 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.403082835 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.40199193 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.403107759 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.405442294 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.403419462 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.399937634 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.399618939 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.404541592 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.402364242 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.402546632 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.395865961 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.401246611 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.405829386 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.398528238 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.399342641 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.399660153 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.404737536 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.404379342 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.405418708 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.403149897 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.402280934 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.404852439 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.404670701 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.405498617 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.402805043 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.405897828 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.407421491 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.406156241 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.409548823 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.399304988 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.406293507 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.403137708 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.400246787 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.40052929 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.401574072 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.406635088 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.400183807 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.411261614 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.406546058 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.40061093 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.40371401 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.406486106 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.400763242 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.409921846 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.419733463 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.40187254 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.408058191 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.40528572 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.401647351 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.409467034 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.404099343 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.399226762 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.403277785 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.407434438 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.409006242 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.40195362 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.406538568 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.401341032 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.405727266 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.406794873 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.406623349 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.406217157 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.405600827 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.401540631 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.407255783 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.40481139 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.408998292 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.402145889 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.404060706 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.403406883 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.411100003 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.411807887 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.403742122 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.407727825 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.40824828 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.40393194 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.404892814 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.409344073 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.40296142 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.408434336 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.403398106 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.406852621 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.405582047 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.407360411 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.408371166 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.408797382 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.403964965 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.405204087 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.411133249 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.407106598 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.408051677 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.405191184 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.409400869 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.403984335 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.403955125 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.410249887 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.405143542 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.409433819 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.406022969 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.407541158 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.406400476 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.410266999 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.410227985 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.410556327 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.404164678 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.405927431 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.412975601 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.409924823 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.41133344 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.408804541 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.412956319 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.406166408 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.408649792 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.410197755 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.405678964 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.406797319 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.412525474 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.406447156 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.405363745 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.406035181 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.411473062 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.411771248 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.407728878 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.405669514 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.415869142 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.412883982 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.413951308 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.408088952 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.408328469 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.406842866 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.411164597 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.411771599 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.406961497 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.413871194 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.409973929 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.412282547 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.408614325 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.407028381 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.407127747 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.413712509 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.412951465 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.407786663 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.409965153 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.407940522 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.412763864 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.412660182 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.412027524 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.405791932 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.406118129 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.409917708 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.4100101 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.410992607 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.408185159 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.407955667 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.40970607 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.413529463 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.41448897 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.41296576 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.411909178 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.40819702 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.41324082 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.40854129 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.4117056 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.409055545 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.407992809 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.414009573 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.411551304 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.408539138 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.411836956 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.415997866 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.411617204 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.406166806 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.410913948 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.413211464 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.414285051 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.413065659 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.408898071 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.406735224 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.41314401 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.412390614 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.412164713 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.409750997 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.419598734 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.418177662 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.407681293 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.410029762 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.413127734 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.415945816 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.412400708 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.414146097 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.409706019 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.41173077 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.416481882 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.411774446 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.413882373 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.411376462 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.409161392 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.416735866 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.410956669 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.412259102 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.410948967 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.415386524 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.414097368 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.412350882 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.420850175 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.414396934 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.415769147 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.429649129 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.41365469 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.410878325 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.415057112 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.409366306 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.411798111 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.40873486 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.414215405 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.412788413 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.411584349 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.411341129 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.407206563 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.409540435 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.410463437 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.417034455 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.408156674 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.405190807 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.406858317 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.412084386 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.413561503 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.416352682 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.412498545 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.413153437 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.412175713 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.407234171 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.417856577 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.418854559 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.412646529 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.410002671 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.409095158 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.407097489 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.410287904 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.411816562 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.415009164 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.411866769 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.412204902 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.408843289 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.413804194 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.409823299 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.406344633 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.408146084 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.405693288 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.411112778 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.416588143 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.421449261 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.411633655 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.408515486 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.41284902 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.409658832 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.405211669 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.411487162 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.40943179 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.40587231 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.406708138 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.413152175 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.407939928 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.406473748 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.405042384 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.411721721 seconds)
  done (took 835.22962856 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.406949787 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.407942848 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.406099778 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.40693559 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.408505968 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.406399544 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.406924705 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.406904144 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.40814431 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.405640554 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.405824099 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.406418841 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.406438118 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.406093068 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.405299849 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.406993763 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.406254204 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.405792261 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.405569434 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.408884545 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.406583971 seconds)
  done (took 30.823897415 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.407829106 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.405402087 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.405554527 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.406196763 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.405641896 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.405751714 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.405880731 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.407495818 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.407445565 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.405461221 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.410104452 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.408431506 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.406369438 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.408330867 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.406540508 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.408512418 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.40801085 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.4076636 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.407732885 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.406023462 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.408524658 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.404636244 seconds)
  done (took 32.237951646 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.410581227 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.408337697 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.40520017 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.409425784 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.412416283 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.406624887 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.410061081 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.410356726 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.408441214 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.40618907 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.403269621 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.405479025 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.409841649 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.414107082 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.407180998 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.412328383 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.410512377 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.41127135 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.410649686 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.409530559 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.410934358 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.413780982 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.409595459 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.405172964 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.410709077 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.411457186 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.408906309 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.409268723 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.405769323 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.414163914 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.410788573 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.407246679 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.408534639 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.408038951 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.407022412 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.413151524 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.411477494 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.411192147 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.410263146 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.41406996 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.424524722 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.410387381 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.414331236 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.413860144 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.412199721 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.410025366 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.415595972 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.409231443 seconds)
  done (took 68.979834673 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.412601464 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.412446948 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.410936741 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.41043323 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.412797087 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.411329772 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.41448811 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.413186079 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.410657605 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.411869995 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.413860181 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.413818832 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.410183873 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.412336737 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.41196174 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.411676936 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.412197671 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.410060231 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.411976124 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.41085872 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.412492704 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.413296661 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.414098422 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.413068886 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.414965402 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.411787574 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.414053635 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.413775339 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.411917378 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.412222258 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.413066899 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.413215375 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.413489968 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.412777602 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.412696423 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.413733178 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.414152792 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.414301414 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.416116259 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.412782783 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.415934781 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.415851189 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.415918408 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.414478635 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.413867752 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.413258632 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.414312048 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.413660594 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.413843923 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.417984168 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.415590343 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.413911895 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.417074693 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.414000263 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.415238861 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.415897289 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.413308036 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.414650361 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.415999888 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.415843344 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.415687394 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.416910338 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.415488913 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.417170963 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.415544239 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.415523866 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.416793345 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.417106793 seconds)
  done (took 97.427655596 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.417302569 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.41930138 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.417516921 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.41655764 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.41711503 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.41652451 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.418552572 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.417815735 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.417972549 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.416745431 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.416979725 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.418029826 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.417535764 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.416759646 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.418513985 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.417939524 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.421092586 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.41929686 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.417500579 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.418284976 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.417452248 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.41840738 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.417536435 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.418189408 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.41957777 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.419451784 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.419436324 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.417137633 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.418447057 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.418592665 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.420117413 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.418634697 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.418634238 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.416990341 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.418636935 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.418453943 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.415511207 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.420877831 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.418231463 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.419591567 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.419662691 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.417791119 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.419931534 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.419484872 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.419949715 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.419431903 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.41653159 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.418026142 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.41732938 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.41750344 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.419504343 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.419532121 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.416557056 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.418450082 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.418405899 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.420326038 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.419637534 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.419853841 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.417604882 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.418235814 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.418464153 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.417636893 seconds)
  done (took 89.228908392 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.417866293 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.417914805 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.419277507 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.41720645 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.419294208 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.419670132 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.420789884 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.418989847 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.419491289 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.41966627 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.419139841 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.4164846 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.418373549 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.419167511 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.419364797 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.418290639 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.41885477 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.416810661 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.418338443 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.418548112 seconds)
  done (took 29.663783238 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.418925046 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.420043342 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.417853395 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.417623792 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.418342787 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.417703279 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.418063849 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.419856432 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.418016268 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.418589077 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.420184278 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.420144095 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.418838296 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.418073127 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.420406902 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.41850315 seconds)
  done (took 23.992812212 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.419479933 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.419877004 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.419377543 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.419084598 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.418268435 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.418397623 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.420326509 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.41808373 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.418530083 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.421723634 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.420170133 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.421140847 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.421696398 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.422432114 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.418453673 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.421224714 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.417164847 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.419115591 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.421179012 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.420830778 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.420942805 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.420550967 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.419122802 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.422141643 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.420142729 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.419242975 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.416977749 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.418442287 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.419266123 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.419185281 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.419462522 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.418853954 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.418118721 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.416964464 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.420737763 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.419499139 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.419704281 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.421459956 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.420387599 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.422531781 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.421317691 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.41995673 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.42053038 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.420201693 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.419154912 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.418468361 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.417319068 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.417404164 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.419663328 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.421787651 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.420421306 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.422467011 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.421546432 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.420431618 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.420890885 seconds)
  done (took 79.384596357 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.422101478 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.419414432 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.419088202 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.418839002 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.418141839 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.417718029 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.420434725 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.420678939 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.418905247 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.421192628 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.41986439 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.421788539 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.419614048 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.421453376 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.419059983 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.42022399 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.419658875 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.419069473 seconds)
  done (took 26.849311848 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.420667346 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.419922987 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.422689567 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.422537518 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.420571139 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.4229067 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.420683851 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.421574935 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.422431808 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.42108807 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.419691019 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.421557467 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.420711838 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.421218949 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.420387025 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.420008868 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.422332818 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.421757083 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.421440756 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.421451931 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.423692498 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.422172428 seconds)
  done (took 32.564417583 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.417911751 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.417270689 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.416734367 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.431397991 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.429187737 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.415368607 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.417314886 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.417062585 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.439329105 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.45765686 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.451613591 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.430871605 seconds)
  done (took 18.435244309 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.422855301 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.423662664 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.423443072 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.424176623 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.423768638 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.420742763 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.422593898 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.421950602 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.424012158 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.423505565 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.422829085 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.423307772 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.423346989 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.423652967 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.424316929 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.425690057 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.422729735 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.423501622 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.422853916 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.424375073 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.422644257 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.424479468 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.424261117 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.423348614 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.423416108 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.423212113 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.424592096 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.423627055 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.424624272 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.425740436 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.424139331 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.424148382 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.425381784 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.424253966 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.424761887 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.425313656 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.424914213 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.425996818 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.426658111 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.424899279 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.425474098 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.424303784 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.426343554 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.425243477 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.425875319 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.425011383 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.424311658 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.423257082 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.423869375 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.425606182 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.426999939 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.425371757 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.426727392 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.42738106 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.427813228 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.427685914 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.425704342 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.426458157 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.427836579 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.427125023 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.425918727 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.426034727 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.42511669 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.426477973 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.426384646 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.427020197 seconds)
  done (took 95.329418514 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.425581111 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.425959089 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.426652513 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.426660166 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.42639405 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.425100765 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.425864967 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.426115837 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.426824687 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.427100706 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.426656353 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.425255104 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.427485168 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.427965 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.427875922 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.429718163 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.426698803 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.428929944 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.426787626 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.427418933 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.427115142 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.427493357 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.427616811 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.427396978 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.426027824 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.429247831 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.427714435 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.428315973 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.429166632 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.427651927 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.428077235 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.429786309 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.428797771 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.428401692 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.42871734 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.428406737 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.427245164 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.42907693 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.429419195 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.428780998 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.430591248 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.431625383 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.428223814 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.428901313 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.42964292 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.428274661 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.428576783 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.429161381 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.429834068 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.429587535 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.429057628 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.429825253 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.429198546 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.430310547 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.428419558 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.430221223 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.430204978 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.432617051 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.431520981 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.432339135 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.429594464 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.431287622 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.432481683 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.429664891 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.429735586 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.42962328 seconds)
  done (took 95.58252281 seconds)
done (took 1949.896401999 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.592701608 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.546077545 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.424415121 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.441389355 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.428013877 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.421881894 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.441689926 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.425434499 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.425154012 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.425737309 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.425819197 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.615043514 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.48203756 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.42629499 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.426808451 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.52701749 seconds)
  done (took 28.776041257 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.457829049 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.435545913 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.552063935 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.428978139 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.45518274 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.628992275 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.490209256 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.434291668 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.610305299 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.450665064 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.434398381 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.454525024 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.435040313 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.435508489 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.451657035 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.633589351 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.687175465 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.4378331 seconds)
  done (took 31.216202302 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.900947179 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.44649262 seconds)
  done (took 5.651138386 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.454407817 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.431825431 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.434365398 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.430787656 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.428048168 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.424326697 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.431117815 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.432041716 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.424481059 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.569777649 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.434731481 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.443818872 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.430540871 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.434409772 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.43706203 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.479014429 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.587933621 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.44097621 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.435400804 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.436804651 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.430431506 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.531610118 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.476024651 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.437490213 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.564289769 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.436755232 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.440137403 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.440138673 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.562481349 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.437854496 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.434041948 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.430115084 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.435308022 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.425940604 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.922124848 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.427053519 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.446499846 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.46108034 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.438669384 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.581032206 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.436503151 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.438082597 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.425487508 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.91986822 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.558022982 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.55986134 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.429404089 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.440218729 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.437465637 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.504499014 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.435326114 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.436811685 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.495189232 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.280988937 seconds)
  done (took 90.896204799 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.430566232 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.426404505 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.609847394 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.450808482 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.426914934 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.428458806 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.429721511 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.727352839 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.483645029 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.428172972 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.738928448 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.020594924 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.433222683 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.497423984 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.381570648 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.518603673 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.429423812 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.427960729 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.428653141 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.431250882 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.994129192 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.430146357 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.429221211 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.556687592 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.469062153 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.963963971 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.428937704 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.432272277 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.448081333 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.42872512 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.973581516 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.436186593 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.525611495 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.429979711 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.708667348 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.824733052 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.784108598 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.448856461 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.439694536 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.431271598 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.439698678 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.943741941 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.80395543 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.430387521 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.427864294 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.950140607 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.428834799 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.436861961 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.439831907 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.686665545 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.432131139 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.430098026 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.427927371 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.431239287 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.430180704 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.479315053 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.534176471 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.963004223 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.430629399 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.431174613 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.455875985 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.431479058 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.43605846 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.434130446 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.452216366 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.806314339 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.636882084 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.433559998 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.803674474 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.964876347 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.443891126 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.035767061 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.429191676 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.432514104 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.677339542 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.431525264 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.430654657 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.950804122 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.467664006 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.431352021 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.788827944 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.434466655 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.739006956 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.450413425 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.434459219 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.028894266 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.446549123 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.450275285 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.431775345 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.43265098 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.44973149 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.433588134 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.718310362 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.474096707 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.432469002 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.433270898 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.432818469 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.433059787 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.45113804 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.442753204 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.043514908 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.443581227 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.43399033 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.436105222 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.431436428 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.448350772 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.436062224 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.435040087 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.709330113 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.437478189 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.455598269 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.434852572 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.433711286 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.441924238 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.518422283 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.443079483 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.759334288 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.437274602 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.43663473 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.442183821 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.447285522 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.465708914 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.435484851 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.439880015 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.325669107 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.704247747 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.455365657 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.437007262 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.438394602 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.434939735 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.466452424 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.435870686 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.495011415 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.435831343 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.24706796 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.439129645 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.444027037 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.436438978 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.444059153 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.436210802 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.463423343 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.438757172 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.73986699 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.721643766 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.627025238 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.439256144 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.450014491 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.221928093 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.441161244 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.618707584 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.4606218 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.437824479 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.690127357 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.661579052 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.437413656 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.437775989 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.436475622 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.707054886 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.440920878 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.760858332 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.011422799 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.437594864 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.439107646 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.251431538 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.162340669 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.443995593 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.437678661 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.734043523 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.455555951 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.437589703 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.438588439 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.438522964 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.438684492 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.439024099 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.44363628 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.438892562 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.439225582 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.74233854 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.631731319 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.457476014 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.446178125 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.962924558 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.470560088 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.440638036 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.443885886 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.442706621 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.43923973 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.529661367 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.442578447 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.442130559 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.441915065 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.446383432 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.978164973 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.438994464 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.457351057 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.630884462 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.168208157 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.444326083 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.438824261 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.437564987 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.3623298 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.992175225 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.448934674 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.765097957 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.445322047 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.4813314 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.442834831 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.441407429 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.990733535 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.44048546 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.440680664 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.126472074 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.440340786 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.937238126 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.440353481 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.439868878 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.053268489 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.442055702 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.441799487 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.441053191 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.458137858 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.767068894 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.446433944 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.447355539 seconds)
  done (took 522.300868406 seconds)
done (took 680.140552483 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.440493993 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.441655278 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.428703107 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.445991623 seconds)
  done (took 11.075959033 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.483320156 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.44767222 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.456213853 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.446522493 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.459024361 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.448154294 seconds)
  done (took 10.060791239 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.440784041 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.443945152 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.446676716 seconds)
  done (took 8.65119829 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.674731031 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.473868557 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.823816443 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.447182033 seconds)
  done (took 9.738723703 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.454832717 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.455535411 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.456270026 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.460964701 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.484774418 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.483533387 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.461493376 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.461760191 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.485716916 seconds)
  done (took 14.521905547 seconds)
done (took 55.366735431 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.423024696 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.560447733 seconds)
    (3/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.680493938 seconds)
    (4/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.481902476 seconds)
    (5/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.479113358 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.516510902 seconds)
    (7/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.48425108 seconds)
    (8/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.535207918 seconds)
    (9/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.722111935 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.48142578 seconds)
    (11/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.560283269 seconds)
    (12/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.340419531 seconds)
    (13/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.569398063 seconds)
    (14/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.537557562 seconds)
    (15/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.552488629 seconds)
    (16/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.602374592 seconds)
    (17/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.60947502 seconds)
    (18/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.545387878 seconds)
    (19/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.601861265 seconds)
    (20/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.637306241 seconds)
    (21/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.484949633 seconds)
    (22/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.445797281 seconds)
    (23/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.213352297 seconds)
    (24/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.263594043 seconds)
    (25/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.593801038 seconds)
    (26/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.681131739 seconds)
    (27/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.432170069 seconds)
    (28/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.442823297 seconds)
    (29/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.432276879 seconds)
    (30/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.608417714 seconds)
    (31/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.517643219 seconds)
    (32/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.100262612 seconds)
    (33/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.553724612 seconds)
    (34/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.429163226 seconds)
    (35/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.476866434 seconds)
    (36/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.531473012 seconds)
    (37/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.537340767 seconds)
    (38/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.485275327 seconds)
    (39/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.427102612 seconds)
    (40/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.489996528 seconds)
    (41/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.437845423 seconds)
    (42/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.432319962 seconds)
    (43/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.713590607 seconds)
    (44/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.273973911 seconds)
    (45/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.50296547 seconds)
    (46/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.591513144 seconds)
    (47/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.476709405 seconds)
    (48/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.637482643 seconds)
    (49/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.479781702 seconds)
    (50/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.54917748 seconds)
    (51/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.497940837 seconds)
    (52/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.215665176 seconds)
    (53/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.155109677 seconds)
    (54/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.266917446 seconds)
    (55/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.561342868 seconds)
    (56/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.563494803 seconds)
    (57/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.430939661 seconds)
    (58/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.510932611 seconds)
    (59/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.487009063 seconds)
    (60/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.163256372 seconds)
    (61/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.484256032 seconds)
    (62/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.498083885 seconds)
    (63/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.487107975 seconds)
    (64/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.475981732 seconds)
    (65/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.429157205 seconds)
    (66/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.433193014 seconds)
    (67/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.481860771 seconds)
    (68/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.428513131 seconds)
    (69/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.437644259 seconds)
    (70/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.478793092 seconds)
    (71/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.540861235 seconds)
    (72/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.497819921 seconds)
    (73/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.436527597 seconds)
    (74/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.610355814 seconds)
    (75/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.447722146 seconds)
    (76/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.449986583 seconds)
    (77/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.448096745 seconds)
    (78/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.434467381 seconds)
    (79/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.43378758 seconds)
    (80/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.463935853 seconds)
    (81/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.540964645 seconds)
    (82/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.481104857 seconds)
    (83/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.541927037 seconds)
    (84/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.552473282 seconds)
    (85/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.524156624 seconds)
    (86/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.568646353 seconds)
    (87/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.472461633 seconds)
    (88/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.541964159 seconds)
    (89/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.583193892 seconds)
    (90/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.10200451 seconds)
    (91/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.140280213 seconds)
    (92/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.450385009 seconds)
    (93/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.633714665 seconds)
    (94/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.60972401 seconds)
    (95/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.481506855 seconds)
    (96/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.814387519 seconds)
    (97/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.566227008 seconds)
    (98/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.56770005 seconds)
    (99/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.574733597 seconds)
    (100/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.6080344 seconds)
    (101/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.48069341 seconds)
    (102/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.579592805 seconds)
    (103/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.439152742 seconds)
    (104/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.567480369 seconds)
    (105/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.496620211 seconds)
    (106/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.433707418 seconds)
    (107/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.469592247 seconds)
    (108/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.591334488 seconds)
    (109/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.319632322 seconds)
    (110/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.60798234 seconds)
    (111/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.435851913 seconds)
    (112/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.482998292 seconds)
    (113/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.431266797 seconds)
    (114/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.600208411 seconds)
    (115/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.677752208 seconds)
    (116/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.626443314 seconds)
    (117/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.257025438 seconds)
    (118/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.436138131 seconds)
    (119/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.447603057 seconds)
    (120/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.43277959 seconds)
    (121/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.506368158 seconds)
    (122/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.63480667 seconds)
    (123/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.432891947 seconds)
    (124/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.451460547 seconds)
    (125/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.489627184 seconds)
    (126/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.55996453 seconds)
    (127/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.462372417 seconds)
    (128/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.434527791 seconds)
    (129/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.485434604 seconds)
    (130/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.439927656 seconds)
    (131/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.317608468 seconds)
    (132/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.477530049 seconds)
    (133/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.553703581 seconds)
    (134/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.644622143 seconds)
    (135/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.68479253 seconds)
    (136/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.688677233 seconds)
    (137/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.322159209 seconds)
    (138/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.626530913 seconds)
    (139/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.554971233 seconds)
    (140/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.469833346 seconds)
    (141/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.456597617 seconds)
    (142/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.495499496 seconds)
    (143/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.560009049 seconds)
    (144/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.437223559 seconds)
    (145/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.583701959 seconds)
    (146/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.577410234 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.566855432 seconds)
    (148/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.624320549 seconds)
    (149/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.640359071 seconds)
    (150/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.150188907 seconds)
    (151/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.640007862 seconds)
    (152/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.20294618 seconds)
    (153/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.494519547 seconds)
    (154/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.435313425 seconds)
    (155/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.439410427 seconds)
    (156/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.721131191 seconds)
    (157/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.586318431 seconds)
    (158/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.545325507 seconds)
    (159/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.585352497 seconds)
    (160/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.587698325 seconds)
    (161/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.489256998 seconds)
    (162/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.48611816 seconds)
    (163/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.439128593 seconds)
    (164/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.575271325 seconds)
    (165/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.730807014 seconds)
    (166/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.323697282 seconds)
    (167/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.691217049 seconds)
    (168/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.52567707 seconds)
    (169/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.618371612 seconds)
    (170/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.592723608 seconds)
    (171/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.441549519 seconds)
    (172/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.489690156 seconds)
    (173/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.575349226 seconds)
    (174/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.52578251 seconds)
    (175/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.57478899 seconds)
    (176/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.760141263 seconds)
    (177/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.732769558 seconds)
    (178/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.524796467 seconds)
    (179/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.458402646 seconds)
    (180/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.433562043 seconds)
    (181/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.452247687 seconds)
    (182/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.37144913 seconds)
    (183/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.2945054 seconds)
    (184/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.441447735 seconds)
    (185/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.704797882 seconds)
    (186/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.211840308 seconds)
    (187/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.287296888 seconds)
    (188/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.514053016 seconds)
    (189/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.644479995 seconds)
    (190/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.485086979 seconds)
    (191/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.733346523 seconds)
    (192/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.651195182 seconds)
  done (took 363.266154405 seconds)
done (took 364.587538229 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.480342582 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.552901452 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.463919982 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.463793316 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.466450319 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.460496322 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.48657017 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.46551978 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.476416908 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.476850051 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.459435879 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.469058649 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.478166695 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.47391796 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.497798597 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.464535328 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.467134339 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.477972102 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.479600666 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.48153971 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.471413405 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.46835318 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.484959212 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.46350096 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.473399726 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.475647826 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.47106124 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.467773069 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.475691404 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.480349659 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.462478052 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.476358836 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.479265379 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.477722298 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.468528979 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.475245354 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.468173377 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.555652616 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.483762615 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.472523024 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.471201623 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.479989138 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.474546162 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.472802192 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.474129622 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.484529977 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.477208298 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.483420545 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.463347348 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.475435632 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.48301087 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.47544572 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.470182462 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.470205464 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.463868612 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.487846503 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.473927617 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.48557836 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.471655879 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.468176957 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.503906914 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.487309246 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.477112839 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.475553695 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.472745385 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.481384267 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.474991899 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.480267013 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.472414563 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.470414844 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.471032448 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.473750025 seconds)
done (took 115.673759132 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.58786302 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.465755625 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.604915971 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.473051313 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.62272673 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.600034409 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.472696906 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.474727754 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.472603447 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.263551933 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.471793803 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.472819494 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.465962362 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.471816578 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.588681198 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.473286146 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.47184889 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.165003357 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.476204434 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.607338061 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.465079405 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.471274022 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.474371778 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.269008693 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.467908202 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.462689396 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.609523038 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.475478293 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.172597825 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.464596746 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.466284639 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.169330119 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.608185759 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.490501104 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.482705972 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.481086205 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.628680327 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.481099135 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.587302344 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.59074502 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.610751541 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.51168737 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.464411027 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.469386936 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.476514033 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.476531206 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.473683423 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.500461874 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.468520421 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.473809558 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.165664973 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.484974123 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.476102179 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.4734155 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.475630851 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.504481287 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.472974879 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.477964977 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.60819061 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.474346601 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.591326678 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.269987868 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.268787724 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.476102748 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.467752944 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.476358115 seconds)
  done (took 117.444784272 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.538545573 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.551303689 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.583270873 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.470853514 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.520943952 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.586245595 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.4684071 seconds)
  done (took 12.053391988 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.477367263 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.476377803 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.521860097 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.51941283 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.476278972 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.627252162 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.477795402 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.48352355 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.473453767 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.524653253 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.479944583 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.478724114 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.484106944 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.470888314 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.521095488 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.485050414 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.587791101 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.473630473 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.477538985 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.62750681 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.475682054 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.483269728 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.519400394 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.48102636 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.479458034 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.482604287 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.23931218 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.478824096 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.478786226 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.482415772 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.476976219 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.529341975 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.480486595 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.470514802 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.476903796 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.585240143 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.479479107 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.479683067 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.483119817 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.475686828 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.482040566 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.478176988 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.483011357 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.479105438 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.481418184 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.496866073 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.480448532 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.478650435 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.47846648 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.481523819 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.523753835 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.480473815 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.480026161 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.478580234 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.529945679 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.485559731 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.480480094 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.479245024 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.480611843 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.479020179 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.62790026 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.52084985 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.480680447 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.521999301 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.482691568 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.480198655 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.482027649 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.480114562 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.566570145 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.479784833 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.52538069 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.479368708 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.652894088 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.498682795 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.483943002 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.477406814 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.47655481 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.480302919 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.474869258 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.481993885 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.479825411 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.47831617 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.481417175 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.479530695 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.479105451 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.634389002 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.58411654 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.477842225 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.487517906 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.482455481 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.478970511 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.530505117 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.483805459 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.482412449 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.528734431 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.593728377 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.529969039 seconds)
  done (took 151.586855172 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.486582519 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.490447426 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.480513001 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.501057551 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.477602694 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.476330101 seconds)
  done (took 10.252845823 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.478652538 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.484058405 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.482030793 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.481539001 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.482240555 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.491423538 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.49451802 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.480140666 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.487127727 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.490202103 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.483988116 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.49313786 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.494808257 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.488030836 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.490471388 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.489738746 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.492157211 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.486309591 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.48655849 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.481977072 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.478703896 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.484536927 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.483857652 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.481884092 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.487907249 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.490728649 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.500509681 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.486271643 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.484700286 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.48645677 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.486705946 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.488633619 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.48240107 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.486405167 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.493162299 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.481784626 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.487778358 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.492456156 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.486827753 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.487351503 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.498575454 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.489184875 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.491543294 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.493943828 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.480794887 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.486072406 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.497625518 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.499262108 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.488583887 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.495018417 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.495073641 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.487467485 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.492042443 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.49765751 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.486585943 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.489101751 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.499063448 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.492499265 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.490489571 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.487395345 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.490314563 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.492563321 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.488188271 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.496681378 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.487713704 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.493696796 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.486536929 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.493416342 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.492186145 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.488789916 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.493177881 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.488797608 seconds)
  done (took 109.554249302 seconds)
done (took 402.223928796 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.852497093 seconds)
  done (took 4.198909944 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.575309422 seconds)
  done (took 3.922132521 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.664480803 seconds)
  done (took 25.020320261 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.51073041 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.529541754 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.477631416 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.473964949 seconds)
  done (took 11.33657416 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.85037199 seconds)
  done (took 4.193532972 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.489254345 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.484596607 seconds)
  done (took 6.32428795 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.769583307 seconds)
  done (took 4.118032568 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.883979693 seconds)
  done (took 4.240716576 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.486188043 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.494724576 seconds)
  done (took 6.337505985 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.460639974 seconds)
  done (took 3.810977626 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.215573063 seconds)
  done (took 21.565683601 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.491624571 seconds)
  done (took 3.843681119 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.522423255 seconds)
  done (took 3.867463462 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.352329862 seconds)
  done (took 6.69958891 seconds)
done (took 110.82497139 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.477082945 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.483135555 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.485211423 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.481047043 seconds)
  done (took 11.2746399 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.543256573 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.541586737 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.551851919 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.542583255 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.54523312 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.544407826 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.521045897 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.522224698 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.547673669 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.5423368 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.550548526 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.547222774 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.546974911 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.51903514 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.545680725 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.550143315 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.546683696 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.551978935 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.521744179 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.545769249 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.49579651 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.547951768 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.548034305 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.493675276 seconds)
  done (took 38.262194826 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.998801063 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.557286337 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.639171456 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.536860657 seconds)
  done (took 8.079209097 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.573418103 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.575985795 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.592263038 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.63067165 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.658948427 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.593627023 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.522308465 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.516575043 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.502495947 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.572549191 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.623933714 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.565492975 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.66505516 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.494068157 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.782902272 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.496427914 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.498600284 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.573076571 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.624800655 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.64254652 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.493955262 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.571548027 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.577574423 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.5635003 seconds)
  done (took 39.262283787 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.499584252 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.511630998 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.493738182 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.50574827 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.492824946 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.493569722 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.492955709 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.500700788 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.49238384 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.491199407 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.491847996 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.50729338 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.492707158 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.494106625 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.499532352 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.496617357 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.494532148 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.500032776 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.499707958 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.492764901 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.493704428 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.50200682 seconds)
  done (took 34.28843953 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.481493638 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.48058429 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.833817219 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.7385047 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.481266936 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.480827446 seconds)
  done (took 14.847124117 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.563089889 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.714478188 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.487563718 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.869209237 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.952792192 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.490396802 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.493246093 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.752644084 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.088210164 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.088366265 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.553745846 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.565615855 seconds)
  done (took 21.970335001 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.493406269 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.489386069 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.490999358 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.5032267 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.550815662 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.499500287 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.500473319 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.48615692 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.554539984 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.557534773 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.496395725 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.54974032 seconds)
  done (took 23.524172624 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.578607547 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.488750478 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.502382758 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.55841 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.491517392 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.33845492 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.56647492 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.221718373 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.491137735 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.766751804 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498395167 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.585143805 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.744978714 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.502238842 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.497920485 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.466224543 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.718524896 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.040021395 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.496413356 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492197409 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.54199319 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.50828926 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.496299444 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.73057126 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.339926474 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.492197173 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.754097295 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.492113136 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.811102067 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.792017728 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.791643351 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.500459282 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.767666239 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.16134457 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.589328922 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.723146472 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490558094 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.497796263 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.497829673 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.51364736 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.502281948 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.499519512 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.785263112 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.499503546 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.494144667 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.502984021 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.240043309 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.49725459 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.493601055 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.494896359 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.788570159 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.595770164 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.496534951 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.497901279 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.514060591 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492837663 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.498283774 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.627471424 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05577412 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494396418 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.509896766 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.499805127 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.502141935 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498661309 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.162645467 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.499908209 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.499227416 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.498402722 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49457321 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.496351258 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.523596322 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495224309 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.51778624 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496313576 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.262308495 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.503688112 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501542492 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.115061398 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.509502272 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.502346692 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.725879061 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494946093 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495750838 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.492419234 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.493886968 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.262985665 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.508753834 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.471996567 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.546160002 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.228727874 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.727374547 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.521083812 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.52862866 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.719243848 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.473061341 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.495823994 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.502846227 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505043948 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.520192507 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.237000841 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497560051 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.500630365 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.75498411 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.707202875 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.506900214 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.484801168 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.010048847 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.510110206 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.531256247 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.50612475 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.737016794 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.148295045 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.794920021 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.510414411 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.534533396 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.49988834 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.321338187 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.511410953 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.507343019 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.510309084 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.78980158 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.36091778 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501879052 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.567630898 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.506807597 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.49970383 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.500726286 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.506114802 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.499033132 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.729192729 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.51356435 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.800062961 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.50675113 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499146515 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.509253042 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.521922028 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.507615772 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.720490478 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.506256531 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.781390553 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501140916 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501943321 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.499719118 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.721547303 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.499163461 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.512197513 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.763119841 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50801976 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.511996856 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.801825771 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.536589444 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.611089983 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.530497358 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.50776883 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.761881038 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.506785057 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.506783965 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.502705346 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.509204211 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.503237981 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.507695238 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501714782 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.157492436 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.476565346 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.504068689 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.504216424 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.516004742 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.572651749 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.510613978 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.733229664 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.506760028 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.506744029 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.513044558 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.518089267 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.73224422 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.798925113 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.509655331 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.585502526 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.011890012 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.152480254 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.518181543 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.502237612 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.501689687 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.503817611 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.506594307 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.504729479 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.5023602 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.73479595 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.80466307 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.512285501 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.18094726 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.505131277 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.503977593 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.515471167 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.798705448 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.514980437 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.505336485 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.508626199 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.515577158 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.52480879 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.804838481 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.646916596 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.520837499 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.505535587 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.02114448 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.51294475 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.504635022 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.504957828 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.536430173 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.504348073 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385161052 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.765956664 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.521383395 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.806973195 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.512564751 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.525513745 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.500693511 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.51552941 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.528921206 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.513858856 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.518305611 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.738422777 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.513340854 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.513228067 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065790259 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.29490284 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.106760409 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.520845982 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.520207197 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.512859402 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.250676862 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.506457638 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.507753894 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.760676862 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.248826548 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.506992195 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.01630423 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.504922941 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.333630735 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.809865253 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.748030404 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.514349627 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.518307299 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.80997543 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.724266341 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.541755709 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.522142515 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.513337578 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.485843692 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.092721476 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.513938256 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.589889558 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.245344699 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.517828813 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.515614609 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.54610267 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.514636658 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957158397 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.513946384 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507232627 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.525055618 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.528895971 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390428279 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.515347949 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.513033917 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.186338854 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.525439481 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.025861395 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.509901613 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.741645538 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.809056116 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.807623248 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.515421709 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.52123907 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.769200196 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.806123233 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.517327545 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.524539176 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.114300915 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.37487726 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.518681104 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.510576583 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.333190621 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.513968221 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.841540252 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.526913523 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.517567007 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.516277213 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.511083072 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.512074364 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.510662468 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.518836714 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484132918 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.064314173 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.534552069 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.539151996 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.525737441 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.517966006 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.765109508 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.526187492 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.167687342 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.739695391 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.523771515 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.54626477 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.515954619 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.52978332 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.493881793 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.514122 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.512068162 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.553888336 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.73344745 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.512917093 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.509784689 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.562318089 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.721252687 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.512200075 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.52957988 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.764531482 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.516380181 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.520423759 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.302107364 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.544239647 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.52959248 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.5190915 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.510593705 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.559849572 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.581394853 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.748083175 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.81529646 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.818110857 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944569208 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.533401441 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.521221153 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.530535991 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.610029519 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.518162299 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.528945114 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.293960401 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.175729343 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.301173726 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.169900279 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.81345811 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.521349895 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.522536215 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.514070817 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.654243331 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.515381348 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.788639135 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.515226829 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.517617471 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.561751529 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.515263657 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.542304173 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.732710408 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.791590997 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.516124266 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.530030754 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.520828377 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.514755751 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.817277112 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.730869851 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.074723705 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.143359535 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.521688661 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.519802624 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.266117048 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.789483237 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.514763343 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.514931723 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.516699571 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.527567547 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.522126324 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.527699059 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.517244189 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.656241695 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.814323039 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.20099165 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.814864694 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.556913501 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.034569296 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.525841838 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.777690549 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.518555142 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.756522348 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.180425928 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.320962287 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.784459942 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.586590808 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.749453907 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.518927517 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.655695365 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.51852203 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.542251061 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.518292913 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.517982112 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.514658547 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.813921483 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.183786025 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.783323226 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.522755861 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.519215841 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.555129465 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.75256187 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.745150203 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.296096496 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.744862162 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.819840861 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.531026166 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.521050325 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.179583239 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.821106601 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.526003158 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.523585668 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.767455462 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.524222459 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.546915138 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.208568935 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.516302513 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.149987223 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.413929429 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.540344213 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.527409844 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.321259928 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.181740363 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.531769547 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.082404366 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.526554868 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.520909611 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.818009663 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.526952533 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.52790459 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.803900935 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.527765161 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.52927815 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.759304922 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.179630285 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.349993583 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.54039226 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.529418986 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.530200791 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.521350391 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.59436445 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.519046822 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.531248483 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.977532478 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.527130208 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.522284392 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.534975516 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.524365957 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.534594678 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.525646353 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.524112236 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.528715955 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.514965417 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.501795453 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.537998009 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.656218398 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.111832235 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.521531557 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.196395321 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.845171767 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.774976448 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.53279955 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.502184021 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.525765619 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.522327999 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.524130849 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.523868452 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.520964061 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.144742461 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.539283069 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.830589369 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.535160169 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.734476151 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.735161119 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.524065401 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.766421996 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.536563696 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.550116964 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.499722848 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.525618265 seconds)
  done (took 1049.631489607 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.57306831 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.54543568 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.556175636 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.586527773 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.534314855 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.64442612 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.608327789 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.564209306 seconds)
  done (took 21.99435412 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.528112488 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.532634481 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.527368585 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.532106366 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.528192648 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.049968498 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.529068089 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.527873103 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.543634829 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.522143703 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.534054245 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.267910897 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.5567867 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.532947796 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.51718622 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.533305638 seconds)
  done (took 35.154991804 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.880681835 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.797383119 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.950634552 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.573176539 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.520288284 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.525537481 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.871091961 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.554669346 seconds)
  done (took 29.058239753 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.536024751 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.533266956 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.533662786 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.532622416 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.533198835 seconds)
  done (took 9.051207366 seconds)
done (took 1337.748543931 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.531814184 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.532395912 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.534271946 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.533792344 seconds)
  done (took 7.512532542 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.503816944 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.503566054 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.50291781 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.519632165 seconds)
  done (took 10.412598807 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.304391826 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.207065172 seconds)
  done (took 5.895731757 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.070984249 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.080332969 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.067107401 seconds)
  done (took 7.599704093 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.826647567 seconds)
  done (took 3.207497643 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.521144623 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.545620005 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.257512442 seconds)
  done (took 8.70928505 seconds)
done (took 44.71967133 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.520773957 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.861371721 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.680041909 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.521270583 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.704843651 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.677895608 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.262546003 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.521938803 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.539875042 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.528303034 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.525679353 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.683770271 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.243890051 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.860761183 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.244178048 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.784387152 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.684611769 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.527579485 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.528341433 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.521604326 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.263145005 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.534963689 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.531503468 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.523938355 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.692699827 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.667597062 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.520687647 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.770990016 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.531614845 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.524106619 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.675600651 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.524960103 seconds)
  done (took 87.572022075 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.525117111 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.522658271 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.52389095 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.538966271 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.52386651 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.540367705 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.541965177 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.524333952 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.540348415 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.532483309 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.52337347 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.523301592 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.527255775 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.529218972 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.526130033 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.528857447 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.525418898 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.532031885 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.528410889 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.52429327 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.545473281 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.525175067 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.523422909 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.526415361 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.545149714 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.524900655 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.543518022 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.525312049 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.540148344 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.527887914 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.53391143 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.545083432 seconds)
  done (took 82.376903356 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.526126272 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.529630202 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.526962952 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.529526466 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.527970747 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.532921101 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.527697118 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.539971735 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.526540931 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.537870561 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.526283579 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.5387776 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.528636179 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.542521656 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.530554536 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.540338523 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.524031384 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.5457736 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.539660158 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.526814123 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.531477174 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.526166239 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.537035423 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.542254609 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.530431401 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.553276975 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.532716371 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.528127109 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.530530227 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.547498271 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.548270201 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.532248807 seconds)
  done (took 82.477163542 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.767764104 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.543924217 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.54857493 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.538159203 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.546646851 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.544268127 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.541283995 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.775476691 seconds)
  done (took 16.1938879 seconds)
done (took 270.00355606 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.530466391 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.105897542 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.565750169 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.533122446 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.555892514 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.559660084 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.769405282 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.562301537 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.775555715 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.559831695 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.552699914 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.53205112 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.435637697 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.694034481 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.438631941 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.54295154 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.517403286 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.547904668 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.145563173 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.836449159 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.561633131 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.533540014 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.435485581 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.530675961 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.517203483 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.627431033 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.647170494 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.773489214 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.70768163 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.626106329 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.105791767 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.549455988 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.547618647 seconds)
  done (took 70.314096214 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.537726571 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.542732157 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.548847255 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.546857366 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.545559729 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.546958046 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.539123262 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.54569204 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.548242173 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.54816983 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.546832478 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.548036861 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.547077593 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.545949968 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.542392828 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.526789247 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.536073837 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.544545114 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.538021012 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.530263748 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.541629419 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.5487146 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.549893489 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.545415536 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.549173713 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.549229913 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.545851369 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.545322399 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.545739663 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.547258554 seconds)
  done (took 47.716635474 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.547318568 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.166542367 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.326921325 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.552642933 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.541218528 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.547812029 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.862436003 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.553765327 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.545915097 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.545061307 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.085667316 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.557513905 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.578807332 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.348383406 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.54947506 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.550691814 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.551121942 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.541883631 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.178208692 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.556106055 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.860069595 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.556311193 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.866131482 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.555771354 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.546825505 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.542128948 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.548277297 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.383091935 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.565598159 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.084934253 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.429033459 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.860016749 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.342210047 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.376578679 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.422000481 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.556203091 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.553251619 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.086590544 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.549776601 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.546371864 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.861805856 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.548424212 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.331122025 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.234627667 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.566652472 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.552574568 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.431641024 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.115777634 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.819100235 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.556860684 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.376977312 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.548780465 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.55631373 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.549777641 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.817015659 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.552552937 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.542638903 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.431177954 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.568139576 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.861690275 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.557454829 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.547114534 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.179845523 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.552013978 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.177447276 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.552333962 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.551615332 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.544829385 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.351283444 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.553268628 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.255061465 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.56714934 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.555770324 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.089103268 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.177994836 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.500016178 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.554186165 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.181907702 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.383392325 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.884201472 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.555736245 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.417619253 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.888356727 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.554685552 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.55762156 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.55853152 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.555678226 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.616410421 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.860940431 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.186992365 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.244080148 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.441711371 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.884196897 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.561273804 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.550206782 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.432877224 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.574181211 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.556561676 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.340898596 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.253705679 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.566927876 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.55687487 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.23405581 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.56816084 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.869332013 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.557714355 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.382649732 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.550743439 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.619164078 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.556157171 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.555592235 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.552012553 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.86601252 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.555863199 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.555283496 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.233052753 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.117251954 seconds)
  done (took 215.347976221 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.558418116 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.54259772 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.542060759 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.561400545 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.543474712 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.550486416 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.545634375 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.542564858 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.549184514 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.547176879 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.543560431 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.550873768 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.553348612 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.543973352 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.545819879 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.564351955 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.544356147 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.569017441 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.56295581 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.542989421 seconds)
  done (took 48.405621021 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.556622392 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.177879236 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.139512122 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.563076463 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.556768882 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.553468892 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.61200324 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.558521742 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.556048776 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.886289276 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.74740729 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.559578 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.556802493 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.555956275 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.137373904 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.542111536 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.89028408 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.183761039 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.564888652 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.180741743 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.542538035 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.560096662 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.552860725 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.179810491 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.900144929 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.871265226 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.621264187 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.185841348 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.563225175 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.558758191 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.179504987 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.566721789 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.555484033 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.171951073 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.565731847 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.575676739 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.555628452 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.614786774 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.624247183 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.89686165 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.19399495 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.884045377 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.57794014 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.743535 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.564039442 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.538499115 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.193744653 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.567873293 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.539490246 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.56030686 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.567431898 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.154836384 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.560109995 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.152628836 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.564681369 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.564935117 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.183573389 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.155957205 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.147498683 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.747693322 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.559089694 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.87257336 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.56528019 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.193724449 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.568486429 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.563511856 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.566095278 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.746364549 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.190242576 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.879245963 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.897633389 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.899426349 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.570154106 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.627016593 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.567120185 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.897697219 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.632609943 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.002825238 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.899305178 seconds)
  done (took 141.188433229 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.840348622 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.679782059 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.973230197 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.197909818 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.106582323 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.705046977 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.67935057 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.820397219 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.574009044 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.640790338 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.278040713 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.688953141 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.344138335 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.659896143 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.674900153 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.695835362 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.998073746 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.557599265 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.270733267 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.246804833 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.572005236 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.675422927 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.105933102 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.768892046 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.577151576 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.154457393 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.577261965 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.116622747 seconds)
  done (took 58.587691654 seconds)
done (took 582.949725446 seconds)
SAVING RESULT...
DONE!
